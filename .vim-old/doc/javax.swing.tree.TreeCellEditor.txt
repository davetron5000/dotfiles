*javax.swing.tree.TreeCellEditor* *TreeCellEditor* Adds to CellEditor the extensions necessary to configure an editor
 in a tree.

public interface interface TreeCellEditor

  implements |javax.swing.CellEditor|

|javax.swing.tree.TreeCellEditor_Description|
|javax.swing.tree.TreeCellEditor_Fields|
|javax.swing.tree.TreeCellEditor_Constructors|
|javax.swing.tree.TreeCellEditor_Methods|

====================================================================================================================================================================================

*javax.swing.tree.TreeCellEditor_Methods*
|javax.swing.tree.TreeCellEditor.getTreeCellEditorComponent(JTree,Object,boolean,boolean,boolean,int)|Sets an initial value for the editor.

*javax.swing.tree.TreeCellEditor_Description*

Adds to CellEditor the extensions necessary to configure an editor in a tree. 



*javax.swing.tree.TreeCellEditor.getTreeCellEditorComponent(JTree,Object,boolean,boolean,boolean,int)*

public |java.awt.Component| getTreeCellEditorComponent(
  javax.swing.JTree tree,
  java.lang.Object value,
  boolean isSelected,
  boolean expanded,
  boolean leaf,
  int row)

Sets an initial value for the editor. This will cause the editor to stopEditing and lose any partially edited value if the editor is editing when this method is called. 

Returns the component that should be added to the client's Component hierarchy. Once installed in the client's hierarchy this component will then be able to draw and receive user 
input. 


    tree - the JTree that is asking the editor to edit; this parameter can be null 
    value - the value of the cell to be edited 
    isSelected - true is the cell is to be renderer with selection highlighting 
    expanded - true if the node is expanded 
    leaf - true if the node is a leaf node 
    row - the row index of the node being edited 

    Returns: the component for editing 


