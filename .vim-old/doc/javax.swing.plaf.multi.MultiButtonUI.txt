*javax.swing.plaf.multi.MultiButtonUI* *MultiButtonUI* A multiplexing UI used to combine ButtonUIs.

public class MultiButtonUI
  extends    |javax.swing.plaf.ButtonUI|

|javax.swing.plaf.multi.MultiButtonUI_Description|
|javax.swing.plaf.multi.MultiButtonUI_Fields|
|javax.swing.plaf.multi.MultiButtonUI_Constructors|
|javax.swing.plaf.multi.MultiButtonUI_Methods|

====================================================================================================================================================================================

*javax.swing.plaf.multi.MultiButtonUI_Fields*
|java.util.Vector_javax.swing.plaf.multi.MultiButtonUI.uis|

*javax.swing.plaf.multi.MultiButtonUI_Constructors*
|javax.swing.plaf.multi.MultiButtonUI()|

*javax.swing.plaf.multi.MultiButtonUI_Methods*
|javax.swing.plaf.multi.MultiButtonUI.contains(JComponent,int,int)|Invokes the contains method on each UI handled by this object.
|javax.swing.plaf.multi.MultiButtonUI.createUI(JComponent)|Returns a multiplexing UI instance if any of the auxiliary  LookAndFeels supports this UI.
|javax.swing.plaf.multi.MultiButtonUI.getAccessibleChild(JComponent,int)|Invokes the getAccessibleChild method on each UI handled by this object.
|javax.swing.plaf.multi.MultiButtonUI.getAccessibleChildrenCount(JComponent)|Invokes the getAccessibleChildrenCount method on each UI handled by this object.
|javax.swing.plaf.multi.MultiButtonUI.getMaximumSize(JComponent)|Invokes the getMaximumSize method on each UI handled by this object.
|javax.swing.plaf.multi.MultiButtonUI.getMinimumSize(JComponent)|Invokes the getMinimumSize method on each UI handled by this object.
|javax.swing.plaf.multi.MultiButtonUI.getPreferredSize(JComponent)|Invokes the getPreferredSize method on each UI handled by this object.
|javax.swing.plaf.multi.MultiButtonUI.getUIs()|Returns the list of UIs associated with this multiplexing UI.
|javax.swing.plaf.multi.MultiButtonUI.installUI(JComponent)|Invokes the installUI method on each UI handled by this object.
|javax.swing.plaf.multi.MultiButtonUI.paint(Graphics,JComponent)|Invokes the paint method on each UI handled by this object.
|javax.swing.plaf.multi.MultiButtonUI.uninstallUI(JComponent)|Invokes the uninstallUI method on each UI handled by this object.
|javax.swing.plaf.multi.MultiButtonUI.update(Graphics,JComponent)|Invokes the update method on each UI handled by this object.

*javax.swing.plaf.multi.MultiButtonUI_Description*

A multiplexing UI used to combine ButtonUIs. 

This file was automatically generated by AutoMulti. 



*java.util.Vector_javax.swing.plaf.multi.MultiButtonUI.uis*

The vector containing the real UIs. This is populated in the call to createUI, and can be obtained by calling the getUIs method. The first element is guaranteed to be the real UI 
obtained from the default look and feel. 



*javax.swing.plaf.multi.MultiButtonUI()*

public MultiButtonUI()




*javax.swing.plaf.multi.MultiButtonUI.contains(JComponent,int,int)*

public boolean contains(
  javax.swing.JComponent a,
  int b,
  int c)

Invokes the contains method on each UI handled by this object. 



    Returns: the value obtained from the first UI, which is the UI obtained from the default LookAndFeel 

*javax.swing.plaf.multi.MultiButtonUI.createUI(JComponent)*

public static |javax.swing.plaf.ComponentUI| createUI(javax.swing.JComponent a)

Returns a multiplexing UI instance if any of the auxiliary LookAndFeels supports this UI. Otherwise, just returns the UI object obtained from the default LookAndFeel. 



*javax.swing.plaf.multi.MultiButtonUI.getAccessibleChild(JComponent,int)*

public |javax.accessibility.Accessible| getAccessibleChild(
  javax.swing.JComponent a,
  int b)

Invokes the getAccessibleChild method on each UI handled by this object. 



    Returns: the value obtained from the first UI, which is the UI obtained from the default LookAndFeel 

*javax.swing.plaf.multi.MultiButtonUI.getAccessibleChildrenCount(JComponent)*

public int getAccessibleChildrenCount(javax.swing.JComponent a)

Invokes the getAccessibleChildrenCount method on each UI handled by this object. 



    Returns: the value obtained from the first UI, which is the UI obtained from the default LookAndFeel 

*javax.swing.plaf.multi.MultiButtonUI.getMaximumSize(JComponent)*

public |java.awt.Dimension| getMaximumSize(javax.swing.JComponent a)

Invokes the getMaximumSize method on each UI handled by this object. 



    Returns: the value obtained from the first UI, which is the UI obtained from the default LookAndFeel 

*javax.swing.plaf.multi.MultiButtonUI.getMinimumSize(JComponent)*

public |java.awt.Dimension| getMinimumSize(javax.swing.JComponent a)

Invokes the getMinimumSize method on each UI handled by this object. 



    Returns: the value obtained from the first UI, which is the UI obtained from the default LookAndFeel 

*javax.swing.plaf.multi.MultiButtonUI.getPreferredSize(JComponent)*

public |java.awt.Dimension| getPreferredSize(javax.swing.JComponent a)

Invokes the getPreferredSize method on each UI handled by this object. 



    Returns: the value obtained from the first UI, which is the UI obtained from the default LookAndFeel 

*javax.swing.plaf.multi.MultiButtonUI.getUIs()*

public |javax.swing.plaf.ComponentUI|[] getUIs()

Returns the list of UIs associated with this multiplexing UI. This allows processing of the UIs by an application aware of multiplexing UIs on components. 



*javax.swing.plaf.multi.MultiButtonUI.installUI(JComponent)*

public void installUI(javax.swing.JComponent a)

Invokes the installUI method on each UI handled by this object. 



*javax.swing.plaf.multi.MultiButtonUI.paint(Graphics,JComponent)*

public void paint(
  java.awt.Graphics a,
  javax.swing.JComponent b)

Invokes the paint method on each UI handled by this object. 



*javax.swing.plaf.multi.MultiButtonUI.uninstallUI(JComponent)*

public void uninstallUI(javax.swing.JComponent a)

Invokes the uninstallUI method on each UI handled by this object. 



*javax.swing.plaf.multi.MultiButtonUI.update(Graphics,JComponent)*

public void update(
  java.awt.Graphics a,
  javax.swing.JComponent b)

Invokes the update method on each UI handled by this object. 




