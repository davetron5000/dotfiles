*java.security.AllPermission* *AllPermission* The AllPermission is a permission that implies all other permissions.

public final class AllPermission
  extends    |java.security.Permission|

|java.security.AllPermission_Description|
|java.security.AllPermission_Fields|
|java.security.AllPermission_Constructors|
|java.security.AllPermission_Methods|

====================================================================================================================================================================================

*java.security.AllPermission_Constructors*
|java.security.AllPermission()|Creates a new AllPermission object.
|java.security.AllPermission(String,String)|Creates a new AllPermission object.

*java.security.AllPermission_Methods*
|java.security.AllPermission.equals(Object)|Checks two AllPermission objects for equality.
|java.security.AllPermission.getActions()|Returns the canonical string representation of the actions.
|java.security.AllPermission.hashCode()|Returns the hash code value for this object.
|java.security.AllPermission.implies(Permission)|Checks if the specified permission is "implied" by   this object.
|java.security.AllPermission.newPermissionCollection()|Returns a new PermissionCollection object for storing AllPermission   objects.

*java.security.AllPermission_Description*

The AllPermission is a permission that implies all other permissions. 

Note: Granting AllPermission should be done with extreme care, as it implies all other permissions. Thus, it grants code the ability to run with security disabled. Extreme caution 
should be taken before granting such a permission to code. This permission should be used only during testing, or in extremely rare cases where an application or applet is 
completely trusted and adding the necessary permissions to the policy is prohibitively cumbersome. 



*java.security.AllPermission()*

public AllPermission()

Creates a new AllPermission object. 


*java.security.AllPermission(String,String)*

public AllPermission(
  java.lang.String name,
  java.lang.String actions)

Creates a new AllPermission object. This constructor exists for use by the Policy object to instantiate new Permission objects. 

    name - ignored 
    actions - ignored. 

*java.security.AllPermission.equals(Object)*

public boolean equals(java.lang.Object obj)

Checks two AllPermission objects for equality. Two AllPermission objects are always equal. 


    obj - the object we are testing for equality with this object. 

    Returns: true if obj is an AllPermission, false otherwise. 

*java.security.AllPermission.getActions()*

public |java.lang.String| getActions()

Returns the canonical string representation of the actions. 



    Returns: 

*java.security.AllPermission.hashCode()*

public int hashCode()

Returns the hash code value for this object. 



    Returns: a hash code value for this object. 

*java.security.AllPermission.implies(Permission)*

public boolean implies(java.security.Permission p)

Checks if the specified permission is "implied" by this object. This method always returns true. 


    p - the permission to check against. 

    Returns: 

*java.security.AllPermission.newPermissionCollection()*

public |java.security.PermissionCollection| newPermissionCollection()

Returns a new PermissionCollection object for storing AllPermission objects. 



    Returns: a new PermissionCollection object suitable for storing AllPermissions. 


