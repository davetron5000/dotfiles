*java.io.FilterReader* *FilterReader* Abstract class for reading filtered character streams.

public abstract class FilterReader
  extends    |java.io.Reader|

|java.io.FilterReader_Description|
|java.io.FilterReader_Fields|
|java.io.FilterReader_Constructors|
|java.io.FilterReader_Methods|

====================================================================================================================================================================================

*java.io.FilterReader_Fields*
|java.io.Reader_java.io.FilterReader.in|

*java.io.FilterReader_Constructors*
|java.io.FilterReader(Reader)|Create a new filtered reader.

*java.io.FilterReader_Methods*
|java.io.FilterReader.close()|Close the stream.
|java.io.FilterReader.mark(int)|Mark the present position in the stream.
|java.io.FilterReader.markSupported()|Tell whether this stream supports the mark() operation.
|java.io.FilterReader.read()|Read a single character.
|java.io.FilterReader.read(char[],int,int)|Read characters into a portion of an array.
|java.io.FilterReader.ready()|Tell whether this stream is ready to be read.
|java.io.FilterReader.reset()|Reset the stream.
|java.io.FilterReader.skip(long)|Skip characters.

*java.io.FilterReader_Description*

Abstract class for reading filtered character streams. The abstract class FilterReader itself provides default methods that pass all requests to the contained stream. Subclasses 
of FilterReader should override some of these methods and may also provide additional methods and fields. 



*java.io.Reader_java.io.FilterReader.in*

The underlying character-input stream. 



*java.io.FilterReader(Reader)*

protected FilterReader(java.io.Reader in)

Create a new filtered reader. 

    in - a Reader object providing the underlying stream. 

*java.io.FilterReader.close()*

public void close()
  throws |java.io.IOException|
         
Close the stream. 



*java.io.FilterReader.mark(int)*

public void mark(int readAheadLimit)
  throws |java.io.IOException|
         
Mark the present position in the stream. 



*java.io.FilterReader.markSupported()*

public boolean markSupported()

Tell whether this stream supports the mark() operation. 



*java.io.FilterReader.read()*

public int read()
  throws |java.io.IOException|
         
Read a single character. 



*java.io.FilterReader.read(char[],int,int)*

public int read(
  char[] cbuf,
  int off,
  int len)
  throws |java.io.IOException|
         
Read characters into a portion of an array. 



*java.io.FilterReader.ready()*

public boolean ready()
  throws |java.io.IOException|
         
Tell whether this stream is ready to be read. 



*java.io.FilterReader.reset()*

public void reset()
  throws |java.io.IOException|
         
Reset the stream. 



*java.io.FilterReader.skip(long)*

public long skip(long n)
  throws |java.io.IOException|
         
Skip characters. 




