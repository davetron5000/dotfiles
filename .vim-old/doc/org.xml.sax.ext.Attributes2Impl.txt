*org.xml.sax.ext.Attributes2Impl* *Attributes2Impl* SAX2 extension helper for ad

public class Attributes2Impl
  extends    |org.xml.sax.helpers.AttributesImpl|
  implements |org.xml.sax.ext.Attributes2|

|org.xml.sax.ext.Attributes2Impl_Description|
|org.xml.sax.ext.Attributes2Impl_Fields|
|org.xml.sax.ext.Attributes2Impl_Constructors|
|org.xml.sax.ext.Attributes2Impl_Methods|

================================================================================

*org.xml.sax.ext.Attributes2Impl_Constructors*
|org.xml.sax.ext.Attributes2Impl()|Construct a new, empty Attributes2Impl objec
|org.xml.sax.ext.Attributes2Impl(Attributes)|Copy an existing Attributes or Att

*org.xml.sax.ext.Attributes2Impl_Methods*
|org.xml.sax.ext.Attributes2Impl.addAttribute(String,String,String,String,String)|
|org.xml.sax.ext.Attributes2Impl.isDeclared(int)|Returns the current value of t
|org.xml.sax.ext.Attributes2Impl.isDeclared(String)|Returns the current value o
|org.xml.sax.ext.Attributes2Impl.isDeclared(String,String)|Returns the current 
|org.xml.sax.ext.Attributes2Impl.isSpecified(int)|Returns the current value of 
|org.xml.sax.ext.Attributes2Impl.isSpecified(String)|Returns the current value 
|org.xml.sax.ext.Attributes2Impl.isSpecified(String,String)|Returns the current
|org.xml.sax.ext.Attributes2Impl.removeAttribute(int)|
|org.xml.sax.ext.Attributes2Impl.setAttributes(Attributes)|Copy an entire Attri
|org.xml.sax.ext.Attributes2Impl.setDeclared(int,boolean)|Assign a value to the
|org.xml.sax.ext.Attributes2Impl.setSpecified(int,boolean)|Assign a value to th

*org.xml.sax.ext.Attributes2Impl_Description*

SAX2 extension helper for additional Attributes information, implementing the 
(|org.xml.sax.ext.Attributes2|) interface. 

This module, both source code and documentation, is in the Public Domain, and 
comes with NO WARRANTY. 

This is not part of core-only SAX2 distributions. 

The specified flag for each attribute will always be true, unless it has been 
set to false in the copy constructor or using 
(|org.xml.sax.ext.Attributes2Impl|) . Similarly, the declared flag for each 
attribute will always be false, except for defaulted attributes (specified is 
false), non-CDATA attributes, or when it is set to true using 
(|org.xml.sax.ext.Attributes2Impl|) . If you change an attribute's type by 
hand, you may need to modify its declared flag to match. 


*org.xml.sax.ext.Attributes2Impl()*

public Attributes2Impl()

Construct a new, empty Attributes2Impl object. 


*org.xml.sax.ext.Attributes2Impl(Attributes)*

public Attributes2Impl(org.xml.sax.Attributes atts)

Copy an existing Attributes or Attributes2 object. If the object implements 
Attributes2, values of the specified and declared flags for each attribute are 
copied. Otherwise the flag values are defaulted to assume no DTD was used, 
unless there is evidence to the contrary (such as attributes with type other 
than CDATA, which must have been declared). 

This constructor is especially useful inside a 
startElement(|org.xml.sax.ContentHandler|) event. 

    atts - The existing Attributes object. 

*org.xml.sax.ext.Attributes2Impl.addAttribute(String,String,String,String,String)*

public void addAttribute(
  java.lang.String uri,
  java.lang.String localName,
  java.lang.String qName,
  java.lang.String type,
  java.lang.String value)

Add an attribute to the end of the list, setting its "specified" flag to true. 
To set that flag's value to false, use (|org.xml.sax.ext.Attributes2Impl|) . 

Unless the attribute type is CDATA, this attribute is marked as being declared 
in the DTD. To set that flag's value to true for CDATA attributes, use 
(|org.xml.sax.ext.Attributes2Impl|) . 


*org.xml.sax.ext.Attributes2Impl.isDeclared(int)*

public boolean isDeclared(int index)

Returns the current value of the attribute's "declared" flag. 


*org.xml.sax.ext.Attributes2Impl.isDeclared(String)*

public boolean isDeclared(java.lang.String qName)

Returns the current value of the attribute's "declared" flag. 


*org.xml.sax.ext.Attributes2Impl.isDeclared(String,String)*

public boolean isDeclared(
  java.lang.String uri,
  java.lang.String localName)

Returns the current value of the attribute's "declared" flag. 


*org.xml.sax.ext.Attributes2Impl.isSpecified(int)*

public boolean isSpecified(int index)

Returns the current value of an attribute's "specified" flag. 

    index - The attribute index (zero-based). 

    Returns: current flag value 
*org.xml.sax.ext.Attributes2Impl.isSpecified(String)*

public boolean isSpecified(java.lang.String qName)

Returns the current value of an attribute's "specified" flag. 

    qName - The XML qualified (prefixed) name. 

    Returns: current flag value 
*org.xml.sax.ext.Attributes2Impl.isSpecified(String,String)*

public boolean isSpecified(
  java.lang.String uri,
  java.lang.String localName)

Returns the current value of an attribute's "specified" flag. 

    uri - The Namespace URI, or the empty string if the name has no Namespace URI. 
    localName - The attribute's local name. 

    Returns: current flag value 
*org.xml.sax.ext.Attributes2Impl.removeAttribute(int)*

public void removeAttribute(int index)




*org.xml.sax.ext.Attributes2Impl.setAttributes(Attributes)*

public void setAttributes(org.xml.sax.Attributes atts)

Copy an entire Attributes object. The "specified" flags are assigned as true, 
and "declared" flags as false (except when an attribute's type is not CDATA), 
unless the object is an Attributes2 object. In that case those flag values are 
all copied. 


*org.xml.sax.ext.Attributes2Impl.setDeclared(int,boolean)*

public void setDeclared(
  int index,
  boolean value)

Assign a value to the "declared" flag of a specific attribute. This is normally 
needed only for attributes of type CDATA, including attributes whose type is 
changed to or from CDATA. 

    index - The index of the attribute (zero-based). 
    value - The desired flag value. 

*org.xml.sax.ext.Attributes2Impl.setSpecified(int,boolean)*

public void setSpecified(
  int index,
  boolean value)

Assign a value to the "specified" flag of a specific attribute. This is the 
only way this flag can be cleared, except clearing by initialization with the 
copy constructor. 

    index - The index of the attribute (zero-based). 
    value - The desired flag value. 


