*javax.management.monitor.MonitorMBean* *MonitorMBean* Exposes the remote manage

public interface interface MonitorMBean


|javax.management.monitor.MonitorMBean_Description|
|javax.management.monitor.MonitorMBean_Fields|
|javax.management.monitor.MonitorMBean_Constructors|
|javax.management.monitor.MonitorMBean_Methods|

================================================================================

*javax.management.monitor.MonitorMBean_Methods*
|javax.management.monitor.MonitorMBean.addObservedObject(ObjectName)|Adds the s
|javax.management.monitor.MonitorMBean.containsObservedObject(ObjectName)|Tests
|javax.management.monitor.MonitorMBean.getGranularityPeriod()|Gets the granular
|javax.management.monitor.MonitorMBean.getObservedAttribute()|Gets the attribut
|javax.management.monitor.MonitorMBean.getObservedObject()|Gets the object name
|javax.management.monitor.MonitorMBean.getObservedObjects()|Returns an array co
|javax.management.monitor.MonitorMBean.isActive()|Tests if the monitor MBean is
|javax.management.monitor.MonitorMBean.removeObservedObject(ObjectName)|Removes
|javax.management.monitor.MonitorMBean.setGranularityPeriod(long)|Sets the gran
|javax.management.monitor.MonitorMBean.setObservedAttribute(String)|Sets the at
|javax.management.monitor.MonitorMBean.setObservedObject(ObjectName)|Sets the o
|javax.management.monitor.MonitorMBean.start()|Starts the monitor.
|javax.management.monitor.MonitorMBean.stop()|Stops the monitor.

*javax.management.monitor.MonitorMBean_Description*

Exposes the remote management interface of monitor MBeans. 


*javax.management.monitor.MonitorMBean.addObservedObject(ObjectName)*

public void addObservedObject(javax.management.ObjectName object)
  throws |java.lang.IllegalArgumentException|
         
Adds the specified object in the set of observed MBeans. 

    object - The object to observe. 

*javax.management.monitor.MonitorMBean.containsObservedObject(ObjectName)*

public boolean containsObservedObject(javax.management.ObjectName object)

Tests whether the specified object is in the set of observed MBeans. 

    object - The object to check. 

    Returns: true if the specified object is in the set, false otherwise. 
*javax.management.monitor.MonitorMBean.getGranularityPeriod()*

public long getGranularityPeriod()

Gets the granularity period (in milliseconds). 


    Returns: The granularity period. 
*javax.management.monitor.MonitorMBean.getObservedAttribute()*

public |java.lang.String| getObservedAttribute()

Gets the attribute being observed. 


    Returns: The attribute being observed. 
*javax.management.monitor.MonitorMBean.getObservedObject()*

public |javax.management.ObjectName| getObservedObject()

Gets the object name of the object being observed. 


    Returns: The object being observed. 
*javax.management.monitor.MonitorMBean.getObservedObjects()*

public |javax.management.ObjectName| getObservedObjects()

Returns an array containing the objects being observed. 


    Returns: The objects being observed. 
*javax.management.monitor.MonitorMBean.isActive()*

public boolean isActive()

Tests if the monitor MBean is active. A monitor MBean is marked active when the 
start(|javax.management.monitor.MonitorMBean|) method is called. It becomes 
inactive when the stop(|javax.management.monitor.MonitorMBean|) method is 
called. 


    Returns: true if the monitor MBean is active, false otherwise. 
*javax.management.monitor.MonitorMBean.removeObservedObject(ObjectName)*

public void removeObservedObject(javax.management.ObjectName object)

Removes the specified object from the set of observed MBeans. 

    object - The object to remove. 

*javax.management.monitor.MonitorMBean.setGranularityPeriod(long)*

public void setGranularityPeriod(long period)
  throws |java.lang.IllegalArgumentException|
         
Sets the granularity period (in milliseconds). 

    period - The granularity period. 

*javax.management.monitor.MonitorMBean.setObservedAttribute(String)*

public void setObservedAttribute(java.lang.String attribute)

Sets the attribute to observe. 

    attribute - The attribute to observe. 

*javax.management.monitor.MonitorMBean.setObservedObject(ObjectName)*

public void setObservedObject(javax.management.ObjectName object)

Sets the object to observe identified by its object name. 

    object - The object to observe. 

*javax.management.monitor.MonitorMBean.start()*

public void start()

Starts the monitor. 


*javax.management.monitor.MonitorMBean.stop()*

public void stop()

Stops the monitor. 



