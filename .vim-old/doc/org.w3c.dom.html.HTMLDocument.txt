*org.w3c.dom.html.HTMLDocument* *HTMLDocument* An HTMLDocument is the root of th

public interface interface HTMLDocument

  implements |org.w3c.dom.Document|

|org.w3c.dom.html.HTMLDocument_Description|
|org.w3c.dom.html.HTMLDocument_Fields|
|org.w3c.dom.html.HTMLDocument_Constructors|
|org.w3c.dom.html.HTMLDocument_Methods|

================================================================================

*org.w3c.dom.html.HTMLDocument_Methods*
|org.w3c.dom.html.HTMLDocument.close()|Closes a document stream opened by open(
|org.w3c.dom.html.HTMLDocument.getAnchors()|A collection of all the anchor (A )
|org.w3c.dom.html.HTMLDocument.getApplets()|A collection of all the OBJECT elem
|org.w3c.dom.html.HTMLDocument.getBody()|The element that contains the content 
|org.w3c.dom.html.HTMLDocument.getCookie()|The cookies associated with this doc
|org.w3c.dom.html.HTMLDocument.getDomain()|The domain name of the server that s
|org.w3c.dom.html.HTMLDocument.getElementsByName(String)|Returns the (possibly 
|org.w3c.dom.html.HTMLDocument.getForms()|A collection of all the forms of a do
|org.w3c.dom.html.HTMLDocument.getImages()|A collection of all the IMG elements
|org.w3c.dom.html.HTMLDocument.getLinks()|A collection of all AREA elements and
|org.w3c.dom.html.HTMLDocument.getReferrer()|Returns the URI  of the page that 
|org.w3c.dom.html.HTMLDocument.getTitle()|The title of a document as specified 
|org.w3c.dom.html.HTMLDocument.getURL()|The complete URI  of the document.
|org.w3c.dom.html.HTMLDocument.open()|Note.
|org.w3c.dom.html.HTMLDocument.setBody(HTMLElement)|
|org.w3c.dom.html.HTMLDocument.setCookie(String)|
|org.w3c.dom.html.HTMLDocument.setTitle(String)|
|org.w3c.dom.html.HTMLDocument.write(String)|Write a string of text to a docume
|org.w3c.dom.html.HTMLDocument.writeln(String)|Write a string of text followed 

*org.w3c.dom.html.HTMLDocument_Description*

An HTMLDocument is the root of the HTML hierarchy and holds the entire content. 
Besides providing access to the hierarchy, it also provides some convenience 
methods for accessing certain sets of information from the document. The 
following properties have been deprecated in favor of the corresponding ones 
for the BODY element: alinkColor background bgColor fgColor linkColor 
vlinkColor In DOM Level 2, the method getElementById is inherited from the 
Document interface where it was moved. See also the Document Object Model (DOM) 
Level 2 Specification. 


*org.w3c.dom.html.HTMLDocument.close()*

public void close()

Closes a document stream opened by open() and forces rendering. 


*org.w3c.dom.html.HTMLDocument.getAnchors()*

public |org.w3c.dom.html.HTMLCollection| getAnchors()

A collection of all the anchor (A ) elements in a document with a value for the 
name attribute. Note. For reasons of backwards compatibility, the returned set 
of anchors only contains those anchors created with the name attribute, not 
those created with the id attribute. 


*org.w3c.dom.html.HTMLDocument.getApplets()*

public |org.w3c.dom.html.HTMLCollection| getApplets()

A collection of all the OBJECT elements that include applets and APPLET ( 
deprecated ) elements in a document. 


*org.w3c.dom.html.HTMLDocument.getBody()*

public |org.w3c.dom.html.HTMLElement| getBody()

The element that contains the content for the document. In documents with BODY 
contents, returns the BODY element. In frameset documents, this returns the 
outermost FRAMESET element. 


*org.w3c.dom.html.HTMLDocument.getCookie()*

public |java.lang.String| getCookie()

The cookies associated with this document. If there are none, the value is an 
empty string. Otherwise, the value is a string: a semicolon-delimited list of 
"name, value" pairs for all the cookies associated with the page. For example, 
name=value;expires=date . 


*org.w3c.dom.html.HTMLDocument.getDomain()*

public |java.lang.String| getDomain()

The domain name of the server that served the document, or null if the server 
cannot be identified by a domain name. 


*org.w3c.dom.html.HTMLDocument.getElementsByName(String)*

public |org.w3c.dom.NodeList| getElementsByName(java.lang.String elementName)

Returns the (possibly empty) collection of elements whose name value is given 
by elementName . 

    elementName - The name attribute value for an element. 

    Returns: The matching elements. 
*org.w3c.dom.html.HTMLDocument.getForms()*

public |org.w3c.dom.html.HTMLCollection| getForms()

A collection of all the forms of a document. 


*org.w3c.dom.html.HTMLDocument.getImages()*

public |org.w3c.dom.html.HTMLCollection| getImages()

A collection of all the IMG elements in a document. The behavior is limited to 
IMG elements for backwards compatibility. 


*org.w3c.dom.html.HTMLDocument.getLinks()*

public |org.w3c.dom.html.HTMLCollection| getLinks()

A collection of all AREA elements and anchor ( A ) elements in a document with 
a value for the href attribute. 


*org.w3c.dom.html.HTMLDocument.getReferrer()*

public |java.lang.String| getReferrer()

Returns the URI of the page that linked to this page. The value is an empty 
string if the user navigated to the page directly (not through a link, but, for 
example, via a bookmark). 


*org.w3c.dom.html.HTMLDocument.getTitle()*

public |java.lang.String| getTitle()

The title of a document as specified by the TITLE element in the head of the 
document. 


*org.w3c.dom.html.HTMLDocument.getURL()*

public |java.lang.String| getURL()

The complete URI of the document. 


*org.w3c.dom.html.HTMLDocument.open()*

public void open()

Note. This method and the ones following allow a user to add to or replace the 
structure model of a document using strings of unparsed HTML. At the time of 
writing alternate methods for providing similar functionality for both HTML and 
XML documents were being considered. The following methods may be deprecated at 
some point in the future in favor of a more general-purpose mechanism. Open a 
document stream for writing. If a document exists in the target, this method 
clears it. 


*org.w3c.dom.html.HTMLDocument.setBody(HTMLElement)*

public void setBody(org.w3c.dom.html.HTMLElement body)




*org.w3c.dom.html.HTMLDocument.setCookie(String)*

public void setCookie(java.lang.String cookie)




*org.w3c.dom.html.HTMLDocument.setTitle(String)*

public void setTitle(java.lang.String title)




*org.w3c.dom.html.HTMLDocument.write(String)*

public void write(java.lang.String text)

Write a string of text to a document stream opened by open() . The text is 
parsed into the document's structure model. 

    text - The string to be parsed into some structure in the document structure model. 

*org.w3c.dom.html.HTMLDocument.writeln(String)*

public void writeln(java.lang.String text)

Write a string of text followed by a newline character to a document stream 
opened by open() . The text is parsed into the document's structure model. 

    text - The string to be parsed into some structure in the document structure model. 


