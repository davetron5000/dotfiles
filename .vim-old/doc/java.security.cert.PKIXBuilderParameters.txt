*java.security.cert.PKIXBuilderParameters* *PKIXBuilderParameters* Parameters used as input for the PKIX CertPathBuilder 
 algorithm.

public class PKIXBuilderParameters
  extends    |java.security.cert.PKIXParameters|

|java.security.cert.PKIXBuilderParameters_Description|
|java.security.cert.PKIXBuilderParameters_Fields|
|java.security.cert.PKIXBuilderParameters_Constructors|
|java.security.cert.PKIXBuilderParameters_Methods|

====================================================================================================================================================================================

*java.security.cert.PKIXBuilderParameters_Constructors*
|java.security.cert.PKIXBuilderParameters(KeyStore,CertSelector)|Creates an instance of PKIXBuilderParameters that  populates the set of most-trusted CAs from the trusted  certifi
|java.security.cert.PKIXBuilderParameters(Set<TrustAnchor>,CertSelector)|Creates an instance of PKIXBuilderParameters with  the specified Set of most-trusted CAs.

*java.security.cert.PKIXBuilderParameters_Methods*
|java.security.cert.PKIXBuilderParameters.getMaxPathLength()|Returns the value of the maximum number of intermediate non-self-issued  certificates that may exist in a certificatio
|java.security.cert.PKIXBuilderParameters.setMaxPathLength(int)|Sets the value of the maximum number of non-self-issued intermediate  certificates that may exist in a certificatio
|java.security.cert.PKIXBuilderParameters.toString()|Returns a formatted string describing the parameters.

*java.security.cert.PKIXBuilderParameters_Description*

Parameters used as input for the PKIX CertPathBuilder algorithm. 

A PKIX CertPathBuilder uses these parameters to build(|java.security.cert.CertPathBuilder|) a CertPath which has been validated according to the PKIX certification path validation 
algorithm. 

To instantiate a PKIXBuilderParameters object, an application must specify one or more most-trusted CAs as defined by the PKIX certification path validation algorithm. The 
most-trusted CA can be specified using one of two constructors. An application can call PKIXBuilderParameters(Set, CertSelector)(|java.security.cert.PKIXBuilderParameters|) , 
specifying a Set of TrustAnchor objects, each of which identifies a most-trusted CA. Alternatively, an application can call PKIXBuilderParameters(KeyStore, 
CertSelector)(|java.security.cert.PKIXBuilderParameters|) , specifying a KeyStore instance containing trusted certificate entries, each of which will be considered as a 
most-trusted CA. 

In addition, an application must specify constraints on the target certificate that the CertPathBuilder will attempt to build a path to. The constraints are specified as a 
CertSelector object. These constraints should provide the CertPathBuilder with enough search criteria to find the target certificate. Minimal criteria for an X509Certificate 
usually include the subject name and/or one or more subject alternative names. If enough criteria is not specified, the CertPathBuilder may throw a CertPathBuilderException. 

Concurrent Access 

Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst 
themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize. 



*java.security.cert.PKIXBuilderParameters(KeyStore,CertSelector)*

public PKIXBuilderParameters(
  java.security.KeyStore keystore,
  java.security.cert.CertSelector targetConstraints)
  throws |java.security.InvalidAlgorithmParameterException|
         |java.security.KeyStoreException|
         
Creates an instance of PKIXBuilderParameters that populates the set of most-trusted CAs from the trusted certificate entries contained in the specified KeyStore. Only keystore 
entries that contain trusted X509Certificates are considered; all other certificate types are ignored. 

    keystore - a KeyStore from which the set of most-trusted CAs will be populated 
    targetConstraints - a CertSelector specifying the constraints on the target certificate 

*java.security.cert.PKIXBuilderParameters(Set<TrustAnchor>,CertSelector)*

public PKIXBuilderParameters(
  java.util.Set<java.security.cert.TrustAnchor> trustAnchors,
  java.security.cert.CertSelector targetConstraints)
  throws |java.security.InvalidAlgorithmParameterException|
         
Creates an instance of PKIXBuilderParameters with the specified Set of most-trusted CAs. Each element of the set is a TrustAnchor(|java.security.cert.TrustAnchor|) . 

Note that the Set is copied to protect against subsequent modifications. 

    trustAnchors - a Set of TrustAnchors 
    targetConstraints - a CertSelector specifying the constraints on the target certificate 

*java.security.cert.PKIXBuilderParameters.getMaxPathLength()*

public int getMaxPathLength()

Returns the value of the maximum number of intermediate non-self-issued certificates that may exist in a certification path. See the (|java.security.cert.PKIXBuilderParameters|) 
method for more details. 



    Returns: the maximum number of non-self-issued intermediate certificates that may exist in a certification path, or -1 if there is no limit 

*java.security.cert.PKIXBuilderParameters.setMaxPathLength(int)*

public void setMaxPathLength(int maxPathLength)

Sets the value of the maximum number of non-self-issued intermediate certificates that may exist in a certification path. A certificate is self-issued if the DNs that appear in 
the subject and issuer fields are identical and are not empty. Note that the last certificate in a certification path is not an intermediate certificate, and is not included in 
this limit. Usually the last certificate is an end entity certificate, but it can be a CA certificate. A PKIX CertPathBuilder instance must not build paths longer than the length 
specified. 

A value of 0 implies that the path can only contain a single certificate. A value of -1 implies that the path length is unconstrained (i.e. there is no maximum). The default 
maximum path length, if not specified, is 5. Setting a value less than -1 will cause an exception to be thrown. 

If any of the CA certificates contain the BasicConstraintsExtension, the value of the pathLenConstraint field of the extension overrides the maximum path length parameter whenever 
the result is a certification path of smaller length. 


    maxPathLength - the maximum number of non-self-issued intermediate certificates that may exist in a certification path 

*java.security.cert.PKIXBuilderParameters.toString()*

public |java.lang.String| toString()

Returns a formatted string describing the parameters. 



    Returns: a formatted string describing the parameters 


