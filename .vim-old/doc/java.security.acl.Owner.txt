*java.security.acl.Owner* *Owner* Interface for managing owners of Access Control Lists (ACLs) or ACL 
 configurations.

public interface interface Owner


|java.security.acl.Owner_Description|
|java.security.acl.Owner_Fields|
|java.security.acl.Owner_Constructors|
|java.security.acl.Owner_Methods|

====================================================================================================================================================================================

*java.security.acl.Owner_Methods*
|java.security.acl.Owner.addOwner(Principal,Principal)|Adds an owner.
|java.security.acl.Owner.deleteOwner(Principal,Principal)|Deletes an owner.
|java.security.acl.Owner.isOwner(Principal)|Returns true if the given principal is an owner of the ACL.

*java.security.acl.Owner_Description*

Interface for managing owners of Access Control Lists (ACLs) or ACL configurations. (Note that the Acl interface in the java.security.acl package extends this Owner interface.) 
The initial owner Principal should be specified as an argument to the constructor of the class implementing this interface. 



*java.security.acl.Owner.addOwner(Principal,Principal)*

public boolean addOwner(
  java.security.Principal caller,
  java.security.Principal owner)
  throws |java.security.acl.NotOwnerException|
         
Adds an owner. Only owners can modify ACL contents. The caller principal must be an owner of the ACL in order to invoke this method. That is, only an owner can add another owner. 
The initial owner is configured at ACL construction time. 


    caller - the principal invoking this method. It must be an owner of the ACL. 
    owner - the owner that should be added to the list of owners. 

    Returns: true if successful, false if owner is already an owner. 

*java.security.acl.Owner.deleteOwner(Principal,Principal)*

public boolean deleteOwner(
  java.security.Principal caller,
  java.security.Principal owner)
  throws |java.security.acl.LastOwnerException|
         |java.security.acl.NotOwnerException|
         
Deletes an owner. If this is the last owner in the ACL, an exception is raised. 

The caller principal must be an owner of the ACL in order to invoke this method. 


    caller - the principal invoking this method. It must be an owner of the ACL. 
    owner - the owner to be removed from the list of owners. 

    Returns: true if the owner is removed, false if the owner is not part of the list of owners. 

*java.security.acl.Owner.isOwner(Principal)*

public boolean isOwner(java.security.Principal owner)

Returns true if the given principal is an owner of the ACL. 


    owner - the principal to be checked to determine whether or not it is an owner. 

    Returns: true if the passed principal is in the list of owners, false if not. 


