*org.w3c.dom.ls.LSException* *LSException* Parser or write operations may throw 

public class LSException
  extends    |java.lang.RuntimeException|

|org.w3c.dom.ls.LSException_Description|
|org.w3c.dom.ls.LSException_Fields|
|org.w3c.dom.ls.LSException_Constructors|
|org.w3c.dom.ls.LSException_Methods|

================================================================================

*org.w3c.dom.ls.LSException_Fields*
|short_org.w3c.dom.ls.LSException.code|
|short_org.w3c.dom.ls.LSException.PARSE_ERR|
|short_org.w3c.dom.ls.LSException.SERIALIZE_ERR|

*org.w3c.dom.ls.LSException_Constructors*
|org.w3c.dom.ls.LSException(short,String)|

*org.w3c.dom.ls.LSException_Description*

Parser or write operations may throw an LSException if the processing is 
stopped. The processing can be stopped due to a DOMError with a severity of 
DOMError.SEVERITY_FATAL_ERROR or a non recovered DOMError.SEVERITY_ERROR, or if 
DOMErrorHandler.handleError() returned false. Note: As suggested in the 
definition of the constants in the DOMError interface, a DOM implementation may 
choose to continue after a fatal error, but the resulting DOM tree is then 
implementation dependent. See also the Document Object Model (DOM) Level 3 Load 
and Save Specification. 


*short_org.w3c.dom.ls.LSException.code*

Parser or write operations may throw an LSException if the processing is 
stopped. The processing can be stopped due to a DOMError with a severity of 
DOMError.SEVERITY_FATAL_ERROR or a non recovered DOMError.SEVERITY_ERROR, or if 
DOMErrorHandler.handleError() returned false. Note: As suggested in the 
definition of the constants in the DOMError interface, a DOM implementation may 
choose to continue after a fatal error, but the resulting DOM tree is then 
implementation dependent. See also the Document Object Model (DOM) Level 3 Load 
and Save Specification. 


*short_org.w3c.dom.ls.LSException.PARSE_ERR*

Parser or write operations may throw an LSException if the processing is 
stopped. The processing can be stopped due to a DOMError with a severity of 
DOMError.SEVERITY_FATAL_ERROR or a non recovered DOMError.SEVERITY_ERROR, or if 
DOMErrorHandler.handleError() returned false. Note: As suggested in the 
definition of the constants in the DOMError interface, a DOM implementation may 
choose to continue after a fatal error, but the resulting DOM tree is then 
implementation dependent. See also the Document Object Model (DOM) Level 3 Load 
and Save Specification. 


*short_org.w3c.dom.ls.LSException.SERIALIZE_ERR*

Parser or write operations may throw an LSException if the processing is 
stopped. The processing can be stopped due to a DOMError with a severity of 
DOMError.SEVERITY_FATAL_ERROR or a non recovered DOMError.SEVERITY_ERROR, or if 
DOMErrorHandler.handleError() returned false. Note: As suggested in the 
definition of the constants in the DOMError interface, a DOM implementation may 
choose to continue after a fatal error, but the resulting DOM tree is then 
implementation dependent. See also the Document Object Model (DOM) Level 3 Load 
and Save Specification. 



*org.w3c.dom.ls.LSException(short,String)*

public LSException(
  short code,
  java.lang.String message)




