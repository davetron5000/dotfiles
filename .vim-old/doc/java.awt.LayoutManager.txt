*java.awt.LayoutManager* *LayoutManager* Defines the interface for classes that know how to lay out 
 Containers.

public interface interface LayoutManager


|java.awt.LayoutManager_Description|
|java.awt.LayoutManager_Fields|
|java.awt.LayoutManager_Constructors|
|java.awt.LayoutManager_Methods|

====================================================================================================================================================================================

*java.awt.LayoutManager_Methods*
|java.awt.LayoutManager.addLayoutComponent(String,Component)|If the layout manager uses a per-component string,  adds the component comp to the layout,  associating it   with the 
|java.awt.LayoutManager.layoutContainer(Container)|Lays out the specified container.
|java.awt.LayoutManager.minimumLayoutSize(Container)|Calculates the minimum size dimensions for the specified   container, given the components it contains.
|java.awt.LayoutManager.preferredLayoutSize(Container)|Calculates the preferred size dimensions for the specified   container, given the components it contains.
|java.awt.LayoutManager.removeLayoutComponent(Component)|Removes the specified component from the layout.

*java.awt.LayoutManager_Description*

Defines the interface for classes that know how to lay out Containers. 



*java.awt.LayoutManager.addLayoutComponent(String,Component)*

public void addLayoutComponent(
  java.lang.String name,
  java.awt.Component comp)

If the layout manager uses a per-component string, adds the component comp to the layout, associating it with the string specified by name. 


    name - the string to be associated with the component 
    comp - the component to be added 

*java.awt.LayoutManager.layoutContainer(Container)*

public void layoutContainer(java.awt.Container parent)

Lays out the specified container. 


    parent - the container to be laid out 

*java.awt.LayoutManager.minimumLayoutSize(Container)*

public |java.awt.Dimension| minimumLayoutSize(java.awt.Container parent)

Calculates the minimum size dimensions for the specified container, given the components it contains. 


    parent - the component to be laid out 

*java.awt.LayoutManager.preferredLayoutSize(Container)*

public |java.awt.Dimension| preferredLayoutSize(java.awt.Container parent)

Calculates the preferred size dimensions for the specified container, given the components it contains. 


    parent - the container to be laid out 

*java.awt.LayoutManager.removeLayoutComponent(Component)*

public void removeLayoutComponent(java.awt.Component comp)

Removes the specified component from the layout. 


    comp - the component to be removed 


