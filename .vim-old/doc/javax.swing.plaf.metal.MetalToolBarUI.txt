*javax.swing.plaf.metal.MetalToolBarUI* *MetalToolBarUI* A Metal Look and Feel implementation of ToolBarUI.

public class MetalToolBarUI
  extends    |javax.swing.plaf.basic.BasicToolBarUI|

|javax.swing.plaf.metal.MetalToolBarUI_Description|
|javax.swing.plaf.metal.MetalToolBarUI_Fields|
|javax.swing.plaf.metal.MetalToolBarUI_Constructors|
|javax.swing.plaf.metal.MetalToolBarUI_Methods|

====================================================================================================================================================================================

*javax.swing.plaf.metal.MetalToolBarUI_Fields*
|java.awt.event.ContainerListener_javax.swing.plaf.metal.MetalToolBarUI.contListener|
|java.beans.PropertyChangeListener_javax.swing.plaf.metal.MetalToolBarUI.rolloverListener|

*javax.swing.plaf.metal.MetalToolBarUI_Constructors*
|javax.swing.plaf.metal.MetalToolBarUI()|

*javax.swing.plaf.metal.MetalToolBarUI_Methods*
|javax.swing.plaf.metal.MetalToolBarUI.createContainerListener()|Creates a container listener that will be added to the JToolBar.
|javax.swing.plaf.metal.MetalToolBarUI.createDockingListener()|
|javax.swing.plaf.metal.MetalToolBarUI.createNonRolloverBorder()|
|javax.swing.plaf.metal.MetalToolBarUI.createRolloverBorder()|
|javax.swing.plaf.metal.MetalToolBarUI.createRolloverListener()|Creates a property change listener that will be added to the JToolBar.
|javax.swing.plaf.metal.MetalToolBarUI.createUI(JComponent)|
|javax.swing.plaf.metal.MetalToolBarUI.installListeners()|
|javax.swing.plaf.metal.MetalToolBarUI.installUI(JComponent)|
|javax.swing.plaf.metal.MetalToolBarUI.setBorderToNonRollover(Component)|
|javax.swing.plaf.metal.MetalToolBarUI.setDragOffset(Point)|
|javax.swing.plaf.metal.MetalToolBarUI.uninstallListeners()|
|javax.swing.plaf.metal.MetalToolBarUI.uninstallUI(JComponent)|
|javax.swing.plaf.metal.MetalToolBarUI.update(Graphics,JComponent)|If necessary paints the background of the component, then invokes  paint.

*javax.swing.plaf.metal.MetalToolBarUI_Description*

A Metal Look and Feel implementation of ToolBarUI. This implementation is a "combined" view/controller. 



*java.awt.event.ContainerListener_javax.swing.plaf.metal.MetalToolBarUI.contListener*

This protected field is implemenation specific. Do not access directly or override. Use the create method instead. 


*java.beans.PropertyChangeListener_javax.swing.plaf.metal.MetalToolBarUI.rolloverListener*

This protected field is implemenation specific. Do not access directly or override. Use the create method instead. 



*javax.swing.plaf.metal.MetalToolBarUI()*

public MetalToolBarUI()




*javax.swing.plaf.metal.MetalToolBarUI.createContainerListener()*

protected |java.awt.event.ContainerListener| createContainerListener()

Creates a container listener that will be added to the JToolBar. If this method returns null then it will not be added to the toolbar. 



    Returns: an instance of a ContainerListener or null 

*javax.swing.plaf.metal.MetalToolBarUI.createDockingListener()*

protected |javax.swing.event.MouseInputListener| createDockingListener()





*javax.swing.plaf.metal.MetalToolBarUI.createNonRolloverBorder()*

protected |javax.swing.border.Border| createNonRolloverBorder()





*javax.swing.plaf.metal.MetalToolBarUI.createRolloverBorder()*

protected |javax.swing.border.Border| createRolloverBorder()





*javax.swing.plaf.metal.MetalToolBarUI.createRolloverListener()*

protected |java.beans.PropertyChangeListener| createRolloverListener()

Creates a property change listener that will be added to the JToolBar. If this method returns null then it will not be added to the toolbar. 



    Returns: an instance of a PropertyChangeListener or null 

*javax.swing.plaf.metal.MetalToolBarUI.createUI(JComponent)*

public static |javax.swing.plaf.ComponentUI| createUI(javax.swing.JComponent c)





*javax.swing.plaf.metal.MetalToolBarUI.installListeners()*

protected void installListeners()





*javax.swing.plaf.metal.MetalToolBarUI.installUI(JComponent)*

public void installUI(javax.swing.JComponent c)





*javax.swing.plaf.metal.MetalToolBarUI.setBorderToNonRollover(Component)*

protected void setBorderToNonRollover(java.awt.Component c)





*javax.swing.plaf.metal.MetalToolBarUI.setDragOffset(Point)*

protected void setDragOffset(java.awt.Point p)





*javax.swing.plaf.metal.MetalToolBarUI.uninstallListeners()*

protected void uninstallListeners()





*javax.swing.plaf.metal.MetalToolBarUI.uninstallUI(JComponent)*

public void uninstallUI(javax.swing.JComponent c)





*javax.swing.plaf.metal.MetalToolBarUI.update(Graphics,JComponent)*

public void update(
  java.awt.Graphics g,
  javax.swing.JComponent c)

If necessary paints the background of the component, then invokes paint. 


    g - Graphics to paint to 
    c - JComponent painting on 


