*org.omg.CORBA.ShortHolder* *ShortHolder* The Holder for Short.

public final class ShortHolder
  extends    |java.lang.Object|
  implements |org.omg.CORBA.portable.Streamable|

|org.omg.CORBA.ShortHolder_Description|
|org.omg.CORBA.ShortHolder_Fields|
|org.omg.CORBA.ShortHolder_Constructors|
|org.omg.CORBA.ShortHolder_Methods|

================================================================================

*org.omg.CORBA.ShortHolder_Fields*
|short_org.omg.CORBA.ShortHolder.value|

*org.omg.CORBA.ShortHolder_Constructors*
|org.omg.CORBA.ShortHolder()|Constructs a new ShortHolder object with its  valu
|org.omg.CORBA.ShortHolder(short)|Constructs a new ShortHolder object with its 

*org.omg.CORBA.ShortHolder_Methods*
|org.omg.CORBA.ShortHolder._read(InputStream)|Reads from input and initalizes t
|org.omg.CORBA.ShortHolder._type()|Returns the TypeCode corresponding to the va
|org.omg.CORBA.ShortHolder._write(OutputStream)|Marshals to output the value in

*org.omg.CORBA.ShortHolder_Description*

The Holder for Short. For more information on Holder files, see "Generated 
Files: Holder Files".short that is used to store "out" and "inout" parameters 
in IDL operations. If an IDL operation signature has an IDL short as an "out" 
or "inout" parameter, the programmer must pass an instance of ShortHolder as 
the corresponding parameter in the method invocation; for "inout" parameters, 
the programmer must also fill the "in" value to be sent to the server. Before 
the method invocation returns, the ORB will fill in the value corresponding to 
the "out" value returned from the server. 

If myShortHolder is an instance of ShortHolder, the value stored in its value 
field can be accessed with myShortHolder.value. 


*short_org.omg.CORBA.ShortHolder.value*

The Holder for Short. For more information on Holder files, see "Generated 
Files: Holder Files".short that is used to store "out" and "inout" parameters 
in IDL operations. If an IDL operation signature has an IDL short as an "out" 
or "inout" parameter, the programmer must pass an instance of ShortHolder as 
the corresponding parameter in the method invocation; for "inout" parameters, 
the programmer must also fill the "in" value to be sent to the server. Before 
the method invocation returns, the ORB will fill in the value corresponding to 
the "out" value returned from the server. 

If myShortHolder is an instance of ShortHolder, the value stored in its value 
field can be accessed with myShortHolder.value. 



*org.omg.CORBA.ShortHolder()*

public ShortHolder()

Constructs a new ShortHolder object with its value field initialized to 0. 


*org.omg.CORBA.ShortHolder(short)*

public ShortHolder(short initial)

Constructs a new ShortHolder object with its value field initialized to the 
given short. 

    initial - the short with which to initialize the value field of the newly-created 
       ShortHolder object 

*org.omg.CORBA.ShortHolder._read(InputStream)*

public void _read(org.omg.CORBA.portable.InputStream input)

Reads from input and initalizes the value in this ShortHolder object with the 
unmarshalled data. 

    input - the InputStream containing CDR formatted data from the wire. 

*org.omg.CORBA.ShortHolder._type()*

public |org.omg.CORBA.TypeCode| _type()

Returns the TypeCode corresponding to the value held in this ShortHolder 
object. 


    Returns: the TypeCode of the value held in this ShortHolder object 
*org.omg.CORBA.ShortHolder._write(OutputStream)*

public void _write(org.omg.CORBA.portable.OutputStream output)

Marshals to output the value in this ShortHolder object. 

    output - the OutputStream which will contain the CDR formatted data. 


