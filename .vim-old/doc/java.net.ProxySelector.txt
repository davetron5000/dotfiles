*java.net.ProxySelector* *ProxySelector* Selects the proxy server to use, if any, when connecting to the
 network resource referenced by a URL.

public abstract class ProxySelector
  extends    |java.lang.Object|

|java.net.ProxySelector_Description|
|java.net.ProxySelector_Fields|
|java.net.ProxySelector_Constructors|
|java.net.ProxySelector_Methods|

====================================================================================================================================================================================

*java.net.ProxySelector_Constructors*
|java.net.ProxySelector()|

*java.net.ProxySelector_Methods*
|java.net.ProxySelector.connectFailed(URI,SocketAddress,IOException)|Called to indicate that a connection could not be established  to a proxy/socks server.
|java.net.ProxySelector.getDefault()|Gets the system-wide proxy selector.
|java.net.ProxySelector.select(URI)|Selects all the applicable proxies based on the protocol to  access the resource with and a destination address to access  the resource at.
|java.net.ProxySelector.setDefault(ProxySelector)|Sets (or unsets) the system-wide proxy selector.

*java.net.ProxySelector_Description*

Selects the proxy server to use, if any, when connecting to the network resource referenced by a URL. A proxy selector is a concrete sub-class of this class and is registered by 
invoking the setDefault(|java.net.ProxySelector|) method. The currently registered proxy selector can be retrieved by calling getDefault(|java.net.ProxySelector|) method. 

When a proxy selector is registered, for instance, a subclass of URLConnection class should call the select(|java.net.ProxySelector|) method for each URL request so that the proxy 
selector can decide if a direct, or proxied connection should be used. The select(|java.net.ProxySelector|) method returns an iterator over a collection with the preferred 
connection approach. 

If a connection cannot be established to a proxy (PROXY or SOCKS) servers then the caller should call the proxy selector's connectFailed(|java.net.ProxySelector|) method to notify 
the proxy selector that the proxy server is unavailable. 



*java.net.ProxySelector()*

public ProxySelector()




*java.net.ProxySelector.connectFailed(URI,SocketAddress,IOException)*

public abstract void connectFailed(
  java.net.URI uri,
  java.net.SocketAddress sa,
  java.io.IOException ioe)

Called to indicate that a connection could not be established to a proxy/socks server. An implementation of this method can temporarily remove the proxies or reorder the sequence 
of proxies returned by select(String, String), using the address and they kind of IOException given. 


    uri - The URI that the proxy at sa failed to serve. 
    sa - The socket address of the proxy/SOCKS server 
    ioe - The I/O exception thrown when the connect failed. 

*java.net.ProxySelector.getDefault()*

public static |java.net.ProxySelector| getDefault()

Gets the system-wide proxy selector. 



    Returns: the system-wide ProxySelector 

*java.net.ProxySelector.select(URI)*

public abstract |java.util.List|<Proxy> select(java.net.URI uri)

Selects all the applicable proxies based on the protocol to access the resource with and a destination address to access the resource at. The format of the URI is defined as 
follow: 

http URI for http connections https URI for https connections ftp URI for ftp connections socket://host:port for tcp client sockets connections 


    uri - The URI that a connection is required to 

    Returns: a List of Proxies. Each element in the the List is of type {@link java.net.Proxy Proxy}; when no proxy is available, the list will contain one element of type {@link 
             java.net.Proxy Proxy} that represents a direct connection. 

*java.net.ProxySelector.setDefault(ProxySelector)*

public static void setDefault(java.net.ProxySelector ps)

Sets (or unsets) the system-wide proxy selector. 

Note: non-standard procotol handlers may ignore this setting. 


    ps - The HTTP proxy selector, or null to unset the proxy selector. 


