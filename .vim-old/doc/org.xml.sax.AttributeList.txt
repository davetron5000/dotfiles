*org.xml.sax.AttributeList* *AttributeList* Interface for an element's attribute

public interface interface AttributeList


|org.xml.sax.AttributeList_Description|
|org.xml.sax.AttributeList_Fields|
|org.xml.sax.AttributeList_Constructors|
|org.xml.sax.AttributeList_Methods|

================================================================================

*org.xml.sax.AttributeList_Methods*
|org.xml.sax.AttributeList.getLength()|Return the number of attributes in this 
|org.xml.sax.AttributeList.getName(int)|Return the name of an attribute in this
|org.xml.sax.AttributeList.getType(int)|Return the type of an attribute in the 
|org.xml.sax.AttributeList.getType(String)|Return the type of an attribute in t
|org.xml.sax.AttributeList.getValue(int)|Return the value of an attribute in th
|org.xml.sax.AttributeList.getValue(String)|Return the value of an attribute in

*org.xml.sax.AttributeList_Description*

Interface for an element's attribute specifications. 

This module, both source code and documentation, is in the Public Domain, and 
comes with NO WARRANTY. See http://www.saxproject.org for further information. 

This is the original SAX1 interface for reporting an element's attributes. 
Unlike the new Attributes(|org.xml.sax.Attributes|) interface, it does not 
support Namespace-related information. 

When an attribute list is supplied as part of a 
startElement(|org.xml.sax.DocumentHandler|) event, the list will return valid 
results only during the scope of the event; once the event handler returns 
control to the parser, the attribute list is invalid. To save a persistent copy 
of the attribute list, use the SAX1 
AttributeListImpl(|org.xml.sax.helpers.AttributeListImpl|) helper class. 

An attribute list includes only attributes that have been specified or 
defaulted: #IMPLIED attributes will not be included. 

There are two ways for the SAX application to obtain information from the 
AttributeList. First, it can iterate through the entire list: 



public void startElement (String name, AttributeList atts) { for (int i = 0; i 
(Note that the result of getLength() will be zero if there are no attributes.) 

As an alternative, the application can request the value or type of specific 
attributes: 



public void startElement (String name, AttributeList atts) { String identifier 
= atts.getValue("id"); String label = atts.getValue("label"); [...] } 


*org.xml.sax.AttributeList.getLength()*

public int getLength()

Return the number of attributes in this list. 

The SAX parser may provide attributes in any arbitrary order, regardless of the 
order in which they were declared or specified. The number of attributes may be 
zero. 


    Returns: The number of attributes in the list. 
*org.xml.sax.AttributeList.getName(int)*

public |java.lang.String| getName(int i)

Return the name of an attribute in this list (by position). 

The names must be unique: the SAX parser shall not include the same attribute 
twice. Attributes without values (those declared #IMPLIED without a value 
specified in the start tag) will be omitted from the list. 

If the attribute name has a namespace prefix, the prefix will still be 
attached. 

    i - The index of the attribute in the list (starting at 0). 

    Returns: The name of the indexed attribute, or null if the index is out of range. 
*org.xml.sax.AttributeList.getType(int)*

public |java.lang.String| getType(int i)

Return the type of an attribute in the list (by position). 

The attribute type is one of the strings "CDATA", "ID", "IDREF", "IDREFS", 
"NMTOKEN", "NMTOKENS", "ENTITY", "ENTITIES", or "NOTATION" (always in upper 
case). 

If the parser has not read a declaration for the attribute, or if the parser 
does not report attribute types, then it must return the value "CDATA" as 
stated in the XML 1.0 Recommentation (clause 3.3.3, "Attribute-Value 
Normalization"). 

For an enumerated attribute that is not a notation, the parser will report the 
type as "NMTOKEN". 

    i - The index of the attribute in the list (starting at 0). 

    Returns: The attribute type as a string, or null if the index is out of range. 
*org.xml.sax.AttributeList.getType(String)*

public |java.lang.String| getType(java.lang.String name)

Return the type of an attribute in the list (by name). 

The return value is the same as the return value for getType(int). 

If the attribute name has a namespace prefix in the document, the application 
must include the prefix here. 

    name - The name of the attribute. 

    Returns: The attribute type as a string, or null if no such attribute exists. 
*org.xml.sax.AttributeList.getValue(int)*

public |java.lang.String| getValue(int i)

Return the value of an attribute in the list (by position). 

If the attribute value is a list of tokens (IDREFS, ENTITIES, or NMTOKENS), the 
tokens will be concatenated into a single string separated by whitespace. 

    i - The index of the attribute in the list (starting at 0). 

    Returns: The attribute value as a string, or null if the index is out of range. 
*org.xml.sax.AttributeList.getValue(String)*

public |java.lang.String| getValue(java.lang.String name)

Return the value of an attribute in the list (by name). 

The return value is the same as the return value for getValue(int). 

If the attribute name has a namespace prefix in the document, the application 
must include the prefix here. 

    name - the name of the attribute to return 

    Returns: The attribute value as a string, or null if no such attribute exists. 

