*javax.swing.text.AbstractDocument.Content* *AbstractDocument.Content* Interface to describe a sequence of character content that
 can be edited.

public static interface interface AbstractDocument.Content


|javax.swing.text.AbstractDocument.Content_Description|
|javax.swing.text.AbstractDocument.Content_Fields|
|javax.swing.text.AbstractDocument.Content_Constructors|
|javax.swing.text.AbstractDocument.Content_Methods|

====================================================================================================================================================================================

*javax.swing.text.AbstractDocument.Content_Methods*
|javax.swing.text.AbstractDocument.Content.createPosition(int)|Creates a position within the content that will  track change as the content is mutated.
|javax.swing.text.AbstractDocument.Content.getChars(int,int,Segment)|Gets a sequence of characters and copies them into a Segment.
|javax.swing.text.AbstractDocument.Content.getString(int,int)|Fetches a string of characters contained in the sequence.
|javax.swing.text.AbstractDocument.Content.insertString(int,String)|Inserts a string of characters into the sequence.
|javax.swing.text.AbstractDocument.Content.length()|Current length of the sequence of character content.
|javax.swing.text.AbstractDocument.Content.remove(int,int)|Removes some portion of the sequence.

*javax.swing.text.AbstractDocument.Content_Description*

Interface to describe a sequence of character content that can be edited. Implementations may or may not support a history mechanism which will be reflected by whether or not 
mutations return an UndoableEdit implementation. 



*javax.swing.text.AbstractDocument.Content.createPosition(int)*

public |javax.swing.text.Position| createPosition(int offset)
  throws |javax.swing.text.BadLocationException|
         
Creates a position within the content that will track change as the content is mutated. 


    offset - the offset in the content >= 0 

    Returns: 

*javax.swing.text.AbstractDocument.Content.getChars(int,int,Segment)*

public void getChars(
  int where,
  int len,
  javax.swing.text.Segment txt)
  throws |javax.swing.text.BadLocationException|
         
Gets a sequence of characters and copies them into a Segment. 


    where - the starting offset >= 0 
    len - the number of characters >= 0 
    txt - the target location to copy into 

*javax.swing.text.AbstractDocument.Content.getString(int,int)*

public |java.lang.String| getString(
  int where,
  int len)
  throws |javax.swing.text.BadLocationException|
         
Fetches a string of characters contained in the sequence. 


    where - Offset into the sequence to fetch >= 0. 
    len - number of characters to copy >= 0. 

    Returns: 

*javax.swing.text.AbstractDocument.Content.insertString(int,String)*

public |javax.swing.undo.UndoableEdit| insertString(
  int where,
  java.lang.String str)
  throws |javax.swing.text.BadLocationException|
         
Inserts a string of characters into the sequence. 


    where - offset into the sequence to make the insertion >= 0 
    str - string to insert 

    Returns: if the implementation supports a history mechanism, a reference to an Edit implementation will be returned, otherwise returns null 

*javax.swing.text.AbstractDocument.Content.length()*

public int length()

Current length of the sequence of character content. 



    Returns: the length >= 0 

*javax.swing.text.AbstractDocument.Content.remove(int,int)*

public |javax.swing.undo.UndoableEdit| remove(
  int where,
  int nitems)
  throws |javax.swing.text.BadLocationException|
         
Removes some portion of the sequence. 


    where - The offset into the sequence to make the insertion >= 0. 
    nitems - The number of items in the sequence to remove >= 0. 

    Returns: If the implementation supports a history mechansim, a reference to an Edit implementation will be returned, otherwise null. 


