*javax.persistence.spi.ClassTransformer* *ClassTransformer* A persistence provid

public interface interface ClassTransformer


|javax.persistence.spi.ClassTransformer_Description|
|javax.persistence.spi.ClassTransformer_Fields|
|javax.persistence.spi.ClassTransformer_Constructors|
|javax.persistence.spi.ClassTransformer_Methods|

================================================================================

*javax.persistence.spi.ClassTransformer_Methods*
|javax.persistence.spi.ClassTransformer.transform(ClassLoader,String,Class<?>,ProtectionDomain,byte[])|

*javax.persistence.spi.ClassTransformer_Description*

A persistence provider supplies an instance of this interface to the 
PersistenceUnitInfo.addTransformer(|javax.persistence.spi.PersistenceUnitInfo|) 
method. The supplied transformer instance will get called to transform entity 
class files when they are loaded or redefined. The transformation occurs before 
the class is defined by the JVM. 



*javax.persistence.spi.ClassTransformer.transform(ClassLoader,String,Class<?>,ProtectionDomain,byte[])*

public byte[] transform(
  java.lang.ClassLoader loader,
  java.lang.String className,
  java.lang.Class<?> classBeingRedefined,
  java.security.ProtectionDomain protectionDomain,
  byte[] classfileBuffer)
  throws |java.lang.instrument.IllegalClassFormatException|
         
Invoked when a class is being loaded or redefined. The implementation of this 
method may transform the supplied class file and return a new replacement class 
file. 


    loader - The defining loader of the class to be transformed, may be null if the 
       bootstrap loader 
    className - The name of the class in the internal form of fully qualified class and 
       interface names 
    classBeingRedefined - If this is a redefine, the class being redefined, otherwise null 
    protectionDomain - The protection domain of the class being defined or redefined 
    classfileBuffer - The input byte buffer in class file format - must not be modified 

    Returns: A well-formed class file buffer (the result of the transform), or null if no 
             transform is performed 


