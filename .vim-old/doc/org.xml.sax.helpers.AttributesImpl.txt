*org.xml.sax.helpers.AttributesImpl* *AttributesImpl* Default implementation of 

public class AttributesImpl
  extends    |java.lang.Object|
  implements |org.xml.sax.Attributes|

|org.xml.sax.helpers.AttributesImpl_Description|
|org.xml.sax.helpers.AttributesImpl_Fields|
|org.xml.sax.helpers.AttributesImpl_Constructors|
|org.xml.sax.helpers.AttributesImpl_Methods|

================================================================================

*org.xml.sax.helpers.AttributesImpl_Constructors*
|org.xml.sax.helpers.AttributesImpl()|Construct a new, empty AttributesImpl obj
|org.xml.sax.helpers.AttributesImpl(Attributes)|Copy an existing Attributes obj

*org.xml.sax.helpers.AttributesImpl_Methods*
|org.xml.sax.helpers.AttributesImpl.addAttribute(String,String,String,String,String)|
|org.xml.sax.helpers.AttributesImpl.clear()|Clear the attribute list for reuse.
|org.xml.sax.helpers.AttributesImpl.getIndex(String)|Look up an attribute's ind
|org.xml.sax.helpers.AttributesImpl.getIndex(String,String)|Look up an attribut
|org.xml.sax.helpers.AttributesImpl.getLength()|Return the number of attributes
|org.xml.sax.helpers.AttributesImpl.getLocalName(int)|Return an attribute's loc
|org.xml.sax.helpers.AttributesImpl.getQName(int)|Return an attribute's qualifi
|org.xml.sax.helpers.AttributesImpl.getType(int)|Return an attribute's type by 
|org.xml.sax.helpers.AttributesImpl.getType(String)|Look up an attribute's type
|org.xml.sax.helpers.AttributesImpl.getType(String,String)|Look up an attribute
|org.xml.sax.helpers.AttributesImpl.getURI(int)|Return an attribute's Namespace
|org.xml.sax.helpers.AttributesImpl.getValue(int)|Return an attribute's value b
|org.xml.sax.helpers.AttributesImpl.getValue(String)|Look up an attribute's val
|org.xml.sax.helpers.AttributesImpl.getValue(String,String)|Look up an attribut
|org.xml.sax.helpers.AttributesImpl.removeAttribute(int)|Remove an attribute fr
|org.xml.sax.helpers.AttributesImpl.setAttribute(int,String,String,String,String,String)|
|org.xml.sax.helpers.AttributesImpl.setAttributes(Attributes)|Copy an entire At
|org.xml.sax.helpers.AttributesImpl.setLocalName(int,String)|Set the local name
|org.xml.sax.helpers.AttributesImpl.setQName(int,String)|Set the qualified name
|org.xml.sax.helpers.AttributesImpl.setType(int,String)|Set the type of a speci
|org.xml.sax.helpers.AttributesImpl.setURI(int,String)|Set the Namespace URI of
|org.xml.sax.helpers.AttributesImpl.setValue(int,String)|Set the value of a spe

*org.xml.sax.helpers.AttributesImpl_Description*

Default implementation of the Attributes interface. 

This module, both source code and documentation, is in the Public Domain, and 
comes with NO WARRANTY. See http://www.saxproject.org for further information. 

This class provides a default implementation of the SAX2 
Attributes(|org.xml.sax.Attributes|) interface, with the addition of 
manipulators so that the list can be modified or reused. 

There are two typical uses of this class: 

to take a persistent snapshot of an Attributes object in a 
startElement(|org.xml.sax.ContentHandler|) event; or to construct or modify an 
Attributes object in a SAX2 driver or filter. 

This class replaces the now-deprecated SAX1 
AttributeListImpl(|org.xml.sax.helpers.AttributeListImpl|) class; in addition 
to supporting the updated Attributes interface rather than the deprecated 
AttributeList(|org.xml.sax.AttributeList|) interface, it also includes a much 
more efficient implementation using a single array rather than a set of 
Vectors. 


*org.xml.sax.helpers.AttributesImpl()*

public AttributesImpl()

Construct a new, empty AttributesImpl object. 


*org.xml.sax.helpers.AttributesImpl(Attributes)*

public AttributesImpl(org.xml.sax.Attributes atts)

Copy an existing Attributes object. 

This constructor is especially useful inside a 
startElement(|org.xml.sax.ContentHandler|) event. 

    atts - The existing Attributes object. 

*org.xml.sax.helpers.AttributesImpl.addAttribute(String,String,String,String,String)*

public void addAttribute(
  java.lang.String uri,
  java.lang.String localName,
  java.lang.String qName,
  java.lang.String type,
  java.lang.String value)

Add an attribute to the end of the list. 

For the sake of speed, this method does no checking to see if the attribute is 
already in the list: that is the responsibility of the application. 

    uri - The Namespace URI, or the empty string if none is available or Namespace 
       processing is not being performed. 
    localName - The local name, or the empty string if Namespace processing is not being 
       performed. 
    qName - The qualified (prefixed) name, or the empty string if qualified names are not 
       available. 
    type - The attribute type as a string. 
    value - The attribute value. 

*org.xml.sax.helpers.AttributesImpl.clear()*

public void clear()

Clear the attribute list for reuse. 

Note that little memory is freed by this call: the current array is kept so it 
can be reused. 


*org.xml.sax.helpers.AttributesImpl.getIndex(String)*

public int getIndex(java.lang.String qName)

Look up an attribute's index by qualified (prefixed) name. 

    qName - The qualified name. 

    Returns: The attribute's index, or -1 if none matches. 
*org.xml.sax.helpers.AttributesImpl.getIndex(String,String)*

public int getIndex(
  java.lang.String uri,
  java.lang.String localName)

Look up an attribute's index by Namespace name. 

In many cases, it will be more efficient to look up the name once and use the 
index query methods rather than using the name query methods repeatedly. 

    uri - The attribute's Namespace URI, or the empty string if none is available. 
    localName - The attribute's local name. 

    Returns: The attribute's index, or -1 if none matches. 
*org.xml.sax.helpers.AttributesImpl.getLength()*

public int getLength()

Return the number of attributes in the list. 


    Returns: The number of attributes in the list. 
*org.xml.sax.helpers.AttributesImpl.getLocalName(int)*

public |java.lang.String| getLocalName(int index)

Return an attribute's local name. 

    index - The attribute's index (zero-based). 

    Returns: The attribute's local name, the empty string if none is available, or null if 
             the index if out of range. 
*org.xml.sax.helpers.AttributesImpl.getQName(int)*

public |java.lang.String| getQName(int index)

Return an attribute's qualified (prefixed) name. 

    index - The attribute's index (zero-based). 

    Returns: The attribute's qualified name, the empty string if none is available, or null 
             if the index is out of bounds. 
*org.xml.sax.helpers.AttributesImpl.getType(int)*

public |java.lang.String| getType(int index)

Return an attribute's type by index. 

    index - The attribute's index (zero-based). 

    Returns: The attribute's type, "CDATA" if the type is unknown, or null if the index is 
             out of bounds. 
*org.xml.sax.helpers.AttributesImpl.getType(String)*

public |java.lang.String| getType(java.lang.String qName)

Look up an attribute's type by qualified (prefixed) name. 

    qName - The qualified name. 

    Returns: The attribute's type, or null if there is no matching attribute. 
*org.xml.sax.helpers.AttributesImpl.getType(String,String)*

public |java.lang.String| getType(
  java.lang.String uri,
  java.lang.String localName)

Look up an attribute's type by Namespace-qualified name. 

    uri - The Namespace URI, or the empty string for a name with no explicit Namespace 
       URI. 
    localName - The local name. 

    Returns: The attribute's type, or null if there is no matching attribute. 
*org.xml.sax.helpers.AttributesImpl.getURI(int)*

public |java.lang.String| getURI(int index)

Return an attribute's Namespace URI. 

    index - The attribute's index (zero-based). 

    Returns: The Namespace URI, the empty string if none is available, or null if the index 
             is out of range. 
*org.xml.sax.helpers.AttributesImpl.getValue(int)*

public |java.lang.String| getValue(int index)

Return an attribute's value by index. 

    index - The attribute's index (zero-based). 

    Returns: The attribute's value or null if the index is out of bounds. 
*org.xml.sax.helpers.AttributesImpl.getValue(String)*

public |java.lang.String| getValue(java.lang.String qName)

Look up an attribute's value by qualified (prefixed) name. 

    qName - The qualified name. 

    Returns: The attribute's value, or null if there is no matching attribute. 
*org.xml.sax.helpers.AttributesImpl.getValue(String,String)*

public |java.lang.String| getValue(
  java.lang.String uri,
  java.lang.String localName)

Look up an attribute's value by Namespace-qualified name. 

    uri - The Namespace URI, or the empty string for a name with no explicit Namespace 
       URI. 
    localName - The local name. 

    Returns: The attribute's value, or null if there is no matching attribute. 
*org.xml.sax.helpers.AttributesImpl.removeAttribute(int)*

public void removeAttribute(int index)

Remove an attribute from the list. 

    index - The index of the attribute (zero-based). 

*org.xml.sax.helpers.AttributesImpl.setAttribute(int,String,String,String,String,String)*

public void setAttribute(
  int index,
  java.lang.String uri,
  java.lang.String localName,
  java.lang.String qName,
  java.lang.String type,
  java.lang.String value)

Set an attribute in the list. 

For the sake of speed, this method does no checking for name conflicts or 
well-formedness: such checks are the responsibility of the application. 

    index - The index of the attribute (zero-based). 
    uri - The Namespace URI, or the empty string if none is available or Namespace 
       processing is not being performed. 
    localName - The local name, or the empty string if Namespace processing is not being 
       performed. 
    qName - The qualified name, or the empty string if qualified names are not available. 
    type - The attribute type as a string. 
    value - The attribute value. 

*org.xml.sax.helpers.AttributesImpl.setAttributes(Attributes)*

public void setAttributes(org.xml.sax.Attributes atts)

Copy an entire Attributes object. 

It may be more efficient to reuse an existing object rather than constantly 
allocating new ones. 

    atts - The attributes to copy. 

*org.xml.sax.helpers.AttributesImpl.setLocalName(int,String)*

public void setLocalName(
  int index,
  java.lang.String localName)

Set the local name of a specific attribute. 

    index - The index of the attribute (zero-based). 
    localName - The attribute's local name, or the empty string for none. 

*org.xml.sax.helpers.AttributesImpl.setQName(int,String)*

public void setQName(
  int index,
  java.lang.String qName)

Set the qualified name of a specific attribute. 

    index - The index of the attribute (zero-based). 
    qName - The attribute's qualified name, or the empty string for none. 

*org.xml.sax.helpers.AttributesImpl.setType(int,String)*

public void setType(
  int index,
  java.lang.String type)

Set the type of a specific attribute. 

    index - The index of the attribute (zero-based). 
    type - The attribute's type. 

*org.xml.sax.helpers.AttributesImpl.setURI(int,String)*

public void setURI(
  int index,
  java.lang.String uri)

Set the Namespace URI of a specific attribute. 

    index - The index of the attribute (zero-based). 
    uri - The attribute's Namespace URI, or the empty string for none. 

*org.xml.sax.helpers.AttributesImpl.setValue(int,String)*

public void setValue(
  int index,
  java.lang.String value)

Set the value of a specific attribute. 

    index - The index of the attribute (zero-based). 
    value - The attribute's value. 


