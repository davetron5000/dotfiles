*org.w3c.dom.html.HTMLButtonElement* *HTMLButtonElement* Push button.

public interface interface HTMLButtonElement

  implements |org.w3c.dom.html.HTMLElement|

|org.w3c.dom.html.HTMLButtonElement_Description|
|org.w3c.dom.html.HTMLButtonElement_Fields|
|org.w3c.dom.html.HTMLButtonElement_Constructors|
|org.w3c.dom.html.HTMLButtonElement_Methods|

================================================================================

*org.w3c.dom.html.HTMLButtonElement_Methods*
|org.w3c.dom.html.HTMLButtonElement.getAccessKey()|A single character access ke
|org.w3c.dom.html.HTMLButtonElement.getDisabled()|The control is unavailable in
|org.w3c.dom.html.HTMLButtonElement.getForm()|Returns the FORM element containi
|org.w3c.dom.html.HTMLButtonElement.getName()|Form control or object name when 
|org.w3c.dom.html.HTMLButtonElement.getTabIndex()|Index that represents the ele
|org.w3c.dom.html.HTMLButtonElement.getType()|The type of button.
|org.w3c.dom.html.HTMLButtonElement.getValue()|The current form control value.
|org.w3c.dom.html.HTMLButtonElement.setAccessKey(String)|
|org.w3c.dom.html.HTMLButtonElement.setDisabled(boolean)|
|org.w3c.dom.html.HTMLButtonElement.setName(String)|
|org.w3c.dom.html.HTMLButtonElement.setTabIndex(int)|
|org.w3c.dom.html.HTMLButtonElement.setValue(String)|

*org.w3c.dom.html.HTMLButtonElement_Description*

Push button. See the BUTTON element definition in HTML 4.0. See also the 
Document Object Model (DOM) Level 2 Specification. 


*org.w3c.dom.html.HTMLButtonElement.getAccessKey()*

public |java.lang.String| getAccessKey()

A single character access key to give access to the form control. See the 
accesskey attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLButtonElement.getDisabled()*

public boolean getDisabled()

The control is unavailable in this context. See the disabled attribute 
definition in HTML 4.0. 


*org.w3c.dom.html.HTMLButtonElement.getForm()*

public |org.w3c.dom.html.HTMLFormElement| getForm()

Returns the FORM element containing this control. Returns null if this control 
is not within the context of a form. 


*org.w3c.dom.html.HTMLButtonElement.getName()*

public |java.lang.String| getName()

Form control or object name when submitted with a form. See the name attribute 
definition in HTML 4.0. 


*org.w3c.dom.html.HTMLButtonElement.getTabIndex()*

public int getTabIndex()

Index that represents the element's position in the tabbing order. See the 
tabindex attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLButtonElement.getType()*

public |java.lang.String| getType()

The type of button. See the type attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLButtonElement.getValue()*

public |java.lang.String| getValue()

The current form control value. See the value attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLButtonElement.setAccessKey(String)*

public void setAccessKey(java.lang.String accessKey)




*org.w3c.dom.html.HTMLButtonElement.setDisabled(boolean)*

public void setDisabled(boolean disabled)




*org.w3c.dom.html.HTMLButtonElement.setName(String)*

public void setName(java.lang.String name)




*org.w3c.dom.html.HTMLButtonElement.setTabIndex(int)*

public void setTabIndex(int tabIndex)




*org.w3c.dom.html.HTMLButtonElement.setValue(String)*

public void setValue(java.lang.String value)





