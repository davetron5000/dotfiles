*javax.swing.plaf.basic.BasicTextAreaUI* *BasicTextAreaUI* Provides the look and feel for a plain text editor.

public class BasicTextAreaUI
  extends    |javax.swing.plaf.basic.BasicTextUI|

|javax.swing.plaf.basic.BasicTextAreaUI_Description|
|javax.swing.plaf.basic.BasicTextAreaUI_Fields|
|javax.swing.plaf.basic.BasicTextAreaUI_Constructors|
|javax.swing.plaf.basic.BasicTextAreaUI_Methods|

====================================================================================================================================================================================

*javax.swing.plaf.basic.BasicTextAreaUI_Constructors*
|javax.swing.plaf.basic.BasicTextAreaUI()|Constructs a new BasicTextAreaUI object.

*javax.swing.plaf.basic.BasicTextAreaUI_Methods*
|javax.swing.plaf.basic.BasicTextAreaUI.create(Element)|Creates the view for an element.
|javax.swing.plaf.basic.BasicTextAreaUI.createUI(JComponent)|Creates a UI for a JTextArea.
|javax.swing.plaf.basic.BasicTextAreaUI.getMinimumSize(JComponent)|The method is overridden to take into account caret width.
|javax.swing.plaf.basic.BasicTextAreaUI.getPreferredSize(JComponent)|The method is overridden to take into account caret width.
|javax.swing.plaf.basic.BasicTextAreaUI.getPropertyPrefix()|Fetches the name used as a key to look up properties through the  UIManager.
|javax.swing.plaf.basic.BasicTextAreaUI.installDefaults()|
|javax.swing.plaf.basic.BasicTextAreaUI.propertyChange(PropertyChangeEvent)|This method gets called when a bound property is changed  on the associated JTextComponent.

*javax.swing.plaf.basic.BasicTextAreaUI_Description*

Provides the look and feel for a plain text editor. In this implementation the default UI is extended to act as a simple view factory. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*javax.swing.plaf.basic.BasicTextAreaUI()*

public BasicTextAreaUI()

Constructs a new BasicTextAreaUI object. 


*javax.swing.plaf.basic.BasicTextAreaUI.create(Element)*

public |javax.swing.text.View| create(javax.swing.text.Element elem)

Creates the view for an element. Returns a WrappedPlainView or PlainView. 


    elem - the element 

    Returns: 

*javax.swing.plaf.basic.BasicTextAreaUI.createUI(JComponent)*

public static |javax.swing.plaf.ComponentUI| createUI(javax.swing.JComponent ta)

Creates a UI for a JTextArea. 


    ta - a text area 

    Returns: 

*javax.swing.plaf.basic.BasicTextAreaUI.getMinimumSize(JComponent)*

public |java.awt.Dimension| getMinimumSize(javax.swing.JComponent c)

The method is overridden to take into account caret width. 


    c - the editor component 

    Returns: the minimum size 

*javax.swing.plaf.basic.BasicTextAreaUI.getPreferredSize(JComponent)*

public |java.awt.Dimension| getPreferredSize(javax.swing.JComponent c)

The method is overridden to take into account caret width. 


    c - the editor component 

    Returns: the preferred size 

*javax.swing.plaf.basic.BasicTextAreaUI.getPropertyPrefix()*

protected |java.lang.String| getPropertyPrefix()

Fetches the name used as a key to look up properties through the UIManager. This is used as a prefix to all the standard text properties. 



    Returns: the name ("TextArea") 

*javax.swing.plaf.basic.BasicTextAreaUI.installDefaults()*

protected void installDefaults()





*javax.swing.plaf.basic.BasicTextAreaUI.propertyChange(PropertyChangeEvent)*

protected void propertyChange(java.beans.PropertyChangeEvent evt)

This method gets called when a bound property is changed on the associated JTextComponent. This is a hook which UI implementations may change to reflect how the UI displays bound 
properties of JTextComponent subclasses. This is implemented to rebuild the View when the WrapLine or the WrapStyleWord property changes. 


    evt - the property change event 


