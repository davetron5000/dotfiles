*org.omg.CORBA.AnyHolder* *AnyHolder* The Holder for Any.

public final class AnyHolder
  extends    |java.lang.Object|
  implements |org.omg.CORBA.portable.Streamable|

|org.omg.CORBA.AnyHolder_Description|
|org.omg.CORBA.AnyHolder_Fields|
|org.omg.CORBA.AnyHolder_Constructors|
|org.omg.CORBA.AnyHolder_Methods|

================================================================================

*org.omg.CORBA.AnyHolder_Fields*
|org.omg.CORBA.Any_org.omg.CORBA.AnyHolder.value|

*org.omg.CORBA.AnyHolder_Constructors*
|org.omg.CORBA.AnyHolder()|Constructs a new AnyHolder object with its  value fi
|org.omg.CORBA.AnyHolder(Any)|Constructs a new AnyHolder object for the given  

*org.omg.CORBA.AnyHolder_Methods*
|org.omg.CORBA.AnyHolder._read(InputStream)|Reads from input and initalizes the
|org.omg.CORBA.AnyHolder._type()|Returns the TypeCode object corresponding to t
|org.omg.CORBA.AnyHolder._write(OutputStream)|Marshals to output the value in  

*org.omg.CORBA.AnyHolder_Description*

The Holder for Any. For more information on Holder files, see "Generated Files: 
Holder Files". A Holder class for Any objects that is used to store "out" and 
"inout" parameters in IDL methods. If an IDL method signature has an IDL any as 
an "out" or "inout" parameter, the programmer must pass an instance of 
AnyHolder as the corresponding parameter in the method invocation; for "inout" 
parameters, the programmer must also fill the "in" value to be sent to the 
server. Before the method invocation returns, the ORB will fill in the value 
corresponding to the "out" value returned from the server. 

If myAnyHolder is an instance of AnyHolder, the value stored in its value field 
can be accessed with myAnyHolder.value. 


*org.omg.CORBA.Any_org.omg.CORBA.AnyHolder.value*

The Holder for Any. For more information on Holder files, see "Generated Files: 
Holder Files". A Holder class for Any objects that is used to store "out" and 
"inout" parameters in IDL methods. If an IDL method signature has an IDL any as 
an "out" or "inout" parameter, the programmer must pass an instance of 
AnyHolder as the corresponding parameter in the method invocation; for "inout" 
parameters, the programmer must also fill the "in" value to be sent to the 
server. Before the method invocation returns, the ORB will fill in the value 
corresponding to the "out" value returned from the server. 

If myAnyHolder is an instance of AnyHolder, the value stored in its value field 
can be accessed with myAnyHolder.value. 



*org.omg.CORBA.AnyHolder()*

public AnyHolder()

Constructs a new AnyHolder object with its value field initialized to null. 


*org.omg.CORBA.AnyHolder(Any)*

public AnyHolder(org.omg.CORBA.Any initial)

Constructs a new AnyHolder object for the given Any object. 

    initial - the Any object with which to initialize the value field of the new AnyHolder 
       object 

*org.omg.CORBA.AnyHolder._read(InputStream)*

public void _read(org.omg.CORBA.portable.InputStream input)

Reads from input and initalizes the value in the Holder with the unmarshalled 
data. 

    input - the InputStream containing CDR formatted data from the wire. 

*org.omg.CORBA.AnyHolder._type()*

public |org.omg.CORBA.TypeCode| _type()

Returns the TypeCode object corresponding to the value held in this AnyHolder 
object. 


    Returns: the TypeCode of the value held in this AnyHolder object 
*org.omg.CORBA.AnyHolder._write(OutputStream)*

public void _write(org.omg.CORBA.portable.OutputStream output)

Marshals to output the value in this AnyHolder object. 

    output - the OutputStream which will contain the CDR formatted data. 


