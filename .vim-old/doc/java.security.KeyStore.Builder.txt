*java.security.KeyStore.Builder* *KeyStore.Builder* A description of a to-be-instantiated KeyStore object.

public abstract static class KeyStore.Builder
  extends    |java.lang.Object|

|java.security.KeyStore.Builder_Description|
|java.security.KeyStore.Builder_Fields|
|java.security.KeyStore.Builder_Constructors|
|java.security.KeyStore.Builder_Methods|

====================================================================================================================================================================================

*java.security.KeyStore.Builder_Constructors*
|java.security.KeyStore.Builder()|Construct a new Builder.

*java.security.KeyStore.Builder_Methods*
|java.security.KeyStore.Builder.getKeyStore()|Returns the KeyStore described by this object.
|java.security.KeyStore.Builder.getProtectionParameter(String)|Returns the ProtectionParameters that should be used to obtain  theKeyStore.Entry Entrywith the given alias.
|java.security.KeyStore.Builder.newInstance(KeyStore,KeyStore.ProtectionParameter)|Returns a new Builder that encapsulates the given KeyStore.
|java.security.KeyStore.Builder.newInstance(String,Provider,File,KeyStore.ProtectionParameter)|Returns a new Builder object.
|java.security.KeyStore.Builder.newInstance(String,Provider,KeyStore.ProtectionParameter)|Returns a new Builder object.

*java.security.KeyStore.Builder_Description*

A description of a to-be-instantiated KeyStore object. 

An instance of this class encapsulates the information needed to instantiate and initialize a KeyStore object. That process is triggered when the 
(|java.security.KeyStore.Builder|) method is called. 

This makes it possible to decouple configuration from KeyStore object creation and e.g. delay a password prompt until it is needed. 



*java.security.KeyStore.Builder()*

protected KeyStore.Builder()

Construct a new Builder. 


*java.security.KeyStore.Builder.getKeyStore()*

public abstract |java.security.KeyStore| getKeyStore()
  throws |java.security.KeyStoreException|
         
Returns the KeyStore described by this object. 



*java.security.KeyStore.Builder.getProtectionParameter(String)*

public abstract |java.security.KeyStore.ProtectionParameter| getProtectionParameter(java.lang.String alias)
  throws |java.security.KeyStoreException|
         
Returns the ProtectionParameters that should be used to obtain the Entry(|java.security.KeyStore.Entry|) with the given alias. The getKeyStore method must be invoked before this 
method may be called. 


    alias - the alias of the KeyStore entry 

    Returns: the ProtectionParameters that should be used to obtain the {@link KeyStore.Entry Entry} with the given alias. 

*java.security.KeyStore.Builder.newInstance(KeyStore,KeyStore.ProtectionParameter)*

public static |java.security.KeyStore.Builder| newInstance(
  java.security.KeyStore keyStore,
  java.security.KeyStore.ProtectionParameter protectionParameter)

Returns a new Builder that encapsulates the given KeyStore. The (|java.security.KeyStore.Builder|) method of the returned object will return keyStore, the 
getProtectionParameter()(|java.security.KeyStore.Builder|) method will return protectionParameters. 

This is useful if an existing KeyStore object needs to be used with Builder-based APIs. 


    keyStore - the KeyStore to be encapsulated 
    protectionParameter - the ProtectionParameter used to protect the KeyStore entries 

    Returns: a new Builder object 

*java.security.KeyStore.Builder.newInstance(String,Provider,File,KeyStore.ProtectionParameter)*

public static |java.security.KeyStore.Builder| newInstance(
  java.lang.String type,
  java.security.Provider provider,
  java.io.File file,
  java.security.KeyStore.ProtectionParameter protection)

Returns a new Builder object. 

The first call to the (|java.security.KeyStore.Builder|) method on the returned builder will create a KeyStore of type type and call its load()(|java.security.KeyStore|) method. 
The inputStream argument is constructed from file. If protection is a PasswordProtection, the password is obtained by calling the getPassword method. Otherwise, if protection is a 
CallbackHandlerProtection, the password is obtained by invoking the CallbackHandler. 

Subsequent calls to (|java.security.KeyStore.Builder|) return the same object as the initial call. If the initial call to failed with a KeyStoreException, subsequent calls also 
throw a KeyStoreException. 

The KeyStore is instantiated from provider if non-null. Otherwise, all installed providers are searched. 

Calls to getProtectionParameter()(|java.security.KeyStore.Builder|) will return a PasswordProtection(|java.security.KeyStore.PasswordProtection|) object encapsulating the password 
that was used to invoke the load method. 

Note that the (|java.security.KeyStore.Builder|) method is executed within the (|java.security.AccessControlContext|) of the code invoking this method. 


    type - the type of KeyStore to be constructed 
    provider - the provider from which the KeyStore is to be instantiated (or null) 
    file - the File that contains the KeyStore data 
    protection - the ProtectionParameter securing the KeyStore data 

    Returns: a new Builder object 

*java.security.KeyStore.Builder.newInstance(String,Provider,KeyStore.ProtectionParameter)*

public static |java.security.KeyStore.Builder| newInstance(
  java.lang.String type,
  java.security.Provider provider,
  java.security.KeyStore.ProtectionParameter protection)

Returns a new Builder object. 

Each call to the (|java.security.KeyStore.Builder|) method on the returned builder will return a new KeyStore object of type type. Its load()(|java.security.KeyStore|) method is 
invoked using a LoadStoreParameter that encapsulates protection. 

The KeyStore is instantiated from provider if non-null. Otherwise, all installed providers are searched. 

Calls to getProtectionParameter()(|java.security.KeyStore.Builder|) will return protection. 

Note that the (|java.security.KeyStore.Builder|) method is executed within the (|java.security.AccessControlContext|) of the code invoking this method. 


    type - the type of KeyStore to be constructed 
    provider - the provider from which the KeyStore is to be instantiated (or null) 
    protection - the ProtectionParameter securing the Keystore 

    Returns: a new Builder object 


