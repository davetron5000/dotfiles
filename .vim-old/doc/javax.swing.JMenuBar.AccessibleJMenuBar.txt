*javax.swing.JMenuBar.AccessibleJMenuBar* *JMenuBar.AccessibleJMenuBar* This class implements accessibility support for the 
 JMenuBar class.

protected class JMenuBar.AccessibleJMenuBar
  extends    |javax.swing.JComponent.AccessibleJComponent|
  implements |javax.accessibility.AccessibleSelection|

|javax.swing.JMenuBar.AccessibleJMenuBar_Description|
|javax.swing.JMenuBar.AccessibleJMenuBar_Fields|
|javax.swing.JMenuBar.AccessibleJMenuBar_Constructors|
|javax.swing.JMenuBar.AccessibleJMenuBar_Methods|

====================================================================================================================================================================================

*javax.swing.JMenuBar.AccessibleJMenuBar_Constructors*
|javax.swing.JMenuBar.AccessibleJMenuBar()|

*javax.swing.JMenuBar.AccessibleJMenuBar_Methods*
|javax.swing.JMenuBar.AccessibleJMenuBar.addAccessibleSelection(int)|Selects the nth menu in the menu bar, forcing it to  pop up.
|javax.swing.JMenuBar.AccessibleJMenuBar.clearAccessibleSelection()|Clears the selection in the object, so that nothing in the  object is selected.
|javax.swing.JMenuBar.AccessibleJMenuBar.getAccessibleRole()|Get the role of this object.
|javax.swing.JMenuBar.AccessibleJMenuBar.getAccessibleSelection()|Get the AccessibleSelection associated with this object.
|javax.swing.JMenuBar.AccessibleJMenuBar.getAccessibleSelection(int)|Returns the currently selected menu if one is selected,   otherwise null.
|javax.swing.JMenuBar.AccessibleJMenuBar.getAccessibleSelectionCount()|Returns 1 if a menu is currently selected in this menu bar.
|javax.swing.JMenuBar.AccessibleJMenuBar.getAccessibleStateSet()|Get the accessible state set of this object.
|javax.swing.JMenuBar.AccessibleJMenuBar.isAccessibleChildSelected(int)|Returns true if the current child of this object is selected.
|javax.swing.JMenuBar.AccessibleJMenuBar.removeAccessibleSelection(int)|Removes the nth selected item in the object from the object's  selection.
|javax.swing.JMenuBar.AccessibleJMenuBar.selectAllAccessibleSelection()|Normally causes every selected item in the object to be selected  if the object supports multiple selection

*javax.swing.JMenuBar.AccessibleJMenuBar_Description*

This class implements accessibility support for the JMenuBar class. It provides an implementation of the Java Accessibility API appropriate to menu bar user-interface elements. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*javax.swing.JMenuBar.AccessibleJMenuBar()*

protected JMenuBar.AccessibleJMenuBar()




*javax.swing.JMenuBar.AccessibleJMenuBar.addAccessibleSelection(int)*

public void addAccessibleSelection(int i)

Selects the nth menu in the menu bar, forcing it to pop up. If another menu is popped up, this will force it to close. If the nth menu is already selected, this method has no 
effect. 


    i - the zero-based index of selectable items 

*javax.swing.JMenuBar.AccessibleJMenuBar.clearAccessibleSelection()*

public void clearAccessibleSelection()

Clears the selection in the object, so that nothing in the object is selected. This will close any open menu. 



*javax.swing.JMenuBar.AccessibleJMenuBar.getAccessibleRole()*

public |javax.accessibility.AccessibleRole| getAccessibleRole()

Get the role of this object. 



    Returns: an instance of AccessibleRole describing the role of the object 

*javax.swing.JMenuBar.AccessibleJMenuBar.getAccessibleSelection()*

public |javax.accessibility.AccessibleSelection| getAccessibleSelection()

Get the AccessibleSelection associated with this object. In the implementation of the Java Accessibility API for this class, return this object, which is responsible for 
implementing the AccessibleSelection interface on behalf of itself. 



    Returns: 

*javax.swing.JMenuBar.AccessibleJMenuBar.getAccessibleSelection(int)*

public |javax.accessibility.Accessible| getAccessibleSelection(int i)

Returns the currently selected menu if one is selected, otherwise null. 



*javax.swing.JMenuBar.AccessibleJMenuBar.getAccessibleSelectionCount()*

public int getAccessibleSelectionCount()

Returns 1 if a menu is currently selected in this menu bar. 



    Returns: 1 if a menu is currently selected, else 0 

*javax.swing.JMenuBar.AccessibleJMenuBar.getAccessibleStateSet()*

public |javax.accessibility.AccessibleStateSet| getAccessibleStateSet()

Get the accessible state set of this object. 



    Returns: an instance of AccessibleState containing the current state of the object 

*javax.swing.JMenuBar.AccessibleJMenuBar.isAccessibleChildSelected(int)*

public boolean isAccessibleChildSelected(int i)

Returns true if the current child of this object is selected. 


    i - the zero-based index of the child in this Accessible object. 

*javax.swing.JMenuBar.AccessibleJMenuBar.removeAccessibleSelection(int)*

public void removeAccessibleSelection(int i)

Removes the nth selected item in the object from the object's selection. If the nth item isn't currently selected, this method has no effect. Otherwise, it closes the popup menu. 


    i - the zero-based index of selectable items 

*javax.swing.JMenuBar.AccessibleJMenuBar.selectAllAccessibleSelection()*

public void selectAllAccessibleSelection()

Normally causes every selected item in the object to be selected if the object supports multiple selections. This method makes no sense in a menu bar, and so does nothing. 




