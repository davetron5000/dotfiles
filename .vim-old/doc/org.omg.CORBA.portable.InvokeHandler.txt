*org.omg.CORBA.portable.InvokeHandler* *InvokeHandler* This interface provides a

public interface interface InvokeHandler


|org.omg.CORBA.portable.InvokeHandler_Description|
|org.omg.CORBA.portable.InvokeHandler_Fields|
|org.omg.CORBA.portable.InvokeHandler_Constructors|
|org.omg.CORBA.portable.InvokeHandler_Methods|

================================================================================

*org.omg.CORBA.portable.InvokeHandler_Methods*
|org.omg.CORBA.portable.InvokeHandler._invoke(String,InputStream,ResponseHandler)|

*org.omg.CORBA.portable.InvokeHandler_Description*

This interface provides a dispatching mechanism for an incoming call. It is 
invoked by the ORB to dispatch a request to a servant. 


*org.omg.CORBA.portable.InvokeHandler._invoke(String,InputStream,ResponseHandler)*

public |org.omg.CORBA.portable.OutputStream| _invoke(
  java.lang.String method,
  org.omg.CORBA.portable.InputStream input,
  org.omg.CORBA.portable.ResponseHandler handler)
  throws |org.omg.CORBA.SystemException|
         
Invoked by the ORB to dispatch a request to the servant. 

ORB passes the method name, an InputStream containing the marshalled arguments, 
and a ResponseHandler which the servant uses to construct a proper reply. 

Only CORBA SystemException may be thrown by this method. 

The method must return an OutputStream created by the ResponseHandler which 
contains the marshalled reply. 

A servant must not retain a reference to the ResponseHandler beyond the 
lifetime of a method invocation. 

Servant behaviour is defined as follows: 1. Determine correct method, and 
unmarshal parameters from InputStream. 2. Invoke method implementation. 3. If 
no user exception, create a normal reply using ResponseHandler. 4. If user 
exception occurred, create exception reply using ResponseHandler. 5. Marshal 
reply into OutputStream returned by ResponseHandler. 6. Return OutputStream to 
ORB. 

    method - The method name. 
    input - The InputStream containing the marshalled arguments. 
    handler - The ResponseHandler which the servant uses to construct a proper reply 

    Returns: The OutputStream created by the ResponseHandler which contains the marshalled 
             reply 

