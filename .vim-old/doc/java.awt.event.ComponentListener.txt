*java.awt.event.ComponentListener* *ComponentListener* The listener interface for receiving component events.

public interface interface ComponentListener

  implements |java.util.EventListener|

|java.awt.event.ComponentListener_Description|
|java.awt.event.ComponentListener_Fields|
|java.awt.event.ComponentListener_Constructors|
|java.awt.event.ComponentListener_Methods|

====================================================================================================================================================================================

*java.awt.event.ComponentListener_Methods*
|java.awt.event.ComponentListener.componentHidden(ComponentEvent)|Invoked when the component has been made invisible.
|java.awt.event.ComponentListener.componentMoved(ComponentEvent)|Invoked when the component's position changes.
|java.awt.event.ComponentListener.componentResized(ComponentEvent)|Invoked when the component's size changes.
|java.awt.event.ComponentListener.componentShown(ComponentEvent)|Invoked when the component has been made visible.

*java.awt.event.ComponentListener_Description*

The listener interface for receiving component events. The class that is interested in processing a component event either implements this interface (and all the methods it 
contains) or extends the abstract ComponentAdapter class (overriding only the methods of interest). The listener object created from that class is then registered with a component 
using the component's addComponentListener method. When the component's size, location, or visibility changes, the relevant method in the listener object is invoked, and the 
ComponentEvent is passed to it. 

Component events are provided for notification purposes ONLY; The AWT will automatically handle component moves and resizes internally so that GUI layout works properly regardless 
of whether a program registers a ComponentListener or not. 



*java.awt.event.ComponentListener.componentHidden(ComponentEvent)*

public void componentHidden(java.awt.event.ComponentEvent e)

Invoked when the component has been made invisible. 



*java.awt.event.ComponentListener.componentMoved(ComponentEvent)*

public void componentMoved(java.awt.event.ComponentEvent e)

Invoked when the component's position changes. 



*java.awt.event.ComponentListener.componentResized(ComponentEvent)*

public void componentResized(java.awt.event.ComponentEvent e)

Invoked when the component's size changes. 



*java.awt.event.ComponentListener.componentShown(ComponentEvent)*

public void componentShown(java.awt.event.ComponentEvent e)

Invoked when the component has been made visible. 




