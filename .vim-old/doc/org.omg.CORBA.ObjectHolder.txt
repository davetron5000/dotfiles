*org.omg.CORBA.ObjectHolder* *ObjectHolder* The Holder for Object.

public final class ObjectHolder
  extends    |java.lang.Object|
  implements |org.omg.CORBA.portable.Streamable|

|org.omg.CORBA.ObjectHolder_Description|
|org.omg.CORBA.ObjectHolder_Fields|
|org.omg.CORBA.ObjectHolder_Constructors|
|org.omg.CORBA.ObjectHolder_Methods|

================================================================================

*org.omg.CORBA.ObjectHolder_Fields*
|org.omg.CORBA.Object_org.omg.CORBA.ObjectHolder.value|

*org.omg.CORBA.ObjectHolder_Constructors*
|org.omg.CORBA.ObjectHolder()|Constructs a new ObjectHolder object with its  va
|org.omg.CORBA.ObjectHolder(Object)|Constructs a new ObjectHolder object with i

*org.omg.CORBA.ObjectHolder_Methods*
|org.omg.CORBA.ObjectHolder._read(InputStream)|Reads from input and initalizes 
|org.omg.CORBA.ObjectHolder._type()|Returns the TypeCode corresponding to the v
|org.omg.CORBA.ObjectHolder._write(OutputStream)|Marshals to output the value i

*org.omg.CORBA.ObjectHolder_Description*

The Holder for Object. For more information on Holder files, see "Generated 
Files: Holder Files". A Holder class for a CORBA object reference (a value of 
type org.omg.CORBA.Object). It is usually used to store "out" and "inout" 
parameters in IDL methods. If an IDL method signature has a CORBA Object 
reference as an "out" or "inout" parameter, the programmer must pass an 
instance of ObjectHolder as the corresponding parameter in the method 
invocation; for "inout" parameters, the programmer must also fill the "in" 
value to be sent to the server. Before the method invocation returns, the ORB 
will fill in the value corresponding to the "out" value returned from the 
server. 

If myObjectHolder is an instance of ObjectHolder, the value stored in its value 
field can be accessed with myObjectHolder.value. 


*org.omg.CORBA.Object_org.omg.CORBA.ObjectHolder.value*

The Holder for Object. For more information on Holder files, see "Generated 
Files: Holder Files". A Holder class for a CORBA object reference (a value of 
type org.omg.CORBA.Object). It is usually used to store "out" and "inout" 
parameters in IDL methods. If an IDL method signature has a CORBA Object 
reference as an "out" or "inout" parameter, the programmer must pass an 
instance of ObjectHolder as the corresponding parameter in the method 
invocation; for "inout" parameters, the programmer must also fill the "in" 
value to be sent to the server. Before the method invocation returns, the ORB 
will fill in the value corresponding to the "out" value returned from the 
server. 

If myObjectHolder is an instance of ObjectHolder, the value stored in its value 
field can be accessed with myObjectHolder.value. 



*org.omg.CORBA.ObjectHolder()*

public ObjectHolder()

Constructs a new ObjectHolder object with its value field initialized to null. 


*org.omg.CORBA.ObjectHolder(Object)*

public ObjectHolder(org.omg.CORBA.Object initial)

Constructs a new ObjectHolder object with its value field initialized to the 
given Object. 

    initial - the Object with which to initialize the value field of the newly-created 
       ObjectHolder object 

*org.omg.CORBA.ObjectHolder._read(InputStream)*

public void _read(org.omg.CORBA.portable.InputStream input)

Reads from input and initalizes the value in this ObjectHolder object with the 
unmarshalled data. 

    input - the InputStream containing CDR formatted data from the wire. 

*org.omg.CORBA.ObjectHolder._type()*

public |org.omg.CORBA.TypeCode| _type()

Returns the TypeCode corresponding to the value held in this ObjectHolder 
object 


    Returns: the TypeCode of the value held in this ObjectHolder object 
*org.omg.CORBA.ObjectHolder._write(OutputStream)*

public void _write(org.omg.CORBA.portable.OutputStream output)

Marshals to output the value in this ObjectHolder object. 

    output - the OutputStream which will contain the CDR formatted data. 


