*java.math.MathContext* *MathContext* Immutable objects which encapsulate the context settings which
 describe certain rules for numerical operators, such as those
 implemented by 

public final class MathContext
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|java.math.MathContext_Description|
|java.math.MathContext_Fields|
|java.math.MathContext_Constructors|
|java.math.MathContext_Methods|

====================================================================================================================================================================================

*java.math.MathContext_Fields*
|java.math.MathContext_java.math.MathContext.DECIMAL128|
|java.math.MathContext_java.math.MathContext.DECIMAL32|
|java.math.MathContext_java.math.MathContext.DECIMAL64|
|java.math.MathContext_java.math.MathContext.UNLIMITED|

*java.math.MathContext_Constructors*
|java.math.MathContext(int)|Constructs a new MathContext with the specified  precision and theRoundingMode#HALF_UP HALF_UProunding  mode.
|java.math.MathContext(int,RoundingMode)|Constructs a new MathContext with a specified  precision and rounding mode.
|java.math.MathContext(String)|Constructs a new MathContext from a string.

*java.math.MathContext_Methods*
|java.math.MathContext.equals(Object)|Compares this MathContext with the specified  Object for equality.
|java.math.MathContext.getPrecision()|Returns the precision setting.
|java.math.MathContext.getRoundingMode()|Returns the roundingMode setting.
|java.math.MathContext.hashCode()|Returns the hash code for this MathContext.
|java.math.MathContext.toString()|Returns the string representation of this MathContext.

*java.math.MathContext_Description*

Immutable objects which encapsulate the context settings which describe certain rules for numerical operators, such as those implemented by the (|java.math.BigDecimal|) class. 

The base-independent settings are: 

precision: the number of digits to be used for an operation; results are rounded to this precision 

roundingMode: a (|java.math.RoundingMode|) object which specifies the algorithm to be used for rounding. 



*java.math.MathContext_java.math.MathContext.DECIMAL128*

A MathContext object with a precision setting matching the IEEE 754R Decimal128 format, 34 digits, and a rounding mode of HALF_EVEN(|java.math.RoundingMode|) , the IEEE 754R 
default. 


*java.math.MathContext_java.math.MathContext.DECIMAL32*

A MathContext object with a precision setting matching the IEEE 754R Decimal32 format, 7 digits, and a rounding mode of HALF_EVEN(|java.math.RoundingMode|) , the IEEE 754R 
default. 


*java.math.MathContext_java.math.MathContext.DECIMAL64*

A MathContext object with a precision setting matching the IEEE 754R Decimal64 format, 16 digits, and a rounding mode of HALF_EVEN(|java.math.RoundingMode|) , the IEEE 754R 
default. 


*java.math.MathContext_java.math.MathContext.UNLIMITED*

A MathContext object whose settings have the values required for unlimited precision arithmetic. The values of the settings are: 

precision=0 roundingMode=HALF_UP 



*java.math.MathContext(int)*

public MathContext(int setPrecision)

Constructs a new MathContext with the specified precision and the HALF_UP(|java.math.RoundingMode|) rounding mode. 

    setPrecision - The non-negative int precision setting. 

*java.math.MathContext(int,RoundingMode)*

public MathContext(
  int setPrecision,
  java.math.RoundingMode setRoundingMode)

Constructs a new MathContext with a specified precision and rounding mode. 

    setPrecision - The non-negative int precision setting. 
    setRoundingMode - The rounding mode to use. 

*java.math.MathContext(String)*

public MathContext(java.lang.String val)

Constructs a new MathContext from a string. 

The string must be in the same format as that produced by the (|java.math.MathContext|) method. 

An IllegalArgumentException is thrown if the precision section of the string is out of range (< 0) or the string is not in the format created by the (|java.math.MathContext|) 
method. 

    val - The string to be parsed 

*java.math.MathContext.equals(Object)*

public boolean equals(java.lang.Object x)

Compares this MathContext with the specified Object for equality. 


    x - Object to which this MathContext is to be compared. 

    Returns: true if and only if the specified Object is a MathContext object which has exactly the same settings as this object. 

*java.math.MathContext.getPrecision()*

public int getPrecision()

Returns the precision setting. This value is always non-negative. 



    Returns: an int which is the value of the precision setting 

*java.math.MathContext.getRoundingMode()*

public |java.math.RoundingMode| getRoundingMode()

Returns the roundingMode setting. This will be one of (|java.math.RoundingMode|) , (|java.math.RoundingMode|) , (|java.math.RoundingMode|) , (|java.math.RoundingMode|) , 
(|java.math.RoundingMode|) , (|java.math.RoundingMode|) , (|java.math.RoundingMode|) , or (|java.math.RoundingMode|) . 



    Returns: a RoundingMode object which is the value of the roundingMode setting 

*java.math.MathContext.hashCode()*

public int hashCode()

Returns the hash code for this MathContext. 



    Returns: hash code for this MathContext 

*java.math.MathContext.toString()*

public |java.lang.String| toString()

Returns the string representation of this MathContext. The String returned represents the settings of the MathContext object as two space-delimited words (separated by a single 
space character, 'u0020', and with no leading or trailing white space), as follows: 

The string precision=, immediately followed by the value of the precision setting as a numeric string as if generated by the Integer.toString(|java.lang.Integer|) method. 

The string roundingMode=, immediately followed by the value of the roundingMode setting as a word. This word will be the same as the name of the corresponding public constant in 
the (|java.math.RoundingMode|) enum. 

For example: 

precision=9 roundingMode=HALF_UP 

Additional words may be appended to the result of toString in the future if more properties are added to this class. 



    Returns: a String representing the context settings. 


