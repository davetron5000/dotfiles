*javax.management.openmbean.CompositeType* *CompositeType* The CompositeType cla

public class CompositeType
  extends    |javax.management.openmbean.OpenType|
  implements |java.io.Serializable|

|javax.management.openmbean.CompositeType_Description|
|javax.management.openmbean.CompositeType_Fields|
|javax.management.openmbean.CompositeType_Constructors|
|javax.management.openmbean.CompositeType_Methods|

================================================================================

*javax.management.openmbean.CompositeType_Constructors*
|javax.management.openmbean.CompositeType(String,String,String[],String[],OpenType[])|

*javax.management.openmbean.CompositeType_Methods*
|javax.management.openmbean.CompositeType.containsKey(String)|Returns true if t
|javax.management.openmbean.CompositeType.equals(Object)|Compares the specified
|javax.management.openmbean.CompositeType.getDescription(String)|Returns the de
|javax.management.openmbean.CompositeType.getType(String)|Returns the open type
|javax.management.openmbean.CompositeType.hashCode()|Returns the hash code valu
|javax.management.openmbean.CompositeType.isValue(Object)|Tests whether obj is 
|javax.management.openmbean.CompositeType.keySet()|Returns an unmodifiable Set 
|javax.management.openmbean.CompositeType.toString()|Returns a string represent

*javax.management.openmbean.CompositeType_Description*

The CompositeType class is the open type class whose instances describe the 
types of <code>CompositeData</code>(|javax.management.openmbean.CompositeData|) 
values. 


*javax.management.openmbean.CompositeType(String,String,String[],String[],OpenType[])*

public CompositeType(
  java.lang.String typeName,
  java.lang.String description,
  java.lang.String[] itemNames,
  java.lang.String[] itemDescriptions,
  javax.management.openmbean.OpenType[] itemTypes)
  throws |javax.management.openmbean.OpenDataException|
         
Constructs a CompositeType instance, checking for the validity of the given 
parameters. The validity constraints are described below for each parameter. 

Note that the contents of the three array parameters itemNames, 
itemDescriptions and itemTypes are internally copied so that any subsequent 
modification of these arrays by the caller of this constructor has no impact on 
the constructed CompositeType instance. 

The Java class name of composite data values this composite type represents (ie 
the class name returned by the 
getClassName(|javax.management.openmbean.OpenType|) method) is set to the 
string value returned by CompositeData.class.getName(). 

    typeName - The name given to the composite type this instance represents; cannot be a null 
       or empty string. 
    description - The human readable description of the composite type this instance represents; 
       cannot be a null or empty string. 
    itemNames - The names of the items contained in the composite data values described by this 
       CompositeType instance; cannot be null and should contain at least one 
       element; no element can be a null or empty string. Note that the order 
       in which the item names are given is not important to differentiate a 
       CompositeType instance from another; the item names are internally 
       stored sorted in ascending alphanumeric order. 
    itemDescriptions - The descriptions, in the same order as itemNames, of the items contained in the 
       composite data values described by this CompositeType instance; should 
       be of the same size as itemNames; no element can be a null or empty 
       string. 
    itemTypes - The open type instances, in the same order as itemNames, describing the items 
       contained in the composite data values described by this CompositeType 
       instance; should be of the same size as itemNames; no element can be 
       null. 

*javax.management.openmbean.CompositeType.containsKey(String)*

public boolean containsKey(java.lang.String itemName)

Returns true if this CompositeType instance defines an item whose name is 
itemName. 

    itemName - the name of the item. 

    Returns: true if an item of this name is present. 
*javax.management.openmbean.CompositeType.equals(Object)*

public boolean equals(java.lang.Object obj)

Compares the specified obj parameter with this CompositeType instance for 
equality. 

Two CompositeType instances are equal if and only if all of the following 
statements are true: 

their type names are equal their items' names and types are equal 



    obj - the object to be compared for equality with this CompositeType instance; if obj 
       is null, equals returns false. 

    Returns: true if the specified object is equal to this CompositeType instance. 
*javax.management.openmbean.CompositeType.getDescription(String)*

public |java.lang.String| getDescription(java.lang.String itemName)

Returns the description of the item whose name is itemName, or null if this 
CompositeType instance does not define any item whose name is itemName. 

    itemName - the name of the item. 

    Returns: the description. 
*javax.management.openmbean.CompositeType.getType(String)*

public |javax.management.openmbean.OpenType| getType(java.lang.String itemName)

Returns the open type of the item whose name is itemName, or null if this 
CompositeType instance does not define any item whose name is itemName. 

    itemName - the name of the time. 

    Returns: 
*javax.management.openmbean.CompositeType.hashCode()*

public int hashCode()

Returns the hash code value for this CompositeType instance. 

The hash code of a CompositeType instance is the sum of the hash codes of all 
elements of information used in equals comparisons (ie: name, items names, 
items types). This ensures that t1.equals(t2) implies that 
t1.hashCode()==t2.hashCode() for any two CompositeType instances t1 and t2, as 
required by the general contract of the method 
Object.hashCode()(|java.lang.Object|) . 

As CompositeType instances are immutable, the hash code for this instance is 
calculated once, on the first call to hashCode, and then the same value is 
returned for subsequent calls. 


    Returns: the hash code value for this CompositeType instance 
*javax.management.openmbean.CompositeType.isValue(Object)*

public boolean isValue(java.lang.Object obj)

Tests whether obj is a value which could be described by this CompositeType 
instance. 

If obj is null or is not an instance of 
javax.management.openmbean.CompositeData, isValue returns false. If obj is an 
instance of javax.management.openmbean.CompositeData, its composite type is 
tested for equality with this CompositeType instance, and isValue returns true 
if and only if <code>equals</code>(|javax.management.openmbean.CompositeType|) 
returns true. 

    obj - the value whose open type is to be tested for equality with this CompositeType 
       instance. 

    Returns: true if obj is a value for this composite type, false otherwise. 
*javax.management.openmbean.CompositeType.keySet()*

public |java.util.Set| keySet()

Returns an unmodifiable Set view of all the item names defined by this 
CompositeType instance. The set's iterator will return the item names in 
ascending order. 


    Returns: a {@link Set} of {@link String}. 
*javax.management.openmbean.CompositeType.toString()*

public |java.lang.String| toString()

Returns a string representation of this CompositeType instance. 

The string representation consists of the name of this class (ie 
javax.management.openmbean.CompositeType), the type name for this instance, and 
the list of the items names and types string representation of this instance. 

As CompositeType instances are immutable, the string representation for this 
instance is calculated once, on the first call to toString, and then the same 
value is returned for subsequent calls. 


    Returns: a string representation of this CompositeType instance 

