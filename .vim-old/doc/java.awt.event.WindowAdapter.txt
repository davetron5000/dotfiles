*java.awt.event.WindowAdapter* *WindowAdapter* An abstract adapter class for receiving window events.

public abstract class WindowAdapter
  extends    |java.lang.Object|
  implements |java.awt.event.WindowListener|
             |java.awt.event.WindowStateListener|
             |java.awt.event.WindowFocusListener|

|java.awt.event.WindowAdapter_Description|
|java.awt.event.WindowAdapter_Fields|
|java.awt.event.WindowAdapter_Constructors|
|java.awt.event.WindowAdapter_Methods|

====================================================================================================================================================================================

*java.awt.event.WindowAdapter_Constructors*
|java.awt.event.WindowAdapter()|

*java.awt.event.WindowAdapter_Methods*
|java.awt.event.WindowAdapter.windowActivated(WindowEvent)|Invoked when a window is activated.
|java.awt.event.WindowAdapter.windowClosed(WindowEvent)|Invoked when a window has been closed.
|java.awt.event.WindowAdapter.windowClosing(WindowEvent)|Invoked when a window is in the process of being closed.
|java.awt.event.WindowAdapter.windowDeactivated(WindowEvent)|Invoked when a window is de-activated.
|java.awt.event.WindowAdapter.windowDeiconified(WindowEvent)|Invoked when a window is de-iconified.
|java.awt.event.WindowAdapter.windowGainedFocus(WindowEvent)|Invoked when the Window is set to be the focused Window, which means  that the Window, or one of its subcomponents, wi
|java.awt.event.WindowAdapter.windowIconified(WindowEvent)|Invoked when a window is iconified.
|java.awt.event.WindowAdapter.windowLostFocus(WindowEvent)|Invoked when the Window is no longer the focused Window, which means  that keyboard events will no longer be delivered t
|java.awt.event.WindowAdapter.windowOpened(WindowEvent)|Invoked when a window has been opened.
|java.awt.event.WindowAdapter.windowStateChanged(WindowEvent)|Invoked when a window state is changed.

*java.awt.event.WindowAdapter_Description*

An abstract adapter class for receiving window events. The methods in this class are empty. This class exists as convenience for creating listener objects. 

Extend this class to create a WindowEvent listener and override the methods for the events of interest. (If you implement the WindowListener interface, you have to define all of 
the methods in it. This abstract class defines null methods for them all, so you can only have to define methods for events you care about.) 

Create a listener object using the extended class and then register it with a Window using the window's addWindowListener method. When the window's status changes by virtue of 
being opened, closed, activated or deactivated, iconified or deiconified, the relevant method in the listener object is invoked, and the WindowEvent is passed to it. 



*java.awt.event.WindowAdapter()*

public WindowAdapter()




*java.awt.event.WindowAdapter.windowActivated(WindowEvent)*

public void windowActivated(java.awt.event.WindowEvent e)

Invoked when a window is activated. 



*java.awt.event.WindowAdapter.windowClosed(WindowEvent)*

public void windowClosed(java.awt.event.WindowEvent e)

Invoked when a window has been closed. 



*java.awt.event.WindowAdapter.windowClosing(WindowEvent)*

public void windowClosing(java.awt.event.WindowEvent e)

Invoked when a window is in the process of being closed. The close operation can be overridden at this point. 



*java.awt.event.WindowAdapter.windowDeactivated(WindowEvent)*

public void windowDeactivated(java.awt.event.WindowEvent e)

Invoked when a window is de-activated. 



*java.awt.event.WindowAdapter.windowDeiconified(WindowEvent)*

public void windowDeiconified(java.awt.event.WindowEvent e)

Invoked when a window is de-iconified. 



*java.awt.event.WindowAdapter.windowGainedFocus(WindowEvent)*

public void windowGainedFocus(java.awt.event.WindowEvent e)

Invoked when the Window is set to be the focused Window, which means that the Window, or one of its subcomponents, will receive keyboard events. 



*java.awt.event.WindowAdapter.windowIconified(WindowEvent)*

public void windowIconified(java.awt.event.WindowEvent e)

Invoked when a window is iconified. 



*java.awt.event.WindowAdapter.windowLostFocus(WindowEvent)*

public void windowLostFocus(java.awt.event.WindowEvent e)

Invoked when the Window is no longer the focused Window, which means that keyboard events will no longer be delivered to the Window or any of its subcomponents. 



*java.awt.event.WindowAdapter.windowOpened(WindowEvent)*

public void windowOpened(java.awt.event.WindowEvent e)

Invoked when a window has been opened. 



*java.awt.event.WindowAdapter.windowStateChanged(WindowEvent)*

public void windowStateChanged(java.awt.event.WindowEvent e)

Invoked when a window state is changed. 




