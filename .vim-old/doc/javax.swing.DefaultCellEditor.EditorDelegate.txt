*javax.swing.DefaultCellEditor.EditorDelegate* *DefaultCellEditor.EditorDelegate* The protected EditorDelegate class.

protected class DefaultCellEditor.EditorDelegate
  extends    |java.lang.Object|
  implements |java.awt.event.ActionListener|
             |java.awt.event.ItemListener|
             |java.io.Serializable|

|javax.swing.DefaultCellEditor.EditorDelegate_Description|
|javax.swing.DefaultCellEditor.EditorDelegate_Fields|
|javax.swing.DefaultCellEditor.EditorDelegate_Constructors|
|javax.swing.DefaultCellEditor.EditorDelegate_Methods|

====================================================================================================================================================================================

*javax.swing.DefaultCellEditor.EditorDelegate_Fields*
|java.lang.Object_javax.swing.DefaultCellEditor.EditorDelegate.value|

*javax.swing.DefaultCellEditor.EditorDelegate_Constructors*
|javax.swing.DefaultCellEditor.EditorDelegate()|

*javax.swing.DefaultCellEditor.EditorDelegate_Methods*
|javax.swing.DefaultCellEditor.EditorDelegate.actionPerformed(ActionEvent)|When an action is performed, editing is ended.
|javax.swing.DefaultCellEditor.EditorDelegate.cancelCellEditing()|Cancels editing.
|javax.swing.DefaultCellEditor.EditorDelegate.getCellEditorValue()|Returns the value of this cell.
|javax.swing.DefaultCellEditor.EditorDelegate.isCellEditable(EventObject)|Returns true if anEvent is not a  MouseEvent.
|javax.swing.DefaultCellEditor.EditorDelegate.itemStateChanged(ItemEvent)|When an item's state changes, editing is ended.
|javax.swing.DefaultCellEditor.EditorDelegate.setValue(Object)|Sets the value of this cell.
|javax.swing.DefaultCellEditor.EditorDelegate.shouldSelectCell(EventObject)|Returns true to indicate that the editing cell may  be selected.
|javax.swing.DefaultCellEditor.EditorDelegate.startCellEditing(EventObject)|Returns true to indicate that editing has begun.
|javax.swing.DefaultCellEditor.EditorDelegate.stopCellEditing()|Stops editing and  returns true to indicate that editing has stopped.

*javax.swing.DefaultCellEditor.EditorDelegate_Description*

The protected EditorDelegate class. 



*java.lang.Object_javax.swing.DefaultCellEditor.EditorDelegate.value*

The value of this cell. 



*javax.swing.DefaultCellEditor.EditorDelegate()*

protected DefaultCellEditor.EditorDelegate()




*javax.swing.DefaultCellEditor.EditorDelegate.actionPerformed(ActionEvent)*

public void actionPerformed(java.awt.event.ActionEvent e)

When an action is performed, editing is ended. 


    e - the action event 

*javax.swing.DefaultCellEditor.EditorDelegate.cancelCellEditing()*

public void cancelCellEditing()

Cancels editing. This method calls fireEditingCanceled. 



*javax.swing.DefaultCellEditor.EditorDelegate.getCellEditorValue()*

public |java.lang.Object| getCellEditorValue()

Returns the value of this cell. 



    Returns: the value of this cell 

*javax.swing.DefaultCellEditor.EditorDelegate.isCellEditable(EventObject)*

public boolean isCellEditable(java.util.EventObject anEvent)

Returns true if anEvent is not a MouseEvent. Otherwise, it returns true if the necessary number of clicks have occurred, and returns false otherwise. 


    anEvent - the event 

    Returns: true if cell is ready for editing, false otherwise 

*javax.swing.DefaultCellEditor.EditorDelegate.itemStateChanged(ItemEvent)*

public void itemStateChanged(java.awt.event.ItemEvent e)

When an item's state changes, editing is ended. 


    e - the action event 

*javax.swing.DefaultCellEditor.EditorDelegate.setValue(Object)*

public void setValue(java.lang.Object value)

Sets the value of this cell. 


    value - the new value of this cell 

*javax.swing.DefaultCellEditor.EditorDelegate.shouldSelectCell(EventObject)*

public boolean shouldSelectCell(java.util.EventObject anEvent)

Returns true to indicate that the editing cell may be selected. 


    anEvent - the event 

    Returns: 

*javax.swing.DefaultCellEditor.EditorDelegate.startCellEditing(EventObject)*

public boolean startCellEditing(java.util.EventObject anEvent)

Returns true to indicate that editing has begun. 


    anEvent - the event 

*javax.swing.DefaultCellEditor.EditorDelegate.stopCellEditing()*

public boolean stopCellEditing()

Stops editing and returns true to indicate that editing has stopped. This method calls fireEditingStopped. 



    Returns: 


