*javax.swing.border.LineBorder* *LineBorder* A class which implements a line border of arbitrary thickness
 and of a single color.

public class LineBorder
  extends    |javax.swing.border.AbstractBorder|

|javax.swing.border.LineBorder_Description|
|javax.swing.border.LineBorder_Fields|
|javax.swing.border.LineBorder_Constructors|
|javax.swing.border.LineBorder_Methods|

====================================================================================================================================================================================

*javax.swing.border.LineBorder_Fields*
|java.awt.Color_javax.swing.border.LineBorder.lineColor|
|boolean_javax.swing.border.LineBorder.roundedCorners|
|int_javax.swing.border.LineBorder.thickness|

*javax.swing.border.LineBorder_Constructors*
|javax.swing.border.LineBorder(Color)|Creates a line border with the specified color and a   thickness = 1.
|javax.swing.border.LineBorder(Color,int)|Creates a line border with the specified color and thickness.
|javax.swing.border.LineBorder(Color,int,boolean)|Creates a line border with the specified color, thickness,  and corner shape.

*javax.swing.border.LineBorder_Methods*
|javax.swing.border.LineBorder.createBlackLineBorder()|Convenience method for getting the Color.black LineBorder of thickness 1.
|javax.swing.border.LineBorder.createGrayLineBorder()|Convenience method for getting the Color.gray LineBorder of thickness 1.
|javax.swing.border.LineBorder.getBorderInsets(Component)|Returns the insets of the border.
|javax.swing.border.LineBorder.getBorderInsets(Component,Insets)|Reinitialize the insets parameter with this Border's current Insets.
|javax.swing.border.LineBorder.getLineColor()|Returns the color of the border.
|javax.swing.border.LineBorder.getRoundedCorners()|Returns whether this border will be drawn with rounded corners.
|javax.swing.border.LineBorder.getThickness()|Returns the thickness of the border.
|javax.swing.border.LineBorder.isBorderOpaque()|Returns whether or not the border is opaque.
|javax.swing.border.LineBorder.paintBorder(Component,Graphics,int,int,int,int)|Paints the border for the specified component with the   specified position and size.

*javax.swing.border.LineBorder_Description*

A class which implements a line border of arbitrary thickness and of a single color. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*java.awt.Color_javax.swing.border.LineBorder.lineColor*




*boolean_javax.swing.border.LineBorder.roundedCorners*




*int_javax.swing.border.LineBorder.thickness*





*javax.swing.border.LineBorder(Color)*

public LineBorder(java.awt.Color color)

Creates a line border with the specified color and a thickness = 1. 

    color - the color for the border 

*javax.swing.border.LineBorder(Color,int)*

public LineBorder(
  java.awt.Color color,
  int thickness)

Creates a line border with the specified color and thickness. 

    color - the color of the border 
    thickness - the thickness of the border 

*javax.swing.border.LineBorder(Color,int,boolean)*

public LineBorder(
  java.awt.Color color,
  int thickness,
  boolean roundedCorners)

Creates a line border with the specified color, thickness, and corner shape. 

    color - the color of the border 
    thickness - the thickness of the border 
    roundedCorners - whether or not border corners should be round 

*javax.swing.border.LineBorder.createBlackLineBorder()*

public static |javax.swing.border.Border| createBlackLineBorder()

Convenience method for getting the Color.black LineBorder of thickness 1. 



*javax.swing.border.LineBorder.createGrayLineBorder()*

public static |javax.swing.border.Border| createGrayLineBorder()

Convenience method for getting the Color.gray LineBorder of thickness 1. 



*javax.swing.border.LineBorder.getBorderInsets(Component)*

public |java.awt.Insets| getBorderInsets(java.awt.Component c)

Returns the insets of the border. 


    c - the component for which this border insets value applies 

*javax.swing.border.LineBorder.getBorderInsets(Component,Insets)*

public |java.awt.Insets| getBorderInsets(
  java.awt.Component c,
  java.awt.Insets insets)

Reinitialize the insets parameter with this Border's current Insets. 


    c - the component for which this border insets value applies 
    insets - the object to be reinitialized 

*javax.swing.border.LineBorder.getLineColor()*

public |java.awt.Color| getLineColor()

Returns the color of the border. 



*javax.swing.border.LineBorder.getRoundedCorners()*

public boolean getRoundedCorners()

Returns whether this border will be drawn with rounded corners. 



*javax.swing.border.LineBorder.getThickness()*

public int getThickness()

Returns the thickness of the border. 



*javax.swing.border.LineBorder.isBorderOpaque()*

public boolean isBorderOpaque()

Returns whether or not the border is opaque. 



*javax.swing.border.LineBorder.paintBorder(Component,Graphics,int,int,int,int)*

public void paintBorder(
  java.awt.Component c,
  java.awt.Graphics g,
  int x,
  int y,
  int width,
  int height)

Paints the border for the specified component with the specified position and size. 


    c - the component for which this border is being painted 
    g - the paint graphics 
    x - the x position of the painted border 
    y - the y position of the painted border 
    width - the width of the painted border 
    height - the height of the painted border 


