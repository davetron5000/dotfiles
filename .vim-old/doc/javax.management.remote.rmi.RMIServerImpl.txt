*javax.management.remote.rmi.RMIServerImpl* *RMIServerImpl* An RMI object repres

public abstract class RMIServerImpl
  extends    |java.lang.Object|
  implements |javax.management.remote.rmi.RMIServer|

|javax.management.remote.rmi.RMIServerImpl_Description|
|javax.management.remote.rmi.RMIServerImpl_Fields|
|javax.management.remote.rmi.RMIServerImpl_Constructors|
|javax.management.remote.rmi.RMIServerImpl_Methods|

================================================================================

*javax.management.remote.rmi.RMIServerImpl_Constructors*
|javax.management.remote.rmi.RMIServerImpl(Map)|Constructs a new RMIServerImpl.

*javax.management.remote.rmi.RMIServerImpl_Methods*
|javax.management.remote.rmi.RMIServerImpl.clientClosed(RMIConnection)|Method c
|javax.management.remote.rmi.RMIServerImpl.close()|Closes this connection serve
|javax.management.remote.rmi.RMIServerImpl.closeClient(RMIConnection)|Closes a 
|javax.management.remote.rmi.RMIServerImpl.closeServer()|Called by#close()to cl
|javax.management.remote.rmi.RMIServerImpl.export()|Exports this RMI object.
|javax.management.remote.rmi.RMIServerImpl.getDefaultClassLoader()|Gets the def
|javax.management.remote.rmi.RMIServerImpl.getMBeanServer()|The MBeanServer to 
|javax.management.remote.rmi.RMIServerImpl.getProtocol()|Returns the protocol s
|javax.management.remote.rmi.RMIServerImpl.getVersion()|
|javax.management.remote.rmi.RMIServerImpl.makeClient(String,Subject)|Creates a
|javax.management.remote.rmi.RMIServerImpl.newClient(Object)|Creates a new clie
|javax.management.remote.rmi.RMIServerImpl.setDefaultClassLoader(ClassLoader)|S
|javax.management.remote.rmi.RMIServerImpl.setMBeanServer(MBeanServer)|Sets the
|javax.management.remote.rmi.RMIServerImpl.toStub()|Returns a remotable stub fo

*javax.management.remote.rmi.RMIServerImpl_Description*

An RMI object representing a connector server. Remote clients can make 
connections using the (|javax.management.remote.rmi.RMIServerImpl|) method. 
This method returns an RMI object representing the connection. 

User code does not usually reference this class directly. RMI connection 
servers are usually created with the class 
(|javax.management.remote.rmi.RMIConnectorServer|) . Remote clients usually 
create connections either with (|javax.management.remote.JMXConnectorFactory|) 
or by instantiating (|javax.management.remote.rmi.RMIConnector|) . 

This is an abstract class. Concrete subclasses define the details of the client 
connection objects, such as whether they use JRMP or IIOP. 


*javax.management.remote.rmi.RMIServerImpl(Map)*

public RMIServerImpl(java.util.Map env)

Constructs a new RMIServerImpl. 

    env - the environment containing attributes for the new RMIServerImpl. Can be null, 
       which is equivalent to an empty Map. 

*javax.management.remote.rmi.RMIServerImpl.clientClosed(RMIConnection)*

protected void clientClosed(javax.management.remote.rmi.RMIConnection client)
  throws |java.io.IOException|
         
Method called when a client connection created by 
makeClient(|javax.management.remote.rmi.RMIServerImpl|) is closed. A subclass 
that defines makeClient must arrange for this method to be called when the 
resultant object's close(|javax.management.remote.rmi.RMIConnection|) method is 
called. This enables it to be removed from the RMIServerImpl's list of 
connections. It is not an error for client not to be in that list. 

After removing client from the list of connections, this method calls 
closeClient(client)(|javax.management.remote.rmi.RMIServerImpl|) . 

    client - the client connection that has been closed. 

*javax.management.remote.rmi.RMIServerImpl.close()*

public synchronized void close()
  throws |java.io.IOException|
         
Closes this connection server. This method first calls the 
(|javax.management.remote.rmi.RMIServerImpl|) method so that no new client 
connections will be accepted. Then, for each remaining 
(|javax.management.remote.rmi.RMIConnection|) object returned by 
makeClient(|javax.management.remote.rmi.RMIServerImpl|) , its 
close(|javax.management.remote.rmi.RMIConnection|) method is called. 

The behaviour when this method is called more than once is unspecified. 

If (|javax.management.remote.rmi.RMIServerImpl|) throws an IOException, the 
individual connections are nevertheless closed, and then the IOException is 
thrown from this method. 

If (|javax.management.remote.rmi.RMIServerImpl|) returns normally but one or 
more of the individual connections throws an IOException, then, after closing 
all the connections, one of those IOExceptions is thrown from this method. If 
more than one connection throws an IOException, it is unspecified which one is 
thrown from this method. 


*javax.management.remote.rmi.RMIServerImpl.closeClient(RMIConnection)*

protected abstract void closeClient(javax.management.remote.rmi.RMIConnection client)
  throws |java.io.IOException|
         
Closes a client connection made by 
makeClient(|javax.management.remote.rmi.RMIServerImpl|) . 

    client - a connection previously returned by makeClient on which the closeClient method 
       has not previously been called. The behavior is unspecified if these 
       conditions are violated, including the case where client is null. 

*javax.management.remote.rmi.RMIServerImpl.closeServer()*

protected abstract void closeServer()
  throws |java.io.IOException|
         
Called by (|javax.management.remote.rmi.RMIServerImpl|) to close the connector 
server. After returning from this method, the connector server must not accept 
any new connections. 


*javax.management.remote.rmi.RMIServerImpl.export()*

protected abstract void export()
  throws |java.io.IOException|
         
Exports this RMI object. 


*javax.management.remote.rmi.RMIServerImpl.getDefaultClassLoader()*

public synchronized |java.lang.ClassLoader| getDefaultClassLoader()

Gets the default ClassLoader used by this connector server. 


    Returns: the default ClassLoader used by this connector server. 
*javax.management.remote.rmi.RMIServerImpl.getMBeanServer()*

public synchronized |javax.management.MBeanServer| getMBeanServer()

The MBeanServer to which this connector server is attached. This is the last 
value passed to (|javax.management.remote.rmi.RMIServerImpl|) on this object, 
or null if that method has never been called. 


    Returns: the MBeanServer to which this connector is attached. 
*javax.management.remote.rmi.RMIServerImpl.getProtocol()*

protected abstract |java.lang.String| getProtocol()

Returns the protocol string for this object. The string is rmi for RMI/JRMP and 
iiop for RMI/IIOP. 


    Returns: the protocol string for this object. 
*javax.management.remote.rmi.RMIServerImpl.getVersion()*

public |java.lang.String| getVersion()




*javax.management.remote.rmi.RMIServerImpl.makeClient(String,Subject)*

protected abstract |javax.management.remote.rmi.RMIConnection| makeClient(
  java.lang.String connectionId,
  javax.security.auth.Subject subject)
  throws |java.io.IOException|
         
Creates a new client connection. This method is called by the public method 
(|javax.management.remote.rmi.RMIServerImpl|) . 

    connectionId - the ID of the new connection. Every connection opened by this connector server 
       will have a different ID. The behavior is unspecified if this parameter 
       is null. 
    subject - the authenticated subject. Can be null. 

    Returns: the newly-created RMIConnection. 
*javax.management.remote.rmi.RMIServerImpl.newClient(Object)*

public |javax.management.remote.rmi.RMIConnection| newClient(java.lang.Object credentials)
  throws |java.io.IOException|
         
Creates a new client connection. This method calls 
makeClient(|javax.management.remote.rmi.RMIServerImpl|) and adds the returned 
client connection object to an internal list. When this RMIServerImpl is shut 
down via its (|javax.management.remote.rmi.RMIServerImpl|) method, the 
close()(|javax.management.remote.rmi.RMIConnection|) method of each object 
remaining in the list is called. 

The fact that a client connection object is in this internal list does not 
prevent it from being garbage collected. 

    credentials - this object specifies the user-defined credentials to be passed in to the 
       server in order to authenticate the caller before creating the 
       RMIConnection. Can be null. 

    Returns: the newly-created RMIConnection. This is usually the object created by 
             makeClient, though an implementation may choose to wrap that 
             object in another object implementing RMIConnection. 
*javax.management.remote.rmi.RMIServerImpl.setDefaultClassLoader(ClassLoader)*

public synchronized void setDefaultClassLoader(java.lang.ClassLoader cl)

Sets the default ClassLoader for this connector server. New client connections 
will use this classloader. Existing client connections are unaffected. 

    cl - the new ClassLoader to be used by this connector server. 

*javax.management.remote.rmi.RMIServerImpl.setMBeanServer(MBeanServer)*

public synchronized void setMBeanServer(javax.management.MBeanServer mbs)

Sets the MBeanServer to which this connector server is attached. New client 
connections will interact with this MBeanServer. Existing client connections 
are unaffected. 

    mbs - the new MBeanServer. Can be null, but new client connections will be refused as 
       long as it is. 

*javax.management.remote.rmi.RMIServerImpl.toStub()*

public abstract |java.rmi.Remote| toStub()
  throws |java.io.IOException|
         
Returns a remotable stub for this server object. 


    Returns: a remotable stub. 

