*javax.swing.text.DefaultStyledDocument.ElementSpec* *DefaultStyledDocument.ElementSpec* Specification for building elements.

public static class DefaultStyledDocument.ElementSpec
  extends    |java.lang.Object|

|javax.swing.text.DefaultStyledDocument.ElementSpec_Description|
|javax.swing.text.DefaultStyledDocument.ElementSpec_Fields|
|javax.swing.text.DefaultStyledDocument.ElementSpec_Constructors|
|javax.swing.text.DefaultStyledDocument.ElementSpec_Methods|

====================================================================================================================================================================================

*javax.swing.text.DefaultStyledDocument.ElementSpec_Fields*
|short_javax.swing.text.DefaultStyledDocument.ElementSpec.ContentType|
|short_javax.swing.text.DefaultStyledDocument.ElementSpec.EndTagType|
|short_javax.swing.text.DefaultStyledDocument.ElementSpec.JoinFractureDirection|
|short_javax.swing.text.DefaultStyledDocument.ElementSpec.JoinNextDirection|
|short_javax.swing.text.DefaultStyledDocument.ElementSpec.JoinPreviousDirection|
|short_javax.swing.text.DefaultStyledDocument.ElementSpec.OriginateDirection|
|short_javax.swing.text.DefaultStyledDocument.ElementSpec.StartTagType|

*javax.swing.text.DefaultStyledDocument.ElementSpec_Constructors*
|javax.swing.text.DefaultStyledDocument.ElementSpec(AttributeSet,short)|Constructor useful for markup when the markup will not  be stored in the document.
|javax.swing.text.DefaultStyledDocument.ElementSpec(AttributeSet,short,char[],int,int)|Constructor for creating a spec externally for batch  input of content and markup into the d
|javax.swing.text.DefaultStyledDocument.ElementSpec(AttributeSet,short,int)|Constructor for parsing inside the document when  the data has already been added, but len information 

*javax.swing.text.DefaultStyledDocument.ElementSpec_Methods*
|javax.swing.text.DefaultStyledDocument.ElementSpec.getArray()|Gets the array of characters.
|javax.swing.text.DefaultStyledDocument.ElementSpec.getAttributes()|Gets the element attributes.
|javax.swing.text.DefaultStyledDocument.ElementSpec.getDirection()|Gets the direction.
|javax.swing.text.DefaultStyledDocument.ElementSpec.getLength()|Gets the length.
|javax.swing.text.DefaultStyledDocument.ElementSpec.getOffset()|Gets the starting offset.
|javax.swing.text.DefaultStyledDocument.ElementSpec.getType()|Gets the element type.
|javax.swing.text.DefaultStyledDocument.ElementSpec.setDirection(short)|Sets the direction.
|javax.swing.text.DefaultStyledDocument.ElementSpec.setType(short)|Sets the element type.
|javax.swing.text.DefaultStyledDocument.ElementSpec.toString()|Converts the element to a string.

*javax.swing.text.DefaultStyledDocument.ElementSpec_Description*

Specification for building elements. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*short_javax.swing.text.DefaultStyledDocument.ElementSpec.ContentType*

A possible value for getType. This specifies that this record type represents content. 


*short_javax.swing.text.DefaultStyledDocument.ElementSpec.EndTagType*

A possible value for getType. This specifies that this record type is a end tag and represents markup that specifies the end of an element. 


*short_javax.swing.text.DefaultStyledDocument.ElementSpec.JoinFractureDirection*

A possible value for getDirection. This specifies that the data associated with this record should be joined to the fractured element. 


*short_javax.swing.text.DefaultStyledDocument.ElementSpec.JoinNextDirection*

A possible value for getDirection. This specifies that the data associated with this record should be joined to what follows it. 


*short_javax.swing.text.DefaultStyledDocument.ElementSpec.JoinPreviousDirection*

A possible value for getDirection. This specifies that the data associated with this record should be joined to what precedes it. 


*short_javax.swing.text.DefaultStyledDocument.ElementSpec.OriginateDirection*

A possible value for getDirection. This specifies that the data associated with this record should be used to originate a new element. This would be the normal value. 


*short_javax.swing.text.DefaultStyledDocument.ElementSpec.StartTagType*

A possible value for getType. This specifies that this record type is a start tag and represents markup that specifies the start of an element. 



*javax.swing.text.DefaultStyledDocument.ElementSpec(AttributeSet,short)*

public DefaultStyledDocument.ElementSpec(
  javax.swing.text.AttributeSet a,
  short type)

Constructor useful for markup when the markup will not be stored in the document. 

    a - the attributes for the element 
    type - the type of the element (StartTagType, EndTagType, ContentType) 

*javax.swing.text.DefaultStyledDocument.ElementSpec(AttributeSet,short,char[],int,int)*

public DefaultStyledDocument.ElementSpec(
  javax.swing.text.AttributeSet a,
  short type,
  char[] txt,
  int offs,
  int len)

Constructor for creating a spec externally for batch input of content and markup into the document. 

    a - the attributes for the element 
    type - the type of the element (StartTagType, EndTagType, ContentType) 
    txt - the text for the element 
    offs - the offset into the text >= 0 
    len - the length of the text >= 0 

*javax.swing.text.DefaultStyledDocument.ElementSpec(AttributeSet,short,int)*

public DefaultStyledDocument.ElementSpec(
  javax.swing.text.AttributeSet a,
  short type,
  int len)

Constructor for parsing inside the document when the data has already been added, but len information is needed. 

    a - the attributes for the element 
    type - the type of the element (StartTagType, EndTagType, ContentType) 
    len - the length >= 0 

*javax.swing.text.DefaultStyledDocument.ElementSpec.getArray()*

public char[] getArray()

Gets the array of characters. 



    Returns: 

*javax.swing.text.DefaultStyledDocument.ElementSpec.getAttributes()*

public |javax.swing.text.AttributeSet| getAttributes()

Gets the element attributes. 



    Returns: the attribute set 

*javax.swing.text.DefaultStyledDocument.ElementSpec.getDirection()*

public short getDirection()

Gets the direction. 



    Returns: the direction (JoinPreviousDirection, JoinNextDirection) 

*javax.swing.text.DefaultStyledDocument.ElementSpec.getLength()*

public int getLength()

Gets the length. 



    Returns: the length >= 0 

*javax.swing.text.DefaultStyledDocument.ElementSpec.getOffset()*

public int getOffset()

Gets the starting offset. 



    Returns: the offset >= 0 

*javax.swing.text.DefaultStyledDocument.ElementSpec.getType()*

public short getType()

Gets the element type. 



    Returns: the type of the element (StartTagType, EndTagType, ContentType) 

*javax.swing.text.DefaultStyledDocument.ElementSpec.setDirection(short)*

public void setDirection(short direction)

Sets the direction. 


    direction - the direction (JoinPreviousDirection, JoinNextDirection) 

*javax.swing.text.DefaultStyledDocument.ElementSpec.setType(short)*

public void setType(short type)

Sets the element type. 


    type - the type of the element (StartTagType, EndTagType, ContentType) 

*javax.swing.text.DefaultStyledDocument.ElementSpec.toString()*

public |java.lang.String| toString()

Converts the element to a string. 



    Returns: 


