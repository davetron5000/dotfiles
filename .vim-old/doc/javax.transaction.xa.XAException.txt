*javax.transaction.xa.XAException* *XAException* The XAException is thrown by th

public class XAException
  extends    |java.lang.Exception|

|javax.transaction.xa.XAException_Description|
|javax.transaction.xa.XAException_Fields|
|javax.transaction.xa.XAException_Constructors|
|javax.transaction.xa.XAException_Methods|

================================================================================

*javax.transaction.xa.XAException_Fields*
|int_javax.transaction.xa.XAException.errorCode|
|int_javax.transaction.xa.XAException.XA_HEURCOM|
|int_javax.transaction.xa.XAException.XA_HEURHAZ|
|int_javax.transaction.xa.XAException.XA_HEURMIX|
|int_javax.transaction.xa.XAException.XA_HEURRB|
|int_javax.transaction.xa.XAException.XA_NOMIGRATE|
|int_javax.transaction.xa.XAException.XA_RBBASE|
|int_javax.transaction.xa.XAException.XA_RBCOMMFAIL|
|int_javax.transaction.xa.XAException.XA_RBDEADLOCK|
|int_javax.transaction.xa.XAException.XA_RBEND|
|int_javax.transaction.xa.XAException.XA_RBINTEGRITY|
|int_javax.transaction.xa.XAException.XA_RBOTHER|
|int_javax.transaction.xa.XAException.XA_RBPROTO|
|int_javax.transaction.xa.XAException.XA_RBROLLBACK|
|int_javax.transaction.xa.XAException.XA_RBTIMEOUT|
|int_javax.transaction.xa.XAException.XA_RBTRANSIENT|
|int_javax.transaction.xa.XAException.XA_RDONLY|
|int_javax.transaction.xa.XAException.XA_RETRY|
|int_javax.transaction.xa.XAException.XAER_ASYNC|
|int_javax.transaction.xa.XAException.XAER_DUPID|
|int_javax.transaction.xa.XAException.XAER_INVAL|
|int_javax.transaction.xa.XAException.XAER_NOTA|
|int_javax.transaction.xa.XAException.XAER_OUTSIDE|
|int_javax.transaction.xa.XAException.XAER_PROTO|
|int_javax.transaction.xa.XAException.XAER_RMERR|
|int_javax.transaction.xa.XAException.XAER_RMFAIL|

*javax.transaction.xa.XAException_Constructors*
|javax.transaction.xa.XAException()|Create an XAException.
|javax.transaction.xa.XAException(int)|Create an XAException with a given error
|javax.transaction.xa.XAException(String)|Create an XAException with a given st

*javax.transaction.xa.XAException_Description*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.errorCode*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_HEURCOM*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_HEURHAZ*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_HEURMIX*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_HEURRB*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_NOMIGRATE*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_RBBASE*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_RBCOMMFAIL*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_RBDEADLOCK*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_RBEND*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_RBINTEGRITY*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_RBOTHER*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_RBPROTO*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_RBROLLBACK*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_RBTIMEOUT*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_RBTRANSIENT*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_RDONLY*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XA_RETRY*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XAER_ASYNC*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XAER_DUPID*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XAER_INVAL*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XAER_NOTA*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XAER_OUTSIDE*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XAER_PROTO*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XAER_RMERR*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 


*int_javax.transaction.xa.XAException.XAER_RMFAIL*

The XAException is thrown by the Resource Manager (RM) to inform the 
Transaction Manager of an error encountered by the involved transaction. 



*javax.transaction.xa.XAException()*

public XAException()

Create an XAException. 


*javax.transaction.xa.XAException(int)*

public XAException(int errcode)

Create an XAException with a given error code. 

    errcode - The error code identifying the exception. 

*javax.transaction.xa.XAException(String)*

public XAException(java.lang.String s)

Create an XAException with a given string. 

    s - The String object containing the exception message. 

