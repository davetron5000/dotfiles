*javax.security.auth.Destroyable* *Destroyable* Objects such as credentials may optionally implement this interface
 to provide the capability to destroy its contents.

public interface interface Destroyable


|javax.security.auth.Destroyable_Description|
|javax.security.auth.Destroyable_Fields|
|javax.security.auth.Destroyable_Constructors|
|javax.security.auth.Destroyable_Methods|

====================================================================================================================================================================================

*javax.security.auth.Destroyable_Methods*
|javax.security.auth.Destroyable.destroy()|Destroy this Object.
|javax.security.auth.Destroyable.isDestroyed()|Determine if this Object has been destroyed.

*javax.security.auth.Destroyable_Description*

Objects such as credentials may optionally implement this interface to provide the capability to destroy its contents. 



*javax.security.auth.Destroyable.destroy()*

public void destroy()
  throws |javax.security.auth.DestroyFailedException|
         
Destroy this Object. 

Sensitive information associated with this Object is destroyed or cleared. Subsequent calls to certain methods on this Object will result in an IllegalStateException being thrown. 





*javax.security.auth.Destroyable.isDestroyed()*

public boolean isDestroyed()

Determine if this Object has been destroyed. 





    Returns: true if this Object has been destroyed, false otherwise. 


