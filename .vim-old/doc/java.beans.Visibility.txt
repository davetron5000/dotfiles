*java.beans.Visibility* *Visibility* Under some circumstances a bean may be run on servers where a GUI
 is not available.

public interface interface Visibility


|java.beans.Visibility_Description|
|java.beans.Visibility_Fields|
|java.beans.Visibility_Constructors|
|java.beans.Visibility_Methods|

====================================================================================================================================================================================

*java.beans.Visibility_Methods*
|java.beans.Visibility.avoidingGui()|Determines whether this bean is avoiding using a GUI.
|java.beans.Visibility.dontUseGui()|This method instructs the bean that it should not use the Gui.
|java.beans.Visibility.needsGui()|Determines whether this bean needs a GUI.
|java.beans.Visibility.okToUseGui()|This method instructs the bean that it is OK to use the Gui.

*java.beans.Visibility_Description*

Under some circumstances a bean may be run on servers where a GUI is not available. This interface can be used to query a bean to determine whether it absolutely needs a gui, and 
to advise the bean whether a GUI is available. 

This interface is for expert developers, and is not needed for normal simple beans. To avoid confusing end-users we avoid using getXXX setXXX design patterns for these methods. 



*java.beans.Visibility.avoidingGui()*

public boolean avoidingGui()

Determines whether this bean is avoiding using a GUI. 



    Returns: true if the bean is currently avoiding use of the Gui. e.g. due to a call on dontUseGui(). 

*java.beans.Visibility.dontUseGui()*

public void dontUseGui()

This method instructs the bean that it should not use the Gui. 



*java.beans.Visibility.needsGui()*

public boolean needsGui()

Determines whether this bean needs a GUI. 



    Returns: True if the bean absolutely needs a GUI available in order to get its work done. 

*java.beans.Visibility.okToUseGui()*

public void okToUseGui()

This method instructs the bean that it is OK to use the Gui. 




