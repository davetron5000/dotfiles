*java.awt.event.ContainerListener* *ContainerListener* The listener interface for receiving container events.

public interface interface ContainerListener

  implements |java.util.EventListener|

|java.awt.event.ContainerListener_Description|
|java.awt.event.ContainerListener_Fields|
|java.awt.event.ContainerListener_Constructors|
|java.awt.event.ContainerListener_Methods|

====================================================================================================================================================================================

*java.awt.event.ContainerListener_Methods*
|java.awt.event.ContainerListener.componentAdded(ContainerEvent)|Invoked when a component has been added to the container.
|java.awt.event.ContainerListener.componentRemoved(ContainerEvent)|Invoked when a component has been removed from the container.

*java.awt.event.ContainerListener_Description*

The listener interface for receiving container events. The class that is interested in processing a container event either implements this interface (and all the methods it 
contains) or extends the abstract ContainerAdapter class (overriding only the methods of interest). The listener object created from that class is then registered with a component 
using the component's addContainerListener method. When the container's contents change because a component has been added or removed, the relevant method in the listener object 
is invoked, and the ContainerEvent is passed to it. 

Container events are provided for notification purposes ONLY; The AWT will automatically handle add and remove operations internally so the program works properly regardless of 
whether the program registers a ComponentListener or not. 



*java.awt.event.ContainerListener.componentAdded(ContainerEvent)*

public void componentAdded(java.awt.event.ContainerEvent e)

Invoked when a component has been added to the container. 



*java.awt.event.ContainerListener.componentRemoved(ContainerEvent)*

public void componentRemoved(java.awt.event.ContainerEvent e)

Invoked when a component has been removed from the container. 




