*javax.management.openmbean.TabularDataSupport* *TabularDataSupport* The Tabular

public class TabularDataSupport
  extends    |java.lang.Object|
  implements |javax.management.openmbean.TabularData|
             |java.util.Map|
             |java.lang.Cloneable|
             |java.io.Serializable|

|javax.management.openmbean.TabularDataSupport_Description|
|javax.management.openmbean.TabularDataSupport_Fields|
|javax.management.openmbean.TabularDataSupport_Constructors|
|javax.management.openmbean.TabularDataSupport_Methods|

================================================================================

*javax.management.openmbean.TabularDataSupport_Constructors*
|javax.management.openmbean.TabularDataSupport(TabularType)|Creates an empty Ta
|javax.management.openmbean.TabularDataSupport(TabularType,int,float)|Creates a

*javax.management.openmbean.TabularDataSupport_Methods*
|javax.management.openmbean.TabularDataSupport.calculateIndex(CompositeData)|Ca
|javax.management.openmbean.TabularDataSupport.clear()|Removes all rows from th
|javax.management.openmbean.TabularDataSupport.clone()|Returns a clone of this 
|javax.management.openmbean.TabularDataSupport.containsKey(Object)|Returns true
|javax.management.openmbean.TabularDataSupport.containsKey(Object[])|Returns tr
|javax.management.openmbean.TabularDataSupport.containsValue(CompositeData)|Ret
|javax.management.openmbean.TabularDataSupport.containsValue(Object)|Returns tr
|javax.management.openmbean.TabularDataSupport.entrySet()|Returns a collection 
|javax.management.openmbean.TabularDataSupport.equals(Object)|Compares the spec
|javax.management.openmbean.TabularDataSupport.get(Object)|This method simply c
|javax.management.openmbean.TabularDataSupport.get(Object[])|Returns the Compos
|javax.management.openmbean.TabularDataSupport.getTabularType()|Returns the tab
|javax.management.openmbean.TabularDataSupport.hashCode()|Returns the hash code
|javax.management.openmbean.TabularDataSupport.isEmpty()|Returns true if this T
|javax.management.openmbean.TabularDataSupport.keySet()|Returns a set view of t
|javax.management.openmbean.TabularDataSupport.put(CompositeData)|
|javax.management.openmbean.TabularDataSupport.put(Object,Object)|This method s
|javax.management.openmbean.TabularDataSupport.putAll(CompositeData[])|Add all 
|javax.management.openmbean.TabularDataSupport.putAll(Map)|Add all the values c
|javax.management.openmbean.TabularDataSupport.remove(Object)|This method simpl
|javax.management.openmbean.TabularDataSupport.remove(Object[])|Removes the Com
|javax.management.openmbean.TabularDataSupport.size()|Returns the number of row
|javax.management.openmbean.TabularDataSupport.toString()|Returns a string repr
|javax.management.openmbean.TabularDataSupport.values()|Returns a collection vi

*javax.management.openmbean.TabularDataSupport_Description*

The TabularDataSupport class is the open data class which implements the 
TabularData and the Map interfaces, and which is internally based on a hash map 
data structure. 


*javax.management.openmbean.TabularDataSupport(TabularType)*

public TabularDataSupport(javax.management.openmbean.TabularType tabularType)

Creates an empty TabularDataSupport instance whose open-type is tabularType, 
and whose underlying HashMap has a default initial capacity (101) and default 
load factor (0.75). 

This constructor simply calls this(tabularType, 101, 0.75f); 

    tabularType - the tabular type describing this TabularData instance; cannot be null. 

*javax.management.openmbean.TabularDataSupport(TabularType,int,float)*

public TabularDataSupport(
  javax.management.openmbean.TabularType tabularType,
  int initialCapacity,
  float loadFactor)

Creates an empty TabularDataSupport instance whose open-type is tabularType, 
and whose underlying HashMap has the specified initial capacity and load 
factor. 

    tabularType - the tabular type describing this TabularData instance; cannot be null. 
    initialCapacity - the initial capacity of the HashMap. 
    loadFactor - the load factor of the HashMap 

*javax.management.openmbean.TabularDataSupport.calculateIndex(CompositeData)*

public |java.lang.Object| calculateIndex(javax.management.openmbean.CompositeData value)

Calculates the index that would be used in this TabularData instance to refer 
to the specified composite data value parameter if it were added to this 
instance. This method checks for the type validity of the specified value, but 
does not check if the calculated index is already used to refer to a value in 
this TabularData instance. 

    value - the composite data value whose index in this TabularData instance is to be 
       calculated; must be of the same composite type as this instance's row 
       type; must not be null. 

    Returns: the index that the specified value would have in this TabularData instance. 
*javax.management.openmbean.TabularDataSupport.clear()*

public void clear()

Removes all rows from this TabularDataSupport instance. 


*javax.management.openmbean.TabularDataSupport.clone()*

public |java.lang.Object| clone()

Returns a clone of this TabularDataSupport instance: the clone is obtained by 
calling super.clone(), and then cloning the underlying map. Only a shallow 
clone of the underlying map is made, i.e. no cloning of the indexes and row 
values is made as they are immutable. 


*javax.management.openmbean.TabularDataSupport.containsKey(Object)*

public boolean containsKey(java.lang.Object key)

Returns true if and only if this TabularData instance contains a CompositeData 
value (ie a row) whose index is the specified key. If key cannot be cast to a 
one dimension array of Object instances, this method simply returns false; 
otherwise it returns the the result of the call to this.containsKey((Object[]) 
key). 

    key - the index value whose presence in this TabularData instance is to be tested. 

    Returns: true if this TabularData indexes a row value with the specified key. 
*javax.management.openmbean.TabularDataSupport.containsKey(Object[])*

public boolean containsKey(java.lang.Object[] key)

Returns true if and only if this TabularData instance contains a CompositeData 
value (ie a row) whose index is the specified key. If key is null or does not 
conform to this TabularData instance's TabularType definition, this method 
simply returns false. 

    key - the index value whose presence in this TabularData instance is to be tested. 

    Returns: true if this TabularData indexes a row value with the specified key. 
*javax.management.openmbean.TabularDataSupport.containsValue(CompositeData)*

public boolean containsValue(javax.management.openmbean.CompositeData value)

Returns true if and only if this TabularData instance contains the specified 
CompositeData value. If value is null or does not conform to this TabularData 
instance's row type definition, this method simply returns false. 

    value - the row value whose presence in this TabularData instance is to be tested. 

    Returns: true if this TabularData instance contains the specified row value. 
*javax.management.openmbean.TabularDataSupport.containsValue(Object)*

public boolean containsValue(java.lang.Object value)

Returns true if and only if this TabularData instance contains the specified 
value. 

    value - the row value whose presence in this TabularData instance is to be tested. 

    Returns: true if this TabularData instance contains the specified row value. 
*javax.management.openmbean.TabularDataSupport.entrySet()*

public |java.util.Set| entrySet()

Returns a collection view of the index to row mappings contained in this 
TabularDataSupport instance. Each element in the returned collection is a 
Map.Entry. The collection is backed by the underlying map of this 
TabularDataSupport instance, in so changes to the TabularDataSupport instance 
are reflected the collection, and vice-versa. The collection supports element 
removal, which removes the corresponding mapping from the map, via the 
Iterator.remove, Collection.remove, removeAll, retainAll, and clear operations. 
It does not support the add or addAll operations. 

IMPORTANT NOTICE: Do not use the SetValue method of Map.Entry elements 
contained in the returned collection view. Doing so would corrupt the index to 
row mappings contained in this TabularDataSupport instance. 


    Returns: a collection view of the mappings contained in this map. 
*javax.management.openmbean.TabularDataSupport.equals(Object)*

public boolean equals(java.lang.Object obj)

Compares the specified obj parameter with this TabularDataSupport instance for 
equality. 

Returns true if and only if all of the following statements are true: 

obj is non null, obj also implements the TabularData interface, their tabular 
types are equal their contents (ie all CompositeData values) are equal. 

This ensures that this equals method works properly for obj parameters which 
are different implementations of the TabularData interface. 

    obj - the object to be compared for equality with this TabularDataSupport instance; 

    Returns: true if the specified object is equal to this TabularDataSupport instance. 
*javax.management.openmbean.TabularDataSupport.get(Object)*

public |java.lang.Object| get(java.lang.Object key)

This method simply calls get((Object[]) key). 


*javax.management.openmbean.TabularDataSupport.get(Object[])*

public |javax.management.openmbean.CompositeData| get(java.lang.Object[] key)

Returns the CompositeData value whose index is key, or null if there is no 
value mapping to key, in this TabularData instance. 

    key - the index of the value to get in this TabularData instance; * must be valid 
       with this TabularData instance's row type definition; * must not be 
       null. 

    Returns: the value corresponding to key. 
*javax.management.openmbean.TabularDataSupport.getTabularType()*

public |javax.management.openmbean.TabularType| getTabularType()

Returns the tabular type describing this TabularData instance. 


*javax.management.openmbean.TabularDataSupport.hashCode()*

public int hashCode()

Returns the hash code value for this TabularDataSupport instance. 

The hash code of a TabularDataSupport instance is the sum of the hash codes of 
all elements of information used in equals comparisons (ie: its tabular type 
and its content, where the content is defined as all the CompositeData values). 

This ensures that t1.equals(t2) implies that t1.hashCode()==t2.hashCode() for 
any two TabularDataSupport instances t1 and t2, as required by the general 
contract of the method Object.hashCode()(|java.lang.Object|) . 

However, note that another instance of a class implementing the TabularData 
interface may be equal to this TabularDataSupport instance as defined by 
(|javax.management.openmbean.TabularDataSupport|) , but may have a different 
hash code if it is calculated differently. 


    Returns: the hash code value for this TabularDataSupport instance 
*javax.management.openmbean.TabularDataSupport.isEmpty()*

public boolean isEmpty()

Returns true if this TabularDataSupport instance contains no rows. 


    Returns: true if this TabularDataSupport instance contains no rows. 
*javax.management.openmbean.TabularDataSupport.keySet()*

public |java.util.Set| keySet()

Returns a set view of the keys contained in the underlying map of this 
TabularDataSupport instance, and used to index the rows. Each key contained in 
this set is an unmodifiable List. The set is backed by the underlying map of 
this TabularDataSupport instance, so changes to the TabularDataSupport instance 
are reflected in the set, and vice-versa. 

The set supports element removal, which removes the corresponding row from this 
TabularDataSupport instance, via the Iterator.remove, Set.remove, removeAll, 
retainAll, and clear operations. It does not support the add or addAll 
operations 


    Returns: a set view of the keys used to index the rows of this TabularDataSupport 
             instance. 
*javax.management.openmbean.TabularDataSupport.put(CompositeData)*

public void put(javax.management.openmbean.CompositeData value)




*javax.management.openmbean.TabularDataSupport.put(Object,Object)*

public |java.lang.Object| put(
  java.lang.Object key,
  java.lang.Object value)

This method simply calls put((CompositeData) value) and therefore ignores its 
key parameter which can be null. 

    key - an ignored parameter. 
    value - the {@link CompositeData} to put. 

    Returns: the value which is put 
*javax.management.openmbean.TabularDataSupport.putAll(CompositeData[])*

public void putAll(javax.management.openmbean.CompositeData[] values)

Add all the elements in values to this TabularData instance. If any element in 
values does not satisfy the constraints defined in 
<tt>put</tt>(|javax.management.openmbean.TabularDataSupport|) , or if any two 
elements in values have the same index calculated according to this TabularData 
instance's TabularType definition, then an exception describing the failure is 
thrown and no element of values is added, thus leaving this TabularData 
instance unchanged. 

    values - the array of composite data values to be added as new rows to this TabularData 
       instance; if values is null or empty, this method returns without doing 
       anything. 

*javax.management.openmbean.TabularDataSupport.putAll(Map)*

public void putAll(java.util.Map t)

Add all the values contained in the specified map t to this TabularData 
instance. This method converts the collection of values contained in this map 
into an array of CompositeData values, if possible, and then call the method 
putAll(CompositeData[]). Note that the keys used in the specified map t are 
ignored. This method allows, for example to add the content of another 
TabularData instance with the same row type (but possibly different index 
names) into this instance. 

    t - the map whose values are to be added as new rows to this TabularData instance; 
       if t is null or empty, this method returns without doing anything. 

*javax.management.openmbean.TabularDataSupport.remove(Object)*

public |java.lang.Object| remove(java.lang.Object key)

This method simply calls remove((Object[]) key). 

    key - an Object[] representing the key to remove. 

    Returns: previous value associated with specified key, or null if there was no mapping 
             for key. 
*javax.management.openmbean.TabularDataSupport.remove(Object[])*

public |javax.management.openmbean.CompositeData| remove(java.lang.Object[] key)

Removes the CompositeData value whose index is key from this TabularData 
instance, and returns the removed value, or returns null if there is no value 
whose index is key. 

    key - the index of the value to get in this TabularData instance; must be valid with 
       this TabularData instance's row type definition; must not be null. 

    Returns: previous value associated with specified key, or null if there was no mapping 
             for key. 
*javax.management.openmbean.TabularDataSupport.size()*

public int size()

Returns the number of rows in this TabularDataSupport instance. 


    Returns: the number of rows in this TabularDataSupport instance. 
*javax.management.openmbean.TabularDataSupport.toString()*

public |java.lang.String| toString()

Returns a string representation of this TabularDataSupport instance. 

The string representation consists of the name of this class (ie 
javax.management.openmbean.TabularDataSupport), the string representation of 
the tabular type of this instance, and the string representation of the 
contents (ie list the key=value mappings as returned by a call to dataMap. 
toString()(|java.util.HashMap|) ). 


    Returns: a string representation of this TabularDataSupport instance 
*javax.management.openmbean.TabularDataSupport.values()*

public |java.util.Collection| values()

Returns a collection view of the rows contained in this TabularDataSupport 
instance. The collection is backed by the underlying map, so changes to the 
TabularDataSupport instance are reflected in the collection, and vice-versa. 

The collection supports element removal, which removes the corresponding index 
to row mapping from this TabularDataSupport instance, via the Iterator.remove, 
Collection.remove, removeAll, retainAll, and clear operations. It does not 
support the add or addAll operations. 


    Returns: a collection view of the values contained in this TabularDataSupport instance. 

