*javax.sound.sampled.spi.FormatConversionProvider* *FormatConversionProvider* A 

public abstract class FormatConversionProvider
  extends    |java.lang.Object|

|javax.sound.sampled.spi.FormatConversionProvider_Description|
|javax.sound.sampled.spi.FormatConversionProvider_Fields|
|javax.sound.sampled.spi.FormatConversionProvider_Constructors|
|javax.sound.sampled.spi.FormatConversionProvider_Methods|

================================================================================

*javax.sound.sampled.spi.FormatConversionProvider_Constructors*
|javax.sound.sampled.spi.FormatConversionProvider()|

*javax.sound.sampled.spi.FormatConversionProvider_Methods*
|javax.sound.sampled.spi.FormatConversionProvider.getAudioInputStream(AudioFormat.Encoding,AudioInputStream)|
|javax.sound.sampled.spi.FormatConversionProvider.getAudioInputStream(AudioFormat,AudioInputStream)|
|javax.sound.sampled.spi.FormatConversionProvider.getSourceEncodings()|Obtains 
|javax.sound.sampled.spi.FormatConversionProvider.getTargetEncodings()|Obtains 
|javax.sound.sampled.spi.FormatConversionProvider.getTargetEncodings(AudioFormat)|
|javax.sound.sampled.spi.FormatConversionProvider.getTargetFormats(AudioFormat.Encoding,AudioFormat)|
|javax.sound.sampled.spi.FormatConversionProvider.isConversionSupported(AudioFormat.Encoding,AudioFormat)|
|javax.sound.sampled.spi.FormatConversionProvider.isConversionSupported(AudioFormat,AudioFormat)|
|javax.sound.sampled.spi.FormatConversionProvider.isSourceEncodingSupported(AudioFormat.Encoding)|
|javax.sound.sampled.spi.FormatConversionProvider.isTargetEncodingSupported(AudioFormat.Encoding)|

*javax.sound.sampled.spi.FormatConversionProvider_Description*

A format conversion provider provides format conversion services from one or 
more input formats to one or more output formats. Converters include codecs, 
which encode and/or decode audio data, as well as transcoders, etc. Format 
converters provide methods for determining what conversions are supported and 
for obtaining an audio stream from which converted data can be read. 

The source format represents the format of the incoming audio data, which will 
be converted. 

The target format represents the format of the processed, converted audio data. 
This is the format of the data that can be read from the stream returned by one 
of the getAudioInputStream methods. 


*javax.sound.sampled.spi.FormatConversionProvider()*

public FormatConversionProvider()




*javax.sound.sampled.spi.FormatConversionProvider.getAudioInputStream(AudioFormat.Encoding,AudioInputStream)*

public abstract |javax.sound.sampled.AudioInputStream| getAudioInputStream(
  javax.sound.sampled.AudioFormat.Encoding targetEncoding,
  javax.sound.sampled.AudioInputStream sourceStream)

Obtains an audio input stream with the specified encoding from the given audio 
input stream. 

    targetEncoding - desired encoding of the stream after processing 
    sourceStream - stream from which data to be processed should be read 

    Returns: stream from which processed data with the specified target encoding may be read 
*javax.sound.sampled.spi.FormatConversionProvider.getAudioInputStream(AudioFormat,AudioInputStream)*

public abstract |javax.sound.sampled.AudioInputStream| getAudioInputStream(
  javax.sound.sampled.AudioFormat targetFormat,
  javax.sound.sampled.AudioInputStream sourceStream)

Obtains an audio input stream with the specified format from the given audio 
input stream. 

    targetFormat - desired data format of the stream after processing 
    sourceStream - stream from which data to be processed should be read 

    Returns: stream from which processed data with the specified format may be read 
*javax.sound.sampled.spi.FormatConversionProvider.getSourceEncodings()*

public abstract |javax.sound.sampled.AudioFormat.Encoding| getSourceEncodings()

Obtains the set of source format encodings from which format conversion 
services are provided by this provider. 


    Returns: array of source format encodings. The array will always have a length of at 
             least 1. 
*javax.sound.sampled.spi.FormatConversionProvider.getTargetEncodings()*

public abstract |javax.sound.sampled.AudioFormat.Encoding| getTargetEncodings()

Obtains the set of target format encodings to which format conversion services 
are provided by this provider. 


    Returns: array of target format encodings. The array will always have a length of at 
             least 1. 
*javax.sound.sampled.spi.FormatConversionProvider.getTargetEncodings(AudioFormat)*

public abstract |javax.sound.sampled.AudioFormat.Encoding| getTargetEncodings(javax.sound.sampled.AudioFormat sourceFormat)

Obtains the set of target format encodings supported by the format converter 
given a particular source format. If no target format encodings are supported 
for this source format, an array of length 0 is returned. 


    Returns: array of supported target format encodings. 
*javax.sound.sampled.spi.FormatConversionProvider.getTargetFormats(AudioFormat.Encoding,AudioFormat)*

public abstract |javax.sound.sampled.AudioFormat| getTargetFormats(
  javax.sound.sampled.AudioFormat.Encoding targetEncoding,
  javax.sound.sampled.AudioFormat sourceFormat)

Obtains the set of target formats with the encoding specified supported by the 
format converter If no target formats with the specified encoding are supported 
for this source format, an array of length 0 is returned. 


    Returns: array of supported target formats. 
*javax.sound.sampled.spi.FormatConversionProvider.isConversionSupported(AudioFormat.Encoding,AudioFormat)*

public boolean isConversionSupported(
  javax.sound.sampled.AudioFormat.Encoding targetEncoding,
  javax.sound.sampled.AudioFormat sourceFormat)

Indicates whether the format converter supports conversion to a particular 
encoding from a particular format. 

    targetEncoding - desired encoding of the outgoing data 
    sourceFormat - format of the incoming data 

    Returns: true if the conversion is supported, otherwise false 
*javax.sound.sampled.spi.FormatConversionProvider.isConversionSupported(AudioFormat,AudioFormat)*

public boolean isConversionSupported(
  javax.sound.sampled.AudioFormat targetFormat,
  javax.sound.sampled.AudioFormat sourceFormat)

Indicates whether the format converter supports conversion to one particular 
format from another. 

    targetFormat - desired format of outgoing data 
    sourceFormat - format of the incoming data 

    Returns: true if the conversion is supported, otherwise false 
*javax.sound.sampled.spi.FormatConversionProvider.isSourceEncodingSupported(AudioFormat.Encoding)*

public boolean isSourceEncodingSupported(javax.sound.sampled.AudioFormat.Encoding sourceEncoding)

Indicates whether the format converter supports conversion from the specified 
source format encoding. 

    sourceEncoding - the source format encoding for which support is queried 

    Returns: true if the encoding is supported, otherwise false 
*javax.sound.sampled.spi.FormatConversionProvider.isTargetEncodingSupported(AudioFormat.Encoding)*

public boolean isTargetEncodingSupported(javax.sound.sampled.AudioFormat.Encoding targetEncoding)

Indicates whether the format converter supports conversion to the specified 
target format encoding. 

    targetEncoding - the target format encoding for which support is queried 

    Returns: true if the encoding is supported, otherwise false 

