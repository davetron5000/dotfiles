*javax.servlet.GenericServlet* *GenericServlet* Defines a generic, protocol-inde

public abstract class GenericServlet
  extends    |java.lang.Object|
  implements |javax.servlet.Servlet|
             |javax.servlet.ServletConfig|
             |java.io.Serializable|

|javax.servlet.GenericServlet_Description|
|javax.servlet.GenericServlet_Fields|
|javax.servlet.GenericServlet_Constructors|
|javax.servlet.GenericServlet_Methods|

================================================================================

*javax.servlet.GenericServlet_Constructors*
|javax.servlet.GenericServlet()|Does nothing.

*javax.servlet.GenericServlet_Methods*
|javax.servlet.GenericServlet.destroy()|Called by the servlet container to indi
|javax.servlet.GenericServlet.getInitParameter(String)|Returns a String contain
|javax.servlet.GenericServlet.getInitParameterNames()|Returns the names of the 
|javax.servlet.GenericServlet.getServletConfig()|Returns this servlet'sServletC
|javax.servlet.GenericServlet.getServletContext()|Returns a reference to theSer
|javax.servlet.GenericServlet.getServletInfo()|Returns information about the se
|javax.servlet.GenericServlet.getServletName()|Returns the name of this servlet
|javax.servlet.GenericServlet.init()|A convenience method which can be overridd
|javax.servlet.GenericServlet.init(ServletConfig)|Called by the servlet contain
|javax.servlet.GenericServlet.log(String)|Writes the specified message to a ser
|javax.servlet.GenericServlet.log(String,Throwable)|Writes an explanatory messa
|javax.servlet.GenericServlet.service(ServletRequest,ServletResponse)|Called by

*javax.servlet.GenericServlet_Description*

Defines a generic, protocol-independent servlet. To write an HTTP servlet for 
use on the Web, extend (|javax.servlet.http.HttpServlet|) instead. 

GenericServlet implements the Servlet and ServletConfig interfaces. 
GenericServlet may be directly extended by a servlet, although it's more common 
to extend a protocol-specific subclass such as HttpServlet. 

GenericServlet makes writing servlets easier. It provides simple versions of 
the lifecycle methods init and destroy and of the methods in the ServletConfig 
interface. GenericServlet also implements the log method, declared in the 
ServletContext interface. 

To write a generic servlet, you need only override the abstract service method. 



*javax.servlet.GenericServlet()*

public GenericServlet()

Does nothing. All of the servlet initialization is done by one of the init 
methods. 


*javax.servlet.GenericServlet.destroy()*

public void destroy()

Called by the servlet container to indicate to a servlet that the servlet is 
being taken out of service. See (|javax.servlet.Servlet|) . 



*javax.servlet.GenericServlet.getInitParameter(String)*

public |java.lang.String| getInitParameter(java.lang.String name)

Returns a String containing the value of the named initialization parameter, or 
null if the parameter does not exist. See (|javax.servlet.ServletConfig|) . 

This method is supplied for convenience. It gets the value of the named 
parameter from the servlet's ServletConfig object. 


    name - a String specifying the name of the initialization parameter 

    Returns: String a String containing the value of the initialization parameter 

*javax.servlet.GenericServlet.getInitParameterNames()*

public |java.util.Enumeration| getInitParameterNames()

Returns the names of the servlet's initialization parameters as an Enumeration 
of String objects, or an empty Enumeration if the servlet has no initialization 
parameters. See (|javax.servlet.ServletConfig|) . 

This method is supplied for convenience. It gets the parameter names from the 
servlet's ServletConfig object. 



    Returns: Enumeration an enumeration of String objects containing the names of the 
             servlet's initialization parameters 

*javax.servlet.GenericServlet.getServletConfig()*

public |javax.servlet.ServletConfig| getServletConfig()

Returns this servlet's (|javax.servlet.ServletConfig|) object. 



    Returns: ServletConfig the ServletConfig object that initialized this servlet 

*javax.servlet.GenericServlet.getServletContext()*

public |javax.servlet.ServletContext| getServletContext()

Returns a reference to the (|javax.servlet.ServletContext|) in which this 
servlet is running. See (|javax.servlet.ServletConfig|) . 

This method is supplied for convenience. It gets the context from the servlet's 
ServletConfig object. 



    Returns: ServletContext the ServletContext object passed to this servlet by the init 
             method 

*javax.servlet.GenericServlet.getServletInfo()*

public |java.lang.String| getServletInfo()

Returns information about the servlet, such as author, version, and copyright. 
By default, this method returns an empty string. Override this method to have 
it return a meaningful value. See (|javax.servlet.Servlet|) . 



    Returns: String information about this servlet, by default an empty string 

*javax.servlet.GenericServlet.getServletName()*

public |java.lang.String| getServletName()

Returns the name of this servlet instance. See (|javax.servlet.ServletConfig|) 
. 



    Returns: the name of this servlet instance 

*javax.servlet.GenericServlet.init()*

public void init()
  throws |javax.servlet.ServletException|
         
A convenience method which can be overridden so that there's no need to call 
super.init(config). 

Instead of overriding (|javax.servlet.GenericServlet|) , simply override this 
method and it will be called by GenericServlet.init(ServletConfig config). The 
ServletConfig object can still be retrieved via 
(|javax.servlet.GenericServlet|) . 



*javax.servlet.GenericServlet.init(ServletConfig)*

public void init(javax.servlet.ServletConfig config)
  throws |javax.servlet.ServletException|
         
Called by the servlet container to indicate to a servlet that the servlet is 
being placed into service. See (|javax.servlet.Servlet|) . 

This implementation stores the (|javax.servlet.ServletConfig|) object it 
receives from the servlet container for later use. When overriding this form of 
the method, call super.init(config). 


    config - the ServletConfig object that contains configutation information for this 
       servlet 

*javax.servlet.GenericServlet.log(String)*

public void log(java.lang.String msg)

Writes the specified message to a servlet log file, prepended by the servlet's 
name. See (|javax.servlet.ServletContext|) . 


    msg - a String specifying the message to be written to the log file 

*javax.servlet.GenericServlet.log(String,Throwable)*

public void log(
  java.lang.String message,
  java.lang.Throwable t)

Writes an explanatory message and a stack trace for a given Throwable exception 
to the servlet log file, prepended by the servlet's name. See 
(|javax.servlet.ServletContext|) . 


    message - a String that describes the error or exception 
    t - the java.lang.Throwable error or exception 

*javax.servlet.GenericServlet.service(ServletRequest,ServletResponse)*

public abstract void service(
  javax.servlet.ServletRequest req,
  javax.servlet.ServletResponse res)
  throws |java.io.IOException|
         |javax.servlet.ServletException|
         
Called by the servlet container to allow the servlet to respond to a request. 
See (|javax.servlet.Servlet|) . 

This method is declared abstract so subclasses, such as HttpServlet, must 
override it. 


    req - the ServletRequest object that contains the client's request 
    res - the ServletResponse object that will contain the servlet's response 


