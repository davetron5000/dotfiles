*java.rmi.registry.LocateRegistry* *LocateRegistry* LocateRegistry is used to obtain a reference to a bootstrap
 remote object registry on a particular host (including the local ho

public final class LocateRegistry
  extends    |java.lang.Object|

|java.rmi.registry.LocateRegistry_Description|
|java.rmi.registry.LocateRegistry_Fields|
|java.rmi.registry.LocateRegistry_Constructors|
|java.rmi.registry.LocateRegistry_Methods|

====================================================================================================================================================================================

*java.rmi.registry.LocateRegistry_Methods*
|java.rmi.registry.LocateRegistry.createRegistry(int)|Creates and exports a Registry instance on the local  host that accepts requests on the specified port.
|java.rmi.registry.LocateRegistry.createRegistry(int,RMIClientSocketFactory,RMIServerSocketFactory)|Creates and exports a Registry instance on the local  host that uses custom soc
|java.rmi.registry.LocateRegistry.getRegistry()|Returns a reference to the the remote object Registry for  the local host on the default registry port of 1099.
|java.rmi.registry.LocateRegistry.getRegistry(int)|Returns a reference to the the remote object Registry for  the local host on the specified port.
|java.rmi.registry.LocateRegistry.getRegistry(String)|Returns a reference to the remote object Registry on the  specified host on the default registry port of 1099.
|java.rmi.registry.LocateRegistry.getRegistry(String,int)|Returns a reference to the remote object Registry on the  specified host and port.
|java.rmi.registry.LocateRegistry.getRegistry(String,int,RMIClientSocketFactory)|Returns a locally created remote reference to the remote object  Registry on the specified host an

*java.rmi.registry.LocateRegistry_Description*

LocateRegistry is used to obtain a reference to a bootstrap remote object registry on a particular host (including the local host), or to create a remote object registry that 
accepts calls on a specific port. 

Note that a getRegistry call does not actually make a connection to the remote host. It simply creates a local reference to the remote registry and will succeed even if no 
registry is running on the remote host. Therefore, a subsequent method invocation to a remote registry returned as a result of this method may fail. 



*java.rmi.registry.LocateRegistry.createRegistry(int)*

public static |java.rmi.registry.Registry| createRegistry(int port)
  throws |java.rmi.RemoteException|
         
Creates and exports a Registry instance on the local host that accepts requests on the specified port. 

The Registry instance is exported as if the static UnicastRemoteObject.exportObject(|java.rmi.registry.LocateRegistry|) method is invoked, passing the Registry instance and the 
specified port as arguments, except that the Registry instance is exported with a well-known object identifier, an (|java.rmi.server.ObjID|) instance constructed with the value 
(|java.rmi.server.ObjID|) . 


    port - the port on which the registry accepts requests 

    Returns: 

*java.rmi.registry.LocateRegistry.createRegistry(int,RMIClientSocketFactory,RMIServerSocketFactory)*

public static |java.rmi.registry.Registry| createRegistry(
  int port,
  java.rmi.server.RMIClientSocketFactory csf,
  java.rmi.server.RMIServerSocketFactory ssf)
  throws |java.rmi.RemoteException|
         
Creates and exports a Registry instance on the local host that uses custom socket factories for communication with that instance. The registry that is created listens for incoming 
requests on the given port using a ServerSocket created from the supplied RMIServerSocketFactory. 

The Registry instance is exported as if the static UnicastRemoteObject.exportObject(|java.rmi.registry.LocateRegistry|) method is invoked, passing the Registry instance, the 
specified port, the specified RMIClientSocketFactory, and the specified RMIServerSocketFactory as arguments, except that the Registry instance is exported with a well-known object 
identifier, an (|java.rmi.server.ObjID|) instance constructed with the value (|java.rmi.server.ObjID|) . 


    port - port on which the registry accepts requests 
    csf - client-side Socket factory used to make connections to the registry 
    ssf - server-side ServerSocket factory used to accept connections to the registry 

    Returns: 

*java.rmi.registry.LocateRegistry.getRegistry()*

public static |java.rmi.registry.Registry| getRegistry()
  throws |java.rmi.RemoteException|
         
Returns a reference to the the remote object Registry for the local host on the default registry port of 1099. 



    Returns: reference (a stub) to the remote object registry 

*java.rmi.registry.LocateRegistry.getRegistry(int)*

public static |java.rmi.registry.Registry| getRegistry(int port)
  throws |java.rmi.RemoteException|
         
Returns a reference to the the remote object Registry for the local host on the specified port. 


    port - port on which the registry accepts requests 

    Returns: reference (a stub) to the remote object registry 

*java.rmi.registry.LocateRegistry.getRegistry(String)*

public static |java.rmi.registry.Registry| getRegistry(java.lang.String host)
  throws |java.rmi.RemoteException|
         
Returns a reference to the remote object Registry on the specified host on the default registry port of 1099. If host is null, the local host is used. 


    host - host for the remote registry 

    Returns: reference (a stub) to the remote object registry 

*java.rmi.registry.LocateRegistry.getRegistry(String,int)*

public static |java.rmi.registry.Registry| getRegistry(
  java.lang.String host,
  int port)
  throws |java.rmi.RemoteException|
         
Returns a reference to the remote object Registry on the specified host and port. If host is null, the local host is used. 


    host - host for the remote registry 
    port - port on which the registry accepts requests 

    Returns: reference (a stub) to the remote object registry 

*java.rmi.registry.LocateRegistry.getRegistry(String,int,RMIClientSocketFactory)*

public static |java.rmi.registry.Registry| getRegistry(
  java.lang.String host,
  int port,
  java.rmi.server.RMIClientSocketFactory csf)
  throws |java.rmi.RemoteException|
         
Returns a locally created remote reference to the remote object Registry on the specified host and port. Communication with this remote registry will use the supplied 
RMIClientSocketFactory csf to create Socket connections to the registry on the remote host and port. 


    host - host for the remote registry 
    port - port on which the registry accepts requests 
    csf - client-side Socket factory used to make connections to the registry. If csf is null, then the default client-side Socket factory will be used in the registry stub. 

    Returns: reference (a stub) to the remote registry 


