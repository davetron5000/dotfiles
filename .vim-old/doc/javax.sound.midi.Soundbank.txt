*javax.sound.midi.Soundbank* *Soundbank* A Soundbank contains a set of Instrumen

public interface interface Soundbank


|javax.sound.midi.Soundbank_Description|
|javax.sound.midi.Soundbank_Fields|
|javax.sound.midi.Soundbank_Constructors|
|javax.sound.midi.Soundbank_Methods|

================================================================================

*javax.sound.midi.Soundbank_Methods*
|javax.sound.midi.Soundbank.getDescription()|Obtains a textual description of t
|javax.sound.midi.Soundbank.getInstrument(Patch)|Obtains an Instrument from the
|javax.sound.midi.Soundbank.getInstruments()|Obtains a list of instruments cont
|javax.sound.midi.Soundbank.getName()|Obtains the name of the sound bank.
|javax.sound.midi.Soundbank.getResources()|Extracts a list of non-Instrument re
|javax.sound.midi.Soundbank.getVendor()|Obtains a string naming the company tha
|javax.sound.midi.Soundbank.getVersion()|Obtains the version string for the sou

*javax.sound.midi.Soundbank_Description*

A Soundbank contains a set of Instruments that can be loaded into a 
Synthesizer. Note that a Java Sound Soundbank is different from a MIDI bank. 
MIDI permits up to 16383 banks, each containing up to 128 instruments (also 
sometimes called programs, patches, or timbres). However, a Soundbank can 
contain 16383 times 128 instruments, because the instruments within a Soundbank 
are indexed by both a MIDI program number and a MIDI bank number (via a Patch 
object). Thus, a Soundbank can be thought of as a collection of MIDI banks. 

Soundbank includes methods that return String objects containing the sound 
bank's name, manufacturer, version number, and description. The precise content 
and format of these strings is left to the implementor. 

Different synthesizers use a variety of synthesis techniques. A common one is 
wavetable synthesis, in which a segment of recorded sound is played back, often 
with looping and pitch change. The Downloadable Sound (DLS) format uses 
segments of recorded sound, as does the Headspace Engine. Soundbanks and 
Instruments that are based on wavetable synthesis (or other uses of stored 
sound recordings) should typically implement the getResources() method to 
provide access to these recorded segments. This is optional, however; the 
method can return an zero-length array if the synthesis technique doesn't use 
sampled sound (FM synthesis and physical modeling are examples of such 
techniques), or if it does but the implementor chooses not to make the samples 
accessible. 


*javax.sound.midi.Soundbank.getDescription()*

public |java.lang.String| getDescription()

Obtains a textual description of the sound bank, suitable for display. 


    Returns: a String that describes the sound bank 
*javax.sound.midi.Soundbank.getInstrument(Patch)*

public |javax.sound.midi.Instrument| getInstrument(javax.sound.midi.Patch patch)

Obtains an Instrument from the given Patch. 

    patch - a Patch object specifying the bank index and program change number 

    Returns: the requested instrument, or null if the sound bank doesn't contain that 
             instrument 
*javax.sound.midi.Soundbank.getInstruments()*

public |javax.sound.midi.Instrument| getInstruments()

Obtains a list of instruments contained in this sound bank. 


    Returns: an array of the Instruments in this SoundBank If the sound bank contains no 
             instruments, returns an array of length 0. 
*javax.sound.midi.Soundbank.getName()*

public |java.lang.String| getName()

Obtains the name of the sound bank. 


    Returns: a String naming the sound bank 
*javax.sound.midi.Soundbank.getResources()*

public |javax.sound.midi.SoundbankResource| getResources()

Extracts a list of non-Instrument resources contained in the sound bank. 


    Returns: an array of resources, exclusing instruments. If the sound bank contains no 
             resources (other than instruments), returns an array of length 0. 
*javax.sound.midi.Soundbank.getVendor()*

public |java.lang.String| getVendor()

Obtains a string naming the company that provides the sound bank 


    Returns: the vendor string 
*javax.sound.midi.Soundbank.getVersion()*

public |java.lang.String| getVersion()

Obtains the version string for the sound bank. 


    Returns: a String that indicates the sound bank's version 

