*javax.accessibility.AccessibleRelation* *AccessibleRelation* Class AccessibleRelation describes a relation between the
 object that implements the AccessibleRelation and one or mo

public class AccessibleRelation
  extends    |javax.accessibility.AccessibleBundle|

|javax.accessibility.AccessibleRelation_Description|
|javax.accessibility.AccessibleRelation_Fields|
|javax.accessibility.AccessibleRelation_Constructors|
|javax.accessibility.AccessibleRelation_Methods|

====================================================================================================================================================================================

*javax.accessibility.AccessibleRelation_Fields*
|java.lang.String_javax.accessibility.AccessibleRelation.CHILD_NODE_OF|
|java.lang.String_javax.accessibility.AccessibleRelation.CHILD_NODE_OF_PROPERTY|
|java.lang.String_javax.accessibility.AccessibleRelation.CONTROLLED_BY|
|java.lang.String_javax.accessibility.AccessibleRelation.CONTROLLED_BY_PROPERTY|
|java.lang.String_javax.accessibility.AccessibleRelation.CONTROLLER_FOR|
|java.lang.String_javax.accessibility.AccessibleRelation.CONTROLLER_FOR_PROPERTY|
|java.lang.String_javax.accessibility.AccessibleRelation.EMBEDDED_BY|
|java.lang.String_javax.accessibility.AccessibleRelation.EMBEDDED_BY_PROPERTY|
|java.lang.String_javax.accessibility.AccessibleRelation.EMBEDS|
|java.lang.String_javax.accessibility.AccessibleRelation.EMBEDS_PROPERTY|
|java.lang.String_javax.accessibility.AccessibleRelation.FLOWS_FROM|
|java.lang.String_javax.accessibility.AccessibleRelation.FLOWS_FROM_PROPERTY|
|java.lang.String_javax.accessibility.AccessibleRelation.FLOWS_TO|
|java.lang.String_javax.accessibility.AccessibleRelation.FLOWS_TO_PROPERTY|
|java.lang.String_javax.accessibility.AccessibleRelation.LABEL_FOR|
|java.lang.String_javax.accessibility.AccessibleRelation.LABEL_FOR_PROPERTY|
|java.lang.String_javax.accessibility.AccessibleRelation.LABELED_BY|
|java.lang.String_javax.accessibility.AccessibleRelation.LABELED_BY_PROPERTY|
|java.lang.String_javax.accessibility.AccessibleRelation.MEMBER_OF|
|java.lang.String_javax.accessibility.AccessibleRelation.MEMBER_OF_PROPERTY|
|java.lang.String_javax.accessibility.AccessibleRelation.PARENT_WINDOW_OF|
|java.lang.String_javax.accessibility.AccessibleRelation.PARENT_WINDOW_OF_PROPERTY|
|java.lang.String_javax.accessibility.AccessibleRelation.SUBWINDOW_OF|
|java.lang.String_javax.accessibility.AccessibleRelation.SUBWINDOW_OF_PROPERTY|

*javax.accessibility.AccessibleRelation_Constructors*
|javax.accessibility.AccessibleRelation(String)|Create a new AccessibleRelation using the given locale independent key.
|javax.accessibility.AccessibleRelation(String,Object)|Creates a new AccessibleRelation using the given locale independent key.
|javax.accessibility.AccessibleRelation(String,Object[])|Creates a new AccessibleRelation using the given locale independent key.

*javax.accessibility.AccessibleRelation_Methods*
|javax.accessibility.AccessibleRelation.getKey()|Returns the key for this relation
|javax.accessibility.AccessibleRelation.getTarget()|Returns the target objects for this relation
|javax.accessibility.AccessibleRelation.setTarget(Object)|Sets the target object for this relation
|javax.accessibility.AccessibleRelation.setTarget(Object[])|Sets the target objects for this relation

*javax.accessibility.AccessibleRelation_Description*

Class AccessibleRelation describes a relation between the object that implements the AccessibleRelation and one or more other objects. The actual relations that an object has with 
other objects are defined as an AccessibleRelationSet, which is a composed set of AccessibleRelations. The toDisplayString method allows you to obtain the localized string for a 
locale independent key from a predefined ResourceBundle for the keys defined in this class. The constants in this class present a strongly typed enumeration of common object 
roles. If the constants in this class are not sufficient to describe the role of an object, a subclass should be generated from this class and it should provide constants in a 
similar manner. 



*java.lang.String_javax.accessibility.AccessibleRelation.CHILD_NODE_OF*

Indicates that an object is a child node of one or more objects. 


*java.lang.String_javax.accessibility.AccessibleRelation.CHILD_NODE_OF_PROPERTY*

Indicates the CHILD_NODE_OF relation between two or more objects has changed. 


*java.lang.String_javax.accessibility.AccessibleRelation.CONTROLLED_BY*

Indicates an object is controlled by one or more target objects. 


*java.lang.String_javax.accessibility.AccessibleRelation.CONTROLLED_BY_PROPERTY*

Identifies that the target object that is doing the controlling has changed 


*java.lang.String_javax.accessibility.AccessibleRelation.CONTROLLER_FOR*

Indicates an object is a controller for one or more target objects. 


*java.lang.String_javax.accessibility.AccessibleRelation.CONTROLLER_FOR_PROPERTY*

Identifies that the controller for the target object has changed 


*java.lang.String_javax.accessibility.AccessibleRelation.EMBEDDED_BY*

Indicates that an object is embedded in one or more objects. 


*java.lang.String_javax.accessibility.AccessibleRelation.EMBEDDED_BY_PROPERTY*

Indicates the EMBEDDED_BY relation between two or more objects has changed. 


*java.lang.String_javax.accessibility.AccessibleRelation.EMBEDS*

Indicates that an object has one or more objects embedded in it. 


*java.lang.String_javax.accessibility.AccessibleRelation.EMBEDS_PROPERTY*

Indicates the EMBEDS relation between two or more objects has changed. 


*java.lang.String_javax.accessibility.AccessibleRelation.FLOWS_FROM*

Indicates an object is logically contiguous with a second object where the second object occurs before the object. An example is a paragraph of text that runs to the end of a page 
and continues on the next page with an intervening text footer and/or text header. The two parts of the paragraph are separate text elements but are related in that the second 
element is a continuation of the first element. In other words, the second element "flows from" the second element. 


*java.lang.String_javax.accessibility.AccessibleRelation.FLOWS_FROM_PROPERTY*

Indicates the FLOWS_FROM relation between two objects has changed. 


*java.lang.String_javax.accessibility.AccessibleRelation.FLOWS_TO*

Indicates an object is logically contiguous with a second object where the second object occurs after the object. An example is a paragraph of text that runs to the end of a page 
and continues on the next page with an intervening text footer and/or text header. The two parts of the paragraph are separate text elements but are related in that the second 
element is a continuation of the first element. In other words, the first element "flows to" the second element. 


*java.lang.String_javax.accessibility.AccessibleRelation.FLOWS_TO_PROPERTY*

Indicates the FLOWS_TO relation between two objects has changed. 


*java.lang.String_javax.accessibility.AccessibleRelation.LABEL_FOR*

Indicates an object is a label for one or more target objects. 


*java.lang.String_javax.accessibility.AccessibleRelation.LABEL_FOR_PROPERTY*

Identifies that the target group for a label has changed 


*java.lang.String_javax.accessibility.AccessibleRelation.LABELED_BY*

Indicates an object is labeled by one or more target objects. 


*java.lang.String_javax.accessibility.AccessibleRelation.LABELED_BY_PROPERTY*

Identifies that the objects that are doing the labeling have changed 


*java.lang.String_javax.accessibility.AccessibleRelation.MEMBER_OF*

Indicates an object is a member of a group of one or more target objects. 


*java.lang.String_javax.accessibility.AccessibleRelation.MEMBER_OF_PROPERTY*

Identifies that group membership has changed. 


*java.lang.String_javax.accessibility.AccessibleRelation.PARENT_WINDOW_OF*

Indicates that an object is a parent window of one or more objects. 


*java.lang.String_javax.accessibility.AccessibleRelation.PARENT_WINDOW_OF_PROPERTY*

Indicates the PARENT_WINDOW_OF relation between two or more objects has changed. 


*java.lang.String_javax.accessibility.AccessibleRelation.SUBWINDOW_OF*

Indicates that an object is a subwindow of one or more objects. 


*java.lang.String_javax.accessibility.AccessibleRelation.SUBWINDOW_OF_PROPERTY*

Indicates the SUBWINDOW_OF relation between two or more objects has changed. 



*javax.accessibility.AccessibleRelation(String)*

public AccessibleRelation(java.lang.String key)

Create a new AccessibleRelation using the given locale independent key. The key String should be a locale independent key for the relation. It is not intended to be used as the 
actual String to display to the user. To get the localized string, use toDisplayString. 

    key - the locale independent name of the relation. 

*javax.accessibility.AccessibleRelation(String,Object)*

public AccessibleRelation(
  java.lang.String key,
  java.lang.Object target)

Creates a new AccessibleRelation using the given locale independent key. The key String should be a locale independent key for the relation. It is not intended to be used as the 
actual String to display to the user. To get the localized string, use toDisplayString. 

    key - the locale independent name of the relation. 
    target - the target object for this relation 

*javax.accessibility.AccessibleRelation(String,Object[])*

public AccessibleRelation(
  java.lang.String key,
  java.lang.Object[] target)

Creates a new AccessibleRelation using the given locale independent key. The key String should be a locale independent key for the relation. It is not intended to be used as the 
actual String to display to the user. To get the localized string, use toDisplayString. 

    key - the locale independent name of the relation. 
    target - the target object(s) for this relation 

*javax.accessibility.AccessibleRelation.getKey()*

public |java.lang.String| getKey()

Returns the key for this relation 



    Returns: the key for this relation 

*javax.accessibility.AccessibleRelation.getTarget()*

public |java.lang.Object|[] getTarget()

Returns the target objects for this relation 



    Returns: an array containing the target objects for this relation 

*javax.accessibility.AccessibleRelation.setTarget(Object)*

public void setTarget(java.lang.Object target)

Sets the target object for this relation 


    target - the target object for this relation 

*javax.accessibility.AccessibleRelation.setTarget(Object[])*

public void setTarget(java.lang.Object[] target)

Sets the target objects for this relation 


    target - an array containing the target objects for this relation 


