*javax.print.attribute.SetOfIntegerSyntax* *SetOfIntegerSyntax* Class SetOfIntegerSyntax is an abstract base class providing the common 
 implementation of all attributes whose val

public abstract class SetOfIntegerSyntax
  extends    |java.lang.Object|
  implements |java.io.Serializable|
             |java.lang.Cloneable|

|javax.print.attribute.SetOfIntegerSyntax_Description|
|javax.print.attribute.SetOfIntegerSyntax_Fields|
|javax.print.attribute.SetOfIntegerSyntax_Constructors|
|javax.print.attribute.SetOfIntegerSyntax_Methods|

====================================================================================================================================================================================

*javax.print.attribute.SetOfIntegerSyntax_Constructors*
|javax.print.attribute.SetOfIntegerSyntax(int)|Construct a new set-of-integer attribute containing a single integer.
|javax.print.attribute.SetOfIntegerSyntax(int[][])|Construct a new set-of-integer attribute with the given members in   array form.
|javax.print.attribute.SetOfIntegerSyntax(int,int)|Construct a new set-of-integer attribute containing a single range of   integers.
|javax.print.attribute.SetOfIntegerSyntax(String)|Construct a new set-of-integer attribute with the given members in  string form.

*javax.print.attribute.SetOfIntegerSyntax_Methods*
|javax.print.attribute.SetOfIntegerSyntax.contains(int)|Determine if this set-of-integer attribute contains the given value.
|javax.print.attribute.SetOfIntegerSyntax.contains(IntegerSyntax)|Determine if this set-of-integer attribute contains the given integer   attribute's value.
|javax.print.attribute.SetOfIntegerSyntax.equals(Object)|Returns whether this set-of-integer attribute is equivalent to the passed   in object.
|javax.print.attribute.SetOfIntegerSyntax.getMembers()|Obtain this set-of-integer attribute's members in canonical array form.
|javax.print.attribute.SetOfIntegerSyntax.hashCode()|Returns a hash code value for this set-of-integer attribute.
|javax.print.attribute.SetOfIntegerSyntax.next(int)|Determine the smallest integer in this set-of-integer attribute that is   greater than the given value.
|javax.print.attribute.SetOfIntegerSyntax.toString()|Returns a string value corresponding to this set-of-integer attribute.

*javax.print.attribute.SetOfIntegerSyntax_Description*

Class SetOfIntegerSyntax is an abstract base class providing the common implementation of all attributes whose value is a set of nonnegative integers. This includes attributes 
whose value is a single range of integers and attributes whose value is a set of ranges of integers. 

You can construct an instance of SetOfIntegerSyntax by giving it in "string form." The string consists of zero or more comma-separated integer groups. Each integer group consists 
of either one integer, two integers separated by a hyphen (-), or two integers separated by a colon (:). Each integer consists of one or more decimal digits (0 through 9). 
Whitespace characters cannot appear within an integer but are otherwise ignored. For example: "", "1", "5-10", "1:2, 4". 

You can also construct an instance of SetOfIntegerSyntax by giving it in "array form." Array form consists of an array of zero or more integer groups where each integer group is a 
length-1 or length-2 array of ints; for example, int[0][], int[][]{{1}}, int[][]{{5,10}}, int[][]{{1,2},{4}}. 

In both string form and array form, each successive integer group gives a range of integers to be included in the set. The first integer in each group gives the lower bound of the 
range; the second integer in each group gives the upper bound of the range; if there is only one integer in the group, the upper bound is the same as the lower bound. If the upper 
bound is less than the lower bound, it denotes a null range (no values). If the upper bound is equal to the lower bound, it denotes a range consisting of a single value. If the 
upper bound is greater than the lower bound, it denotes a range consisting of more than one value. The ranges may appear in any order and are allowed to overlap. The union of all 
the ranges gives the set's contents. Once a SetOfIntegerSyntax instance is constructed, its value is immutable. 

The SetOfIntegerSyntax object's value is actually stored in "canonical array form." This is the same as array form, except there are no null ranges; the members of the set are 
represented in as few ranges as possible (i.e., overlapping ranges are coalesced); the ranges appear in ascending order; and each range is always represented as a length-two array 
of ints in the form {lower bound, upper bound}. An empty set is represented as a zero-length array. 

Class SetOfIntegerSyntax has operations to return the set's members in canonical array form, to test whether a given integer is a member of the set, and to iterate through the 
members of the set. 



*javax.print.attribute.SetOfIntegerSyntax(int)*

protected SetOfIntegerSyntax(int member)

Construct a new set-of-integer attribute containing a single integer. 

    member - Set member. 

*javax.print.attribute.SetOfIntegerSyntax(int[][])*

protected SetOfIntegerSyntax(int[][] members)

Construct a new set-of-integer attribute with the given members in array form. 

    members - Set members in array form. If null, an empty set is constructed. 

*javax.print.attribute.SetOfIntegerSyntax(int,int)*

protected SetOfIntegerSyntax(
  int lowerBound,
  int upperBound)

Construct a new set-of-integer attribute containing a single range of integers. If the lower bound is greater than the upper bound (a null range), an empty set is constructed. 

    lowerBound - Lower bound of the range. 
    upperBound - Upper bound of the range. 

*javax.print.attribute.SetOfIntegerSyntax(String)*

protected SetOfIntegerSyntax(java.lang.String members)

Construct a new set-of-integer attribute with the given members in string form. 

    members - Set members in string form. If null, an empty set is constructed. 

*javax.print.attribute.SetOfIntegerSyntax.contains(int)*

public boolean contains(int x)

Determine if this set-of-integer attribute contains the given value. 


    x - Integer value. 

    Returns: True if this set-of-integer attribute contains the value x, false otherwise. 

*javax.print.attribute.SetOfIntegerSyntax.contains(IntegerSyntax)*

public boolean contains(javax.print.attribute.IntegerSyntax attribute)

Determine if this set-of-integer attribute contains the given integer attribute's value. 


    attribute - Integer attribute. 

    Returns: True if this set-of-integer attribute contains theAttribute's value, false otherwise. 

*javax.print.attribute.SetOfIntegerSyntax.equals(Object)*

public boolean equals(java.lang.Object object)

Returns whether this set-of-integer attribute is equivalent to the passed in object. To be equivalent, all of the following conditions must be true: 

object is not null. 

object is an instance of class SetOfIntegerSyntax. 

This set-of-integer attribute's members and object's members are the same. 


    object - Object to compare to. 

    Returns: True if object is equivalent to this set-of-integer attribute, false otherwise. 

*javax.print.attribute.SetOfIntegerSyntax.getMembers()*

public int[][] getMembers()

Obtain this set-of-integer attribute's members in canonical array form. The returned array is "safe;" the client may alter it without affecting this set-of-integer attribute. 



    Returns: This set-of-integer attribute's members in canonical array form. 

*javax.print.attribute.SetOfIntegerSyntax.hashCode()*

public int hashCode()

Returns a hash code value for this set-of-integer attribute. The hash code is the sum of the lower and upper bounds of the ranges in the canonical array form, or 0 for an empty 
set. 



*javax.print.attribute.SetOfIntegerSyntax.next(int)*

public int next(int x)

Determine the smallest integer in this set-of-integer attribute that is greater than the given value. If there are no integers in this set-of-integer attribute greater than the 
given value, -1 is returned. (Since a set-of-integer attribute can only contain nonnegative values, -1 will never appear in the set.) You can use the next() method to iterate 
through the integer values in a set-of-integer attribute in ascending order, like this: 

SetOfIntegerSyntax attribute = . . .; int i = -1; while ((i = attribute.next (i)) != -1) { foo (i); } 


    x - Integer value. 

    Returns: The smallest integer in this set-of-integer attribute that is greater than x, or -1 if no integer in this set-of-integer attribute is greater than x. 

*javax.print.attribute.SetOfIntegerSyntax.toString()*

public |java.lang.String| toString()

Returns a string value corresponding to this set-of-integer attribute. The string value is a zero-length string if this set is empty. Otherwise, the string value is a 
comma-separated list of the ranges in the canonical array form, where each range is represented as "i" if the lower bound equals the upper bound or "i-j" otherwise. 




