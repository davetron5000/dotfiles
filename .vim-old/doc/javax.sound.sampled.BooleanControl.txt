*javax.sound.sampled.BooleanControl* *BooleanControl* A BooleanControl provides 

public abstract class BooleanControl
  extends    |javax.sound.sampled.Control|

|javax.sound.sampled.BooleanControl_Description|
|javax.sound.sampled.BooleanControl_Fields|
|javax.sound.sampled.BooleanControl_Constructors|
|javax.sound.sampled.BooleanControl_Methods|

================================================================================

*javax.sound.sampled.BooleanControl_Constructors*
|javax.sound.sampled.BooleanControl(BooleanControl.Type,boolean)|Constructs a n
|javax.sound.sampled.BooleanControl(BooleanControl.Type,boolean,String,String)|

*javax.sound.sampled.BooleanControl_Methods*
|javax.sound.sampled.BooleanControl.getStateLabel(boolean)|Obtains the label fo
|javax.sound.sampled.BooleanControl.getValue()|Obtains this control's current v
|javax.sound.sampled.BooleanControl.setValue(boolean)|Sets the current value fo
|javax.sound.sampled.BooleanControl.toString()|Provides a string representation

*javax.sound.sampled.BooleanControl_Description*

A BooleanControl provides the ability to switch between two possible settings 
that affect a line's audio. The settings are boolean values (true and false). A 
graphical user interface might represent the control by a two-state button, an 
on/off switch, two mutually exclusive buttons, or a checkbox (among other 
possibilities). For example, depressing a button might activate a 
MUTE(|javax.sound.sampled.BooleanControl.Type|) control to silence the line's 
audio. 

As with other (|javax.sound.sampled.Control|) subclasses, a method is provided 
that returns string labels for the values, suitable for display in the user 
interface. 


*javax.sound.sampled.BooleanControl(BooleanControl.Type,boolean)*

protected BooleanControl(
  javax.sound.sampled.BooleanControl.Type type,
  boolean initialValue)

Constructs a new boolean control object with the given parameters. The labels 
for the true and false states default to "true" and "false." 

    type - the type of control represented by this float control object 
    initialValue - the initial control value 

*javax.sound.sampled.BooleanControl(BooleanControl.Type,boolean,String,String)*

protected BooleanControl(
  javax.sound.sampled.BooleanControl.Type type,
  boolean initialValue,
  java.lang.String trueStateLabel,
  java.lang.String falseStateLabel)

Constructs a new boolean control object with the given parameters. 

    type - the type of control represented this float control object 
    initialValue - the initial control value 
    trueStateLabel - the label for the state represented by true, such as "true" or "on." 
    falseStateLabel - the label for the state represented by false, such as "false" or "off." 

*javax.sound.sampled.BooleanControl.getStateLabel(boolean)*

public |java.lang.String| getStateLabel(boolean state)

Obtains the label for the specified state. 


    Returns: the label for the specified state, such as "true" or "on" for true, or "false" 
             or "off" for false. 
*javax.sound.sampled.BooleanControl.getValue()*

public boolean getValue()

Obtains this control's current value. 


    Returns: current value. 
*javax.sound.sampled.BooleanControl.setValue(boolean)*

public void setValue(boolean value)

Sets the current value for the control. The default implementation simply sets 
the value as indicated. Some controls require that their line be open before 
they can be affected by setting a value. 

    value - desired new value. 

*javax.sound.sampled.BooleanControl.toString()*

public |java.lang.String| toString()

Provides a string representation of the control 


    Returns: a string description 

