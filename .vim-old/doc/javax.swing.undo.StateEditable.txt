*javax.swing.undo.StateEditable* *StateEditable* StateEditable defines the interface for objects that can have
 their state undone/redone by a StateEdit.

public interface interface StateEditable


|javax.swing.undo.StateEditable_Description|
|javax.swing.undo.StateEditable_Fields|
|javax.swing.undo.StateEditable_Constructors|
|javax.swing.undo.StateEditable_Methods|

====================================================================================================================================================================================

*javax.swing.undo.StateEditable_Fields*
|java.lang.String_javax.swing.undo.StateEditable.RCSID|

*javax.swing.undo.StateEditable_Methods*
|javax.swing.undo.StateEditable.restoreState(Hashtable<?,?>)|Upon receiving this message the receiver should extract any relevant  state out of state.
|javax.swing.undo.StateEditable.storeState(Hashtable<Object,Object>)|Upon receiving this message the receiver should place any relevant  state into state.

*javax.swing.undo.StateEditable_Description*

StateEditable defines the interface for objects that can have their state undone/redone by a StateEdit. 



*java.lang.String_javax.swing.undo.StateEditable.RCSID*

Resource ID for this class. 



*javax.swing.undo.StateEditable.restoreState(Hashtable<?,?>)*

public void restoreState(java.util.Hashtable<?, ?> state)

Upon receiving this message the receiver should extract any relevant state out of state. 



*javax.swing.undo.StateEditable.storeState(Hashtable<Object,Object>)*

public void storeState(java.util.Hashtable<java.lang.Object, java.lang.Object> state)

Upon receiving this message the receiver should place any relevant state into state. 




