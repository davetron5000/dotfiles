*java.rmi.server.RemoteCall* *RemoteCall* RemoteCall is an abstraction used solely by the RMI runtime
 (in conjunction with stubs and skeletons of remote objects) to carry out a
 c

public interface interface RemoteCall


|java.rmi.server.RemoteCall_Description|
|java.rmi.server.RemoteCall_Fields|
|java.rmi.server.RemoteCall_Constructors|
|java.rmi.server.RemoteCall_Methods|

====================================================================================================================================================================================

*java.rmi.server.RemoteCall_Methods*
|java.rmi.server.RemoteCall.done()|Allow cleanup after the remote call has completed.
|java.rmi.server.RemoteCall.executeCall()|Do whatever it takes to execute the call.
|java.rmi.server.RemoteCall.getInputStream()|Get the InputStream that the stub/skeleton should get  results/arguments from.
|java.rmi.server.RemoteCall.getOutputStream()|Return the output stream the stub/skeleton should put arguments/results  into.
|java.rmi.server.RemoteCall.getResultStream(boolean)|Returns an output stream (may put out header information  relating to the success of the call).
|java.rmi.server.RemoteCall.releaseInputStream()|Release the input stream.
|java.rmi.server.RemoteCall.releaseOutputStream()|Release the output stream; in some transports this would release  the stream.

*java.rmi.server.RemoteCall_Description*

RemoteCall is an abstraction used solely by the RMI runtime (in conjunction with stubs and skeletons of remote objects) to carry out a call to a remote object. The RemoteCall 
interface is deprecated in the Java 2 platform since it is only used by deprecated methods of java.rmi.server.RemoteRef. 


  Deprecated: no replacement.

*java.rmi.server.RemoteCall.done()*

public void done()
  throws |java.io.IOException|
         
Allow cleanup after the remote call has completed. 

    Deprecated: no replacement


*java.rmi.server.RemoteCall.executeCall()*

public void executeCall()
  throws |java.lang.Exception|
         
Do whatever it takes to execute the call. 

    Deprecated: no replacement


*java.rmi.server.RemoteCall.getInputStream()*

public |java.io.ObjectInput| getInputStream()
  throws |java.io.IOException|
         
Get the InputStream that the stub/skeleton should get results/arguments from. 

    Deprecated: no replacement


    Returns: input stream for reading arguments/results 

*java.rmi.server.RemoteCall.getOutputStream()*

public |java.io.ObjectOutput| getOutputStream()
  throws |java.io.IOException|
         
Return the output stream the stub/skeleton should put arguments/results into. 

    Deprecated: no replacement


    Returns: output stream for arguments/results 

*java.rmi.server.RemoteCall.getResultStream(boolean)*

public |java.io.ObjectOutput| getResultStream(boolean success)
  throws |java.io.IOException|
         |java.io.StreamCorruptedException|
         
Returns an output stream (may put out header information relating to the success of the call). Should only succeed once per remote call. 

    Deprecated: no replacement

    success - If true, indicates normal return, else indicates exceptional return. 

    Returns: output stream for writing call result 

*java.rmi.server.RemoteCall.releaseInputStream()*

public void releaseInputStream()
  throws |java.io.IOException|
         
Release the input stream. This would allow some transports to release the channel early. 

    Deprecated: no replacement


*java.rmi.server.RemoteCall.releaseOutputStream()*

public void releaseOutputStream()
  throws |java.io.IOException|
         
Release the output stream; in some transports this would release the stream. 

    Deprecated: no replacement



