*java.awt.PaintContext* *PaintContext* The PaintContext interface defines the encapsulated 
 and optimized environment to generate color patterns in device 
 space for fill or stro

public interface interface PaintContext


|java.awt.PaintContext_Description|
|java.awt.PaintContext_Fields|
|java.awt.PaintContext_Constructors|
|java.awt.PaintContext_Methods|

====================================================================================================================================================================================

*java.awt.PaintContext_Methods*
|java.awt.PaintContext.dispose()|Releases the resources allocated for the operation.
|java.awt.PaintContext.getColorModel()|Returns the ColorModel of the output.
|java.awt.PaintContext.getRaster(int,int,int,int)|Returns a Raster containing the colors generated for   the graphics operation.

*java.awt.PaintContext_Description*

The PaintContext interface defines the encapsulated and optimized environment to generate color patterns in device space for fill or stroke operations on a (|java.awt.Graphics2D|) 
. The PaintContext provides the necessary colors for Graphics2D operations in the form of a (|java.awt.image.Raster|) associated with a (|java.awt.image.ColorModel|) . The 
PaintContext maintains state for a particular paint operation. In a multi-threaded environment, several contexts can exist simultaneously for a single (|java.awt.Paint|) object. 



*java.awt.PaintContext.dispose()*

public void dispose()

Releases the resources allocated for the operation. 



*java.awt.PaintContext.getColorModel()*

public |java.awt.image.ColorModel| getColorModel()

Returns the ColorModel of the output. Note that this ColorModel might be different from the hint specified in the createContext(|java.awt.Paint|) method of Paint. Not all 
PaintContext objects are capable of generating color patterns in an arbitrary ColorModel. 



    Returns: the ColorModel of the output. 

*java.awt.PaintContext.getRaster(int,int,int,int)*

public |java.awt.image.Raster| getRaster(
  int x,
  int y,
  int w,
  int h)

Returns a Raster containing the colors generated for the graphics operation. 


    x - the x coordinate of the area in device space for which colors are generated. 
    y - the y coordinate of the area in device space for which colors are generated. 
    w - the width of the area in device space 
    h - the height of the area in device space 

    Returns: a Raster representing the specified rectangular area and containing the colors generated for the graphics operation. 


