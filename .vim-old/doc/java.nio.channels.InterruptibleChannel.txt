*java.nio.channels.InterruptibleChannel* *InterruptibleChannel* A channel that can be asynchronously closed and interrupted.

public interface interface InterruptibleChannel

  implements |java.nio.channels.Channel|

|java.nio.channels.InterruptibleChannel_Description|
|java.nio.channels.InterruptibleChannel_Fields|
|java.nio.channels.InterruptibleChannel_Constructors|
|java.nio.channels.InterruptibleChannel_Methods|

====================================================================================================================================================================================

*java.nio.channels.InterruptibleChannel_Methods*
|java.nio.channels.InterruptibleChannel.close()|Closes this channel.

*java.nio.channels.InterruptibleChannel_Description*

A channel that can be asynchronously closed and interrupted. 

A channel that implements this interface is asynchronously closeable: If a thread is blocked in an I/O operation on an interruptible channel then another thread may invoke the 
channel's close(|java.nio.channels.InterruptibleChannel|) method. This will cause the blocked thread to receive an (|java.nio.channels.AsynchronousCloseException|) . 

A channel that implements this interface is also interruptible: If a thread is blocked in an I/O operation on an interruptible channel then another thread may invoke the blocked 
thread's interrupt(|java.lang.Thread|) method. This will cause the channel to be closed, the blocked thread to receive a (|java.nio.channels.ClosedByInterruptException|) , and the 
blocked thread's interrupt status to be set. 

If a thread's interrupt status is already set and it invokes a blocking I/O operation upon a channel then the channel will be closed and the thread will immediately receive a 
(|java.nio.channels.ClosedByInterruptException|) ; its interrupt status will remain set. 

A channel supports asynchronous closing and interruption if, and only if, it implements this interface. This can be tested at runtime, if necessary, via the instanceof operator. 



*java.nio.channels.InterruptibleChannel.close()*

public void close()
  throws |java.io.IOException|
         
Closes this channel. 

Any thread currently blocked in an I/O operation upon this channel will receive an (|java.nio.channels.AsynchronousCloseException|) . 

This method otherwise behaves exactly as specified by the Channel(|java.nio.channels.Channel|) interface. 




