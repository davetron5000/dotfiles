*javax.sound.midi.MidiEvent* *MidiEvent* MIDI events contain a MIDI message and 

public class MidiEvent
  extends    |java.lang.Object|

|javax.sound.midi.MidiEvent_Description|
|javax.sound.midi.MidiEvent_Fields|
|javax.sound.midi.MidiEvent_Constructors|
|javax.sound.midi.MidiEvent_Methods|

================================================================================

*javax.sound.midi.MidiEvent_Constructors*
|javax.sound.midi.MidiEvent(MidiMessage,long)|Constructs a new MidiEvent.

*javax.sound.midi.MidiEvent_Methods*
|javax.sound.midi.MidiEvent.getMessage()|Obtains the MIDI message contained in 
|javax.sound.midi.MidiEvent.getTick()|Obtains the time-stamp for the event, in 
|javax.sound.midi.MidiEvent.setTick(long)|Sets the time-stamp for the event, in

*javax.sound.midi.MidiEvent_Description*

MIDI events contain a MIDI message and a corresponding time-stamp expressed in 
ticks, and can represent the MIDI event information stored in a MIDI file or a 
(|javax.sound.midi.Sequence|) object. The duration of a tick is specified by 
the timing information contained in the MIDI file or Sequence object. 

In Java Sound, MidiEvent objects are typically contained in a 
(|javax.sound.midi.Track|) , and Tracks are likewise contained in a Sequence. 


*javax.sound.midi.MidiEvent(MidiMessage,long)*

public MidiEvent(
  javax.sound.midi.MidiMessage message,
  long tick)

Constructs a new MidiEvent. 

    message - the MIDI message contained in the event 
    tick - the time-stamp for the event, in MIDI ticks 

*javax.sound.midi.MidiEvent.getMessage()*

public |javax.sound.midi.MidiMessage| getMessage()

Obtains the MIDI message contained in the event. 


    Returns: the MIDI message 
*javax.sound.midi.MidiEvent.getTick()*

public long getTick()

Obtains the time-stamp for the event, in MIDI ticks 


    Returns: the time-stamp for the event, in MIDI ticks 
*javax.sound.midi.MidiEvent.setTick(long)*

public void setTick(long tick)

Sets the time-stamp for the event, in MIDI ticks 

    tick - the new time-stamp, in MIDI ticks 


