*org.w3c.dom.html.HTMLTextAreaElement* *HTMLTextAreaElement* Multi-line text fie

public interface interface HTMLTextAreaElement

  implements |org.w3c.dom.html.HTMLElement|

|org.w3c.dom.html.HTMLTextAreaElement_Description|
|org.w3c.dom.html.HTMLTextAreaElement_Fields|
|org.w3c.dom.html.HTMLTextAreaElement_Constructors|
|org.w3c.dom.html.HTMLTextAreaElement_Methods|

================================================================================

*org.w3c.dom.html.HTMLTextAreaElement_Methods*
|org.w3c.dom.html.HTMLTextAreaElement.blur()|Removes keyboard focus from this e
|org.w3c.dom.html.HTMLTextAreaElement.focus()|Gives keyboard focus to this elem
|org.w3c.dom.html.HTMLTextAreaElement.getAccessKey()|A single character access 
|org.w3c.dom.html.HTMLTextAreaElement.getCols()|Width of control (in characters
|org.w3c.dom.html.HTMLTextAreaElement.getDefaultValue()|Represents the contents
|org.w3c.dom.html.HTMLTextAreaElement.getDisabled()|The control is unavailable 
|org.w3c.dom.html.HTMLTextAreaElement.getForm()|Returns the FORM element contai
|org.w3c.dom.html.HTMLTextAreaElement.getName()|Form control or object name whe
|org.w3c.dom.html.HTMLTextAreaElement.getReadOnly()|This control is read-only.
|org.w3c.dom.html.HTMLTextAreaElement.getRows()|Number of text rows.
|org.w3c.dom.html.HTMLTextAreaElement.getTabIndex()|Index that represents the e
|org.w3c.dom.html.HTMLTextAreaElement.getType()|The type of this form control.
|org.w3c.dom.html.HTMLTextAreaElement.getValue()|Represents the current content
|org.w3c.dom.html.HTMLTextAreaElement.select()|Select the contents of the TEXTA
|org.w3c.dom.html.HTMLTextAreaElement.setAccessKey(String)|
|org.w3c.dom.html.HTMLTextAreaElement.setCols(int)|
|org.w3c.dom.html.HTMLTextAreaElement.setDefaultValue(String)|
|org.w3c.dom.html.HTMLTextAreaElement.setDisabled(boolean)|
|org.w3c.dom.html.HTMLTextAreaElement.setName(String)|
|org.w3c.dom.html.HTMLTextAreaElement.setReadOnly(boolean)|
|org.w3c.dom.html.HTMLTextAreaElement.setRows(int)|
|org.w3c.dom.html.HTMLTextAreaElement.setTabIndex(int)|
|org.w3c.dom.html.HTMLTextAreaElement.setValue(String)|

*org.w3c.dom.html.HTMLTextAreaElement_Description*

Multi-line text field. See the TEXTAREA element definition in HTML 4.0. See 
also the Document Object Model (DOM) Level 2 Specification. 


*org.w3c.dom.html.HTMLTextAreaElement.blur()*

public void blur()

Removes keyboard focus from this element. 


*org.w3c.dom.html.HTMLTextAreaElement.focus()*

public void focus()

Gives keyboard focus to this element. 


*org.w3c.dom.html.HTMLTextAreaElement.getAccessKey()*

public |java.lang.String| getAccessKey()

A single character access key to give access to the form control. See the 
accesskey attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLTextAreaElement.getCols()*

public int getCols()

Width of control (in characters). See the cols attribute definition in HTML 
4.0. 


*org.w3c.dom.html.HTMLTextAreaElement.getDefaultValue()*

public |java.lang.String| getDefaultValue()

Represents the contents of the element. The value of this attribute does not 
change if the contents of the corresponding form control, in an interactive 
user agent, changes. Changing this attribute, however, resets the contents of 
the form control. 


*org.w3c.dom.html.HTMLTextAreaElement.getDisabled()*

public boolean getDisabled()

The control is unavailable in this context. See the disabled attribute 
definition in HTML 4.0. 


*org.w3c.dom.html.HTMLTextAreaElement.getForm()*

public |org.w3c.dom.html.HTMLFormElement| getForm()

Returns the FORM element containing this control. Returns null if this control 
is not within the context of a form. 


*org.w3c.dom.html.HTMLTextAreaElement.getName()*

public |java.lang.String| getName()

Form control or object name when submitted with a form. See the name attribute 
definition in HTML 4.0. 


*org.w3c.dom.html.HTMLTextAreaElement.getReadOnly()*

public boolean getReadOnly()

This control is read-only. See the readonly attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLTextAreaElement.getRows()*

public int getRows()

Number of text rows. See the rows attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLTextAreaElement.getTabIndex()*

public int getTabIndex()

Index that represents the element's position in the tabbing order. See the 
tabindex attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLTextAreaElement.getType()*

public |java.lang.String| getType()

The type of this form control. This the string "textarea". 


*org.w3c.dom.html.HTMLTextAreaElement.getValue()*

public |java.lang.String| getValue()

Represents the current contents of the corresponding form control, in an 
interactive user agent. Changing this attribute changes the contents of the 
form control, but does not change the contents of the element. If the entirety 
of the data can not fit into a single DOMString , the implementation may 
truncate the data. 


*org.w3c.dom.html.HTMLTextAreaElement.select()*

public void select()

Select the contents of the TEXTAREA . 


*org.w3c.dom.html.HTMLTextAreaElement.setAccessKey(String)*

public void setAccessKey(java.lang.String accessKey)




*org.w3c.dom.html.HTMLTextAreaElement.setCols(int)*

public void setCols(int cols)




*org.w3c.dom.html.HTMLTextAreaElement.setDefaultValue(String)*

public void setDefaultValue(java.lang.String defaultValue)




*org.w3c.dom.html.HTMLTextAreaElement.setDisabled(boolean)*

public void setDisabled(boolean disabled)




*org.w3c.dom.html.HTMLTextAreaElement.setName(String)*

public void setName(java.lang.String name)




*org.w3c.dom.html.HTMLTextAreaElement.setReadOnly(boolean)*

public void setReadOnly(boolean readOnly)




*org.w3c.dom.html.HTMLTextAreaElement.setRows(int)*

public void setRows(int rows)




*org.w3c.dom.html.HTMLTextAreaElement.setTabIndex(int)*

public void setTabIndex(int tabIndex)




*org.w3c.dom.html.HTMLTextAreaElement.setValue(String)*

public void setValue(java.lang.String value)





