*javax.sql.rowset.serial.SQLOutputImpl* *SQLOutputImpl* The output stream for writing the attributes of a 
 custom-mapped user-defined type (UDT) back to the database.

public class SQLOutputImpl
  extends    |java.lang.Object|
  implements |java.sql.SQLOutput|

|javax.sql.rowset.serial.SQLOutputImpl_Description|
|javax.sql.rowset.serial.SQLOutputImpl_Fields|
|javax.sql.rowset.serial.SQLOutputImpl_Constructors|
|javax.sql.rowset.serial.SQLOutputImpl_Methods|

====================================================================================================================================================================================

*javax.sql.rowset.serial.SQLOutputImpl_Constructors*
|javax.sql.rowset.serial.SQLOutputImpl(Vector<?>,Map<String,?>)|Creates a new SQLOutputImpl object  initialized with the given vector of attributes and  type map.

*javax.sql.rowset.serial.SQLOutputImpl_Methods*
|javax.sql.rowset.serial.SQLOutputImpl.writeArray(Array)|Writes an Array object in the Java  programming language to this SQLOutputImpl  object.
|javax.sql.rowset.serial.SQLOutputImpl.writeAsciiStream(InputStream)|Writes a stream of ASCII characters to this  SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeBigDecimal(BigDecimal)|Writes a java.math.BigDecimal object in the Java programming  language to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeBinaryStream(InputStream)|Writes a stream of uninterpreted bytes to this SQLOutputImpl  object.
|javax.sql.rowset.serial.SQLOutputImpl.writeBlob(Blob)|Writes a Blob object in the Java programming language  to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeBoolean(boolean)|Writes a boolean in the Java programming language  to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeByte(byte)|Writes a byte in the Java programming language  to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeBytes(byte[])|Writes an array of bytes in the Java programming language  to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeCharacterStream(Reader)|Writes a stream of Unicode characters to this  SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeClob(Clob)|Writes a Clob object in the Java programming language  to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeDate(Date)|Writes a java.sql.Date object in the Java programming  language to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeDouble(double)|Writes a double in the Java programming language  to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeFloat(float)|Writes a float in the Java programming language  to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeInt(int)|Writes an int in the Java programming language  to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeLong(long)|Writes a long in the Java programming language  to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeObject(SQLData)|Writes to the stream the data contained in the given   SQLData object.
|javax.sql.rowset.serial.SQLOutputImpl.writeRef(Ref)|Writes a Ref object in the Java programming language  to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeShort(short)|Writes a short in the Java programming language  to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeString(String)|Writes a String in the Java programming language  to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeStruct(Struct)|Writes a Struct object in the Java  programming language to this SQLOutputImpl  object.
|javax.sql.rowset.serial.SQLOutputImpl.writeTime(Time)|Writes a java.sql.Time object in the Java programming  language to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeTimestamp(Timestamp)|Writes a java.sql.Timestamp object in the Java programming  language to this SQLOutputImpl object.
|javax.sql.rowset.serial.SQLOutputImpl.writeURL(URL)|Writes an java.sql.Type.DATALINK object in the Java   programming language to this SQLOutputImpl object.

*javax.sql.rowset.serial.SQLOutputImpl_Description*

The output stream for writing the attributes of a custom-mapped user-defined type (UDT) back to the database. The driver uses this interface internally, and its methods are never 
directly invoked by an application programmer. 

When an application calls the method PreparedStatement.setObject, the driver checks to see whether the value to be written is a UDT with a custom mapping. If it is, there will be 
an entry in a type map containing the Class object for the class that implements SQLData for this UDT. If the value to be written is an instance of SQLData, the driver will create 
an instance of SQLOutputImpl and pass it to the method SQLData.writeSQL. The method writeSQL in turn calls the appropriate SQLOutputImpl.writeXXX methods to write data from the 
SQLData object to the SQLOutputImpl output stream as the representation of an SQL user-defined type. 



*javax.sql.rowset.serial.SQLOutputImpl(Vector<?>,Map<String,?>)*

public SQLOutputImpl(
  java.util.Vector<?> attributes,
  java.util.Map<java.lang.String, ?> map)
  throws |java.sql.SQLException|
         
Creates a new SQLOutputImpl object initialized with the given vector of attributes and type map. The driver will use the type map to determine which SQLData.writeSQL method to 
invoke. This method will then call the appropriate SQLOutputImpl writer methods in order and thereby write the attributes to the new output stream. 

    attributes - a Vector object containing the attributes of the UDT to be mapped to one or more objects in the Java programming language 
    map - a java.util.Map object containing zero or more entries, with each entry consisting of 1) a String giving the fully qualified name of a UDT and 2) the Class object for the SQLData 
       implementation that defines how the UDT is to be mapped 

*javax.sql.rowset.serial.SQLOutputImpl.writeArray(Array)*

public void writeArray(java.sql.Array x)
  throws |java.sql.SQLException|
         
Writes an Array object in the Java programming language to this SQLOutputImpl object. The driver converts this value to a serializable SerialArray SQL ARRAY value before returning 
it to the database. 


    x - an object representing an SQL ARRAY value 

*javax.sql.rowset.serial.SQLOutputImpl.writeAsciiStream(InputStream)*

public void writeAsciiStream(java.io.InputStream x)
  throws |java.sql.SQLException|
         
Writes a stream of ASCII characters to this SQLOutputImpl object. The driver will do any necessary conversion from ASCII to the database CHAR format. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeBigDecimal(BigDecimal)*

public void writeBigDecimal(java.math.BigDecimal x)
  throws |java.sql.SQLException|
         
Writes a java.math.BigDecimal object in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL NUMERIC before returning it to the database. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeBinaryStream(InputStream)*

public void writeBinaryStream(java.io.InputStream x)
  throws |java.sql.SQLException|
         
Writes a stream of uninterpreted bytes to this SQLOutputImpl object. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeBlob(Blob)*

public void writeBlob(java.sql.Blob x)
  throws |java.sql.SQLException|
         
Writes a Blob object in the Java programming language to this SQLOutputImpl object. The driver converts it to a serializable SerialBlob SQL BLOB value before returning it to the 
database. 


    x - an object representing an SQL BLOB value 

*javax.sql.rowset.serial.SQLOutputImpl.writeBoolean(boolean)*

public void writeBoolean(boolean x)
  throws |java.sql.SQLException|
         
Writes a boolean in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL BIT before returning it to the database. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeByte(byte)*

public void writeByte(byte x)
  throws |java.sql.SQLException|
         
Writes a byte in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL BIT before returning it to the database. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeBytes(byte[])*

public void writeBytes(byte[] x)
  throws |java.sql.SQLException|
         
Writes an array of bytes in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL VARBINARY or LONGVARBINARY before returning it to the 
database. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeCharacterStream(Reader)*

public void writeCharacterStream(java.io.Reader x)
  throws |java.sql.SQLException|
         
Writes a stream of Unicode characters to this SQLOutputImpl object. The driver will do any necessary conversion from Unicode to the database CHAR format. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeClob(Clob)*

public void writeClob(java.sql.Clob x)
  throws |java.sql.SQLException|
         
Writes a Clob object in the Java programming language to this SQLOutputImpl object. The driver converts it to a serializable SerialClob SQL CLOB value before returning it to the 
database. 


    x - an object representing an SQL CLOB value 

*javax.sql.rowset.serial.SQLOutputImpl.writeDate(Date)*

public void writeDate(java.sql.Date x)
  throws |java.sql.SQLException|
         
Writes a java.sql.Date object in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL DATE before returning it to the database. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeDouble(double)*

public void writeDouble(double x)
  throws |java.sql.SQLException|
         
Writes a double in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL DOUBLE before returning it to the database. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeFloat(float)*

public void writeFloat(float x)
  throws |java.sql.SQLException|
         
Writes a float in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL REAL before returning it to the database. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeInt(int)*

public void writeInt(int x)
  throws |java.sql.SQLException|
         
Writes an int in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL INTEGER before returning it to the database. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeLong(long)*

public void writeLong(long x)
  throws |java.sql.SQLException|
         
Writes a long in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL BIGINT before returning it to the database. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeObject(SQLData)*

public void writeObject(java.sql.SQLData x)
  throws |java.sql.SQLException|
         
Writes to the stream the data contained in the given SQLData object. When the SQLData object is null, this method writes an SQL NULL to the stream. Otherwise, it calls the 
SQLData.writeSQL method of the given object, which writes the object's attributes to the stream. 

The implementation of the method SQLData.writeSQ calls the appropriate SQLOutputImpl.writeXXX method(s) for writing each of the object's attributes in order. The attributes must 
be read from an SQLInput input stream and written to an SQLOutputImpl output stream in the same order in which they were listed in the SQL definition of the user-defined type. 


    x - the object representing data of an SQL structured or distinct type 

*javax.sql.rowset.serial.SQLOutputImpl.writeRef(Ref)*

public void writeRef(java.sql.Ref x)
  throws |java.sql.SQLException|
         
Writes a Ref object in the Java programming language to this SQLOutputImpl object. The driver converts it to a serializable SerialRef SQL REF value before returning it to the 
database. 


    x - an object representing an SQL REF value 

*javax.sql.rowset.serial.SQLOutputImpl.writeShort(short)*

public void writeShort(short x)
  throws |java.sql.SQLException|
         
Writes a short in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL SMALLINT before returning it to the database. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeString(String)*

public void writeString(java.lang.String x)
  throws |java.sql.SQLException|
         
Writes a String in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL CHAR, VARCHAR, or LONGVARCHAR before returning it to the database. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeStruct(Struct)*

public void writeStruct(java.sql.Struct x)
  throws |java.sql.SQLException|
         
Writes a Struct object in the Java programming language to this SQLOutputImpl object. The driver converts this value to an SQL structured type before returning it to the database. 

This method should be used when an SQL structured type has been mapped to a Struct object in the Java programming language (the standard mapping). The method writeObject should be 
used if an SQL structured type has been custom mapped to a class in the Java programming language. 


    x - an object representing the attributes of an SQL structured type 

*javax.sql.rowset.serial.SQLOutputImpl.writeTime(Time)*

public void writeTime(java.sql.Time x)
  throws |java.sql.SQLException|
         
Writes a java.sql.Time object in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL TIME before returning it to the database. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeTimestamp(Timestamp)*

public void writeTimestamp(java.sql.Timestamp x)
  throws |java.sql.SQLException|
         
Writes a java.sql.Timestamp object in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL TIMESTAMP before returning it to the database. 


    x - the value to pass to the database 

*javax.sql.rowset.serial.SQLOutputImpl.writeURL(URL)*

public void writeURL(java.net.URL url)
  throws |java.sql.SQLException|
         
Writes an java.sql.Type.DATALINK object in the Java programming language to this SQLOutputImpl object. The driver converts this value to a serializable SerialDatalink SQL DATALINK 
value before return it to the database. 


    url - an object representing a SQL DATALINK value 


