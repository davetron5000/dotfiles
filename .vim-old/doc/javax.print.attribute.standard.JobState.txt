*javax.print.attribute.standard.JobState* *JobState* JobState is a printing attribute class, an enumeration, that identifies 
 the current state of a print job.

public class JobState
  extends    |javax.print.attribute.EnumSyntax|
  implements |javax.print.attribute.PrintJobAttribute|

|javax.print.attribute.standard.JobState_Description|
|javax.print.attribute.standard.JobState_Fields|
|javax.print.attribute.standard.JobState_Constructors|
|javax.print.attribute.standard.JobState_Methods|

====================================================================================================================================================================================

*javax.print.attribute.standard.JobState_Fields*
|javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.ABORTED|
|javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.CANCELED|
|javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.COMPLETED|
|javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.PENDING|
|javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.PENDING_HELD|
|javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.PROCESSING|
|javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.PROCESSING_STOPPED|
|javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.UNKNOWN|

*javax.print.attribute.standard.JobState_Constructors*
|javax.print.attribute.standard.JobState(int)|Construct a new job state enumeration value with the given integer value.

*javax.print.attribute.standard.JobState_Methods*
|javax.print.attribute.standard.JobState.getCategory()|Get the printing attribute class which is to be used as the "category"   for this printing attribute value.
|javax.print.attribute.standard.JobState.getEnumValueTable()|Returns the enumeration value table for class JobState.
|javax.print.attribute.standard.JobState.getName()|Get the name of the category of which this attribute value is an   instance.
|javax.print.attribute.standard.JobState.getStringTable()|Returns the string table for class JobState.

*javax.print.attribute.standard.JobState_Description*

JobState is a printing attribute class, an enumeration, that identifies the current state of a print job. Class JobState defines standard job state values. A Print Service 
implementation only needs to report those job states which are appropriate for the particular implementation; it does not have to report every defined job state. The 
JobStateReasons(|javax.print.attribute.standard.JobStateReasons|) attribute augments the JobState attribute to give more detailed information about the job in the given job state. 

IPP Compatibility: The category name returned by getName() is the IPP attribute name. The enumeration's integer value is the IPP enum value. The toString() method returns the IPP 
string representation of the attribute value. 



*javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.ABORTED*

The job has been aborted by the system (usually while the job was in the PROCESSING or PROCESSING_STOPPED state), the printer has completed aborting the job, and all job status 
attributes have reached their final values for the job. While the printer is aborting the job, the job remains in its current state, but the job's 
JobStateReasons(|javax.print.attribute.standard.JobStateReasons|) attribute should contain the PROCESSING_TO_STOP_POINT and ABORTED_BY_SYSTEM values. When the job moves to the 
ABORTED state, the PROCESSING_TO_STOP_POINT value, if present, must be removed, but the ABORTED_BY_SYSTEM value, if present, must remain. 


*javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.CANCELED*

The job has been canceled by some human agency, the printer has completed canceling the job, and all job status attributes have reached their final values for the job. While the 
printer is canceling the job, the job remains in its current state, but the job's JobStateReasons(|javax.print.attribute.standard.JobStateReasons|) attribute should contain the 
PROCESSING_TO_STOP_POINT value and one of the CANCELED_BY_USER, CANCELED_BY_OPERATOR, or CANCELED_AT_DEVICE values. When the job moves to the CANCELED state, the 
PROCESSING_TO_STOP_POINT value, if present, must be removed, but the CANCELED_BY_xxx value, if present, must remain. 


*javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.COMPLETED*

The job has completed successfully or with warnings or errors after processing, all of the job media sheets have been successfully stacked in the appropriate output bin(s), and 
all job status attributes have reached their final values for the job. The job's JobStateReasons(|javax.print.attribute.standard.JobStateReasons|) attribute should contain one of 
these values: COMPLETED_SUCCESSFULLY, COMPLETED_WITH_WARNINGS, or COMPLETED_WITH_ERRORS. 


*javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.PENDING*

The job is a candidate to start processing, but is not yet processing. 


*javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.PENDING_HELD*

The job is not a candidate for processing for any number of reasons but will return to the PENDING state as soon as the reasons are no longer present. The job's 
JobStateReasons(|javax.print.attribute.standard.JobStateReasons|) attribute must indicate why the job is no longer a candidate for processing. 


*javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.PROCESSING*

The job is processing. One or more of the following activities is occurring: 

The job is using, or is attempting to use, one or more purely software processes that are analyzing, creating, or interpreting a PDL, etc. 

The job is using, or is attempting to use, one or more hardware devices that are interpreting a PDL, making marks on a medium, and/or performing finishing, such as stapling, etc. 

The printer has made the job ready for printing, but the output device is not yet printing it, either because the job hasn't reached the output device or because the job is queued 
in the output device or some other spooler, awaiting the output device to print it. 

When the job is in the PROCESSING state, the entire job state includes the detailed status represented in the printer's PrinterState(|javax.print.attribute.standard.PrinterState|) 
and PrinterStateReasons(|javax.print.attribute.standard.PrinterStateReasons|) attributes. 

Implementations may, though they need not, include additional values in the job's JobStateReasons(|javax.print.attribute.standard.JobStateReasons|) attribute to indicate the 
progress of the job, such as adding the JOB_PRINTING value to indicate when the output device is actually making marks on paper and/or the PROCESSING_TO_STOP_POINT value to 
indicate that the printer is in the process of canceling or aborting the job. 


*javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.PROCESSING_STOPPED*

The job has stopped while processing for any number of reasons and will return to the PROCESSING state as soon as the reasons are no longer present. 

The job's JobStateReasons(|javax.print.attribute.standard.JobStateReasons|) attribute may indicate why the job has stopped processing. For example, if the output device is 
stopped, the PRINTER_STOPPED value may be included in the job's JobStateReasons(|javax.print.attribute.standard.JobStateReasons|) attribute. 

Note: When an output device is stopped, the device usually indicates its condition in human readable form locally at the device. A client can obtain more complete device status 
remotely by querying the printer's PrinterState(|javax.print.attribute.standard.PrinterState|) and PrinterStateReasons(|javax.print.attribute.standard.PrinterStateReasons|) 
attributes. 


*javax.print.attribute.standard.JobState_javax.print.attribute.standard.JobState.UNKNOWN*

The job state is unknown. 



*javax.print.attribute.standard.JobState(int)*

protected JobState(int value)

Construct a new job state enumeration value with the given integer value. 

    value - Integer value. 

*javax.print.attribute.standard.JobState.getCategory()*

public final |java.lang.Class|<? extends javax.print.attribute.Attribute> getCategory()

Get the printing attribute class which is to be used as the "category" for this printing attribute value. 

For class JobState and any vendor-defined subclasses, the category is class JobState itself. 



    Returns: Printing attribute class (category), an instance of class {@link java.lang.Class java.lang.Class}. 

*javax.print.attribute.standard.JobState.getEnumValueTable()*

protected |javax.print.attribute.EnumSyntax|[] getEnumValueTable()

Returns the enumeration value table for class JobState. 



*javax.print.attribute.standard.JobState.getName()*

public final |java.lang.String| getName()

Get the name of the category of which this attribute value is an instance. 

For class JobState and any vendor-defined subclasses, the category name is "job-state". 



    Returns: Attribute category name. 

*javax.print.attribute.standard.JobState.getStringTable()*

protected |java.lang.String|[] getStringTable()

Returns the string table for class JobState. 




