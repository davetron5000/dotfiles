*javax.xml.validation.ValidatorHandler* *ValidatorHandler* Streaming validator that works on SAX stream.

public abstract class ValidatorHandler
  extends    |java.lang.Object|
  implements |org.xml.sax.ContentHandler|

|javax.xml.validation.ValidatorHandler_Description|
|javax.xml.validation.ValidatorHandler_Fields|
|javax.xml.validation.ValidatorHandler_Constructors|
|javax.xml.validation.ValidatorHandler_Methods|

====================================================================================================================================================================================

*javax.xml.validation.ValidatorHandler_Constructors*
|javax.xml.validation.ValidatorHandler()|Constructor for derived classes.

*javax.xml.validation.ValidatorHandler_Methods*
|javax.xml.validation.ValidatorHandler.getContentHandler()|Gets theContentHandlerwhich receives the  augmented validation result.
|javax.xml.validation.ValidatorHandler.getErrorHandler()|Gets the currentErrorHandlerset to thisValidatorHandler.
|javax.xml.validation.ValidatorHandler.getFeature(String)|Look up the value of a feature flag.
|javax.xml.validation.ValidatorHandler.getProperty(String)|Look up the value of a property.
|javax.xml.validation.ValidatorHandler.getResourceResolver()|Gets the currentLSResourceResolverset to thisValidatorHandler.
|javax.xml.validation.ValidatorHandler.getTypeInfoProvider()|Obtains theTypeInfoProviderimplementation of thisValidatorHandler.
|javax.xml.validation.ValidatorHandler.setContentHandler(ContentHandler)|Sets theContentHandlerwhich receives  the augmented validation result.
|javax.xml.validation.ValidatorHandler.setErrorHandler(ErrorHandler)|Sets theErrorHandlerto receive errors encountered  during the validation.
|javax.xml.validation.ValidatorHandler.setFeature(String,boolean)|Set the value of a feature flag.
|javax.xml.validation.ValidatorHandler.setProperty(String,Object)|Set the value of a property.
|javax.xml.validation.ValidatorHandler.setResourceResolver(LSResourceResolver)|Sets theLSResourceResolverto customize  resource resolution while in a validation episode.

*javax.xml.validation.ValidatorHandler_Description*

Streaming validator that works on SAX stream. 

A (|javax.xml.validation.ValidatorHandler|) object is a thread-unsafe, non-reentrant object. In other words, it is the application's responsibility to make sure that one 
(|javax.xml.validation.ValidatorHandler|) object is not used from more than one thread at any given time. 

(|javax.xml.validation.ValidatorHandler|) checks if the SAX events follow the set of constraints described in the associated (|javax.xml.validation.Schema|) , and additionally it 
may modify the SAX events (for example by adding default values, etc.) 

(|javax.xml.validation.ValidatorHandler|) extends from (|org.xml.sax.ContentHandler|) , but it refines the underlying (|org.xml.sax.ContentHandler|) in the following way: 

startElement/endElement events must receive non-null String for uri, localName, and qname, even though SAX allows some of them to be null. Similarly, the user-specified 
(|org.xml.sax.ContentHandler|) will receive non-null Strings for all three parameters. 

Applications must ensure that (|javax.xml.validation.ValidatorHandler|) 's (|org.xml.sax.ContentHandler|) and (|org.xml.sax.ContentHandler|) are invoked properly. Similarly, the 
user-specified (|org.xml.sax.ContentHandler|) will receive startPrefixMapping/endPrefixMapping events. If the (|javax.xml.validation.ValidatorHandler|) introduces additional 
namespace bindings, the user-specified (|org.xml.sax.ContentHandler|) will receive additional startPrefixMapping/endPrefixMapping events. 

(|org.xml.sax.Attributes|) for the (|org.xml.sax.ContentHandler|) method may or may not include xmlns* attributes. 



A (|javax.xml.validation.ValidatorHandler|) is automatically reset every time the startDocument method is invoked. 

Recognized Properties and Features 

This spec defines the following feature that must be recognized by all (|javax.xml.validation.ValidatorHandler|) implementations. 

http://xml.org/sax/features/namespace-prefixes 

This feature controls how a (|javax.xml.validation.ValidatorHandler|) introduces namespace bindings that were not present in the original SAX event stream. When this feature is 
set to true, it must make sure that the user's (|org.xml.sax.ContentHandler|) will see the corresponding xmlns* attribute in the (|org.xml.sax.Attributes|) object of the 
(|org.xml.sax.ContentHandler|) callback. Otherwise, xmlns* attributes must not be added to (|org.xml.sax.Attributes|) that's passed to the user-specified 
(|org.xml.sax.ContentHandler|) . 

(Note that regardless of this switch, namespace bindings are always notified to applications through (|org.xml.sax.ContentHandler|) and (|org.xml.sax.ContentHandler|) methods of 
the (|org.xml.sax.ContentHandler|) specified by the user.) 

Note that this feature does NOT affect the way a (|javax.xml.validation.ValidatorHandler|) receives SAX events. It merely changes the way it augments SAX events. 

This feature is set to false by default. 



*javax.xml.validation.ValidatorHandler()*

protected ValidatorHandler()

Constructor for derived classes. 

The constructor does nothing. 

Derived classes must create (|javax.xml.validation.ValidatorHandler|) objects that have null (|org.xml.sax.ErrorHandler|) and null (|org.w3c.dom.ls.LSResourceResolver|) . 


*javax.xml.validation.ValidatorHandler.getContentHandler()*

public abstract |org.xml.sax.ContentHandler| getContentHandler()

Gets the (|org.xml.sax.ContentHandler|) which receives the augmented validation result. 



    Returns: This method returns the object that was last set through the {@link #getContentHandler()} method, or null if that method has never been called since this {@link ValidatorHandler} 
             has created. 

*javax.xml.validation.ValidatorHandler.getErrorHandler()*

public abstract |org.xml.sax.ErrorHandler| getErrorHandler()

Gets the current (|org.xml.sax.ErrorHandler|) set to this (|javax.xml.validation.ValidatorHandler|) . 



    Returns: This method returns the object that was last set through the {@link #setErrorHandler(ErrorHandler)} method, or null if that method has never been called since this {@link 
             ValidatorHandler} has created. 

*javax.xml.validation.ValidatorHandler.getFeature(String)*

public boolean getFeature(java.lang.String name)
  throws |org.xml.sax.SAXNotRecognizedException|
         |org.xml.sax.SAXNotSupportedException|
         
Look up the value of a feature flag. 

The feature name is any fully-qualified URI. It is possible for a (|javax.xml.validation.ValidatorHandler|) to recognize a feature name but temporarily be unable to return its 
value. Some feature values may be available only in specific contexts, such as before, during, or after a validation. 

Implementors are free (and encouraged) to invent their own features, using names built on their own URIs. 


    name - The feature name, which is a non-null fully-qualified URI. 

    Returns: The current value of the feature (true or false). 

*javax.xml.validation.ValidatorHandler.getProperty(String)*

public |java.lang.Object| getProperty(java.lang.String name)
  throws |org.xml.sax.SAXNotRecognizedException|
         |org.xml.sax.SAXNotSupportedException|
         
Look up the value of a property. 

The property name is any fully-qualified URI. It is possible for a (|javax.xml.validation.ValidatorHandler|) to recognize a property name but temporarily be unable to return its 
value. Some property values may be available only in specific contexts, such as before, during, or after a validation. 

(|javax.xml.validation.ValidatorHandler|) s are not required to recognize any specific property names. 

Implementors are free (and encouraged) to invent their own properties, using names built on their own URIs. 


    name - The property name, which is a non-null fully-qualified URI. 

    Returns: The current value of the property. 

*javax.xml.validation.ValidatorHandler.getResourceResolver()*

public abstract |org.w3c.dom.ls.LSResourceResolver| getResourceResolver()

Gets the current (|org.w3c.dom.ls.LSResourceResolver|) set to this (|javax.xml.validation.ValidatorHandler|) . 



    Returns: This method returns the object that was last set through the {@link #setResourceResolver(LSResourceResolver)} method, or null if that method has never been called since this 
             {@link ValidatorHandler} has created. 

*javax.xml.validation.ValidatorHandler.getTypeInfoProvider()*

public abstract |javax.xml.validation.TypeInfoProvider| getTypeInfoProvider()

Obtains the (|javax.xml.validation.TypeInfoProvider|) implementation of this (|javax.xml.validation.ValidatorHandler|) . 

The obtained (|javax.xml.validation.TypeInfoProvider|) can be queried during a parse to access the type information determined by the validator. 

Some schema languages do not define the notion of type, for those languages, this method may not be supported. However, to be compliant with this specification, implementations 
for W3C XML Schema 1.0 must support this operation. 



    Returns: null if the validator / schema language does not support the notion of {@link org.w3c.dom.TypeInfo}. Otherwise a non-null valid {@link TypeInfoProvider}. 

*javax.xml.validation.ValidatorHandler.setContentHandler(ContentHandler)*

public abstract void setContentHandler(org.xml.sax.ContentHandler receiver)

Sets the (|org.xml.sax.ContentHandler|) which receives the augmented validation result. 

When a (|org.xml.sax.ContentHandler|) is specified, a (|javax.xml.validation.ValidatorHandler|) will work as a filter and basically copy the incoming events to the specified 
(|org.xml.sax.ContentHandler|) . 

In doing so, a (|javax.xml.validation.ValidatorHandler|) may modify the events, for example by adding defaulted attributes. 

A (|javax.xml.validation.ValidatorHandler|) may buffer events to certain extent, but to allow (|javax.xml.validation.ValidatorHandler|) to be used by a parser, the following 
requirement has to be met. 

When (|org.xml.sax.ContentHandler|) , (|org.xml.sax.ContentHandler|) , (|org.xml.sax.ContentHandler|) , or (|org.xml.sax.ContentHandler|) are invoked on a 
(|javax.xml.validation.ValidatorHandler|) , the same method on the user-specified (|org.xml.sax.ContentHandler|) must be invoked for the same event before the callback returns. 
(|javax.xml.validation.ValidatorHandler|) may not introduce new elements that were not present in the input. 

(|javax.xml.validation.ValidatorHandler|) may not remove attributes that were present in the input. 



When a callback method on the specified (|org.xml.sax.ContentHandler|) throws an exception, the same exception object must be thrown from the 
(|javax.xml.validation.ValidatorHandler|) . The (|org.xml.sax.ErrorHandler|) should not be notified of such an exception. 

This method can be called even during a middle of a validation. 


    receiver - A {@link ContentHandler} or a null value. 

*javax.xml.validation.ValidatorHandler.setErrorHandler(ErrorHandler)*

public abstract void setErrorHandler(org.xml.sax.ErrorHandler errorHandler)

Sets the (|org.xml.sax.ErrorHandler|) to receive errors encountered during the validation. 

Error handler can be used to customize the error handling process during a validation. When an (|org.xml.sax.ErrorHandler|) is set, errors found during the validation will be 
first sent to the (|org.xml.sax.ErrorHandler|) . 

The error handler can abort further validation immediately by throwing (|org.xml.sax.SAXException|) from the handler. Or for example it can print an error to the screen and try to 
continue the validation by returning normally from the (|org.xml.sax.ErrorHandler|) If any (|java.lang.Throwable|) is thrown from an (|org.xml.sax.ErrorHandler|) , the same 
(|java.lang.Throwable|) object will be thrown toward the root of the call stack. 

(|javax.xml.validation.ValidatorHandler|) is not allowed to throw (|org.xml.sax.SAXException|) without first reporting it to (|org.xml.sax.ErrorHandler|) . 

When the (|org.xml.sax.ErrorHandler|) is null, the implementation will behave as if the following (|org.xml.sax.ErrorHandler|) is set: 

class DraconianErrorHandler implements (|org.xml.sax.ErrorHandler|) { public void fatalError( (|org.xml.sax.SAXParseException|) e ) throws (|org.xml.sax.SAXException|) { throw e; 
} public void error( (|org.xml.sax.SAXParseException|) e ) throws (|org.xml.sax.SAXException|) { throw e; } public void warning( (|org.xml.sax.SAXParseException|) e ) throws 
(|org.xml.sax.SAXException|) { // noop } } 



When a new (|javax.xml.validation.ValidatorHandler|) object is created, initially this field is set to null. 


    errorHandler - A new error handler to be set. This parameter can be null. 

*javax.xml.validation.ValidatorHandler.setFeature(String,boolean)*

public void setFeature(
  java.lang.String name,
  boolean value)
  throws |org.xml.sax.SAXNotRecognizedException|
         |org.xml.sax.SAXNotSupportedException|
         
Set the value of a feature flag. 

Feature can be used to control the way a (|javax.xml.validation.ValidatorHandler|) parses schemas, although (|javax.xml.validation.ValidatorHandler|) s are not required to 
recognize any specific property names. 

The feature name is any fully-qualified URI. It is possible for a (|javax.xml.validation.ValidatorHandler|) to expose a feature value but to be unable to change the current value. 
Some feature values may be immutable or mutable only in specific contexts, such as before, during, or after a validation. 


    name - The feature name, which is a non-null fully-qualified URI. 
    value - The requested value of the feature (true or false). 

*javax.xml.validation.ValidatorHandler.setProperty(String,Object)*

public void setProperty(
  java.lang.String name,
  java.lang.Object object)
  throws |org.xml.sax.SAXNotRecognizedException|
         |org.xml.sax.SAXNotSupportedException|
         
Set the value of a property. 

The property name is any fully-qualified URI. It is possible for a (|javax.xml.validation.ValidatorHandler|) to recognize a property name but to be unable to change the current 
value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a validation. 

(|javax.xml.validation.ValidatorHandler|) s are not required to recognize setting any specific property names. 


    name - The property name, which is a non-null fully-qualified URI. 
    object - The requested value for the property. 

*javax.xml.validation.ValidatorHandler.setResourceResolver(LSResourceResolver)*

public abstract void setResourceResolver(org.w3c.dom.ls.LSResourceResolver resourceResolver)

Sets the (|org.w3c.dom.ls.LSResourceResolver|) to customize resource resolution while in a validation episode. 

(|javax.xml.validation.ValidatorHandler|) uses a (|org.w3c.dom.ls.LSResourceResolver|) when it needs to locate external resources while a validation, although exactly what 
constitutes "locating external resources" is up to each schema language. 

When the (|org.w3c.dom.ls.LSResourceResolver|) is null, the implementation will behave as if the following (|org.w3c.dom.ls.LSResourceResolver|) is set: 

class DumbLSResourceResolver implements (|org.w3c.dom.ls.LSResourceResolver|) { public (|org.w3c.dom.ls.LSInput|) resolveResource( String publicId, String systemId, String 
baseURI) { 

return null; // always return null } } 



If a (|org.w3c.dom.ls.LSResourceResolver|) throws a (|java.lang.RuntimeException|) (or instances of its derived classes), then the (|javax.xml.validation.ValidatorHandler|) will 
abort the parsing and the caller of the validate method will receive the same (|java.lang.RuntimeException|) . 

When a new (|javax.xml.validation.ValidatorHandler|) object is created, initially this field is set to null. 


    resourceResolver - A new resource resolver to be set. This parameter can be null. 


