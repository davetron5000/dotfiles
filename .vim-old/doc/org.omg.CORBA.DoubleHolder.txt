*org.omg.CORBA.DoubleHolder* *DoubleHolder* The Holder for Double.

public final class DoubleHolder
  extends    |java.lang.Object|
  implements |org.omg.CORBA.portable.Streamable|

|org.omg.CORBA.DoubleHolder_Description|
|org.omg.CORBA.DoubleHolder_Fields|
|org.omg.CORBA.DoubleHolder_Constructors|
|org.omg.CORBA.DoubleHolder_Methods|

================================================================================

*org.omg.CORBA.DoubleHolder_Fields*
|double_org.omg.CORBA.DoubleHolder.value|

*org.omg.CORBA.DoubleHolder_Constructors*
|org.omg.CORBA.DoubleHolder()|Constructs a new DoubleHolder object with its  va
|org.omg.CORBA.DoubleHolder(double)|Constructs a new DoubleHolder object for th

*org.omg.CORBA.DoubleHolder_Methods*
|org.omg.CORBA.DoubleHolder._read(InputStream)|Read a double value from the inp
|org.omg.CORBA.DoubleHolder._type()|Return the TypeCode of this holder object.
|org.omg.CORBA.DoubleHolder._write(OutputStream)|Write the double value stored 

*org.omg.CORBA.DoubleHolder_Description*

The Holder for Double. For more information on Holder files, see "Generated 
Files: Holder Files". A Holder class for a double that is used to store "out" 
and "inout" parameters in IDL methods. If an IDL method signature has an IDL 
double as an "out" or "inout" parameter, the programmer must pass an instance 
of DoubleHolder as the corresponding parameter in the method invocation; for 
"inout" parameters, the programmer must also fill the "in" value to be sent to 
the server. Before the method invocation returns, the ORB will fill in the 
value corresponding to the "out" value returned from the server. 

If myDoubleHolder is an instance of DoubleHolder, the value stored in its value 
field can be accessed with myDoubleHolder.value. 


*double_org.omg.CORBA.DoubleHolder.value*

The Holder for Double. For more information on Holder files, see "Generated 
Files: Holder Files". A Holder class for a double that is used to store "out" 
and "inout" parameters in IDL methods. If an IDL method signature has an IDL 
double as an "out" or "inout" parameter, the programmer must pass an instance 
of DoubleHolder as the corresponding parameter in the method invocation; for 
"inout" parameters, the programmer must also fill the "in" value to be sent to 
the server. Before the method invocation returns, the ORB will fill in the 
value corresponding to the "out" value returned from the server. 

If myDoubleHolder is an instance of DoubleHolder, the value stored in its value 
field can be accessed with myDoubleHolder.value. 



*org.omg.CORBA.DoubleHolder()*

public DoubleHolder()

Constructs a new DoubleHolder object with its value field initialized to 0.0. 


*org.omg.CORBA.DoubleHolder(double)*

public DoubleHolder(double initial)

Constructs a new DoubleHolder object for the given double. 

    initial - the double with which to initialize the value field of the new DoubleHolder 
       object 

*org.omg.CORBA.DoubleHolder._read(InputStream)*

public void _read(org.omg.CORBA.portable.InputStream input)

Read a double value from the input stream and store it in the value member. 

    input - the InputStream to read from. 

*org.omg.CORBA.DoubleHolder._type()*

public |org.omg.CORBA.TypeCode| _type()

Return the TypeCode of this holder object. 


    Returns: the TypeCode object. 
*org.omg.CORBA.DoubleHolder._write(OutputStream)*

public void _write(org.omg.CORBA.portable.OutputStream output)

Write the double value stored in this holder to an OutputStream. 

    output - the OutputStream to write into. 


