*javax.management.loading.PrivateMLet* *PrivateMLet* An MLet that is not added t

public class PrivateMLet
  extends    |javax.management.loading.MLet|
  implements |javax.management.loading.PrivateClassLoader|

|javax.management.loading.PrivateMLet_Description|
|javax.management.loading.PrivateMLet_Fields|
|javax.management.loading.PrivateMLet_Constructors|
|javax.management.loading.PrivateMLet_Methods|

================================================================================

*javax.management.loading.PrivateMLet_Constructors*
|javax.management.loading.PrivateMLet(URL[],boolean)|Constructs a new PrivateML
|javax.management.loading.PrivateMLet(URL[],ClassLoader,boolean)|Constructs a n
|javax.management.loading.PrivateMLet(URL[],ClassLoader,URLStreamHandlerFactory,boolean)|

*javax.management.loading.PrivateMLet_Description*

An MLet that is not added to the 
(|javax.management.loading.ClassLoaderRepository|) . This class acts exactly 
like its parent class, (|javax.management.loading.MLet|) , with one exception. 
When a PrivateMLet is registered in an MBean server, it is not added to that 
MBean server's (|javax.management.loading.ClassLoaderRepository|) . This is 
true because this class implements the interface 
(|javax.management.loading.PrivateClassLoader|) . 


*javax.management.loading.PrivateMLet(URL[],boolean)*

public PrivateMLet(
  java.net.URL[] urls,
  boolean delegateToCLR)

Constructs a new PrivateMLet for the specified URLs using the default 
delegation parent ClassLoader. The URLs will be searched in the order specified 
for classes and resources after first searching in the parent class loader. 

    urls - The URLs from which to load classes and resources. 
    delegateToCLR - True if, when a class is not found in either the parent ClassLoader or the 
       URLs, the MLet should delegate to its containing MBeanServer's {@link 
       ClassLoaderRepository}. 

*javax.management.loading.PrivateMLet(URL[],ClassLoader,boolean)*

public PrivateMLet(
  java.net.URL[] urls,
  java.lang.ClassLoader parent,
  boolean delegateToCLR)

Constructs a new PrivateMLet for the given URLs. The URLs will be searched in 
the order specified for classes and resources after first searching in the 
specified parent class loader. The parent argument will be used as the parent 
class loader for delegation. The factory argument will be used as the stream 
handler factory to obtain protocol handlers when creating new URLs. 

    urls - The URLs from which to load classes and resources. 
    parent - The parent class loader for delegation. 
    delegateToCLR - True if, when a class is not found in either the parent ClassLoader or the 
       URLs, the MLet should delegate to its containing MBeanServer's {@link 
       ClassLoaderRepository}. 

*javax.management.loading.PrivateMLet(URL[],ClassLoader,URLStreamHandlerFactory,boolean)*

public PrivateMLet(
  java.net.URL[] urls,
  java.lang.ClassLoader parent,
  java.net.URLStreamHandlerFactory factory,
  boolean delegateToCLR)

Constructs a new PrivateMLet for the specified URLs, parent class loader, and 
URLStreamHandlerFactory. The parent argument will be used as the parent class 
loader for delegation. The factory argument will be used as the stream handler 
factory to obtain protocol handlers when creating new URLs. 

    urls - The URLs from which to load classes and resources. 
    parent - The parent class loader for delegation. 
    factory - The URLStreamHandlerFactory to use when creating URLs. 
    delegateToCLR - True if, when a class is not found in either the parent ClassLoader or the 
       URLs, the MLet should delegate to its containing MBeanServer's {@link 
       ClassLoaderRepository}. 

