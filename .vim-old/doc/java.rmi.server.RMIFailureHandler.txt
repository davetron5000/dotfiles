*java.rmi.server.RMIFailureHandler* *RMIFailureHandler* An RMIFailureHandler can be registered via the
 RMISocketFactory.setFailureHandler call.

public interface interface RMIFailureHandler


|java.rmi.server.RMIFailureHandler_Description|
|java.rmi.server.RMIFailureHandler_Fields|
|java.rmi.server.RMIFailureHandler_Constructors|
|java.rmi.server.RMIFailureHandler_Methods|

====================================================================================================================================================================================

*java.rmi.server.RMIFailureHandler_Methods*
|java.rmi.server.RMIFailureHandler.failure(Exception)|The failure callback is invoked when the RMI  runtime is unable to create a ServerSocket via the  RMISocketFactory.

*java.rmi.server.RMIFailureHandler_Description*

An RMIFailureHandler can be registered via the RMISocketFactory.setFailureHandler call. The failure method of the handler is invoked when the RMI runtime is unable to create a 
ServerSocket to listen for incoming calls. The failure method returns a boolean indicating whether the runtime should attempt to re-create the ServerSocket. 



*java.rmi.server.RMIFailureHandler.failure(Exception)*

public boolean failure(java.lang.Exception ex)

The failure callback is invoked when the RMI runtime is unable to create a ServerSocket via the RMISocketFactory. An RMIFailureHandler is registered via a call to 
RMISocketFacotry.setFailureHandler. If no failure handler is installed, the default behavior is to attempt to re-create the ServerSocket. 


    ex - the exception that occurred during ServerSocket creation 

    Returns: if true, the RMI runtime attempts to retry ServerSocket creation 


