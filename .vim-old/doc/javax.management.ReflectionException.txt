*javax.management.ReflectionException* *ReflectionException* Represents exceptio

public class ReflectionException
  extends    |javax.management.JMException|

|javax.management.ReflectionException_Description|
|javax.management.ReflectionException_Fields|
|javax.management.ReflectionException_Constructors|
|javax.management.ReflectionException_Methods|

================================================================================

*javax.management.ReflectionException_Constructors*
|javax.management.ReflectionException(Exception)|Creates a ReflectionException 
|javax.management.ReflectionException(Exception,String)|Creates a ReflectionExc

*javax.management.ReflectionException_Methods*
|javax.management.ReflectionException.getCause()|Returns the actualExceptionthr
|javax.management.ReflectionException.getTargetException()|Returns the actualEx

*javax.management.ReflectionException_Description*

Represents exceptions thrown in the MBean server when using the 
java.lang.reflect classes to invoke methods on MBeans. It "wraps" the actual 
java.lang.Exception thrown. 


*javax.management.ReflectionException(Exception)*

public ReflectionException(java.lang.Exception e)

Creates a ReflectionException that wraps the actual java.lang.Exception. 

    e - the wrapped exception. 

*javax.management.ReflectionException(Exception,String)*

public ReflectionException(
  java.lang.Exception e,
  java.lang.String message)

Creates a ReflectionException that wraps the actual java.lang.Exception with a 
detail message. 

    e - the wrapped exception. 
    message - the detail message. 

*javax.management.ReflectionException.getCause()*

public |java.lang.Throwable| getCause()

Returns the actual (|java.lang.Exception|) thrown. 


    Returns: the wrapped {@link Exception}. 
*javax.management.ReflectionException.getTargetException()*

public |java.lang.Exception| getTargetException()

Returns the actual (|java.lang.Exception|) thrown. 


    Returns: the wrapped {@link Exception}. 

