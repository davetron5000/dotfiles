*javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler* *BasicComboPopup.InvocationMouseHandler* A listener to be registered upon the combo box
 (not its popup menu)
 to ha

protected class BasicComboPopup.InvocationMouseHandler
  extends    |java.awt.event.MouseAdapter|

|javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler_Description|
|javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler_Fields|
|javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler_Constructors|
|javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler_Methods|

====================================================================================================================================================================================

*javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler_Constructors*
|javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler()|

*javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler_Methods*
|javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler.mousePressed(MouseEvent)|Responds to mouse-pressed events on the combo box.
|javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler.mouseReleased(MouseEvent)|Responds to the user terminating  a click or drag that began on the combo box.

*javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler_Description*

A listener to be registered upon the combo box (not its popup menu) to handle mouse events that affect the state of the popup menu. The main purpose of this listener is to make 
the popup menu appear and disappear. This listener also helps with click-and-drag scenarios by setting the selection if the mouse was released over the list during a drag. 

Warning: We recommend that you not create subclasses of this class. If you absolutely must create a subclass, be sure to invoke the superclass version of each method. 



*javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler()*

protected BasicComboPopup.InvocationMouseHandler()




*javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler.mousePressed(MouseEvent)*

public void mousePressed(java.awt.event.MouseEvent e)

Responds to mouse-pressed events on the combo box. 


    e - the mouse-press event to be handled 

*javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler.mouseReleased(MouseEvent)*

public void mouseReleased(java.awt.event.MouseEvent e)

Responds to the user terminating a click or drag that began on the combo box. 


    e - the mouse-release event to be handled 


