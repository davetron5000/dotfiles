*org.omg.CORBA.BooleanHolder* *BooleanHolder* The Holder for Boolean.

public final class BooleanHolder
  extends    |java.lang.Object|
  implements |org.omg.CORBA.portable.Streamable|

|org.omg.CORBA.BooleanHolder_Description|
|org.omg.CORBA.BooleanHolder_Fields|
|org.omg.CORBA.BooleanHolder_Constructors|
|org.omg.CORBA.BooleanHolder_Methods|

================================================================================

*org.omg.CORBA.BooleanHolder_Fields*
|boolean_org.omg.CORBA.BooleanHolder.value|

*org.omg.CORBA.BooleanHolder_Constructors*
|org.omg.CORBA.BooleanHolder()|Constructs a new BooleanHolder object with its  
|org.omg.CORBA.BooleanHolder(boolean)|Constructs a new BooleanHolder object wit

*org.omg.CORBA.BooleanHolder_Methods*
|org.omg.CORBA.BooleanHolder._read(InputStream)|Reads unmarshalled data from in
|org.omg.CORBA.BooleanHolder._type()|Retrieves the TypeCode object that corresp
|org.omg.CORBA.BooleanHolder._write(OutputStream)|Marshals the value in this Bo

*org.omg.CORBA.BooleanHolder_Description*

The Holder for Boolean. For more information on Holder files, see "Generated 
Files: Holder Files". A Holder class for a boolean that is used to store "out" 
and "inout" parameters in IDL methods. If an IDL method signature has an IDL 
boolean as an "out" or "inout" parameter, the programmer must pass an instance 
of BooleanHolder as the corresponding parameter in the method invocation; for 
"inout" parameters, the programmer must also fill the "in" value to be sent to 
the server. Before the method invocation returns, the ORB will fill in the 
value corresponding to the "out" value returned from the server. 

If myBooleanHolder is an instance of BooleanHolder, the value stored in its 
value field can be accessed with myBooleanHolder.value. 


*boolean_org.omg.CORBA.BooleanHolder.value*

The Holder for Boolean. For more information on Holder files, see "Generated 
Files: Holder Files". A Holder class for a boolean that is used to store "out" 
and "inout" parameters in IDL methods. If an IDL method signature has an IDL 
boolean as an "out" or "inout" parameter, the programmer must pass an instance 
of BooleanHolder as the corresponding parameter in the method invocation; for 
"inout" parameters, the programmer must also fill the "in" value to be sent to 
the server. Before the method invocation returns, the ORB will fill in the 
value corresponding to the "out" value returned from the server. 

If myBooleanHolder is an instance of BooleanHolder, the value stored in its 
value field can be accessed with myBooleanHolder.value. 



*org.omg.CORBA.BooleanHolder()*

public BooleanHolder()

Constructs a new BooleanHolder object with its value field initialized to 
false. 


*org.omg.CORBA.BooleanHolder(boolean)*

public BooleanHolder(boolean initial)

Constructs a new BooleanHolder object with its value field initialized with the 
given boolean. 

    initial - the boolean with which to initialize the value field of the newly-created 
       BooleanHolder object 

*org.omg.CORBA.BooleanHolder._read(InputStream)*

public void _read(org.omg.CORBA.portable.InputStream input)

Reads unmarshalled data from input and assigns it to this BooleanHolder 
object's value field. 

    input - the InputStream object containing CDR formatted data from the wire 

*org.omg.CORBA.BooleanHolder._type()*

public |org.omg.CORBA.TypeCode| _type()

Retrieves the TypeCode object that corresponds to the value held in this 
BooleanHolder object. 


    Returns: the TypeCode for the value held in this BooleanHolder object 
*org.omg.CORBA.BooleanHolder._write(OutputStream)*

public void _write(org.omg.CORBA.portable.OutputStream output)

Marshals the value in this BooleanHolder object's value field to the output 
stream output. 

    output - the OutputStream which will contain the CDR formatted data 


