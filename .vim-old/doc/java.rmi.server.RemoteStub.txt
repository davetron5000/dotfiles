*java.rmi.server.RemoteStub* *RemoteStub* The RemoteStub class is the common superclass to client
 stubs and provides the framework to support a wide range of remote
 reference sem

public abstract class RemoteStub
  extends    |java.rmi.server.RemoteObject|

|java.rmi.server.RemoteStub_Description|
|java.rmi.server.RemoteStub_Fields|
|java.rmi.server.RemoteStub_Constructors|
|java.rmi.server.RemoteStub_Methods|

====================================================================================================================================================================================

*java.rmi.server.RemoteStub_Constructors*
|java.rmi.server.RemoteStub()|Constructs a RemoteStub.
|java.rmi.server.RemoteStub(RemoteRef)|Constructs a RemoteStub, with the specified remote  reference.

*java.rmi.server.RemoteStub_Methods*
|java.rmi.server.RemoteStub.setRef(RemoteStub,RemoteRef)|Sets the remote reference inside the remote stub.

*java.rmi.server.RemoteStub_Description*

The RemoteStub class is the common superclass to client stubs and provides the framework to support a wide range of remote reference semantics. Stub objects are surrogates that 
support exactly the same set of remote interfaces defined by the actual implementation of the remote object. 



*java.rmi.server.RemoteStub()*

protected RemoteStub()

Constructs a RemoteStub. 


*java.rmi.server.RemoteStub(RemoteRef)*

protected RemoteStub(java.rmi.server.RemoteRef ref)

Constructs a RemoteStub, with the specified remote reference. 

    ref - the remote reference 

*java.rmi.server.RemoteStub.setRef(RemoteStub,RemoteRef)*

protected static void setRef(
  java.rmi.server.RemoteStub stub,
  java.rmi.server.RemoteRef ref)

Sets the remote reference inside the remote stub. 

    Deprecated: no replacement.  The <code>setRef</code> method
 is not needed since <code>RemoteStub</code>s can be created with
 the <code>RemoteStub(RemoteRef)</code> constructor.

    stub - the remote stub 
    ref - the remote reference 


