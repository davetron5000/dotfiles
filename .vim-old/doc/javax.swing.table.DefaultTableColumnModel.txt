*javax.swing.table.DefaultTableColumnModel* *DefaultTableColumnModel* The standard column-handler for a JTable.

public class DefaultTableColumnModel
  extends    |java.lang.Object|
  implements |javax.swing.table.TableColumnModel|
             |java.beans.PropertyChangeListener|
             |javax.swing.event.ListSelectionListener|
             |java.io.Serializable|

|javax.swing.table.DefaultTableColumnModel_Description|
|javax.swing.table.DefaultTableColumnModel_Fields|
|javax.swing.table.DefaultTableColumnModel_Constructors|
|javax.swing.table.DefaultTableColumnModel_Methods|

====================================================================================================================================================================================

*javax.swing.table.DefaultTableColumnModel_Fields*
|javax.swing.event.ChangeEvent_javax.swing.table.DefaultTableColumnModel.changeEvent|
|int_javax.swing.table.DefaultTableColumnModel.columnMargin|
|boolean_javax.swing.table.DefaultTableColumnModel.columnSelectionAllowed|
|javax.swing.event.EventListenerList_javax.swing.table.DefaultTableColumnModel.listenerList|
|javax.swing.ListSelectionModel_javax.swing.table.DefaultTableColumnModel.selectionModel|
|java.util.Vector<javax.swing.table.TableColumn>_javax.swing.table.DefaultTableColumnModel.tableColumns|
|int_javax.swing.table.DefaultTableColumnModel.totalColumnWidth|

*javax.swing.table.DefaultTableColumnModel_Constructors*
|javax.swing.table.DefaultTableColumnModel()|Creates a default table column model.

*javax.swing.table.DefaultTableColumnModel_Methods*
|javax.swing.table.DefaultTableColumnModel.addColumn(TableColumn)|Appends aColumn to the end of the   tableColumns array.
|javax.swing.table.DefaultTableColumnModel.addColumnModelListener(TableColumnModelListener)|Adds a listener for table column model events.
|javax.swing.table.DefaultTableColumnModel.createSelectionModel()|Creates a new default list selection model.
|javax.swing.table.DefaultTableColumnModel.fireColumnAdded(TableColumnModelEvent)|Notifies all listeners that have registered interest for  notification on this event type.
|javax.swing.table.DefaultTableColumnModel.fireColumnMarginChanged()|Notifies all listeners that have registered interest for  notification on this event type.
|javax.swing.table.DefaultTableColumnModel.fireColumnMoved(TableColumnModelEvent)|Notifies all listeners that have registered interest for  notification on this event type.
|javax.swing.table.DefaultTableColumnModel.fireColumnRemoved(TableColumnModelEvent)|Notifies all listeners that have registered interest for  notification on this event type.
|javax.swing.table.DefaultTableColumnModel.fireColumnSelectionChanged(ListSelectionEvent)|Notifies all listeners that have registered interest for  notification on this event type
|javax.swing.table.DefaultTableColumnModel.getColumn(int)|Returns the TableColumn object for the column  at columnIndex.
|javax.swing.table.DefaultTableColumnModel.getColumnCount()|Returns the number of columns in the tableColumns array.
|javax.swing.table.DefaultTableColumnModel.getColumnIndex(Object)|Returns the index of the first column in the tableColumns  array whose identifier is equal to identifier,  when c
|javax.swing.table.DefaultTableColumnModel.getColumnIndexAtX(int)|Returns the index of the column that lies at position x,  or -1 if no column covers this point.
|javax.swing.table.DefaultTableColumnModel.getColumnMargin()|Returns the width margin for TableColumn.
|javax.swing.table.DefaultTableColumnModel.getColumnModelListeners()|Returns an array of all the column model listeners  registered on this model.
|javax.swing.table.DefaultTableColumnModel.getColumns()|Returns an Enumeration of all the columns in the model.
|javax.swing.table.DefaultTableColumnModel.getColumnSelectionAllowed()|Returns true if column selection is allowed, otherwise false.
|javax.swing.table.DefaultTableColumnModel.getListeners(Class<T>)|Returns an array of all the objects currently registered  as FooListeners  upon this model.
|javax.swing.table.DefaultTableColumnModel.getSelectedColumnCount()|Returns the number of columns selected.
|javax.swing.table.DefaultTableColumnModel.getSelectedColumns()|Returns an array of selected columns.
|javax.swing.table.DefaultTableColumnModel.getSelectionModel()|Returns the ListSelectionModel that is used to  maintain column selection state.
|javax.swing.table.DefaultTableColumnModel.getTotalColumnWidth()|Returns the total combined width of all columns.
|javax.swing.table.DefaultTableColumnModel.moveColumn(int,int)|Moves the column and heading at columnIndex to  newIndex.
|javax.swing.table.DefaultTableColumnModel.propertyChange(PropertyChangeEvent)|Property Change Listener change method.
|javax.swing.table.DefaultTableColumnModel.recalcWidthCache()|Recalculates the total combined width of all columns.
|javax.swing.table.DefaultTableColumnModel.removeColumn(TableColumn)|Deletes the column from the   tableColumns array.
|javax.swing.table.DefaultTableColumnModel.removeColumnModelListener(TableColumnModelListener)|Removes a listener for table column model events.
|javax.swing.table.DefaultTableColumnModel.setColumnMargin(int)|Sets the column margin to newMargin.
|javax.swing.table.DefaultTableColumnModel.setColumnSelectionAllowed(boolean)|Sets whether column selection is allowed.
|javax.swing.table.DefaultTableColumnModel.setSelectionModel(ListSelectionModel)|Sets the selection model for this TableColumnModel   to newModel   and registers for listener noti
|javax.swing.table.DefaultTableColumnModel.valueChanged(ListSelectionEvent)|A ListSelectionListener that forwards  ListSelectionEvents when there is a column  selection change.

*javax.swing.table.DefaultTableColumnModel_Description*

The standard column-handler for a JTable. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*javax.swing.event.ChangeEvent_javax.swing.table.DefaultTableColumnModel.changeEvent*

Change event (only one needed) 


*int_javax.swing.table.DefaultTableColumnModel.columnMargin*

Width margin between each column 


*boolean_javax.swing.table.DefaultTableColumnModel.columnSelectionAllowed*

Column selection allowed in this column model 


*javax.swing.event.EventListenerList_javax.swing.table.DefaultTableColumnModel.listenerList*

List of TableColumnModelListener 


*javax.swing.ListSelectionModel_javax.swing.table.DefaultTableColumnModel.selectionModel*

Model for keeping track of column selections 


*java.util.Vector<javax.swing.table.TableColumn>_javax.swing.table.DefaultTableColumnModel.tableColumns*

Array of TableColumn objects in this model 


*int_javax.swing.table.DefaultTableColumnModel.totalColumnWidth*

A local cache of the combined width of all columns 



*javax.swing.table.DefaultTableColumnModel()*

public DefaultTableColumnModel()

Creates a default table column model. 


*javax.swing.table.DefaultTableColumnModel.addColumn(TableColumn)*

public void addColumn(javax.swing.table.TableColumn aColumn)

Appends aColumn to the end of the tableColumns array. This method also posts the columnAdded event to its listeners. 


    aColumn - the TableColumn to be added 

*javax.swing.table.DefaultTableColumnModel.addColumnModelListener(TableColumnModelListener)*

public void addColumnModelListener(javax.swing.event.TableColumnModelListener x)

Adds a listener for table column model events. 


    x - a TableColumnModelListener object 

*javax.swing.table.DefaultTableColumnModel.createSelectionModel()*

protected |javax.swing.ListSelectionModel| createSelectionModel()

Creates a new default list selection model. 



*javax.swing.table.DefaultTableColumnModel.fireColumnAdded(TableColumnModelEvent)*

protected void fireColumnAdded(javax.swing.event.TableColumnModelEvent e)

Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method. 


    e - the event received 

*javax.swing.table.DefaultTableColumnModel.fireColumnMarginChanged()*

protected void fireColumnMarginChanged()

Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method. 



*javax.swing.table.DefaultTableColumnModel.fireColumnMoved(TableColumnModelEvent)*

protected void fireColumnMoved(javax.swing.event.TableColumnModelEvent e)

Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method. 


    e - the event received 

*javax.swing.table.DefaultTableColumnModel.fireColumnRemoved(TableColumnModelEvent)*

protected void fireColumnRemoved(javax.swing.event.TableColumnModelEvent e)

Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method. 


    e - the event received 

*javax.swing.table.DefaultTableColumnModel.fireColumnSelectionChanged(ListSelectionEvent)*

protected void fireColumnSelectionChanged(javax.swing.event.ListSelectionEvent e)

Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method. 


    e - the event received 

*javax.swing.table.DefaultTableColumnModel.getColumn(int)*

public |javax.swing.table.TableColumn| getColumn(int columnIndex)

Returns the TableColumn object for the column at columnIndex. 


    columnIndex - the index of the column desired 

    Returns: the TableColumn object for the column at columnIndex 

*javax.swing.table.DefaultTableColumnModel.getColumnCount()*

public int getColumnCount()

Returns the number of columns in the tableColumns array. 



    Returns: the number of columns in the tableColumns array 

*javax.swing.table.DefaultTableColumnModel.getColumnIndex(Object)*

public int getColumnIndex(java.lang.Object identifier)

Returns the index of the first column in the tableColumns array whose identifier is equal to identifier, when compared using equals. 


    identifier - the identifier object 

    Returns: the index of the first column in the tableColumns array whose identifier is equal to identifier 

*javax.swing.table.DefaultTableColumnModel.getColumnIndexAtX(int)*

public int getColumnIndexAtX(int x)

Returns the index of the column that lies at position x, or -1 if no column covers this point. 

In keeping with Swing's separable model architecture, a TableColumnModel does not know how the table columns actually appear on screen. The visual presentation of the columns is 
the responsibility of the view/controller object using this model (typically JTable). The view/controller need not display the columns sequentially from left to right. For 
example, columns could be displayed from right to left to accomodate a locale preference or some columns might be hidden at the request of the user. Because the model does not 
know how the columns are laid out on screen, the given xPosition should not be considered to be a coordinate in 2D graphics space. Instead, it should be considered to be a width 
from the start of the first column in the model. If the column index for a given X coordinate in 2D space is required, JTable.columnAtPoint can be used instead. 


    x - the horizontal location of interest 

    Returns: the index of the column or -1 if no column is found 

*javax.swing.table.DefaultTableColumnModel.getColumnMargin()*

public int getColumnMargin()

Returns the width margin for TableColumn. The default columnMargin is 1. 



    Returns: the maximum width for the TableColumn 

*javax.swing.table.DefaultTableColumnModel.getColumnModelListeners()*

public |javax.swing.event.TableColumnModelListener|[] getColumnModelListeners()

Returns an array of all the column model listeners registered on this model. 



    Returns: all of this default table column model's ColumnModelListeners or an empty array if no column model listeners are currently registered 

*javax.swing.table.DefaultTableColumnModel.getColumns()*

public |java.util.Enumeration|<TableColumn> getColumns()

Returns an Enumeration of all the columns in the model. 



    Returns: an Enumeration of the columns in the model 

*javax.swing.table.DefaultTableColumnModel.getColumnSelectionAllowed()*

public boolean getColumnSelectionAllowed()

Returns true if column selection is allowed, otherwise false. The default is false. 



    Returns: the columnSelectionAllowed property 

*javax.swing.table.DefaultTableColumnModel.getListeners(Class<T>)*

public |T|[] getListeners(java.lang.Class<T> listenerType)

Returns an array of all the objects currently registered as FooListeners upon this model. FooListeners are registered using the addFooListener method. 



You can specify the listenerType argument with a class literal, such as FooListener.class. For example, you can query a DefaultTableColumnModel m for its column model listeners 
with the following code: 

ColumnModelListener[] cmls = (ColumnModelListener[])(m.getListeners(ColumnModelListener.class)); 

If no such listeners exist, this method returns an empty array. 


    listenerType - the type of listeners requested; this parameter should specify an interface that descends from java.util.EventListener 

    Returns: an array of all objects registered as FooListeners on this model, or an empty array if no such listeners have been added 

*javax.swing.table.DefaultTableColumnModel.getSelectedColumnCount()*

public int getSelectedColumnCount()

Returns the number of columns selected. 



    Returns: the number of columns selected 

*javax.swing.table.DefaultTableColumnModel.getSelectedColumns()*

public int[] getSelectedColumns()

Returns an array of selected columns. If selectionModel is null, returns an empty array. 



    Returns: an array of selected columns or an empty array if nothing is selected or the selectionModel is null 

*javax.swing.table.DefaultTableColumnModel.getSelectionModel()*

public |javax.swing.ListSelectionModel| getSelectionModel()

Returns the ListSelectionModel that is used to maintain column selection state. 



    Returns: the object that provides column selection state. Or null if row selection is not allowed. 

*javax.swing.table.DefaultTableColumnModel.getTotalColumnWidth()*

public int getTotalColumnWidth()

Returns the total combined width of all columns. 



    Returns: the totalColumnWidth property 

*javax.swing.table.DefaultTableColumnModel.moveColumn(int,int)*

public void moveColumn(
  int columnIndex,
  int newIndex)

Moves the column and heading at columnIndex to newIndex. The old column at columnIndex will now be found at newIndex. The column that used to be at newIndex is shifted left or 
right to make room. This will not move any columns if columnIndex equals newIndex. This method also posts a columnMoved event to its listeners. 


    columnIndex - the index of column to be moved 
    newIndex - new index to move the column 

*javax.swing.table.DefaultTableColumnModel.propertyChange(PropertyChangeEvent)*

public void propertyChange(java.beans.PropertyChangeEvent evt)

Property Change Listener change method. Used to track changes to the column width or preferred column width. 


    evt - PropertyChangeEvent 

*javax.swing.table.DefaultTableColumnModel.recalcWidthCache()*

protected void recalcWidthCache()

Recalculates the total combined width of all columns. Updates the totalColumnWidth property. 



*javax.swing.table.DefaultTableColumnModel.removeColumn(TableColumn)*

public void removeColumn(javax.swing.table.TableColumn column)

Deletes the column from the tableColumns array. This method will do nothing if column is not in the table's columns list. tile is called to resize both the header and table views. 
This method also posts a columnRemoved event to its listeners. 


    column - the TableColumn to be removed 

*javax.swing.table.DefaultTableColumnModel.removeColumnModelListener(TableColumnModelListener)*

public void removeColumnModelListener(javax.swing.event.TableColumnModelListener x)

Removes a listener for table column model events. 


    x - a TableColumnModelListener object 

*javax.swing.table.DefaultTableColumnModel.setColumnMargin(int)*

public void setColumnMargin(int newMargin)

Sets the column margin to newMargin. This method also posts a columnMarginChanged event to its listeners. 


    newMargin - the new margin width, in pixels 

*javax.swing.table.DefaultTableColumnModel.setColumnSelectionAllowed(boolean)*

public void setColumnSelectionAllowed(boolean flag)

Sets whether column selection is allowed. The default is false. 


    flag - true if column selection will be allowed, false otherwise 

*javax.swing.table.DefaultTableColumnModel.setSelectionModel(ListSelectionModel)*

public void setSelectionModel(javax.swing.ListSelectionModel newModel)

Sets the selection model for this TableColumnModel to newModel and registers for listener notifications from the new selection model. If newModel is null, an exception is thrown. 


    newModel - the new selection model 

*javax.swing.table.DefaultTableColumnModel.valueChanged(ListSelectionEvent)*

public void valueChanged(javax.swing.event.ListSelectionEvent e)

A ListSelectionListener that forwards ListSelectionEvents when there is a column selection change. 


    e - the change event 


