*java.awt.Point* *Point* A point representing a location in (x, y) coordinate space, specified
 in integer precision.

public class Point
  extends    |java.awt.geom.Point2D|
  implements |java.io.Serializable|

|java.awt.Point_Description|
|java.awt.Point_Fields|
|java.awt.Point_Constructors|
|java.awt.Point_Methods|

====================================================================================================================================================================================

*java.awt.Point_Fields*
|int_java.awt.Point.x|
|int_java.awt.Point.y|

*java.awt.Point_Constructors*
|java.awt.Point()|Constructs and initializes a point at the origin   (0,0) of the coordinate space.
|java.awt.Point(int,int)|Constructs and initializes a point at the specified   (x,y) location in the coordinate space.
|java.awt.Point(Point)|Constructs and initializes a point with the same location as  the specified Point object.

*java.awt.Point_Methods*
|java.awt.Point.equals(Object)|Determines whether or not two points are equal.
|java.awt.Point.getLocation()|Returns the location of this point.
|java.awt.Point.getX()|Returns the X coordinate of the point in double precision.
|java.awt.Point.getY()|Returns the Y coordinate of the point in double precision.
|java.awt.Point.move(int,int)|Moves this point to the specified location in the   (x,y) coordinate plane.
|java.awt.Point.setLocation(double,double)|Sets the location of this point to the specified double coordinates.
|java.awt.Point.setLocation(int,int)|Changes the point to have the specified location.
|java.awt.Point.setLocation(Point)|Sets the location of the point to the specified location.
|java.awt.Point.toString()|Returns a string representation of this point and its location   in the (x,y) coordinate space.
|java.awt.Point.translate(int,int)|Translates this point, at location (x,y),   by dx along the x axis and dy   along the y axis so that it now represents the point   (x+dx,   y+dy

*java.awt.Point_Description*

A point representing a location in (x, y) coordinate space, specified in integer precision. 



*int_java.awt.Point.x*

The x coordinate. If no x coordinate is set it will default to 0. 


*int_java.awt.Point.y*

The y coordinate. If no y coordinate is set it will default to 0. 



*java.awt.Point()*

public Point()

Constructs and initializes a point at the origin (0,0) of the coordinate space. 


*java.awt.Point(int,int)*

public Point(
  int x,
  int y)

Constructs and initializes a point at the specified (x,y) location in the coordinate space. 

    x - the x coordinate 
    y - the y coordinate 

*java.awt.Point(Point)*

public Point(java.awt.Point p)

Constructs and initializes a point with the same location as the specified Point object. 

    p - a point 

*java.awt.Point.equals(Object)*

public boolean equals(java.lang.Object obj)

Determines whether or not two points are equal. Two instances of Point2D are equal if the values of their x and y member fields, representing their position in the coordinate 
space, are the same. 


    obj - an object to be compared with this Point2D 

    Returns: true if the object to be compared is an instance of Point2D and has the same values; false otherwise. 

*java.awt.Point.getLocation()*

public |java.awt.Point| getLocation()

Returns the location of this point. This method is included for completeness, to parallel the getLocation method of Component. 



    Returns: a copy of this point, at the same location 

*java.awt.Point.getX()*

public double getX()

Returns the X coordinate of the point in double precision. 



    Returns: the X coordinate of the point in double precision 

*java.awt.Point.getY()*

public double getY()

Returns the Y coordinate of the point in double precision. 



    Returns: the Y coordinate of the point in double precision 

*java.awt.Point.move(int,int)*

public void move(
  int x,
  int y)

Moves this point to the specified location in the (x,y) coordinate plane. This method is identical with setLocation(int,int). 


    x - the x coordinate of the new location 
    y - the y coordinate of the new location 

*java.awt.Point.setLocation(double,double)*

public void setLocation(
  double x,
  double y)

Sets the location of this point to the specified double coordinates. The double values will be rounded to integer values. Any number smaller than Integer.MIN_VALUE will be reset 
to MIN_VALUE, and any number larger than Integer.MAX_VALUE will be reset to MAX_VALUE. 


    x - the x coordinate of the new location 
    y - the y coordinate of the new location 

*java.awt.Point.setLocation(int,int)*

public void setLocation(
  int x,
  int y)

Changes the point to have the specified location. 

This method is included for completeness, to parallel the setLocation method of Component. Its behavior is identical with move(int,int). 


    x - the x coordinate of the new location 
    y - the y coordinate of the new location 

*java.awt.Point.setLocation(Point)*

public void setLocation(java.awt.Point p)

Sets the location of the point to the specified location. This method is included for completeness, to parallel the setLocation method of Component. 


    p - a point, the new location for this point 

*java.awt.Point.toString()*

public |java.lang.String| toString()

Returns a string representation of this point and its location in the (x,y) coordinate space. This method is intended to be used only for debugging purposes, and the content and 
format of the returned string may vary between implementations. The returned string may be empty but may not be null. 



    Returns: a string representation of this point 

*java.awt.Point.translate(int,int)*

public void translate(
  int dx,
  int dy)

Translates this point, at location (x,y), by dx along the x axis and dy along the y axis so that it now represents the point (x+dx, y+dy). 


    dx - the distance to move this point along the x axis 
    dy - the distance to move this point along the y axis 


