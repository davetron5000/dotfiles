*javax.management.relation.RoleInfo* *RoleInfo* A RoleInfo object summarises a r

public class RoleInfo
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|javax.management.relation.RoleInfo_Description|
|javax.management.relation.RoleInfo_Fields|
|javax.management.relation.RoleInfo_Constructors|
|javax.management.relation.RoleInfo_Methods|

================================================================================

*javax.management.relation.RoleInfo_Fields*
|int_javax.management.relation.RoleInfo.ROLE_CARDINALITY_INFINITY|

*javax.management.relation.RoleInfo_Constructors*
|javax.management.relation.RoleInfo(RoleInfo)|Copy constructor.
|javax.management.relation.RoleInfo(String,String)|Constructor.
|javax.management.relation.RoleInfo(String,String,boolean,boolean)|Constructor.
|javax.management.relation.RoleInfo(String,String,boolean,boolean,int,int,String)|

*javax.management.relation.RoleInfo_Methods*
|javax.management.relation.RoleInfo.checkMaxDegree(int)|Returns a boolean to sp
|javax.management.relation.RoleInfo.checkMinDegree(int)|Returns a boolean to sp
|javax.management.relation.RoleInfo.getDescription()|Returns description text f
|javax.management.relation.RoleInfo.getMaxDegree()|Returns maximum degree for c
|javax.management.relation.RoleInfo.getMinDegree()|Returns minimum degree for c
|javax.management.relation.RoleInfo.getName()|Returns the name of the role.
|javax.management.relation.RoleInfo.getRefMBeanClassName()|Returns name of type
|javax.management.relation.RoleInfo.isReadable()|Returns read access mode for t
|javax.management.relation.RoleInfo.isWritable()|Returns write access mode for 
|javax.management.relation.RoleInfo.toString()|Returns a string describing the 

*javax.management.relation.RoleInfo_Description*

A RoleInfo object summarises a role in a relation type. 


*int_javax.management.relation.RoleInfo.ROLE_CARDINALITY_INFINITY*

A RoleInfo object summarises a role in a relation type. 



*javax.management.relation.RoleInfo(RoleInfo)*

public RoleInfo(javax.management.relation.RoleInfo theRoleInfo)
  throws |java.lang.IllegalArgumentException|
         
Copy constructor. 

    theRoleInfo - the RoleInfo to be copied. 

*javax.management.relation.RoleInfo(String,String)*

public RoleInfo(
  java.lang.String theName,
  java.lang.String theRefMBeanClassName)
  throws |java.lang.ClassNotFoundException|
         |java.lang.IllegalArgumentException|
         |javax.management.NotCompliantMBeanException|
         
Constructor. 

    theName - name of the role 
    theRefMBeanClassName - name of the class of MBean(s) expected to be referenced in corresponding role. 
       If an MBean M is in this role, then the MBean server must return true 
       for {@link MBeanServer#isInstanceOf isInstanceOf(M, 
       theRefMBeanClassName)}. 

IsReadable and IsWritable defaulted to true. Minimum and maximum degrees 
       defaulted to 1. Description of role defaulted to null. 

*javax.management.relation.RoleInfo(String,String,boolean,boolean)*

public RoleInfo(
  java.lang.String theName,
  java.lang.String theRefMBeanClassName,
  boolean theIsReadable,
  boolean theIsWritable)
  throws |java.lang.ClassNotFoundException|
         |java.lang.IllegalArgumentException|
         |javax.management.NotCompliantMBeanException|
         
Constructor. 

    theName - name of the role 
    theRefMBeanClassName - name of the class of MBean(s) expected to be referenced in corresponding role. 
       If an MBean M is in this role, then the MBean server must return true 
       for {@link MBeanServer#isInstanceOf isInstanceOf(M, 
       theRefMBeanClassName)}. 
    theIsReadable - flag to indicate if the corresponding role can be read 
    theIsWritable - flag to indicate if the corresponding role can be set 

Minimum and maximum degrees defaulted to 1. Description of role defaulted to 
       null. 

*javax.management.relation.RoleInfo(String,String,boolean,boolean,int,int,String)*

public RoleInfo(
  java.lang.String theName,
  java.lang.String theRefMBeanClassName,
  boolean theIsReadable,
  boolean theIsWritable,
  int theMinDegree,
  int theMaxDegree,
  java.lang.String theDescription)
  throws |java.lang.ClassNotFoundException|
         |java.lang.IllegalArgumentException|
         |javax.management.relation.InvalidRoleInfoException|
         |javax.management.NotCompliantMBeanException|
         
Constructor. 

    theName - name of the role. 
    theRefMBeanClassName - name of the class of MBean(s) expected to be referenced in corresponding role. 
       If an MBean M is in this role, then the MBean server must return true 
       for {@link MBeanServer#isInstanceOf isInstanceOf(M, 
       theRefMBeanClassName)}. 
    theIsReadable - flag to indicate if the corresponding role can be read 
    theIsWritable - flag to indicate if the corresponding role can be set 
    theMinDegree - minimum degree for role, i.e. minimum number of MBeans to provide in 
       corresponding role Must be less or equal than theMaxDegree. 
       (ROLE_CARDINALITY_INFINITY for unlimited) 
    theMaxDegree - maximum degree for role, i.e. maximum number of MBeans to provide in 
       corresponding role Must be greater or equal than theMinDegree 
       (ROLE_CARDINALITY_INFINITY for unlimited) 
    theDescription - description of the role (can be null) 

*javax.management.relation.RoleInfo.checkMaxDegree(int)*

public boolean checkMaxDegree(int theValue)

Returns a boolean to specify if given value is less or equal than expected 
maximum degree (true if yes). 

    theValue - 

    Returns: true if less or equal than maximum degree, false otherwise. 
*javax.management.relation.RoleInfo.checkMinDegree(int)*

public boolean checkMinDegree(int theValue)

Returns a boolean to specify if given value is greater or equal than expected 
minimum degree (true if yes). 

    theValue - 

    Returns: true if greater or equal than minimum degree, false otherwise. 
*javax.management.relation.RoleInfo.getDescription()*

public |java.lang.String| getDescription()

Returns description text for the role. 


    Returns: the description of the role. 
*javax.management.relation.RoleInfo.getMaxDegree()*

public int getMaxDegree()

Returns maximum degree for corresponding role reference. 


    Returns: the maximum degree. 
*javax.management.relation.RoleInfo.getMinDegree()*

public int getMinDegree()

Returns minimum degree for corresponding role reference. 


    Returns: the minimum degree. 
*javax.management.relation.RoleInfo.getName()*

public |java.lang.String| getName()

Returns the name of the role. 


    Returns: the name of the role. 
*javax.management.relation.RoleInfo.getRefMBeanClassName()*

public |java.lang.String| getRefMBeanClassName()

Returns name of type of MBean expected to be referenced in corresponding role. 


    Returns: the name of the referenced type. 
*javax.management.relation.RoleInfo.isReadable()*

public boolean isReadable()

Returns read access mode for the role (true if it is readable). 


    Returns: true if the role is readable. 
*javax.management.relation.RoleInfo.isWritable()*

public boolean isWritable()

Returns write access mode for the role (true if it is writable). 


    Returns: true if the role is writable. 
*javax.management.relation.RoleInfo.toString()*

public |java.lang.String| toString()

Returns a string describing the role info. 


    Returns: a description of the role info. 

