*javax.swing.text.BadLocationException* *BadLocationException* This exception is to report bad locations within a document model
 (that is, attempts to reference a location that do

public class BadLocationException
  extends    |java.lang.Exception|

|javax.swing.text.BadLocationException_Description|
|javax.swing.text.BadLocationException_Fields|
|javax.swing.text.BadLocationException_Constructors|
|javax.swing.text.BadLocationException_Methods|

====================================================================================================================================================================================

*javax.swing.text.BadLocationException_Constructors*
|javax.swing.text.BadLocationException(String,int)|Creates a new BadLocationException object.

*javax.swing.text.BadLocationException_Methods*
|javax.swing.text.BadLocationException.offsetRequested()|Returns the offset into the document that was not legal.

*javax.swing.text.BadLocationException_Description*

This exception is to report bad locations within a document model (that is, attempts to reference a location that doesn't exist). 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*javax.swing.text.BadLocationException(String,int)*

public BadLocationException(
  java.lang.String s,
  int offs)

Creates a new BadLocationException object. 

    s - a string indicating what was wrong with the arguments 
    offs - offset within the document that was requested >= 0 

*javax.swing.text.BadLocationException.offsetRequested()*

public int offsetRequested()

Returns the offset into the document that was not legal. 



    Returns: the offset >= 0 


