*javax.naming.directory.InvalidSearchControlsException* *InvalidSearchControlsException* This exception is thrown when the specification of
 the SearchControls for a search operati

public class InvalidSearchControlsException
  extends    |javax.naming.NamingException|

|javax.naming.directory.InvalidSearchControlsException_Description|
|javax.naming.directory.InvalidSearchControlsException_Fields|
|javax.naming.directory.InvalidSearchControlsException_Constructors|
|javax.naming.directory.InvalidSearchControlsException_Methods|

====================================================================================================================================================================================

*javax.naming.directory.InvalidSearchControlsException_Constructors*
|javax.naming.directory.InvalidSearchControlsException()|Constructs a new instance of InvalidSearchControlsException.
|javax.naming.directory.InvalidSearchControlsException(String)|Constructs a new instance of InvalidSearchControlsException  with an explanation.

*javax.naming.directory.InvalidSearchControlsException_Description*

This exception is thrown when the specification of the SearchControls for a search operation is invalid. For example, if the scope is set to a value other than OBJECT_SCOPE, 
ONELEVEL_SCOPE, SUBTREE_SCOPE, this exception is thrown. 

Synchronization and serialization issues that apply to NamingException apply directly here. 



*javax.naming.directory.InvalidSearchControlsException()*

public InvalidSearchControlsException()

Constructs a new instance of InvalidSearchControlsException. All fields are set to null. 


*javax.naming.directory.InvalidSearchControlsException(String)*

public InvalidSearchControlsException(java.lang.String msg)

Constructs a new instance of InvalidSearchControlsException with an explanation. All other fields set to null. 

    msg - Detail about this exception. Can be null. 

