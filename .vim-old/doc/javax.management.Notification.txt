*javax.management.Notification* *Notification* The Notification class represents

public class Notification
  extends    |java.util.EventObject|

|javax.management.Notification_Description|
|javax.management.Notification_Fields|
|javax.management.Notification_Constructors|
|javax.management.Notification_Methods|

================================================================================

*javax.management.Notification_Fields*
|java.lang.Object_javax.management.Notification.source|

*javax.management.Notification_Constructors*
|javax.management.Notification(String,Object,long)|Creates a Notification objec
|javax.management.Notification(String,Object,long,long)|Creates a Notification 
|javax.management.Notification(String,Object,long,long,String)|Creates a Notifi
|javax.management.Notification(String,Object,long,String)|Creates a Notificatio

*javax.management.Notification_Methods*
|javax.management.Notification.getMessage()|Get the notification message.
|javax.management.Notification.getSequenceNumber()|Get the notification sequenc
|javax.management.Notification.getTimeStamp()|Get the notification timestamp.
|javax.management.Notification.getType()|Get the notification type.
|javax.management.Notification.getUserData()|Get the user data.
|javax.management.Notification.setSequenceNumber(long)|Set the notification seq
|javax.management.Notification.setSource(Object)|Sets the source.
|javax.management.Notification.setTimeStamp(long)|Set the notification timestam
|javax.management.Notification.setUserData(Object)|Set the user data.
|javax.management.Notification.toString()|Returns a String representation of th

*javax.management.Notification_Description*

The Notification class represents a notification emitted by an MBean. It 
contains a reference to the source MBean: if the notification has been 
forwarded through the MBean server, and the original source of the notification 
was a reference to the emitting MBean object, then the MBean server replaces it 
by the MBean's ObjectName. If the listener has registered directly with the 
MBean, this is either the object name or a direct reference to the MBean. 

It is strongly recommended that notification senders use the object name rather 
than a reference to the MBean object as the source. 


*java.lang.Object_javax.management.Notification.source*

The Notification class represents a notification emitted by an MBean. It 
contains a reference to the source MBean: if the notification has been 
forwarded through the MBean server, and the original source of the notification 
was a reference to the emitting MBean object, then the MBean server replaces it 
by the MBean's ObjectName. If the listener has registered directly with the 
MBean, this is either the object name or a direct reference to the MBean. 

It is strongly recommended that notification senders use the object name rather 
than a reference to the MBean object as the source. 



*javax.management.Notification(String,Object,long)*

public Notification(
  java.lang.String type,
  java.lang.Object source,
  long sequenceNumber)

Creates a Notification object. The notification timeStamp is set to the current 
date. 

    type - The notification type. 
    source - The notification source. 
    sequenceNumber - The notification sequence number within the source object. 

*javax.management.Notification(String,Object,long,long)*

public Notification(
  java.lang.String type,
  java.lang.Object source,
  long sequenceNumber,
  long timeStamp)

Creates a Notification object. 

    type - The notification type. 
    source - The notification source. 
    sequenceNumber - The notification sequence number within the source object. 
    timeStamp - The notification emission date. 

*javax.management.Notification(String,Object,long,long,String)*

public Notification(
  java.lang.String type,
  java.lang.Object source,
  long sequenceNumber,
  long timeStamp,
  java.lang.String message)

Creates a Notification object. 

    type - The notification type. 
    source - The notification source. 
    sequenceNumber - The notification sequence number within the source object. 
    timeStamp - The notification emission date. 
    message - The detailed message. 

*javax.management.Notification(String,Object,long,String)*

public Notification(
  java.lang.String type,
  java.lang.Object source,
  long sequenceNumber,
  java.lang.String message)

Creates a Notification object. The notification timeStamp is set to the current 
date. 

    type - The notification type. 
    source - The notification source. 
    sequenceNumber - The notification sequence number within the source object. 
    message - The detailed message. 

*javax.management.Notification.getMessage()*

public |java.lang.String| getMessage()

Get the notification message. 


    Returns: The message string of this notification object. It contains in a string, which 
             could be the explanation of the notification for displaying to a 
             user 
*javax.management.Notification.getSequenceNumber()*

public long getSequenceNumber()

Get the notification sequence number. 


    Returns: The notification sequence number within the source object. It's a serial number 
             identifying a particular instance of notification in the context 
             of the notification source. The notification model does not assume 
             that notifications will be received in the same order that they 
             are sent. The sequence number helps listeners to sort received 
             notifications. 
*javax.management.Notification.getTimeStamp()*

public long getTimeStamp()

Get the notification timestamp. 


    Returns: The notification timestamp. 
*javax.management.Notification.getType()*

public |java.lang.String| getType()

Get the notification type. 


    Returns: The notification type. It's a string expressed in a dot notation similar to 
             Java properties. An example of a notification type is 
             network.alarm.router . 
*javax.management.Notification.getUserData()*

public |java.lang.Object| getUserData()

Get the user data. 


    Returns: The user data object. It is used for whatever data the notification source 
             wishes to communicate to its consumers. 
*javax.management.Notification.setSequenceNumber(long)*

public void setSequenceNumber(long sequenceNumber)

Set the notification sequence number. 

    sequenceNumber - The notification sequence number within the source object. It is a serial 
       number identifying a particular instance of notification in the context 
       of the notification source. 

*javax.management.Notification.setSource(Object)*

public void setSource(java.lang.Object source)

Sets the source. 

    source - the new source for this object. 

*javax.management.Notification.setTimeStamp(long)*

public void setTimeStamp(long timeStamp)

Set the notification timestamp. 

    timeStamp - The notification timestamp. It indicates when the notification was generated. 

*javax.management.Notification.setUserData(Object)*

public void setUserData(java.lang.Object userData)

Set the user data. 

    userData - The user data object. It is used for whatever data the notification source 
       wishes to communicate to its consumers. 

*javax.management.Notification.toString()*

public |java.lang.String| toString()

Returns a String representation of this notification. 


    Returns: A String representation of this notification. 

