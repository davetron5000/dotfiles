*java.security.KeyStore.PasswordProtection* *KeyStore.PasswordProtection* A password-based implementation of ProtectionParameter.

public static class KeyStore.PasswordProtection
  extends    |java.lang.Object|
  implements |java.security.KeyStore.ProtectionParameter|
             |javax.security.auth.Destroyable|

|java.security.KeyStore.PasswordProtection_Description|
|java.security.KeyStore.PasswordProtection_Fields|
|java.security.KeyStore.PasswordProtection_Constructors|
|java.security.KeyStore.PasswordProtection_Methods|

====================================================================================================================================================================================

*java.security.KeyStore.PasswordProtection_Constructors*
|java.security.KeyStore.PasswordProtection(char[])|Creates a password parameter.

*java.security.KeyStore.PasswordProtection_Methods*
|java.security.KeyStore.PasswordProtection.destroy()|Clears the password.
|java.security.KeyStore.PasswordProtection.getPassword()|Gets the password.
|java.security.KeyStore.PasswordProtection.isDestroyed()|Determines if password has been cleared.

*java.security.KeyStore.PasswordProtection_Description*

A password-based implementation of ProtectionParameter. 



*java.security.KeyStore.PasswordProtection(char[])*

public KeyStore.PasswordProtection(char[] password)

Creates a password parameter. 

The specified password is cloned before it is stored in the new PasswordProtection object. 

    password - the password, which may be null 

*java.security.KeyStore.PasswordProtection.destroy()*

public synchronized void destroy()
  throws |javax.security.auth.DestroyFailedException|
         
Clears the password. 



*java.security.KeyStore.PasswordProtection.getPassword()*

public synchronized char[] getPassword()

Gets the password. 

Note that this method returns a reference to the password. If a clone of the array is created it is the caller's responsibility to zero out the password information after it is no 
longer needed. 



    Returns: the password, which may be null 

*java.security.KeyStore.PasswordProtection.isDestroyed()*

public synchronized boolean isDestroyed()

Determines if password has been cleared. 



    Returns: true if the password has been cleared, false otherwise 


