*org.w3c.dom.ls.LSOutput* *LSOutput* This interface represents an output destina

public interface interface LSOutput


|org.w3c.dom.ls.LSOutput_Description|
|org.w3c.dom.ls.LSOutput_Fields|
|org.w3c.dom.ls.LSOutput_Constructors|
|org.w3c.dom.ls.LSOutput_Methods|

================================================================================

*org.w3c.dom.ls.LSOutput_Methods*
|org.w3c.dom.ls.LSOutput.getByteStream()|An attribute of a language and binding
|org.w3c.dom.ls.LSOutput.getCharacterStream()|An attribute of a language and bi
|org.w3c.dom.ls.LSOutput.getEncoding()|The character encoding to use for the ou
|org.w3c.dom.ls.LSOutput.getSystemId()|The system identifier, a URI reference [
|org.w3c.dom.ls.LSOutput.setByteStream(OutputStream)|An attribute of a language
|org.w3c.dom.ls.LSOutput.setCharacterStream(Writer)|An attribute of a language 
|org.w3c.dom.ls.LSOutput.setEncoding(String)|The character encoding to use for 
|org.w3c.dom.ls.LSOutput.setSystemId(String)|The system identifier, a URI refer

*org.w3c.dom.ls.LSOutput_Description*

This interface represents an output destination for data. This interface allows 
an application to encapsulate information about an output destination in a 
single object, which may include a URI, a byte stream (possibly with a 
specified encoding), a base URI, and/or a character stream. The exact 
definitions of a byte stream and a character stream are binding dependent. The 
application is expected to provide objects that implement this interface 
whenever such objects are needed. The application can either provide its own 
objects that implement this interface, or it can use the generic factory method 
DOMImplementationLS.createLSOutput() to create objects that implement this 
interface. The LSSerializer will use the LSOutput object to determine where to 
serialize the output to. The LSSerializer will look at the different outputs 
specified in the LSOutput in the following order to know which one to output 
to, the first one that is not null and not an empty string will be used: 

LSOutput.characterStream 

LSOutput.byteStream 

LSOutput.systemId 

LSOutput objects belong to the application. The DOM implementation will never 
modify them (though it may make copies and modify the copies, if necessary). 
See also the Document Object Model (DOM) Level 3 Load and Save Specification. 


*org.w3c.dom.ls.LSOutput.getByteStream()*

public |java.io.OutputStream| getByteStream()

An attribute of a language and binding dependent type that represents a 
writable stream of bytes. 


*org.w3c.dom.ls.LSOutput.getCharacterStream()*

public |java.io.Writer| getCharacterStream()

An attribute of a language and binding dependent type that represents a 
writable stream to which 16-bit units can be output. 


*org.w3c.dom.ls.LSOutput.getEncoding()*

public |java.lang.String| getEncoding()

The character encoding to use for the output. The encoding must be a string 
acceptable for an XML encoding declaration ([XML 1.0] section 4.3.3 "Character 
Encoding in Entities"), it is recommended that character encodings registered 
(as charsets) with the Internet Assigned Numbers Authority [IANA-CHARSETS] 
should be referred to using their registered names. 


*org.w3c.dom.ls.LSOutput.getSystemId()*

public |java.lang.String| getSystemId()

The system identifier, a URI reference [IETF RFC 2396], for this output 
destination. If the system ID is a relative URI reference (see section 5 in 
[IETF RFC 2396]), the behavior is implementation dependent. 


*org.w3c.dom.ls.LSOutput.setByteStream(OutputStream)*

public void setByteStream(java.io.OutputStream byteStream)

An attribute of a language and binding dependent type that represents a 
writable stream of bytes. 


*org.w3c.dom.ls.LSOutput.setCharacterStream(Writer)*

public void setCharacterStream(java.io.Writer characterStream)

An attribute of a language and binding dependent type that represents a 
writable stream to which 16-bit units can be output. 


*org.w3c.dom.ls.LSOutput.setEncoding(String)*

public void setEncoding(java.lang.String encoding)

The character encoding to use for the output. The encoding must be a string 
acceptable for an XML encoding declaration ([XML 1.0] section 4.3.3 "Character 
Encoding in Entities"), it is recommended that character encodings registered 
(as charsets) with the Internet Assigned Numbers Authority [IANA-CHARSETS] 
should be referred to using their registered names. 


*org.w3c.dom.ls.LSOutput.setSystemId(String)*

public void setSystemId(java.lang.String systemId)

The system identifier, a URI reference [IETF RFC 2396], for this output 
destination. If the system ID is a relative URI reference (see section 5 in 
[IETF RFC 2396]), the behavior is implementation dependent. 



