*java.awt.event.ComponentAdapter* *ComponentAdapter* An abstract adapter class for receiving component events.

public abstract class ComponentAdapter
  extends    |java.lang.Object|
  implements |java.awt.event.ComponentListener|

|java.awt.event.ComponentAdapter_Description|
|java.awt.event.ComponentAdapter_Fields|
|java.awt.event.ComponentAdapter_Constructors|
|java.awt.event.ComponentAdapter_Methods|

====================================================================================================================================================================================

*java.awt.event.ComponentAdapter_Constructors*
|java.awt.event.ComponentAdapter()|

*java.awt.event.ComponentAdapter_Methods*
|java.awt.event.ComponentAdapter.componentHidden(ComponentEvent)|Invoked when the component has been made invisible.
|java.awt.event.ComponentAdapter.componentMoved(ComponentEvent)|Invoked when the component's position changes.
|java.awt.event.ComponentAdapter.componentResized(ComponentEvent)|Invoked when the component's size changes.
|java.awt.event.ComponentAdapter.componentShown(ComponentEvent)|Invoked when the component has been made visible.

*java.awt.event.ComponentAdapter_Description*

An abstract adapter class for receiving component events. The methods in this class are empty. This class exists as convenience for creating listener objects. 

Extend this class to create a ComponentEvent listener and override the methods for the events of interest. (If you implement the ComponentListener interface, you have to define 
all of the methods in it. This abstract class defines null methods for them all, so you can only have to define methods for events you care about.) 

Create a listener object using your class and then register it with a component using the component's addComponentListener method. When the component's size, location, or 
visibility changes, the relevant method in the listener object is invoked, and the ComponentEvent is passed to it. 



*java.awt.event.ComponentAdapter()*

public ComponentAdapter()




*java.awt.event.ComponentAdapter.componentHidden(ComponentEvent)*

public void componentHidden(java.awt.event.ComponentEvent e)

Invoked when the component has been made invisible. 



*java.awt.event.ComponentAdapter.componentMoved(ComponentEvent)*

public void componentMoved(java.awt.event.ComponentEvent e)

Invoked when the component's position changes. 



*java.awt.event.ComponentAdapter.componentResized(ComponentEvent)*

public void componentResized(java.awt.event.ComponentEvent e)

Invoked when the component's size changes. 



*java.awt.event.ComponentAdapter.componentShown(ComponentEvent)*

public void componentShown(java.awt.event.ComponentEvent e)

Invoked when the component has been made visible. 




