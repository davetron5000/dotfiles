*javax.imageio.stream.MemoryCacheImageOutputStream* *MemoryCacheImageOutputStream* An implementation of ImageOutputStream that writes its
 output to a regular OutputStream.

public class MemoryCacheImageOutputStream
  extends    |javax.imageio.stream.ImageOutputStreamImpl|

|javax.imageio.stream.MemoryCacheImageOutputStream_Description|
|javax.imageio.stream.MemoryCacheImageOutputStream_Fields|
|javax.imageio.stream.MemoryCacheImageOutputStream_Constructors|
|javax.imageio.stream.MemoryCacheImageOutputStream_Methods|

====================================================================================================================================================================================

*javax.imageio.stream.MemoryCacheImageOutputStream_Constructors*
|javax.imageio.stream.MemoryCacheImageOutputStream(OutputStream)|Constructs a MemoryCacheImageOutputStream that will write  to a given OutputStream.

*javax.imageio.stream.MemoryCacheImageOutputStream_Methods*
|javax.imageio.stream.MemoryCacheImageOutputStream.close()|Closes this MemoryCacheImageOutputStream.
|javax.imageio.stream.MemoryCacheImageOutputStream.flushBefore(long)|
|javax.imageio.stream.MemoryCacheImageOutputStream.isCached()|Returns true since this  ImageOutputStream caches data in order to allow  seeking backwards.
|javax.imageio.stream.MemoryCacheImageOutputStream.isCachedFile()|Returns false since this  ImageOutputStream does not maintain a file cache.
|javax.imageio.stream.MemoryCacheImageOutputStream.isCachedMemory()|Returns true since this  ImageOutputStream maintains a main memory cache.
|javax.imageio.stream.MemoryCacheImageOutputStream.length()|
|javax.imageio.stream.MemoryCacheImageOutputStream.read()|
|javax.imageio.stream.MemoryCacheImageOutputStream.read(byte[],int,int)|
|javax.imageio.stream.MemoryCacheImageOutputStream.write(byte[],int,int)|
|javax.imageio.stream.MemoryCacheImageOutputStream.write(int)|

*javax.imageio.stream.MemoryCacheImageOutputStream_Description*

An implementation of ImageOutputStream that writes its output to a regular OutputStream. A memory buffer is used to cache at least the data between the discard position and the 
current write position. The only constructor takes an OutputStream, so this class may not be used for read/modify/write operations. Reading can occur only on parts of the stream 
that have already been written to the cache and not yet flushed. 



*javax.imageio.stream.MemoryCacheImageOutputStream(OutputStream)*

public MemoryCacheImageOutputStream(java.io.OutputStream stream)

Constructs a MemoryCacheImageOutputStream that will write to a given OutputStream. 

    stream - an OutputStream to write to. 

*javax.imageio.stream.MemoryCacheImageOutputStream.close()*

public void close()
  throws |java.io.IOException|
         
Closes this MemoryCacheImageOutputStream. All pending data is flushed to the output, and the cache is released. The destination OutputStream is not closed. 



*javax.imageio.stream.MemoryCacheImageOutputStream.flushBefore(long)*

public void flushBefore(long pos)
  throws |java.io.IOException|
         




*javax.imageio.stream.MemoryCacheImageOutputStream.isCached()*

public boolean isCached()

Returns true since this ImageOutputStream caches data in order to allow seeking backwards. 



    Returns: 

*javax.imageio.stream.MemoryCacheImageOutputStream.isCachedFile()*

public boolean isCachedFile()

Returns false since this ImageOutputStream does not maintain a file cache. 



    Returns: 

*javax.imageio.stream.MemoryCacheImageOutputStream.isCachedMemory()*

public boolean isCachedMemory()

Returns true since this ImageOutputStream maintains a main memory cache. 



    Returns: 

*javax.imageio.stream.MemoryCacheImageOutputStream.length()*

public long length()





*javax.imageio.stream.MemoryCacheImageOutputStream.read()*

public int read()
  throws |java.io.IOException|
         




*javax.imageio.stream.MemoryCacheImageOutputStream.read(byte[],int,int)*

public int read(
  byte[] b,
  int off,
  int len)
  throws |java.io.IOException|
         




*javax.imageio.stream.MemoryCacheImageOutputStream.write(byte[],int,int)*

public void write(
  byte[] b,
  int off,
  int len)
  throws |java.io.IOException|
         




*javax.imageio.stream.MemoryCacheImageOutputStream.write(int)*

public void write(int b)
  throws |java.io.IOException|
         





