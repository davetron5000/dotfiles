*javax.management.remote.rmi.RMIConnectionImpl* *RMIConnectionImpl* Implementati

public class RMIConnectionImpl
  extends    |java.lang.Object|
  implements |javax.management.remote.rmi.RMIConnection|
             |java.rmi.server.Unreferenced|

|javax.management.remote.rmi.RMIConnectionImpl_Description|
|javax.management.remote.rmi.RMIConnectionImpl_Fields|
|javax.management.remote.rmi.RMIConnectionImpl_Constructors|
|javax.management.remote.rmi.RMIConnectionImpl_Methods|

================================================================================

*javax.management.remote.rmi.RMIConnectionImpl_Constructors*
|javax.management.remote.rmi.RMIConnectionImpl(RMIServerImpl,String,ClassLoader,Subject,Map)|

*javax.management.remote.rmi.RMIConnectionImpl_Methods*
|javax.management.remote.rmi.RMIConnectionImpl.addNotificationListener(ObjectName,ObjectName,MarshalledObject,MarshalledObject,Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.addNotificationListeners(ObjectName[],MarshalledObject[],Subject[])|
|javax.management.remote.rmi.RMIConnectionImpl.close()|
|javax.management.remote.rmi.RMIConnectionImpl.createMBean(String,ObjectName,MarshalledObject,String[],Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.createMBean(String,ObjectName,ObjectName,MarshalledObject,String[],Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.createMBean(String,ObjectName,ObjectName,Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.createMBean(String,ObjectName,Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.fetchNotifications(long,int,long)|
|javax.management.remote.rmi.RMIConnectionImpl.getAttribute(ObjectName,String,Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.getAttributes(ObjectName,String[],Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.getConnectionId()|
|javax.management.remote.rmi.RMIConnectionImpl.getDefaultDomain(Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.getDomains(Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.getMBeanCount(Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.getMBeanInfo(ObjectName,Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.getObjectInstance(ObjectName,Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.invoke(ObjectName,String,MarshalledObject,String[],Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.isInstanceOf(ObjectName,String,Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.isRegistered(ObjectName,Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.queryMBeans(ObjectName,MarshalledObject,Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.queryNames(ObjectName,MarshalledObject,Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.removeNotificationListener(ObjectName,ObjectName,MarshalledObject,MarshalledObject,Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.removeNotificationListener(ObjectName,ObjectName,Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.removeNotificationListeners(ObjectName,Integer[],Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.setAttribute(ObjectName,MarshalledObject,Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.setAttributes(ObjectName,MarshalledObject,Subject)|
|javax.management.remote.rmi.RMIConnectionImpl.toString()|Returns a string repr
|javax.management.remote.rmi.RMIConnectionImpl.unreferenced()|
|javax.management.remote.rmi.RMIConnectionImpl.unregisterMBean(ObjectName,Subject)|

*javax.management.remote.rmi.RMIConnectionImpl_Description*

Implementation of the (|javax.management.remote.rmi.RMIConnection|) interface. 
User code will not usually reference this class. 


*javax.management.remote.rmi.RMIConnectionImpl(RMIServerImpl,String,ClassLoader,Subject,Map)*

public RMIConnectionImpl(
  javax.management.remote.rmi.RMIServerImpl rmiServer,
  java.lang.String connectionId,
  java.lang.ClassLoader defaultClassLoader,
  javax.security.auth.Subject subject,
  java.util.Map env)

Constructs a new (|javax.management.remote.rmi.RMIConnection|) . This 
connection can be used with either the JRMP or IIOP transport. This object does 
not export itself: it is the responsibility of the caller to export it 
appropriately (see (|javax.management.remote.rmi.RMIJRMPServerImpl|) and 
(|javax.management.remote.rmi.RMIIIOPServerImpl|) . 

    rmiServer - The RMIServerImpl object for which this connection is created. The behavior is 
       unspecified if this parameter is null. 
    connectionId - The ID for this connection. The behavior is unspecified if this parameter is 
       null. 
    defaultClassLoader - The default ClassLoader to be used when deserializing marshalled objects. Can 
       be null, to signify the bootstrap class loader. 
    subject - the authenticated subject to be used for authorization. Can be null, to signify 
       that no subject has been authenticated. 
    env - the environment containing attributes for the new RMIServerImpl. Can be null, 
       equivalent to an empty map. 

*javax.management.remote.rmi.RMIConnectionImpl.addNotificationListener(ObjectName,ObjectName,MarshalledObject,MarshalledObject,Subject)*

public void addNotificationListener(
  javax.management.ObjectName name,
  javax.management.ObjectName listener,
  java.rmi.MarshalledObject filter,
  java.rmi.MarshalledObject handback,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.InstanceNotFoundException|
         |java.io.IOException|
         



*javax.management.remote.rmi.RMIConnectionImpl.addNotificationListeners(ObjectName[],MarshalledObject[],Subject[])*

public |java.lang.Integer| addNotificationListeners(
  javax.management.ObjectName[] names,
  java.rmi.MarshalledObject[] filters,
  javax.security.auth.Subject[] delegationSubjects)
  throws |javax.management.InstanceNotFoundException|
         |java.io.IOException|
         



*javax.management.remote.rmi.RMIConnectionImpl.close()*

public synchronized void close()
  throws |java.io.IOException|
         



*javax.management.remote.rmi.RMIConnectionImpl.createMBean(String,ObjectName,MarshalledObject,String[],Subject)*

public |javax.management.ObjectInstance| createMBean(
  java.lang.String className,
  javax.management.ObjectName name,
  java.rmi.MarshalledObject params,
  java.lang.String[] signature,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.InstanceAlreadyExistsException|
         |java.io.IOException|
         |javax.management.MBeanException|
         |javax.management.MBeanRegistrationException|
         |javax.management.NotCompliantMBeanException|
         |javax.management.ReflectionException|
         



*javax.management.remote.rmi.RMIConnectionImpl.createMBean(String,ObjectName,ObjectName,MarshalledObject,String[],Subject)*

public |javax.management.ObjectInstance| createMBean(
  java.lang.String className,
  javax.management.ObjectName name,
  javax.management.ObjectName loaderName,
  java.rmi.MarshalledObject params,
  java.lang.String[] signature,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.InstanceAlreadyExistsException|
         |javax.management.InstanceNotFoundException|
         |java.io.IOException|
         |javax.management.MBeanException|
         |javax.management.MBeanRegistrationException|
         |javax.management.NotCompliantMBeanException|
         |javax.management.ReflectionException|
         



*javax.management.remote.rmi.RMIConnectionImpl.createMBean(String,ObjectName,ObjectName,Subject)*

public |javax.management.ObjectInstance| createMBean(
  java.lang.String className,
  javax.management.ObjectName name,
  javax.management.ObjectName loaderName,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.InstanceAlreadyExistsException|
         |javax.management.InstanceNotFoundException|
         |java.io.IOException|
         |javax.management.MBeanException|
         |javax.management.MBeanRegistrationException|
         |javax.management.NotCompliantMBeanException|
         |javax.management.ReflectionException|
         



*javax.management.remote.rmi.RMIConnectionImpl.createMBean(String,ObjectName,Subject)*

public |javax.management.ObjectInstance| createMBean(
  java.lang.String className,
  javax.management.ObjectName name,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.InstanceAlreadyExistsException|
         |java.io.IOException|
         |javax.management.MBeanException|
         |javax.management.MBeanRegistrationException|
         |javax.management.NotCompliantMBeanException|
         |javax.management.ReflectionException|
         



*javax.management.remote.rmi.RMIConnectionImpl.fetchNotifications(long,int,long)*

public |javax.management.remote.NotificationResult| fetchNotifications(
  long clientSequenceNumber,
  int maxNotifications,
  long timeout)
  throws |java.io.IOException|
         



*javax.management.remote.rmi.RMIConnectionImpl.getAttribute(ObjectName,String,Subject)*

public |java.lang.Object| getAttribute(
  javax.management.ObjectName name,
  java.lang.String attribute,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.AttributeNotFoundException|
         |javax.management.InstanceNotFoundException|
         |java.io.IOException|
         |javax.management.MBeanException|
         |javax.management.ReflectionException|
         



*javax.management.remote.rmi.RMIConnectionImpl.getAttributes(ObjectName,String[],Subject)*

public |javax.management.AttributeList| getAttributes(
  javax.management.ObjectName name,
  java.lang.String[] attributes,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.InstanceNotFoundException|
         |java.io.IOException|
         |javax.management.ReflectionException|
         



*javax.management.remote.rmi.RMIConnectionImpl.getConnectionId()*

public |java.lang.String| getConnectionId()
  throws |java.io.IOException|
         



*javax.management.remote.rmi.RMIConnectionImpl.getDefaultDomain(Subject)*

public |java.lang.String| getDefaultDomain(javax.security.auth.Subject delegationSubject)
  throws |java.io.IOException|
         



*javax.management.remote.rmi.RMIConnectionImpl.getDomains(Subject)*

public |java.lang.String| getDomains(javax.security.auth.Subject delegationSubject)
  throws |java.io.IOException|
         



*javax.management.remote.rmi.RMIConnectionImpl.getMBeanCount(Subject)*

public |java.lang.Integer| getMBeanCount(javax.security.auth.Subject delegationSubject)
  throws |java.io.IOException|
         



*javax.management.remote.rmi.RMIConnectionImpl.getMBeanInfo(ObjectName,Subject)*

public |javax.management.MBeanInfo| getMBeanInfo(
  javax.management.ObjectName name,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.InstanceNotFoundException|
         |javax.management.IntrospectionException|
         |java.io.IOException|
         |javax.management.ReflectionException|
         



*javax.management.remote.rmi.RMIConnectionImpl.getObjectInstance(ObjectName,Subject)*

public |javax.management.ObjectInstance| getObjectInstance(
  javax.management.ObjectName name,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.InstanceNotFoundException|
         |java.io.IOException|
         



*javax.management.remote.rmi.RMIConnectionImpl.invoke(ObjectName,String,MarshalledObject,String[],Subject)*

public |java.lang.Object| invoke(
  javax.management.ObjectName name,
  java.lang.String operationName,
  java.rmi.MarshalledObject params,
  java.lang.String[] signature,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.InstanceNotFoundException|
         |java.io.IOException|
         |javax.management.MBeanException|
         |javax.management.ReflectionException|
         



*javax.management.remote.rmi.RMIConnectionImpl.isInstanceOf(ObjectName,String,Subject)*

public boolean isInstanceOf(
  javax.management.ObjectName name,
  java.lang.String className,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.InstanceNotFoundException|
         |java.io.IOException|
         



*javax.management.remote.rmi.RMIConnectionImpl.isRegistered(ObjectName,Subject)*

public boolean isRegistered(
  javax.management.ObjectName name,
  javax.security.auth.Subject delegationSubject)
  throws |java.io.IOException|
         



*javax.management.remote.rmi.RMIConnectionImpl.queryMBeans(ObjectName,MarshalledObject,Subject)*

public |java.util.Set| queryMBeans(
  javax.management.ObjectName name,
  java.rmi.MarshalledObject query,
  javax.security.auth.Subject delegationSubject)
  throws |java.io.IOException|
         



*javax.management.remote.rmi.RMIConnectionImpl.queryNames(ObjectName,MarshalledObject,Subject)*

public |java.util.Set| queryNames(
  javax.management.ObjectName name,
  java.rmi.MarshalledObject query,
  javax.security.auth.Subject delegationSubject)
  throws |java.io.IOException|
         



*javax.management.remote.rmi.RMIConnectionImpl.removeNotificationListener(ObjectName,ObjectName,MarshalledObject,MarshalledObject,Subject)*

public void removeNotificationListener(
  javax.management.ObjectName name,
  javax.management.ObjectName listener,
  java.rmi.MarshalledObject filter,
  java.rmi.MarshalledObject handback,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.InstanceNotFoundException|
         |java.io.IOException|
         |javax.management.ListenerNotFoundException|
         



*javax.management.remote.rmi.RMIConnectionImpl.removeNotificationListener(ObjectName,ObjectName,Subject)*

public void removeNotificationListener(
  javax.management.ObjectName name,
  javax.management.ObjectName listener,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.InstanceNotFoundException|
         |java.io.IOException|
         |javax.management.ListenerNotFoundException|
         



*javax.management.remote.rmi.RMIConnectionImpl.removeNotificationListeners(ObjectName,Integer[],Subject)*

public void removeNotificationListeners(
  javax.management.ObjectName name,
  java.lang.Integer[] listenerIDs,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.InstanceNotFoundException|
         |java.io.IOException|
         |javax.management.ListenerNotFoundException|
         



*javax.management.remote.rmi.RMIConnectionImpl.setAttribute(ObjectName,MarshalledObject,Subject)*

public void setAttribute(
  javax.management.ObjectName name,
  java.rmi.MarshalledObject attribute,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.AttributeNotFoundException|
         |javax.management.InstanceNotFoundException|
         |javax.management.InvalidAttributeValueException|
         |java.io.IOException|
         |javax.management.MBeanException|
         |javax.management.ReflectionException|
         



*javax.management.remote.rmi.RMIConnectionImpl.setAttributes(ObjectName,MarshalledObject,Subject)*

public |javax.management.AttributeList| setAttributes(
  javax.management.ObjectName name,
  java.rmi.MarshalledObject attributes,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.InstanceNotFoundException|
         |java.io.IOException|
         |javax.management.ReflectionException|
         



*javax.management.remote.rmi.RMIConnectionImpl.toString()*

public |java.lang.String| toString()

Returns a string representation of this object. In general, the toString method 
returns a string that "textually represents" this object. The result should be 
a concise but informative representation that is easy for a person to read. 


    Returns: a String representation of this object. 
*javax.management.remote.rmi.RMIConnectionImpl.unreferenced()*

public void unreferenced()




*javax.management.remote.rmi.RMIConnectionImpl.unregisterMBean(ObjectName,Subject)*

public void unregisterMBean(
  javax.management.ObjectName name,
  javax.security.auth.Subject delegationSubject)
  throws |javax.management.InstanceNotFoundException|
         |java.io.IOException|
         |javax.management.MBeanRegistrationException|
         




