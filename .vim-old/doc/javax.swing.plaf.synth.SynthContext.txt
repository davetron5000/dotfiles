*javax.swing.plaf.synth.SynthContext* *SynthContext* An immutable transient object containing contextual information about
 a Region.

public class SynthContext
  extends    |java.lang.Object|

|javax.swing.plaf.synth.SynthContext_Description|
|javax.swing.plaf.synth.SynthContext_Fields|
|javax.swing.plaf.synth.SynthContext_Constructors|
|javax.swing.plaf.synth.SynthContext_Methods|

====================================================================================================================================================================================

*javax.swing.plaf.synth.SynthContext_Constructors*
|javax.swing.plaf.synth.SynthContext(JComponent,Region,SynthStyle,int)|Creates a SynthContext with the specified values.

*javax.swing.plaf.synth.SynthContext_Methods*
|javax.swing.plaf.synth.SynthContext.getComponent()|Returns the hosting component containing the region.
|javax.swing.plaf.synth.SynthContext.getComponentState()|Returns the state of the widget, which is a bitmask of the  values defined in SynthConstants.
|javax.swing.plaf.synth.SynthContext.getRegion()|Returns the Region identifying this state.
|javax.swing.plaf.synth.SynthContext.getStyle()|Returns the style associated with this Region.

*javax.swing.plaf.synth.SynthContext_Description*

An immutable transient object containing contextual information about a Region. A SynthContext should only be considered valid for the duration of the method it is passed to. In 
other words you should not cache a SynthContext that is passed to you and expect it to remain valid. 



*javax.swing.plaf.synth.SynthContext(JComponent,Region,SynthStyle,int)*

public SynthContext(
  javax.swing.JComponent component,
  javax.swing.plaf.synth.Region region,
  javax.swing.plaf.synth.SynthStyle style,
  int state)

Creates a SynthContext with the specified values. This is meant for subclasses and custom UI implementors. You very rarely need to construct a SynthContext, though some methods 
will take one. 

    component - JComponent 
    region - Identifies the portion of the JComponent 
    style - Style associated with the component 
    state - State of the component as defined in SynthConstants. 

*javax.swing.plaf.synth.SynthContext.getComponent()*

public |javax.swing.JComponent| getComponent()

Returns the hosting component containing the region. 



    Returns: Hosting Component 

*javax.swing.plaf.synth.SynthContext.getComponentState()*

public int getComponentState()

Returns the state of the widget, which is a bitmask of the values defined in SynthConstants. A region will at least be in one of ENABLED, MOUSE_OVER, PRESSED or DISABLED. 



    Returns: State of Component 

*javax.swing.plaf.synth.SynthContext.getRegion()*

public |javax.swing.plaf.synth.Region| getRegion()

Returns the Region identifying this state. 



    Returns: Region of the hosting component 

*javax.swing.plaf.synth.SynthContext.getStyle()*

public |javax.swing.plaf.synth.SynthStyle| getStyle()

Returns the style associated with this Region. 



    Returns: SynthStyle associated with the region. 


