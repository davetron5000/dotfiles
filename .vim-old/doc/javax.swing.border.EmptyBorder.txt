*javax.swing.border.EmptyBorder* *EmptyBorder* A class which provides an empty, transparent border which
 takes up space but does no drawing.

public class EmptyBorder
  extends    |javax.swing.border.AbstractBorder|
  implements |java.io.Serializable|

|javax.swing.border.EmptyBorder_Description|
|javax.swing.border.EmptyBorder_Fields|
|javax.swing.border.EmptyBorder_Constructors|
|javax.swing.border.EmptyBorder_Methods|

====================================================================================================================================================================================

*javax.swing.border.EmptyBorder_Fields*
|int_javax.swing.border.EmptyBorder.bottom|
|int_javax.swing.border.EmptyBorder.left|
|int_javax.swing.border.EmptyBorder.right|
|int_javax.swing.border.EmptyBorder.top|

*javax.swing.border.EmptyBorder_Constructors*
|javax.swing.border.EmptyBorder(Insets)|Creates an empty border with the specified insets.
|javax.swing.border.EmptyBorder(int,int,int,int)|Creates an empty border with the specified insets.

*javax.swing.border.EmptyBorder_Methods*
|javax.swing.border.EmptyBorder.getBorderInsets()|Returns the insets of the border.
|javax.swing.border.EmptyBorder.getBorderInsets(Component)|Returns the insets of the border.
|javax.swing.border.EmptyBorder.getBorderInsets(Component,Insets)|Reinitialize the insets parameter with this Border's current Insets.
|javax.swing.border.EmptyBorder.isBorderOpaque()|Returns whether or not the border is opaque.
|javax.swing.border.EmptyBorder.paintBorder(Component,Graphics,int,int,int,int)|Does no drawing by default.

*javax.swing.border.EmptyBorder_Description*

A class which provides an empty, transparent border which takes up space but does no drawing. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*int_javax.swing.border.EmptyBorder.bottom*




*int_javax.swing.border.EmptyBorder.left*




*int_javax.swing.border.EmptyBorder.right*




*int_javax.swing.border.EmptyBorder.top*





*javax.swing.border.EmptyBorder(Insets)*

public EmptyBorder(java.awt.Insets borderInsets)

Creates an empty border with the specified insets. 

    borderInsets - the insets of the border 

*javax.swing.border.EmptyBorder(int,int,int,int)*

public EmptyBorder(
  int top,
  int left,
  int bottom,
  int right)

Creates an empty border with the specified insets. 

    top - the top inset of the border 
    left - the left inset of the border 
    bottom - the bottom inset of the border 
    right - the right inset of the border 

*javax.swing.border.EmptyBorder.getBorderInsets()*

public |java.awt.Insets| getBorderInsets()

Returns the insets of the border. 



*javax.swing.border.EmptyBorder.getBorderInsets(Component)*

public |java.awt.Insets| getBorderInsets(java.awt.Component c)

Returns the insets of the border. 


    c - the component for which this border insets value applies 

*javax.swing.border.EmptyBorder.getBorderInsets(Component,Insets)*

public |java.awt.Insets| getBorderInsets(
  java.awt.Component c,
  java.awt.Insets insets)

Reinitialize the insets parameter with this Border's current Insets. 


    c - the component for which this border insets value applies 
    insets - the object to be reinitialized 

*javax.swing.border.EmptyBorder.isBorderOpaque()*

public boolean isBorderOpaque()

Returns whether or not the border is opaque. Returns false by default. 



*javax.swing.border.EmptyBorder.paintBorder(Component,Graphics,int,int,int,int)*

public void paintBorder(
  java.awt.Component c,
  java.awt.Graphics g,
  int x,
  int y,
  int width,
  int height)

Does no drawing by default. 




