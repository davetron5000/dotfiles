*java.awt.image.ImageProducer* *ImageProducer* The interface for objects which can produce the image data for Images.

public interface interface ImageProducer


|java.awt.image.ImageProducer_Description|
|java.awt.image.ImageProducer_Fields|
|java.awt.image.ImageProducer_Constructors|
|java.awt.image.ImageProducer_Methods|

====================================================================================================================================================================================

*java.awt.image.ImageProducer_Methods*
|java.awt.image.ImageProducer.addConsumer(ImageConsumer)|Registers an ImageConsumer with the  ImageProducer for access to the image data   during a later reconstruction of the Ima
|java.awt.image.ImageProducer.isConsumer(ImageConsumer)|Determines if a specified ImageConsumer   object is currently registered with this   ImageProducer as one of its consumers.
|java.awt.image.ImageProducer.removeConsumer(ImageConsumer)|Removes the specified ImageConsumer object  from the list of consumers currently registered to  receive image data.
|java.awt.image.ImageProducer.requestTopDownLeftRightResend(ImageConsumer)|Requests, on behalf of the ImageConsumer,   that the ImageProducer attempt to resend   the image data on
|java.awt.image.ImageProducer.startProduction(ImageConsumer)|Registers the specified ImageConsumer object  as a consumer and starts an immediate reconstruction of  the image data 

*java.awt.image.ImageProducer_Description*

The interface for objects which can produce the image data for Images. Each image contains an ImageProducer which is used to reconstruct the image whenever it is needed, for 
example, when a new size of the Image is scaled, or when the width or height of the Image is being requested. 



*java.awt.image.ImageProducer.addConsumer(ImageConsumer)*

public void addConsumer(java.awt.image.ImageConsumer ic)

Registers an ImageConsumer with the ImageProducer for access to the image data during a later reconstruction of the Image. The ImageProducer may, at its discretion, start 
delivering the image data to the consumer using the ImageConsumer interface immediately, or when the next available image reconstruction is triggered by a call to the 
startProduction method. 


    ic - the specified ImageConsumer 

*java.awt.image.ImageProducer.isConsumer(ImageConsumer)*

public boolean isConsumer(java.awt.image.ImageConsumer ic)

Determines if a specified ImageConsumer object is currently registered with this ImageProducer as one of its consumers. 


    ic - the specified ImageConsumer 

    Returns: true if the specified ImageConsumer is registered with this ImageProducer; false otherwise. 

*java.awt.image.ImageProducer.removeConsumer(ImageConsumer)*

public void removeConsumer(java.awt.image.ImageConsumer ic)

Removes the specified ImageConsumer object from the list of consumers currently registered to receive image data. It is not considered an error to remove a consumer that is not 
currently registered. The ImageProducer should stop sending data to this consumer as soon as is feasible. 


    ic - the specified ImageConsumer 

*java.awt.image.ImageProducer.requestTopDownLeftRightResend(ImageConsumer)*

public void requestTopDownLeftRightResend(java.awt.image.ImageConsumer ic)

Requests, on behalf of the ImageConsumer, that the ImageProducer attempt to resend the image data one more time in TOPDOWNLEFTRIGHT order so that higher quality conversion 
algorithms which depend on receiving pixels in order can be used to produce a better output version of the image. The ImageProducer is free to ignore this call if it cannot resend 
the data in that order. If the data can be resent, the ImageProducer should respond by executing the following minimum set of ImageConsumer method calls: 

ic.setHints(TOPDOWNLEFTRIGHT | ); ic.setPixels(...);	// As many times as needed ic.imageComplete(); 


    ic - the specified ImageConsumer 

*java.awt.image.ImageProducer.startProduction(ImageConsumer)*

public void startProduction(java.awt.image.ImageConsumer ic)

Registers the specified ImageConsumer object as a consumer and starts an immediate reconstruction of the image data which will then be delivered to this consumer and any other 
consumer which might have already been registered with the producer. This method differs from the addConsumer method in that a reproduction of the image data should be triggered 
as soon as possible. 


    ic - the specified ImageConsumer 


