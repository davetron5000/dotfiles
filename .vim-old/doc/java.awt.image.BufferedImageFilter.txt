*java.awt.image.BufferedImageFilter* *BufferedImageFilter* The BufferedImageFilter class subclasses an 
 ImageFilter to provide a simple means of
 using a single-source/single-dest

public class BufferedImageFilter
  extends    |java.awt.image.ImageFilter|
  implements |java.lang.Cloneable|

|java.awt.image.BufferedImageFilter_Description|
|java.awt.image.BufferedImageFilter_Fields|
|java.awt.image.BufferedImageFilter_Constructors|
|java.awt.image.BufferedImageFilter_Methods|

====================================================================================================================================================================================

*java.awt.image.BufferedImageFilter_Constructors*
|java.awt.image.BufferedImageFilter(BufferedImageOp)|Constructs a BufferedImageFilter with the  specified single-source/single-destination operator.

*java.awt.image.BufferedImageFilter_Methods*
|java.awt.image.BufferedImageFilter.getBufferedImageOp()|Returns the BufferedImageOp.
|java.awt.image.BufferedImageFilter.imageComplete(int)|Filters the information provided in the imageComplete  method of the ImageConsumer interface.
|java.awt.image.BufferedImageFilter.setColorModel(ColorModel)|Filters the information provided in theImageConsumer#setColorModel(ColorModel) setColorModelmethod  of the ImageConsu
|java.awt.image.BufferedImageFilter.setDimensions(int,int)|Filters the information provided in theImageConsumer#setDimensions(int, int) setDimensionsmethod  of theImageConsumerint
|java.awt.image.BufferedImageFilter.setPixels(int,int,int,int,ColorModel,byte[],int,int)|Filters the information provided in the setPixels  method of the ImageConsumer interface w
|java.awt.image.BufferedImageFilter.setPixels(int,int,int,int,ColorModel,int[],int,int)|Filters the information provided in the setPixels   method of the ImageConsumer interface w

*java.awt.image.BufferedImageFilter_Description*

The BufferedImageFilter class subclasses an ImageFilter to provide a simple means of using a single-source/single-destination image operator ( (|java.awt.image.BufferedImageOp|) ) 
to filter a BufferedImage in the Image Producer/Consumer/Observer paradigm. Examples of these image operators are: (|java.awt.image.ConvolveOp|) , 
(|java.awt.image.AffineTransformOp|) and (|java.awt.image.LookupOp|) . 



*java.awt.image.BufferedImageFilter(BufferedImageOp)*

public BufferedImageFilter(java.awt.image.BufferedImageOp op)

Constructs a BufferedImageFilter with the specified single-source/single-destination operator. 

    op - the specified BufferedImageOp to use to filter a BufferedImage 

*java.awt.image.BufferedImageFilter.getBufferedImageOp()*

public |java.awt.image.BufferedImageOp| getBufferedImageOp()

Returns the BufferedImageOp. 



    Returns: the operator of this BufferedImageFilter. 

*java.awt.image.BufferedImageFilter.imageComplete(int)*

public void imageComplete(int status)

Filters the information provided in the imageComplete method of the ImageConsumer interface. 

Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to retrieve pixels from an image should 
avoid calling this method directly since that operation could result in problems with retrieving the requested pixels. 


    status - the status of image loading 

*java.awt.image.BufferedImageFilter.setColorModel(ColorModel)*

public void setColorModel(java.awt.image.ColorModel model)

Filters the information provided in the setColorModel(|java.awt.image.ImageConsumer|) method of the ImageConsumer interface. 

If model is null, this method clears the current ColorModel of this BufferedImageFilter. 

Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to retrieve pixels from an image should 
avoid calling this method directly since that operation could result in problems with retrieving the requested pixels. 


    model - the {@link ColorModel} to which to set the ColorModel of this BufferedImageFilter 

*java.awt.image.BufferedImageFilter.setDimensions(int,int)*

public void setDimensions(
  int width,
  int height)

Filters the information provided in the setDimensions (|java.awt.image.ImageConsumer|) method of the (|java.awt.image.ImageConsumer|) interface. 

Note: This method is intended to be called by the (|java.awt.image.ImageProducer|) of the Image whose pixels are being filtered. Developers using this class to retrieve pixels 
from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels. 


    width - the width to which to set the width of this BufferedImageFilter 
    height - the height to which to set the height of this BufferedImageFilter 

*java.awt.image.BufferedImageFilter.setPixels(int,int,int,int,ColorModel,byte[],int,int)*

public void setPixels(
  int x,
  int y,
  int w,
  int h,
  java.awt.image.ColorModel model,
  byte[] pixels,
  int off,
  int scansize)

Filters the information provided in the setPixels method of the ImageConsumer interface which takes an array of bytes. 

Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to retrieve pixels from an image should 
avoid calling this method directly since that operation could result in problems with retrieving the requested pixels. 



*java.awt.image.BufferedImageFilter.setPixels(int,int,int,int,ColorModel,int[],int,int)*

public void setPixels(
  int x,
  int y,
  int w,
  int h,
  java.awt.image.ColorModel model,
  int[] pixels,
  int off,
  int scansize)

Filters the information provided in the setPixels method of the ImageConsumer interface which takes an array of integers. 

Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to retrieve pixels from an image should 
avoid calling this method directly since that operation could result in problems with retrieving the requested pixels. 




