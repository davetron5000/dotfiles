*javax.sound.sampled.Control* *Control* Line Linesoften have a set of controls, 

public abstract class Control
  extends    |java.lang.Object|

|javax.sound.sampled.Control_Description|
|javax.sound.sampled.Control_Fields|
|javax.sound.sampled.Control_Constructors|
|javax.sound.sampled.Control_Methods|

================================================================================

*javax.sound.sampled.Control_Constructors*
|javax.sound.sampled.Control(Control.Type)|Constructs a Control with the specif

*javax.sound.sampled.Control_Methods*
|javax.sound.sampled.Control.getType()|Obtains the control's type.
|javax.sound.sampled.Control.toString()|Obtains a String describing the control

*javax.sound.sampled.Control_Description*

Lines(|javax.sound.sampled.Line|) often have a set of controls, such as gain 
and pan, that affect the audio signal passing through the line. Java Sound's 
Line objects let you obtain a particular control object by passing its class as 
the argument to a getControl(|javax.sound.sampled.Line|) method. 

Because the various types of controls have different purposes and features, all 
of their functionality is accessed from the subclasses that define each kind of 
control. 


*javax.sound.sampled.Control(Control.Type)*

protected Control(javax.sound.sampled.Control.Type type)

Constructs a Control with the specified type. 

    type - the kind of control desired 

*javax.sound.sampled.Control.getType()*

public |javax.sound.sampled.Control.Type| getType()

Obtains the control's type. 


    Returns: the control's type. 
*javax.sound.sampled.Control.toString()*

public |java.lang.String| toString()

Obtains a String describing the control type and its current state. 


    Returns: a String representation of the Control. 

