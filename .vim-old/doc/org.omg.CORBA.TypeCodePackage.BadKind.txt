*org.omg.CORBA.TypeCodePackage.BadKind* *BadKind* The exception BadKind is throw

public final class BadKind
  extends    |org.omg.CORBA.UserException|

|org.omg.CORBA.TypeCodePackage.BadKind_Description|
|org.omg.CORBA.TypeCodePackage.BadKind_Fields|
|org.omg.CORBA.TypeCodePackage.BadKind_Constructors|
|org.omg.CORBA.TypeCodePackage.BadKind_Methods|

================================================================================

*org.omg.CORBA.TypeCodePackage.BadKind_Constructors*
|org.omg.CORBA.TypeCodePackage.BadKind()|Constructs a BadKind exception with no
|org.omg.CORBA.TypeCodePackage.BadKind(String)|Constructs a BadKind exception w

*org.omg.CORBA.TypeCodePackage.BadKind_Description*

The exception BadKind is thrown when an inappropriate operation is invoked on a 
TypeCode object. For example, invoking the method discriminator_type() on an 
instance of TypeCode that does not represent an IDL union will cause the 
exception BadKind to be thrown. 


*org.omg.CORBA.TypeCodePackage.BadKind()*

public BadKind()

Constructs a BadKind exception with no reason message. 


*org.omg.CORBA.TypeCodePackage.BadKind(String)*

public BadKind(java.lang.String reason)

Constructs a BadKind exception with the specified reason message. 

    reason - the String containing a reason message 

