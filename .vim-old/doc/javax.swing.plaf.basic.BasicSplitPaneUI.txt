*javax.swing.plaf.basic.BasicSplitPaneUI* *BasicSplitPaneUI* A Basic Limplementation of the SplitPaneUI.

public class BasicSplitPaneUI
  extends    |javax.swing.plaf.SplitPaneUI|

|javax.swing.plaf.basic.BasicSplitPaneUI_Description|
|javax.swing.plaf.basic.BasicSplitPaneUI_Fields|
|javax.swing.plaf.basic.BasicSplitPaneUI_Constructors|
|javax.swing.plaf.basic.BasicSplitPaneUI_Methods|

====================================================================================================================================================================================

*javax.swing.plaf.basic.BasicSplitPaneUI_Fields*
|int_javax.swing.plaf.basic.BasicSplitPaneUI.beginDragDividerLocation|
|javax.swing.plaf.basic.BasicSplitPaneDivider_javax.swing.plaf.basic.BasicSplitPaneUI.divider|
|javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.dividerResizeToggleKey|
|int_javax.swing.plaf.basic.BasicSplitPaneUI.dividerSize|
|javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.downKey|
|boolean_javax.swing.plaf.basic.BasicSplitPaneUI.draggingHW|
|javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.endKey|
|java.awt.event.FocusListener_javax.swing.plaf.basic.BasicSplitPaneUI.focusListener|
|javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.homeKey|
|int_javax.swing.plaf.basic.BasicSplitPaneUI.KEYBOARD_DIVIDER_MOVE_OFFSET|
|java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardDownRightListener|
|java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardEndListener|
|java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardHomeListener|
|java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardResizeToggleListener|
|java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardUpLeftListener|
|javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager_javax.swing.plaf.basic.BasicSplitPaneUI.layoutManager|
|javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.leftKey|
|java.lang.String_javax.swing.plaf.basic.BasicSplitPaneUI.NON_CONTINUOUS_DIVIDER|
|java.awt.Component_javax.swing.plaf.basic.BasicSplitPaneUI.nonContinuousLayoutDivider|
|java.beans.PropertyChangeListener_javax.swing.plaf.basic.BasicSplitPaneUI.propertyChangeListener|
|javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.rightKey|
|javax.swing.JSplitPane_javax.swing.plaf.basic.BasicSplitPaneUI.splitPane|
|javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.upKey|

*javax.swing.plaf.basic.BasicSplitPaneUI_Constructors*
|javax.swing.plaf.basic.BasicSplitPaneUI()|

*javax.swing.plaf.basic.BasicSplitPaneUI_Methods*
|javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultDivider()|Creates the default divider.
|javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultNonContinuousLayoutDivider()|Returns the default non continuous layout divider, which is an  instanceof Canvas that fills the
|javax.swing.plaf.basic.BasicSplitPaneUI.createFocusListener()|Creates a FocusListener for the JSplitPane UI.
|javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardDownRightListener()|As of Java 2 platform v1.3 this method is no  longer used.
|javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardEndListener()|As of Java 2 platform v1.3 this method is no  longer used.
|javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardHomeListener()|As of Java 2 platform v1.3 this method is no  longer used.
|javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardResizeToggleListener()|As of Java 2 platform v1.3 this method is no  longer used.
|javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardUpLeftListener()|As of Java 2 platform v1.3 this method is no  longer used.
|javax.swing.plaf.basic.BasicSplitPaneUI.createPropertyChangeListener()|Creates a PropertyChangeListener for the JSplitPane UI.
|javax.swing.plaf.basic.BasicSplitPaneUI.createUI(JComponent)|Creates a new BasicSplitPaneUI instance
|javax.swing.plaf.basic.BasicSplitPaneUI.dragDividerTo(int)|Messaged during a dragging session to move the divider to the  passed in location.
|javax.swing.plaf.basic.BasicSplitPaneUI.finishDraggingTo(int)|Messaged to finish the dragging session.
|javax.swing.plaf.basic.BasicSplitPaneUI.finishedPaintingChildren(JSplitPane,Graphics)|Messaged after the JSplitPane the receiver is providing the look  and feel for paints its ch
|javax.swing.plaf.basic.BasicSplitPaneUI.getDivider()|Returns the divider between the top Components.
|javax.swing.plaf.basic.BasicSplitPaneUI.getDividerBorderSize()|As of Java 2 platform v1.3 this method is no longer used.
|javax.swing.plaf.basic.BasicSplitPaneUI.getDividerLocation(JSplitPane)|Returns the location of the divider, which may differ from what  the splitpane thinks the location of the d
|javax.swing.plaf.basic.BasicSplitPaneUI.getInsets(JComponent)|Returns the insets.
|javax.swing.plaf.basic.BasicSplitPaneUI.getLastDragLocation()|Returns the last drag location of the JSplitPane.
|javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumDividerLocation(JSplitPane)|Gets the maximum location of the divider.
|javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumSize(JComponent)|Returns the maximum size for the passed in component,  This is passed off to the current layoutmanager.
|javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumDividerLocation(JSplitPane)|Gets the minimum location of the divider.
|javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumSize(JComponent)|Returns the minimum size for the passed in component,  This is passed off to the current layoutmanager.
|javax.swing.plaf.basic.BasicSplitPaneUI.getNonContinuousLayoutDivider()|Returns the divider to use when the splitPane is configured to  not continuously layout.
|javax.swing.plaf.basic.BasicSplitPaneUI.getOrientation()|Returns the orientation for the JSplitPane.
|javax.swing.plaf.basic.BasicSplitPaneUI.getPreferredSize(JComponent)|Returns the preferred size for the passed in component,  This is passed off to the current layoutmanager.
|javax.swing.plaf.basic.BasicSplitPaneUI.getSplitPane()|Returns the splitpane this instance is currently contained  in.
|javax.swing.plaf.basic.BasicSplitPaneUI.installDefaults()|Installs the UI defaults.
|javax.swing.plaf.basic.BasicSplitPaneUI.installKeyboardActions()|Installs the keyboard actions for the UI.
|javax.swing.plaf.basic.BasicSplitPaneUI.installListeners()|Installs the event listeners for the UI.
|javax.swing.plaf.basic.BasicSplitPaneUI.installUI(JComponent)|Installs the UI.
|javax.swing.plaf.basic.BasicSplitPaneUI.isContinuousLayout()|Determines wether the JSplitPane is set to use a continuous layout.
|javax.swing.plaf.basic.BasicSplitPaneUI.paint(Graphics,JComponent)|Messaged to paint the look and feel.
|javax.swing.plaf.basic.BasicSplitPaneUI.resetLayoutManager()|Resets the layout manager based on orientation and messages it  with invalidateLayout to pull in appropriate Componen
|javax.swing.plaf.basic.BasicSplitPaneUI.resetToPreferredSizes(JSplitPane)|Messaged to reset the preferred sizes.
|javax.swing.plaf.basic.BasicSplitPaneUI.setContinuousLayout(boolean)|Turn continuous layout on/off.
|javax.swing.plaf.basic.BasicSplitPaneUI.setDividerLocation(JSplitPane,int)|Sets the location of the divider to location.
|javax.swing.plaf.basic.BasicSplitPaneUI.setLastDragLocation(int)|Set the last drag location of the JSplitPane.
|javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider(Component)|Sets the divider to use when the splitPane is configured to  not continuously layout.
|javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider(Component,boolean)|Sets the divider to use.
|javax.swing.plaf.basic.BasicSplitPaneUI.setOrientation(int)|Set the orientation for the JSplitPane.
|javax.swing.plaf.basic.BasicSplitPaneUI.startDragging()|Should be messaged before the dragging session starts, resets  lastDragLocation and dividerSize.
|javax.swing.plaf.basic.BasicSplitPaneUI.uninstallDefaults()|Uninstalls the UI defaults.
|javax.swing.plaf.basic.BasicSplitPaneUI.uninstallKeyboardActions()|Uninstalls the keyboard actions for the UI.
|javax.swing.plaf.basic.BasicSplitPaneUI.uninstallListeners()|Uninstalls the event listeners for the UI.
|javax.swing.plaf.basic.BasicSplitPaneUI.uninstallUI(JComponent)|Uninstalls the UI.

*javax.swing.plaf.basic.BasicSplitPaneUI_Description*

A Basic Limplementation of the SplitPaneUI. 



*int_javax.swing.plaf.basic.BasicSplitPaneUI.beginDragDividerLocation*

Location of the divider when the dragging session began. 


*javax.swing.plaf.basic.BasicSplitPaneDivider_javax.swing.plaf.basic.BasicSplitPaneUI.divider*

Instance of the divider for this JSplitPane. 


*javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.dividerResizeToggleKey*

As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification 
for further details. 


*int_javax.swing.plaf.basic.BasicSplitPaneUI.dividerSize*

The size of the divider while the dragging session is valid. 


*javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.downKey*

As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification 
for further details. 


*boolean_javax.swing.plaf.basic.BasicSplitPaneUI.draggingHW*

Set to true in startDragging if any of the children (not including the nonContinuousLayoutDivider) are heavy weights. 


*javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.endKey*

As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification 
for further details. 


*java.awt.event.FocusListener_javax.swing.plaf.basic.BasicSplitPaneUI.focusListener*

Instance of the FocusListener for this JSplitPane. 


*javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.homeKey*

As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification 
for further details. 


*int_javax.swing.plaf.basic.BasicSplitPaneUI.KEYBOARD_DIVIDER_MOVE_OFFSET*

How far (relative) the divider does move when it is moved around by the cursor keys on the keyboard. 


*java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardDownRightListener*

As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification 
for further details. 


*java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardEndListener*

As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification 
for further details. 


*java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardHomeListener*

As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification 
for further details. 


*java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardResizeToggleListener*

As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification 
for further details. 


*java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardUpLeftListener*

As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification 
for further details. 


*javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager_javax.swing.plaf.basic.BasicSplitPaneUI.layoutManager*

LayoutManager that is created and placed into the split pane. 


*javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.leftKey*

As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification 
for further details. 


*java.lang.String_javax.swing.plaf.basic.BasicSplitPaneUI.NON_CONTINUOUS_DIVIDER*

The divider used for non-continuous layout is added to the split pane with this object. 


*java.awt.Component_javax.swing.plaf.basic.BasicSplitPaneUI.nonContinuousLayoutDivider*

Instance for the shadow of the divider when non continuous layout is being used. 


*java.beans.PropertyChangeListener_javax.swing.plaf.basic.BasicSplitPaneUI.propertyChangeListener*

Instance of the PropertyChangeListener for this JSplitPane. 


*javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.rightKey*

As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification 
for further details. 


*javax.swing.JSplitPane_javax.swing.plaf.basic.BasicSplitPaneUI.splitPane*

JSplitPane instance this instance is providing the look and feel for. 


*javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.upKey*

As of Java 2 platform v1.3 this previously undocumented field is no longer used. Key bindings are now defined by the LookAndFeel, please refer to the key bindings specification 
for further details. 



*javax.swing.plaf.basic.BasicSplitPaneUI()*

public BasicSplitPaneUI()




*javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultDivider()*

public |javax.swing.plaf.basic.BasicSplitPaneDivider| createDefaultDivider()

Creates the default divider. 



*javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultNonContinuousLayoutDivider()*

protected |java.awt.Component| createDefaultNonContinuousLayoutDivider()

Returns the default non continuous layout divider, which is an instanceof Canvas that fills the background in dark gray. 



*javax.swing.plaf.basic.BasicSplitPaneUI.createFocusListener()*

protected |java.awt.event.FocusListener| createFocusListener()

Creates a FocusListener for the JSplitPane UI. 



*javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardDownRightListener()*

protected |java.awt.event.ActionListener| createKeyboardDownRightListener()

As of Java 2 platform v1.3 this method is no longer used. Subclassers previously using this method should instead create an Action wrapping the ActionListener, and register that 
Action by overriding installKeyboardActions and placing the Action in the SplitPane's ActionMap. Please refer to the key bindings specification for further details. 

Creates a ActionListener for the JSplitPane UI that listens for specific key presses. 

    Deprecated: As of Java 2 platform v1.3.


*javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardEndListener()*

protected |java.awt.event.ActionListener| createKeyboardEndListener()

As of Java 2 platform v1.3 this method is no longer used. Subclassers previously using this method should instead create an Action wrapping the ActionListener, and register that 
Action by overriding installKeyboardActions and placing the Action in the SplitPane's ActionMap. Please refer to the key bindings specification for further details. 

Creates a ActionListener for the JSplitPane UI that listens for specific key presses. 

    Deprecated: As of Java 2 platform v1.3.


*javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardHomeListener()*

protected |java.awt.event.ActionListener| createKeyboardHomeListener()

As of Java 2 platform v1.3 this method is no longer used. Subclassers previously using this method should instead create an Action wrapping the ActionListener, and register that 
Action by overriding installKeyboardActions and placing the Action in the SplitPane's ActionMap. Please refer to the key bindings specification for further details. 

Creates a ActionListener for the JSplitPane UI that listens for specific key presses. 

    Deprecated: As of Java 2 platform v1.3.


*javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardResizeToggleListener()*

protected |java.awt.event.ActionListener| createKeyboardResizeToggleListener()

As of Java 2 platform v1.3 this method is no longer used. Subclassers previously using this method should instead create an Action wrapping the ActionListener, and register that 
Action by overriding installKeyboardActions and placing the Action in the SplitPane's ActionMap. Please refer to the key bindings specification for further details. 

Creates a ActionListener for the JSplitPane UI that listens for specific key presses. 

    Deprecated: As of Java 2 platform v1.3.


*javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardUpLeftListener()*

protected |java.awt.event.ActionListener| createKeyboardUpLeftListener()

As of Java 2 platform v1.3 this method is no longer used. Subclassers previously using this method should instead create an Action wrapping the ActionListener, and register that 
Action by overriding installKeyboardActions and placing the Action in the SplitPane's ActionMap. Please refer to the key bindings specification for further details. 

Creates a ActionListener for the JSplitPane UI that listens for specific key presses. 

    Deprecated: As of Java 2 platform v1.3.


*javax.swing.plaf.basic.BasicSplitPaneUI.createPropertyChangeListener()*

protected |java.beans.PropertyChangeListener| createPropertyChangeListener()

Creates a PropertyChangeListener for the JSplitPane UI. 



*javax.swing.plaf.basic.BasicSplitPaneUI.createUI(JComponent)*

public static |javax.swing.plaf.ComponentUI| createUI(javax.swing.JComponent x)

Creates a new BasicSplitPaneUI instance 



*javax.swing.plaf.basic.BasicSplitPaneUI.dragDividerTo(int)*

protected void dragDividerTo(int location)

Messaged during a dragging session to move the divider to the passed in location. If continuousLayout is true the location is reset and the splitPane validated. 



*javax.swing.plaf.basic.BasicSplitPaneUI.finishDraggingTo(int)*

protected void finishDraggingTo(int location)

Messaged to finish the dragging session. If not continuous display the dividers location will be reset. 



*javax.swing.plaf.basic.BasicSplitPaneUI.finishedPaintingChildren(JSplitPane,Graphics)*

public void finishedPaintingChildren(
  javax.swing.JSplitPane jc,
  java.awt.Graphics g)

Messaged after the JSplitPane the receiver is providing the look and feel for paints its children. 



*javax.swing.plaf.basic.BasicSplitPaneUI.getDivider()*

public |javax.swing.plaf.basic.BasicSplitPaneDivider| getDivider()

Returns the divider between the top Components. 



*javax.swing.plaf.basic.BasicSplitPaneUI.getDividerBorderSize()*

protected int getDividerBorderSize()

As of Java 2 platform v1.3 this method is no longer used. Instead you should set the border on the divider. 

Returns the width of one side of the divider border. 

    Deprecated: As of Java 2 platform v1.3, instead set the border on the
 divider.


*javax.swing.plaf.basic.BasicSplitPaneUI.getDividerLocation(JSplitPane)*

public int getDividerLocation(javax.swing.JSplitPane jc)

Returns the location of the divider, which may differ from what the splitpane thinks the location of the divider is. 



*javax.swing.plaf.basic.BasicSplitPaneUI.getInsets(JComponent)*

public |java.awt.Insets| getInsets(javax.swing.JComponent jc)

Returns the insets. The insets are returned from the border insets of the current border. 



*javax.swing.plaf.basic.BasicSplitPaneUI.getLastDragLocation()*

public int getLastDragLocation()

Returns the last drag location of the JSplitPane. 



*javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumDividerLocation(JSplitPane)*

public int getMaximumDividerLocation(javax.swing.JSplitPane jc)

Gets the maximum location of the divider. 



*javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumSize(JComponent)*

public |java.awt.Dimension| getMaximumSize(javax.swing.JComponent jc)

Returns the maximum size for the passed in component, This is passed off to the current layoutmanager. 



*javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumDividerLocation(JSplitPane)*

public int getMinimumDividerLocation(javax.swing.JSplitPane jc)

Gets the minimum location of the divider. 



*javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumSize(JComponent)*

public |java.awt.Dimension| getMinimumSize(javax.swing.JComponent jc)

Returns the minimum size for the passed in component, This is passed off to the current layoutmanager. 



*javax.swing.plaf.basic.BasicSplitPaneUI.getNonContinuousLayoutDivider()*

public |java.awt.Component| getNonContinuousLayoutDivider()

Returns the divider to use when the splitPane is configured to not continuously layout. This divider will only be used during a dragging session. 



*javax.swing.plaf.basic.BasicSplitPaneUI.getOrientation()*

public int getOrientation()

Returns the orientation for the JSplitPane. 



*javax.swing.plaf.basic.BasicSplitPaneUI.getPreferredSize(JComponent)*

public |java.awt.Dimension| getPreferredSize(javax.swing.JComponent jc)

Returns the preferred size for the passed in component, This is passed off to the current layoutmanager. 



*javax.swing.plaf.basic.BasicSplitPaneUI.getSplitPane()*

public |javax.swing.JSplitPane| getSplitPane()

Returns the splitpane this instance is currently contained in. 



*javax.swing.plaf.basic.BasicSplitPaneUI.installDefaults()*

protected void installDefaults()

Installs the UI defaults. 



*javax.swing.plaf.basic.BasicSplitPaneUI.installKeyboardActions()*

protected void installKeyboardActions()

Installs the keyboard actions for the UI. 



*javax.swing.plaf.basic.BasicSplitPaneUI.installListeners()*

protected void installListeners()

Installs the event listeners for the UI. 



*javax.swing.plaf.basic.BasicSplitPaneUI.installUI(JComponent)*

public void installUI(javax.swing.JComponent c)

Installs the UI. 



*javax.swing.plaf.basic.BasicSplitPaneUI.isContinuousLayout()*

public boolean isContinuousLayout()

Determines wether the JSplitPane is set to use a continuous layout. 



*javax.swing.plaf.basic.BasicSplitPaneUI.paint(Graphics,JComponent)*

public void paint(
  java.awt.Graphics g,
  javax.swing.JComponent jc)

Messaged to paint the look and feel. 



*javax.swing.plaf.basic.BasicSplitPaneUI.resetLayoutManager()*

protected void resetLayoutManager()

Resets the layout manager based on orientation and messages it with invalidateLayout to pull in appropriate Components. 



*javax.swing.plaf.basic.BasicSplitPaneUI.resetToPreferredSizes(JSplitPane)*

public void resetToPreferredSizes(javax.swing.JSplitPane jc)

Messaged to reset the preferred sizes. 



*javax.swing.plaf.basic.BasicSplitPaneUI.setContinuousLayout(boolean)*

public void setContinuousLayout(boolean b)

Turn continuous layout on/off. 



*javax.swing.plaf.basic.BasicSplitPaneUI.setDividerLocation(JSplitPane,int)*

public void setDividerLocation(
  javax.swing.JSplitPane jc,
  int location)

Sets the location of the divider to location. 



*javax.swing.plaf.basic.BasicSplitPaneUI.setLastDragLocation(int)*

public void setLastDragLocation(int l)

Set the last drag location of the JSplitPane. 



*javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider(Component)*

protected void setNonContinuousLayoutDivider(java.awt.Component newDivider)

Sets the divider to use when the splitPane is configured to not continuously layout. This divider will only be used during a dragging session. It is recommended that the passed in 
component be a heavy weight. 



*javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider(Component,boolean)*

protected void setNonContinuousLayoutDivider(
  java.awt.Component newDivider,
  boolean rememberSizes)

Sets the divider to use. 



*javax.swing.plaf.basic.BasicSplitPaneUI.setOrientation(int)*

public void setOrientation(int orientation)

Set the orientation for the JSplitPane. 



*javax.swing.plaf.basic.BasicSplitPaneUI.startDragging()*

protected void startDragging()

Should be messaged before the dragging session starts, resets lastDragLocation and dividerSize. 



*javax.swing.plaf.basic.BasicSplitPaneUI.uninstallDefaults()*

protected void uninstallDefaults()

Uninstalls the UI defaults. 



*javax.swing.plaf.basic.BasicSplitPaneUI.uninstallKeyboardActions()*

protected void uninstallKeyboardActions()

Uninstalls the keyboard actions for the UI. 



*javax.swing.plaf.basic.BasicSplitPaneUI.uninstallListeners()*

protected void uninstallListeners()

Uninstalls the event listeners for the UI. 



*javax.swing.plaf.basic.BasicSplitPaneUI.uninstallUI(JComponent)*

public void uninstallUI(javax.swing.JComponent c)

Uninstalls the UI. 




