*javax.swing.plaf.basic.BasicDirectoryModel* *BasicDirectoryModel* Basic implementation of a file list.

public class BasicDirectoryModel
  extends    |javax.swing.AbstractListModel|
  implements |java.beans.PropertyChangeListener|

|javax.swing.plaf.basic.BasicDirectoryModel_Description|
|javax.swing.plaf.basic.BasicDirectoryModel_Fields|
|javax.swing.plaf.basic.BasicDirectoryModel_Constructors|
|javax.swing.plaf.basic.BasicDirectoryModel_Methods|

====================================================================================================================================================================================

*javax.swing.plaf.basic.BasicDirectoryModel_Constructors*
|javax.swing.plaf.basic.BasicDirectoryModel(JFileChooser)|

*javax.swing.plaf.basic.BasicDirectoryModel_Methods*
|javax.swing.plaf.basic.BasicDirectoryModel.contains(Object)|
|javax.swing.plaf.basic.BasicDirectoryModel.fireContentsChanged()|
|javax.swing.plaf.basic.BasicDirectoryModel.getDirectories()|
|javax.swing.plaf.basic.BasicDirectoryModel.getElementAt(int)|
|javax.swing.plaf.basic.BasicDirectoryModel.getFiles()|
|javax.swing.plaf.basic.BasicDirectoryModel.getSize()|
|javax.swing.plaf.basic.BasicDirectoryModel.indexOf(Object)|
|javax.swing.plaf.basic.BasicDirectoryModel.intervalAdded(ListDataEvent)|Obsolete - not used.
|javax.swing.plaf.basic.BasicDirectoryModel.intervalRemoved(ListDataEvent)|Obsolete - not used.
|javax.swing.plaf.basic.BasicDirectoryModel.invalidateFileCache()|This method is used to interrupt file loading thread.
|javax.swing.plaf.basic.BasicDirectoryModel.lt(File,File)|
|javax.swing.plaf.basic.BasicDirectoryModel.propertyChange(PropertyChangeEvent)|
|javax.swing.plaf.basic.BasicDirectoryModel.renameFile(File,File)|Renames a file in the underlying file system.
|javax.swing.plaf.basic.BasicDirectoryModel.sort(Vector<?extendsFile>)|
|javax.swing.plaf.basic.BasicDirectoryModel.validateFileCache()|

*javax.swing.plaf.basic.BasicDirectoryModel_Description*

Basic implementation of a file list. 



*javax.swing.plaf.basic.BasicDirectoryModel(JFileChooser)*

public BasicDirectoryModel(javax.swing.JFileChooser filechooser)




*javax.swing.plaf.basic.BasicDirectoryModel.contains(Object)*

public boolean contains(java.lang.Object o)





*javax.swing.plaf.basic.BasicDirectoryModel.fireContentsChanged()*

public void fireContentsChanged()





*javax.swing.plaf.basic.BasicDirectoryModel.getDirectories()*

public |java.util.Vector|<File> getDirectories()





*javax.swing.plaf.basic.BasicDirectoryModel.getElementAt(int)*

public |java.lang.Object| getElementAt(int index)





*javax.swing.plaf.basic.BasicDirectoryModel.getFiles()*

public |java.util.Vector|<File> getFiles()





*javax.swing.plaf.basic.BasicDirectoryModel.getSize()*

public int getSize()





*javax.swing.plaf.basic.BasicDirectoryModel.indexOf(Object)*

public int indexOf(java.lang.Object o)





*javax.swing.plaf.basic.BasicDirectoryModel.intervalAdded(ListDataEvent)*

public void intervalAdded(javax.swing.event.ListDataEvent e)

Obsolete - not used. 



*javax.swing.plaf.basic.BasicDirectoryModel.intervalRemoved(ListDataEvent)*

public void intervalRemoved(javax.swing.event.ListDataEvent e)

Obsolete - not used. 



*javax.swing.plaf.basic.BasicDirectoryModel.invalidateFileCache()*

public void invalidateFileCache()

This method is used to interrupt file loading thread. 



*javax.swing.plaf.basic.BasicDirectoryModel.lt(File,File)*

protected boolean lt(
  java.io.File a,
  java.io.File b)





*javax.swing.plaf.basic.BasicDirectoryModel.propertyChange(PropertyChangeEvent)*

public void propertyChange(java.beans.PropertyChangeEvent e)





*javax.swing.plaf.basic.BasicDirectoryModel.renameFile(File,File)*

public boolean renameFile(
  java.io.File oldFile,
  java.io.File newFile)

Renames a file in the underlying file system. 


    oldFile - a File object representing the existing file 
    newFile - a File object representing the desired new file name 

    Returns: true if rename succeeded, otherwise false 

*javax.swing.plaf.basic.BasicDirectoryModel.sort(Vector<?extendsFile>)*

protected void sort(java.util.Vector<? extends java.io.File> v)





*javax.swing.plaf.basic.BasicDirectoryModel.validateFileCache()*

public void validateFileCache()






