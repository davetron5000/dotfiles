*java.rmi.activation.ActivationSystem* *ActivationSystem* The ActivationSystem provides a means for registering
 groups and "activatable" objects to be activated within those group

public interface interface ActivationSystem

  implements |java.rmi.Remote|

|java.rmi.activation.ActivationSystem_Description|
|java.rmi.activation.ActivationSystem_Fields|
|java.rmi.activation.ActivationSystem_Constructors|
|java.rmi.activation.ActivationSystem_Methods|

====================================================================================================================================================================================

*java.rmi.activation.ActivationSystem_Fields*
|int_java.rmi.activation.ActivationSystem.SYSTEM_PORT|

*java.rmi.activation.ActivationSystem_Methods*
|java.rmi.activation.ActivationSystem.activeGroup(ActivationGroupID,ActivationInstantiator,long)|Callback to inform activation system that group is now  active.
|java.rmi.activation.ActivationSystem.getActivationDesc(ActivationID)|Returns the activation descriptor, for the object with the activation  identifier, id.
|java.rmi.activation.ActivationSystem.getActivationGroupDesc(ActivationGroupID)|Returns the activation group descriptor, for the group  with the activation group identifier, id.
|java.rmi.activation.ActivationSystem.registerGroup(ActivationGroupDesc)|Register the activation group.
|java.rmi.activation.ActivationSystem.registerObject(ActivationDesc)|The registerObject method is used to register an  activation descriptor, desc, and obtain an  activation ident
|java.rmi.activation.ActivationSystem.setActivationDesc(ActivationID,ActivationDesc)|Set the activation descriptor, desc for the object with  the activation identifier, id.
|java.rmi.activation.ActivationSystem.setActivationGroupDesc(ActivationGroupID,ActivationGroupDesc)|Set the activation group descriptor, desc for the object  with the activation g
|java.rmi.activation.ActivationSystem.shutdown()|Shutdown the activation system.
|java.rmi.activation.ActivationSystem.unregisterGroup(ActivationGroupID)|Remove the activation group.
|java.rmi.activation.ActivationSystem.unregisterObject(ActivationID)|Remove the activation id and associated descriptor previously  registered with the ActivationSystem; the objec

*java.rmi.activation.ActivationSystem_Description*

The ActivationSystem provides a means for registering groups and "activatable" objects to be activated within those groups. The ActivationSystem works closely with the Activator, 
which activates objects registered via the ActivationSystem, and the ActivationMonitor, which obtains information about active and inactive objects, and inactive groups. 



*int_java.rmi.activation.ActivationSystem.SYSTEM_PORT*

The port to lookup the activation system. 



*java.rmi.activation.ActivationSystem.activeGroup(ActivationGroupID,ActivationInstantiator,long)*

public |java.rmi.activation.ActivationMonitor| activeGroup(
  java.rmi.activation.ActivationGroupID id,
  java.rmi.activation.ActivationInstantiator group,
  long incarnation)
  throws |java.rmi.activation.ActivationException|
         |java.rmi.RemoteException|
         |java.rmi.activation.UnknownGroupException|
         
Callback to inform activation system that group is now active. This call is made internally by the ActivationGroup.createGroup method to inform the ActivationSystem that the group 
is now active. 


    id - the activation group's identifier 
    group - the group's instantiator 
    incarnation - the group's incarnation number 

    Returns: monitor for activation group 

*java.rmi.activation.ActivationSystem.getActivationDesc(ActivationID)*

public |java.rmi.activation.ActivationDesc| getActivationDesc(java.rmi.activation.ActivationID id)
  throws |java.rmi.activation.ActivationException|
         |java.rmi.RemoteException|
         |java.rmi.activation.UnknownObjectException|
         
Returns the activation descriptor, for the object with the activation identifier, id. 


    id - the activation identifier for the activatable object 

    Returns: the activation descriptor 

*java.rmi.activation.ActivationSystem.getActivationGroupDesc(ActivationGroupID)*

public |java.rmi.activation.ActivationGroupDesc| getActivationGroupDesc(java.rmi.activation.ActivationGroupID id)
  throws |java.rmi.activation.ActivationException|
         |java.rmi.RemoteException|
         |java.rmi.activation.UnknownGroupException|
         
Returns the activation group descriptor, for the group with the activation group identifier, id. 


    id - the activation group identifier for the group 

    Returns: the activation group descriptor 

*java.rmi.activation.ActivationSystem.registerGroup(ActivationGroupDesc)*

public |java.rmi.activation.ActivationGroupID| registerGroup(java.rmi.activation.ActivationGroupDesc desc)
  throws |java.rmi.activation.ActivationException|
         |java.rmi.RemoteException|
         
Register the activation group. An activation group must be registered with the ActivationSystem before objects can be registered within that group. 


    desc - the group's descriptor 

    Returns: an identifier for the group 

*java.rmi.activation.ActivationSystem.registerObject(ActivationDesc)*

public |java.rmi.activation.ActivationID| registerObject(java.rmi.activation.ActivationDesc desc)
  throws |java.rmi.activation.ActivationException|
         |java.rmi.RemoteException|
         |java.rmi.activation.UnknownGroupException|
         
The registerObject method is used to register an activation descriptor, desc, and obtain an activation identifier for a activatable remote object. The ActivationSystem creates an 
ActivationID (a activation identifier) for the object specified by the descriptor, desc, and records, in stable storage, the activation descriptor and its associated identifier 
for later use. When the Activator receives an activate request for a specific identifier, it looks up the activation descriptor (registered previously) for the specified 
identifier and uses that information to activate the object. 


    desc - the object's activation descriptor 

    Returns: the activation id that can be used to activate the object 

*java.rmi.activation.ActivationSystem.setActivationDesc(ActivationID,ActivationDesc)*

public |java.rmi.activation.ActivationDesc| setActivationDesc(
  java.rmi.activation.ActivationID id,
  java.rmi.activation.ActivationDesc desc)
  throws |java.rmi.activation.ActivationException|
         |java.rmi.RemoteException|
         |java.rmi.activation.UnknownGroupException|
         |java.rmi.activation.UnknownObjectException|
         
Set the activation descriptor, desc for the object with the activation identifier, id. The change will take effect upon subsequent activation of the object. 


    id - the activation identifier for the activatable object 
    desc - the activation descriptor for the activatable object 

    Returns: the previous value of the activation descriptor 

*java.rmi.activation.ActivationSystem.setActivationGroupDesc(ActivationGroupID,ActivationGroupDesc)*

public |java.rmi.activation.ActivationGroupDesc| setActivationGroupDesc(
  java.rmi.activation.ActivationGroupID id,
  java.rmi.activation.ActivationGroupDesc desc)
  throws |java.rmi.activation.ActivationException|
         |java.rmi.RemoteException|
         |java.rmi.activation.UnknownGroupException|
         
Set the activation group descriptor, desc for the object with the activation group identifier, id. The change will take effect upon subsequent activation of the group. 


    id - the activation group identifier for the activation group 
    desc - the activation group descriptor for the activation group 

    Returns: the previous value of the activation group descriptor 

*java.rmi.activation.ActivationSystem.shutdown()*

public void shutdown()
  throws |java.rmi.RemoteException|
         
Shutdown the activation system. Destroys all groups spawned by the activation daemon and exits the activation daemon. 



*java.rmi.activation.ActivationSystem.unregisterGroup(ActivationGroupID)*

public void unregisterGroup(java.rmi.activation.ActivationGroupID id)
  throws |java.rmi.activation.ActivationException|
         |java.rmi.RemoteException|
         |java.rmi.activation.UnknownGroupException|
         
Remove the activation group. An activation group makes this call back to inform the activator that the group should be removed (destroyed). If this call completes successfully, 
objects can no longer be registered or activated within the group. All information of the group and its associated objects is removed from the system. 


    id - the activation group's identifier 

*java.rmi.activation.ActivationSystem.unregisterObject(ActivationID)*

public void unregisterObject(java.rmi.activation.ActivationID id)
  throws |java.rmi.activation.ActivationException|
         |java.rmi.RemoteException|
         |java.rmi.activation.UnknownObjectException|
         
Remove the activation id and associated descriptor previously registered with the ActivationSystem; the object can no longer be activated via the object's activation id. 


    id - the object's activation id (from previous registration) 


