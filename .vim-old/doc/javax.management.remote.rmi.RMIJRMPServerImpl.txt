*javax.management.remote.rmi.RMIJRMPServerImpl* *RMIJRMPServerImpl* AnRMIServero

public class RMIJRMPServerImpl
  extends    |javax.management.remote.rmi.RMIServerImpl|

|javax.management.remote.rmi.RMIJRMPServerImpl_Description|
|javax.management.remote.rmi.RMIJRMPServerImpl_Fields|
|javax.management.remote.rmi.RMIJRMPServerImpl_Constructors|
|javax.management.remote.rmi.RMIJRMPServerImpl_Methods|

================================================================================

*javax.management.remote.rmi.RMIJRMPServerImpl_Constructors*
|javax.management.remote.rmi.RMIJRMPServerImpl(int,RMIClientSocketFactory,RMIServerSocketFactory,Map)|

*javax.management.remote.rmi.RMIJRMPServerImpl_Methods*
|javax.management.remote.rmi.RMIJRMPServerImpl.closeClient(RMIConnection)|
|javax.management.remote.rmi.RMIJRMPServerImpl.closeServer()|Called by#close()t
|javax.management.remote.rmi.RMIJRMPServerImpl.export()|
|javax.management.remote.rmi.RMIJRMPServerImpl.getProtocol()|
|javax.management.remote.rmi.RMIJRMPServerImpl.makeClient(String,Subject)|Creat
|javax.management.remote.rmi.RMIJRMPServerImpl.toStub()|Returns a serializable 

*javax.management.remote.rmi.RMIJRMPServerImpl_Description*

An (|javax.management.remote.rmi.RMIServer|) object that is exported through 
JRMP and that creates client connections as RMI objects exported through JRMP. 
User code does not usually reference this class directly. 


*javax.management.remote.rmi.RMIJRMPServerImpl(int,RMIClientSocketFactory,RMIServerSocketFactory,Map)*

public RMIJRMPServerImpl(
  int port,
  java.rmi.server.RMIClientSocketFactory csf,
  java.rmi.server.RMIServerSocketFactory ssf,
  java.util.Map env)
  throws |java.io.IOException|
         
Creates a new (|javax.management.remote.rmi.RMIServer|) object that will be 
exported on the given port using the given socket factories. 

    port - the port on which this object and the {@link RMIConnectionImpl} objects it 
       creates will be exported. Can be zero, to indicate any available port. 
    csf - the client socket factory for the created RMI objects. Can be null. 
    ssf - the server socket factory for the created RMI objects. Can be null. 
    env - the environment map. Can be null. 

*javax.management.remote.rmi.RMIJRMPServerImpl.closeClient(RMIConnection)*

protected void closeClient(javax.management.remote.rmi.RMIConnection client)
  throws |java.io.IOException|
         



*javax.management.remote.rmi.RMIJRMPServerImpl.closeServer()*

protected void closeServer()
  throws |java.io.IOException|
         
Called by (|javax.management.remote.rmi.RMIJRMPServerImpl|) to close the 
connector server by unexporting this object. After returning from this method, 
the connector server must not accept any new connections. 


*javax.management.remote.rmi.RMIJRMPServerImpl.export()*

protected void export()
  throws |java.io.IOException|
         



*javax.management.remote.rmi.RMIJRMPServerImpl.getProtocol()*

protected |java.lang.String| getProtocol()




*javax.management.remote.rmi.RMIJRMPServerImpl.makeClient(String,Subject)*

protected |javax.management.remote.rmi.RMIConnection| makeClient(
  java.lang.String connectionId,
  javax.security.auth.Subject subject)
  throws |java.io.IOException|
         
Creates a new client connection as an RMI object exported through JRMP. The 
port and socket factories for the new 
(|javax.management.remote.rmi.RMIConnection|) object are the ones supplied to 
the RMIJRMPServerImpl constructor. 

    connectionId - the ID of the new connection. Every connection opened by this connector server 
       will have a different id. The behavior is unspecified if this parameter 
       is null. 
    subject - the authenticated subject. Can be null. 

    Returns: the newly-created RMIConnection. 
*javax.management.remote.rmi.RMIJRMPServerImpl.toStub()*

public |java.rmi.Remote| toStub()
  throws |java.io.IOException|
         
Returns a serializable stub for this (|javax.management.remote.rmi.RMIServer|) 
object. 


    Returns: a serializable stub. 

