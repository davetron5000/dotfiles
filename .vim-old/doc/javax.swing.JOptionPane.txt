*javax.swing.JOptionPane* *JOptionPane* JOptionPane makes it easy to pop up a standard dialog box that
 prompts users for a value or informs them of something.

public class JOptionPane
  extends    |javax.swing.JComponent|
  implements |javax.accessibility.Accessible|

|javax.swing.JOptionPane_Description|
|javax.swing.JOptionPane_Fields|
|javax.swing.JOptionPane_Constructors|
|javax.swing.JOptionPane_Methods|

====================================================================================================================================================================================

*javax.swing.JOptionPane_Fields*
|int_javax.swing.JOptionPane.CANCEL_OPTION|
|int_javax.swing.JOptionPane.CLOSED_OPTION|
|int_javax.swing.JOptionPane.DEFAULT_OPTION|
|int_javax.swing.JOptionPane.ERROR_MESSAGE|
|javax.swing.Icon_javax.swing.JOptionPane.icon|
|java.lang.String_javax.swing.JOptionPane.ICON_PROPERTY|
|int_javax.swing.JOptionPane.INFORMATION_MESSAGE|
|java.lang.String_javax.swing.JOptionPane.INITIAL_SELECTION_VALUE_PROPERTY|
|java.lang.String_javax.swing.JOptionPane.INITIAL_VALUE_PROPERTY|
|java.lang.Object_javax.swing.JOptionPane.initialSelectionValue|
|java.lang.Object_javax.swing.JOptionPane.initialValue|
|java.lang.String_javax.swing.JOptionPane.INPUT_VALUE_PROPERTY|
|java.lang.Object_javax.swing.JOptionPane.inputValue|
|java.lang.Object_javax.swing.JOptionPane.message|
|java.lang.String_javax.swing.JOptionPane.MESSAGE_PROPERTY|
|java.lang.String_javax.swing.JOptionPane.MESSAGE_TYPE_PROPERTY|
|int_javax.swing.JOptionPane.messageType|
|int_javax.swing.JOptionPane.NO_OPTION|
|int_javax.swing.JOptionPane.OK_CANCEL_OPTION|
|int_javax.swing.JOptionPane.OK_OPTION|
|java.lang.String_javax.swing.JOptionPane.OPTION_TYPE_PROPERTY|
|java.lang.Object[]_javax.swing.JOptionPane.options|
|java.lang.String_javax.swing.JOptionPane.OPTIONS_PROPERTY|
|int_javax.swing.JOptionPane.optionType|
|int_javax.swing.JOptionPane.PLAIN_MESSAGE|
|int_javax.swing.JOptionPane.QUESTION_MESSAGE|
|java.lang.String_javax.swing.JOptionPane.SELECTION_VALUES_PROPERTY|
|java.lang.Object[]_javax.swing.JOptionPane.selectionValues|
|java.lang.Object_javax.swing.JOptionPane.UNINITIALIZED_VALUE|
|java.lang.Object_javax.swing.JOptionPane.value|
|java.lang.String_javax.swing.JOptionPane.VALUE_PROPERTY|
|java.lang.String_javax.swing.JOptionPane.WANTS_INPUT_PROPERTY|
|boolean_javax.swing.JOptionPane.wantsInput|
|int_javax.swing.JOptionPane.WARNING_MESSAGE|
|int_javax.swing.JOptionPane.YES_NO_CANCEL_OPTION|
|int_javax.swing.JOptionPane.YES_NO_OPTION|
|int_javax.swing.JOptionPane.YES_OPTION|

*javax.swing.JOptionPane_Constructors*
|javax.swing.JOptionPane()|Creates a JOptionPane with a test message.
|javax.swing.JOptionPane(Object)|Creates a instance of JOptionPane to display a  message using the   plain-message message type and the default options delivered by  the UI.
|javax.swing.JOptionPane(Object,int)|Creates an instance of JOptionPane to display a message  with the specified message type and the default options,
|javax.swing.JOptionPane(Object,int,int)|Creates an instance of JOptionPane to display a message  with the specified message type and options.
|javax.swing.JOptionPane(Object,int,int,Icon)|Creates an instance of JOptionPane to display a message  with the specified message type, options, and icon.
|javax.swing.JOptionPane(Object,int,int,Icon,Object[])|Creates an instance of JOptionPane to display a message  with the specified message type, icon, and options.
|javax.swing.JOptionPane(Object,int,int,Icon,Object[],Object)|Creates an instance of JOptionPane to display a message  with the specified message type, icon, and options, with the

*javax.swing.JOptionPane_Methods*
|javax.swing.JOptionPane.createDialog(Component,String)|Creates and returns a new JDialog wrapping  this centered on the parentComponent  in the parentComponent's frame.
|javax.swing.JOptionPane.createInternalFrame(Component,String)|Creates and returns an instance of JInternalFrame.
|javax.swing.JOptionPane.getAccessibleContext()|Returns the AccessibleContext associated with this JOptionPane.
|javax.swing.JOptionPane.getDesktopPaneForComponent(Component)|Returns the specified component's desktop pane.
|javax.swing.JOptionPane.getFrameForComponent(Component)|Returns the specified component's Frame.
|javax.swing.JOptionPane.getIcon()|Returns the icon this pane displays.
|javax.swing.JOptionPane.getInitialSelectionValue()|Returns the input value that is displayed as initially selected to the user.
|javax.swing.JOptionPane.getInitialValue()|Returns the initial value.
|javax.swing.JOptionPane.getInputValue()|Returns the value the user has input, if wantsInput  is true.
|javax.swing.JOptionPane.getMaxCharactersPerLineCount()|Returns the maximum number of characters to place on a line in a  message.
|javax.swing.JOptionPane.getMessage()|Returns the message-object this pane displays.
|javax.swing.JOptionPane.getMessageType()|Returns the message type.
|javax.swing.JOptionPane.getOptions()|Returns the choices the user can make.
|javax.swing.JOptionPane.getOptionType()|Returns the type of options that are displayed.
|javax.swing.JOptionPane.getRootFrame()|Returns the Frame to use for the class methods in  which a frame is not provided.
|javax.swing.JOptionPane.getSelectionValues()|Returns the input selection values.
|javax.swing.JOptionPane.getUI()|Returns the UI object which implements the Lfor this component.
|javax.swing.JOptionPane.getUIClassID()|Returns the name of the UI class that implements the  Lfor this component.
|javax.swing.JOptionPane.getValue()|Returns the value the user has selected.
|javax.swing.JOptionPane.getWantsInput()|Returns the value of the wantsInput property.
|javax.swing.JOptionPane.paramString()|Returns a string representation of this JOptionPane.
|javax.swing.JOptionPane.selectInitialValue()|Requests that the initial value be selected, which will set  focus to the initial value.
|javax.swing.JOptionPane.setIcon(Icon)|Sets the icon to display.
|javax.swing.JOptionPane.setInitialSelectionValue(Object)|Sets the input value that is initially displayed as selected to the user.
|javax.swing.JOptionPane.setInitialValue(Object)|Sets the initial value that is to be enabled -- the  Component  that has the focus when the pane is initially displayed.
|javax.swing.JOptionPane.setInputValue(Object)|Sets the input value that was selected or input by the user.
|javax.swing.JOptionPane.setMessage(Object)|Sets the option pane's message-object.
|javax.swing.JOptionPane.setMessageType(int)|Sets the option pane's message type.
|javax.swing.JOptionPane.setOptions(Object[])|Sets the options this pane displays.
|javax.swing.JOptionPane.setOptionType(int)|Sets the options to display.
|javax.swing.JOptionPane.setRootFrame(Frame)|Sets the frame to use for class methods in which a frame is  not provided.
|javax.swing.JOptionPane.setSelectionValues(Object[])|Sets the input selection values for a pane that provides the user  with a list of items to choose from.
|javax.swing.JOptionPane.setUI(OptionPaneUI)|Sets the UI object which implements the Lfor this component.
|javax.swing.JOptionPane.setValue(Object)|Sets the value the user has chosen.
|javax.swing.JOptionPane.setWantsInput(boolean)|Sets the wantsInput property.
|javax.swing.JOptionPane.showConfirmDialog(Component,Object)|Brings up a dialog with the options Yes,  No and Cancel; with the  title, Select an Option.
|javax.swing.JOptionPane.showConfirmDialog(Component,Object,String,int)|Brings up a dialog where the number of choices is determined  by the optionType parameter.
|javax.swing.JOptionPane.showConfirmDialog(Component,Object,String,int,int)|Brings up a dialog where the number of choices is determined  by the optionType parameter, where the  m
|javax.swing.JOptionPane.showConfirmDialog(Component,Object,String,int,int,Icon)|Brings up a dialog with a specified icon, where the number of   choices is determined by the optio
|javax.swing.JOptionPane.showInputDialog(Component,Object)|Shows a question-message dialog requesting input from the user  parented to parentComponent.
|javax.swing.JOptionPane.showInputDialog(Component,Object,Object)|Shows a question-message dialog requesting input from the user and  parented to parentComponent.
|javax.swing.JOptionPane.showInputDialog(Component,Object,String,int)|Shows a dialog requesting input from the user parented to  parentComponent with the dialog having the title  
|javax.swing.JOptionPane.showInputDialog(Component,Object,String,int,Icon,Object[],Object)|Prompts the user for input in a blocking dialog where the  initial selection, possible s
|javax.swing.JOptionPane.showInputDialog(Object)|Shows a question-message dialog requesting input from the user.
|javax.swing.JOptionPane.showInputDialog(Object,Object)|Shows a question-message dialog requesting input from the user, with  the input value initialized to initialSelectionValue.
|javax.swing.JOptionPane.showInternalConfirmDialog(Component,Object)|Brings up an internal dialog panel with the options Yes, No  and Cancel; with the title, Select an Option.
|javax.swing.JOptionPane.showInternalConfirmDialog(Component,Object,String,int)|Brings up a internal dialog panel where the number of choices   is determined by the optionType par
|javax.swing.JOptionPane.showInternalConfirmDialog(Component,Object,String,int,int)|Brings up an internal dialog panel where the number of choices  is determined by the optionType
|javax.swing.JOptionPane.showInternalConfirmDialog(Component,Object,String,int,int,Icon)|Brings up an internal dialog panel with a specified icon, where  the number of choices is 
|javax.swing.JOptionPane.showInternalInputDialog(Component,Object)|Shows an internal question-message dialog requesting input from  the user parented to parentComponent.
|javax.swing.JOptionPane.showInternalInputDialog(Component,Object,String,int)|Shows an internal dialog requesting input from the user parented  to parentComponent with the dialog 
|javax.swing.JOptionPane.showInternalInputDialog(Component,Object,String,int,Icon,Object[],Object)|Prompts the user for input in a blocking internal dialog where  the initial sele
|javax.swing.JOptionPane.showInternalMessageDialog(Component,Object)|Brings up an internal confirmation dialog panel.
|javax.swing.JOptionPane.showInternalMessageDialog(Component,Object,String,int)|Brings up an internal dialog panel that displays a message   using a default icon determined by the
|javax.swing.JOptionPane.showInternalMessageDialog(Component,Object,String,int,Icon)|Brings up an internal dialog panel displaying a message,   specifying all parameters.
|javax.swing.JOptionPane.showInternalOptionDialog(Component,Object,String,int,int,Icon,Object[],Object)|Brings up an internal dialog panel with a specified icon, where  the initia
|javax.swing.JOptionPane.showMessageDialog(Component,Object)|Brings up an information-message dialog titled "Message".
|javax.swing.JOptionPane.showMessageDialog(Component,Object,String,int)|Brings up a dialog that displays a message using a default  icon determined by the messageType parameter.
|javax.swing.JOptionPane.showMessageDialog(Component,Object,String,int,Icon)|Brings up a dialog displaying a message, specifying all parameters.
|javax.swing.JOptionPane.showOptionDialog(Component,Object,String,int,int,Icon,Object[],Object)|Brings up a dialog with a specified icon, where the initial  choice is determined b
|javax.swing.JOptionPane.updateUI()|Notification from the UIManager that the Lhas changed.

*javax.swing.JOptionPane_Description*

JOptionPane makes it easy to pop up a standard dialog box that prompts users for a value or informs them of something. For information about using JOptionPane, see How to Make 
Dialogs, a section in The Java Tutorial. 



While the JOptionPane class may appear complex because of the large number of methods, almost all uses of this class are one-line calls to one of the static showXxxDialog methods 
shown below: 



Method Name Description 

showConfirmDialog Asks a confirming question, like yes/no/cancel. 

showInputDialog Prompt for some input. 

showMessageDialog Tell the user about something that has happened. 

showOptionDialog The Grand Unification of the above three. 



Each of these methods also comes in a showInternalXXX flavor, which uses an internal frame to hold the dialog box (see (|javax.swing.JInternalFrame|) ). Multiple convenience 
methods have also been defined -- overloaded versions of the basic methods that use different parameter lists. 

All dialogs are modal. Each showXxxDialog method blocks the current thread until the user's interaction is complete. 



icon message 

input value 

option buttons 



The basic appearance of one of these dialog boxes is generally similar to the picture at the right, although the various look-and-feels are ultimately responsible for the final 
result. In particular, the look-and-feels will adjust the layout to accommodate the option pane's ComponentOrientation property. 

Parameters: The parameters to these methods follow consistent patterns: 

parentComponent Defines the Component that is to be the parent of this dialog box. It is used in two ways: the Frame that contains it is used as the Frame parent for the dialog 
box, and its screen coordinates are used in the placement of the dialog box. In general, the dialog box is placed just below the component. This parameter may be null, in which 
case a default Frame is used as the parent, and the dialog will be centered on the screen (depending on the Lmessage A descriptive message to be placed in the dialog box. In the 
most common usage, message is just a String or String constant. However, the type of this parameter is actually Object. Its interpretation depends on its type: 

Object[]An array of objects is interpreted as a series of messages (one per object) arranged in a vertical stack. The interpretation is recursive -- each object in the array is 
interpreted according to its type. ComponentThe Component is displayed in the dialog. IconThe Icon is wrapped in a JLabel and displayed in the dialog. othersThe object is 
converted to a String by calling its toString method. The result is wrapped in a JLabel and displayed. 

messageTypeDefines the style of the message. The Look and Feel manager may lay out the dialog differently depending on this value, and will often provide a default icon. The 
possible values are: 

ERROR_MESSAGE INFORMATION_MESSAGE WARNING_MESSAGE QUESTION_MESSAGE PLAIN_MESSAGE 

optionTypeDefines the set of option buttons that appear at the bottom of the dialog box: 

DEFAULT_OPTION YES_NO_OPTION YES_NO_CANCEL_OPTION OK_CANCEL_OPTION 

You aren't limited to this set of option buttons. You can provide any buttons you want using the options parameter. optionsA more detailed description of the set of option buttons 
that will appear at the bottom of the dialog box. The usual value for the options parameter is an array of Strings. But the parameter type is an array of Objects. A button is 
created for each object depending on its type: 

ComponentThe component is added to the button row directly. IconA JButton is created with this as its label. otherThe Object is converted to a string using its toString method and 
the result is used to label a JButton. 

iconA decorative icon to be placed in the dialog box. A default value for this is determined by the messageType parameter. titleThe title for the dialog box. initialValueThe 
default selection (input value). 



When the selection is changed, setValue is invoked, which generates a PropertyChangeEvent. 

If a JOptionPane has configured to all input setWantsInput the bound property JOptionPane.INPUT_VALUE_PROPERTY can also be listened to, to determine when the user has input or 
selected a value. 

When one of the showXxxDialog methods returns an integer, the possible values are: 

YES_OPTION NO_OPTION CANCEL_OPTION OK_OPTION CLOSED_OPTION 

Examples: 

Show an error dialog that displays the message, 'alert': 

JOptionPane.showMessageDialog(null, "alert", "alert", JOptionPane.ERROR_MESSAGE); 

Show an internal information dialog with the message, 'information': 

JOptionPane.showInternalMessageDialog(frame, "information", "information", JOptionPane.INFORMATION_MESSAGE); 

Show an information panel with the options yes/no and message 'choose one': JOptionPane.showConfirmDialog(null, "choose one", "choose one", JOptionPane.YES_NO_OPTION); 

Show an internal information dialog with the options yes/no/cancel and message 'please choose one' and title information: JOptionPane.showInternalConfirmDialog(frame, "please 
choose one", "information", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE); 

Show a warning dialog with the options OK, CANCEL, title 'Warning', and message 'Click OK to continue': 

Object[] options = { "OK", "CANCEL" }; JOptionPane.showOptionDialog(null, "Click OK to continue", "Warning", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, 
options, options[0]); 

Show a dialog asking the user to type in a String: 

String inputValue = JOptionPane.showInputDialog("Please input a value"); 

Show a dialog asking the user to select a String: 

Object[] possibleValues = { "First", "Second", "Third" }; Object selectedValue = JOptionPane.showInputDialog(null, "Choose one", "Input", JOptionPane.INFORMATION_MESSAGE, null, 
possibleValues, possibleValues[0]); 

Direct Use: To create and use an JOptionPane directly, the standard pattern is roughly as follows: 

JOptionPane pane = new JOptionPane(arguments); pane.set.Xxxx(...); // Configure JDialog dialog = pane.createDialog(parentComponent, title); dialog.show(); Object selectedValue = 
pane.getValue(); if(selectedValue == null) return CLOSED_OPTION; //If there is not an array of option buttons: if(options == null) { if(selectedValue instanceof Integer) return 
((Integer)selectedValue).intValue(); return CLOSED_OPTION; } //If there is an array of option buttons: for(int counter = 0, maxCounter = options.length; counter Warning: 
Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*int_javax.swing.JOptionPane.CANCEL_OPTION*

Return value from class method if CANCEL is chosen. 


*int_javax.swing.JOptionPane.CLOSED_OPTION*

Return value from class method if user closes window without selecting anything, more than likely this should be treated as either a CANCEL_OPTION or NO_OPTION. 


*int_javax.swing.JOptionPane.DEFAULT_OPTION*

Type used for showConfirmDialog. 


*int_javax.swing.JOptionPane.ERROR_MESSAGE*

Used for error messages. 


*javax.swing.Icon_javax.swing.JOptionPane.icon*

Icon used in pane. 


*java.lang.String_javax.swing.JOptionPane.ICON_PROPERTY*

Bound property name for icon. 


*int_javax.swing.JOptionPane.INFORMATION_MESSAGE*

Used for information messages. 


*java.lang.String_javax.swing.JOptionPane.INITIAL_SELECTION_VALUE_PROPERTY*

Bound property name for initialSelectionValue. 


*java.lang.String_javax.swing.JOptionPane.INITIAL_VALUE_PROPERTY*

Bound property name for initialValue. 


*java.lang.Object_javax.swing.JOptionPane.initialSelectionValue*

Initial value to select in selectionValues. 


*java.lang.Object_javax.swing.JOptionPane.initialValue*

Value that should be initially selected in options. 


*java.lang.String_javax.swing.JOptionPane.INPUT_VALUE_PROPERTY*

Bound property name for inputValue. 


*java.lang.Object_javax.swing.JOptionPane.inputValue*

Value the user has input. 


*java.lang.Object_javax.swing.JOptionPane.message*

Message to display. 


*java.lang.String_javax.swing.JOptionPane.MESSAGE_PROPERTY*

Bound property name for message. 


*java.lang.String_javax.swing.JOptionPane.MESSAGE_TYPE_PROPERTY*

Bound property name for type. 


*int_javax.swing.JOptionPane.messageType*

Message type. 


*int_javax.swing.JOptionPane.NO_OPTION*

Return value from class method if NO is chosen. 


*int_javax.swing.JOptionPane.OK_CANCEL_OPTION*

Type used for showConfirmDialog. 


*int_javax.swing.JOptionPane.OK_OPTION*

Return value form class method if OK is chosen. 


*java.lang.String_javax.swing.JOptionPane.OPTION_TYPE_PROPERTY*

Bound property name for optionType. 


*java.lang.Object[]_javax.swing.JOptionPane.options*

Options to display to the user. 


*java.lang.String_javax.swing.JOptionPane.OPTIONS_PROPERTY*

Bound property name for option. 


*int_javax.swing.JOptionPane.optionType*

Option type, one of DEFAULT_OPTION, YES_NO_OPTION, YES_NO_CANCEL_OPTION or OK_CANCEL_OPTION. 


*int_javax.swing.JOptionPane.PLAIN_MESSAGE*

No icon is used. 


*int_javax.swing.JOptionPane.QUESTION_MESSAGE*

Used for questions. 


*java.lang.String_javax.swing.JOptionPane.SELECTION_VALUES_PROPERTY*

Bound property name for selectionValues. 


*java.lang.Object[]_javax.swing.JOptionPane.selectionValues*

Array of values the user can choose from. Look and feel will provide the UI component to choose this from. 


*java.lang.Object_javax.swing.JOptionPane.UNINITIALIZED_VALUE*

Indicates that the user has not yet selected a value. 


*java.lang.Object_javax.swing.JOptionPane.value*

Currently selected value, will be a valid option, or UNINITIALIZED_VALUE or null. 


*java.lang.String_javax.swing.JOptionPane.VALUE_PROPERTY*

Bound property name for value. 


*java.lang.String_javax.swing.JOptionPane.WANTS_INPUT_PROPERTY*

Bound property name for wantsInput. 


*boolean_javax.swing.JOptionPane.wantsInput*

If true, a UI widget will be provided to the user to get input. 


*int_javax.swing.JOptionPane.WARNING_MESSAGE*

Used for warning messages. 


*int_javax.swing.JOptionPane.YES_NO_CANCEL_OPTION*

Type used for showConfirmDialog. 


*int_javax.swing.JOptionPane.YES_NO_OPTION*

Type used for showConfirmDialog. 


*int_javax.swing.JOptionPane.YES_OPTION*

Return value from class method if YES is chosen. 



*javax.swing.JOptionPane()*

public JOptionPane()

Creates a JOptionPane with a test message. 


*javax.swing.JOptionPane(Object)*

public JOptionPane(java.lang.Object message)

Creates a instance of JOptionPane to display a message using the plain-message message type and the default options delivered by the UI. 

    message - the Object to display 

*javax.swing.JOptionPane(Object,int)*

public JOptionPane(
  java.lang.Object message,
  int messageType)

Creates an instance of JOptionPane to display a message with the specified message type and the default options, 

    message - the Object to display 
    messageType - the type of message to be displayed: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE 

*javax.swing.JOptionPane(Object,int,int)*

public JOptionPane(
  java.lang.Object message,
  int messageType,
  int optionType)

Creates an instance of JOptionPane to display a message with the specified message type and options. 

    message - the Object to display 
    messageType - the type of message to be displayed: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE 
    optionType - the options to display in the pane: DEFAULT_OPTION, YES_NO_OPTION, YES_NO_CANCEL_OPTION, OK_CANCEL_OPTION 

*javax.swing.JOptionPane(Object,int,int,Icon)*

public JOptionPane(
  java.lang.Object message,
  int messageType,
  int optionType,
  javax.swing.Icon icon)

Creates an instance of JOptionPane to display a message with the specified message type, options, and icon. 

    message - the Object to display 
    messageType - the type of message to be displayed: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE 
    optionType - the options to display in the pane: DEFAULT_OPTION, YES_NO_OPTION, YES_NO_CANCEL_OPTION, OK_CANCEL_OPTION 
    icon - the Icon image to display 

*javax.swing.JOptionPane(Object,int,int,Icon,Object[])*

public JOptionPane(
  java.lang.Object message,
  int messageType,
  int optionType,
  javax.swing.Icon icon,
  java.lang.Object[] options)

Creates an instance of JOptionPane to display a message with the specified message type, icon, and options. None of the options is initially selected. 

The options objects should contain either instances of Components, (which are added directly) or Strings (which are wrapped in a JButton). If you provide Components, you must 
ensure that when the Component is clicked it messages setValue in the created JOptionPane. 

    message - the Object to display 
    messageType - the type of message to be displayed: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE 
    optionType - the options to display in the pane: DEFAULT_OPTION, YES_NO_OPTION, YES_NO_CANCEL_OPTION, OK_CANCEL_OPTION 
    icon - the Icon image to display 
    options - the choices the user can select 

*javax.swing.JOptionPane(Object,int,int,Icon,Object[],Object)*

public JOptionPane(
  java.lang.Object message,
  int messageType,
  int optionType,
  javax.swing.Icon icon,
  java.lang.Object[] options,
  java.lang.Object initialValue)

Creates an instance of JOptionPane to display a message with the specified message type, icon, and options, with the initially-selected option specified. 

    message - the Object to display 
    messageType - the type of message to be displayed: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE 
    optionType - the options to display in the pane: DEFAULT_OPTION, YES_NO_OPTION, YES_NO_CANCEL_OPTION, OK_CANCEL_OPTION 
    icon - the Icon image to display 
    options - the choices the user can select 
    initialValue - the choice that is initially selected; if null, then nothing will be initially selected; only meaningful if options is used 

*javax.swing.JOptionPane.createDialog(Component,String)*

public |javax.swing.JDialog| createDialog(
  java.awt.Component parentComponent,
  java.lang.String title)
  throws |java.awt.HeadlessException|
         
Creates and returns a new JDialog wrapping this centered on the parentComponent in the parentComponent's frame. title is the title of the returned dialog. The returned JDialog 
will not be resizable by the user, however programs can invoke setResizable on the JDialog instance to change this property. The returned JDialog will be set up such that once it 
is closed, or the user clicks on one of the buttons, the optionpane's value property will be set accordingly and the dialog will be closed. Each time the dialog is made visible, 
it will reset the option pane's value property to JOptionPane.UNINITIALIZED_VALUE to ensure the user's subsequent action closes the dialog properly. 


    parentComponent - determines the frame in which the dialog is displayed; if the parentComponent has no Frame, a default Frame is used 
    title - the title string for the dialog 

    Returns: a new JDialog containing this instance 

*javax.swing.JOptionPane.createInternalFrame(Component,String)*

public |javax.swing.JInternalFrame| createInternalFrame(
  java.awt.Component parentComponent,
  java.lang.String title)

Creates and returns an instance of JInternalFrame. The internal frame is created with the specified title, and wrapping the JOptionPane. The returned JInternalFrame is added to 
the JDesktopPane ancestor of parentComponent, or components parent if one its ancestors isn't a JDesktopPane, or if parentComponent doesn't have a parent then a RuntimeException 
is thrown. 


    parentComponent - the parent Component for the internal frame 
    title - the String to display in the frame's title bar 

    Returns: a JInternalFrame containing a JOptionPane 

*javax.swing.JOptionPane.getAccessibleContext()*

public |javax.accessibility.AccessibleContext| getAccessibleContext()

Returns the AccessibleContext associated with this JOptionPane. For option panes, the AccessibleContext takes the form of an AccessibleJOptionPane. A new AccessibleJOptionPane 
instance is created if necessary. 



    Returns: an AccessibleJOptionPane that serves as the AccessibleContext of this AccessibleJOptionPane 

*javax.swing.JOptionPane.getDesktopPaneForComponent(Component)*

public static |javax.swing.JDesktopPane| getDesktopPaneForComponent(java.awt.Component parentComponent)

Returns the specified component's desktop pane. 


    parentComponent - the Component to check for a desktop 

    Returns: the JDesktopPane that contains the component, or null if the component is null or does not have an ancestor that is a JInternalFrame 

*javax.swing.JOptionPane.getFrameForComponent(Component)*

public static |java.awt.Frame| getFrameForComponent(java.awt.Component parentComponent)
  throws |java.awt.HeadlessException|
         
Returns the specified component's Frame. 


    parentComponent - the Component to check for a Frame 

    Returns: the Frame that contains the component, or the default frame if the component is null, or does not have a valid Frame parent 

*javax.swing.JOptionPane.getIcon()*

public |javax.swing.Icon| getIcon()

Returns the icon this pane displays. 



    Returns: the Icon that is displayed 

*javax.swing.JOptionPane.getInitialSelectionValue()*

public |java.lang.Object| getInitialSelectionValue()

Returns the input value that is displayed as initially selected to the user. 



    Returns: the initially selected value 

*javax.swing.JOptionPane.getInitialValue()*

public |java.lang.Object| getInitialValue()

Returns the initial value. 



    Returns: the Object that gets the initial keyboard focus 

*javax.swing.JOptionPane.getInputValue()*

public |java.lang.Object| getInputValue()

Returns the value the user has input, if wantsInput is true. 



    Returns: the Object the user specified, if it was one of the objects, or a String if it was a value typed into a field 

*javax.swing.JOptionPane.getMaxCharactersPerLineCount()*

public int getMaxCharactersPerLineCount()

Returns the maximum number of characters to place on a line in a message. Default is to return Integer.MAX_VALUE. The value can be changed by overriding this method in a subclass. 



    Returns: an integer giving the maximum number of characters on a line 

*javax.swing.JOptionPane.getMessage()*

public |java.lang.Object| getMessage()

Returns the message-object this pane displays. 



    Returns: the Object that is displayed 

*javax.swing.JOptionPane.getMessageType()*

public int getMessageType()

Returns the message type. 



    Returns: an integer specifying the message type 

*javax.swing.JOptionPane.getOptions()*

public |java.lang.Object|[] getOptions()

Returns the choices the user can make. 



    Returns: the array of Objects that give the user's choices 

*javax.swing.JOptionPane.getOptionType()*

public int getOptionType()

Returns the type of options that are displayed. 



    Returns: an integer specifying the user-selectable options 

*javax.swing.JOptionPane.getRootFrame()*

public static |java.awt.Frame| getRootFrame()
  throws |java.awt.HeadlessException|
         
Returns the Frame to use for the class methods in which a frame is not provided. 



    Returns: the default Frame to use 

*javax.swing.JOptionPane.getSelectionValues()*

public |java.lang.Object|[] getSelectionValues()

Returns the input selection values. 



    Returns: the array of Objects the user can select 

*javax.swing.JOptionPane.getUI()*

public |javax.swing.plaf.OptionPaneUI| getUI()

Returns the UI object which implements the Lfor this component. 



    Returns: the OptionPaneUI object 

*javax.swing.JOptionPane.getUIClassID()*

public |java.lang.String| getUIClassID()

Returns the name of the UI class that implements the Lfor this component. 



    Returns: the string "OptionPaneUI" 

*javax.swing.JOptionPane.getValue()*

public |java.lang.Object| getValue()

Returns the value the user has selected. UNINITIALIZED_VALUE implies the user has not yet made a choice, null means the user closed the window with out choosing anything. 
Otherwise the returned value will be one of the options defined in this object. 



    Returns: the Object chosen by the user, UNINITIALIZED_VALUE if the user has not yet made a choice, or null if the user closed the window without making a choice 

*javax.swing.JOptionPane.getWantsInput()*

public boolean getWantsInput()

Returns the value of the wantsInput property. 



    Returns: true if an input component will be provided 

*javax.swing.JOptionPane.paramString()*

protected |java.lang.String| paramString()

Returns a string representation of this JOptionPane. This method is intended to be used only for debugging purposes, and the content and format of the returned string may vary 
between implementations. The returned string may be empty but may not be null. 



    Returns: a string representation of this JOptionPane 

*javax.swing.JOptionPane.selectInitialValue()*

public void selectInitialValue()

Requests that the initial value be selected, which will set focus to the initial value. This method should be invoked after the window containing the option pane is made visible. 



*javax.swing.JOptionPane.setIcon(Icon)*

public void setIcon(javax.swing.Icon newIcon)

Sets the icon to display. If non-null, the look and feel does not provide an icon. 


    newIcon - the Icon to display 

*javax.swing.JOptionPane.setInitialSelectionValue(Object)*

public void setInitialSelectionValue(java.lang.Object newValue)

Sets the input value that is initially displayed as selected to the user. Only used if wantsInput is true. 


    newValue - the initially selected value 

*javax.swing.JOptionPane.setInitialValue(Object)*

public void setInitialValue(java.lang.Object newInitialValue)

Sets the initial value that is to be enabled -- the Component that has the focus when the pane is initially displayed. 


    newInitialValue - the Object that gets the initial keyboard focus 

*javax.swing.JOptionPane.setInputValue(Object)*

public void setInputValue(java.lang.Object newValue)

Sets the input value that was selected or input by the user. Only used if wantsInput is true. Note that this method is invoked internally by the option pane (in response to user 
action) and should generally not be called by client programs. To set the input value initially displayed as selected to the user, use setInitialSelectionValue. 


    newValue - the Object used to set the value that the user specified (usually in a text field) 

*javax.swing.JOptionPane.setMessage(Object)*

public void setMessage(java.lang.Object newMessage)

Sets the option pane's message-object. 


    newMessage - the Object to display 

*javax.swing.JOptionPane.setMessageType(int)*

public void setMessageType(int newType)

Sets the option pane's message type. The message type is used by the Look and Feel to determine the icon to display (if not supplied) as well as potentially how to lay out the 
parentComponent. 


    newType - an integer specifying the kind of message to display: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE 

*javax.swing.JOptionPane.setOptions(Object[])*

public void setOptions(java.lang.Object[] newOptions)

Sets the options this pane displays. If an element in newOptions is a Component it is added directly to the pane, otherwise a button is created for the element. 


    newOptions - an array of Objects that create the buttons the user can click on, or arbitrary Components to add to the pane 

*javax.swing.JOptionPane.setOptionType(int)*

public void setOptionType(int newType)

Sets the options to display. The option type is used by the Look and Feel to determine what buttons to show (unless options are supplied). 


    newType - an integer specifying the options the Lis to display: DEFAULT_OPTION, YES_NO_OPTION, YES_NO_CANCEL_OPTION, or OK_CANCEL_OPTION 

*javax.swing.JOptionPane.setRootFrame(Frame)*

public static void setRootFrame(java.awt.Frame newRootFrame)

Sets the frame to use for class methods in which a frame is not provided. 


    newRootFrame - the default Frame to use 

*javax.swing.JOptionPane.setSelectionValues(Object[])*

public void setSelectionValues(java.lang.Object[] newValues)

Sets the input selection values for a pane that provides the user with a list of items to choose from. (The UI provides a widget for choosing one of the values.) A null value 
implies the user can input whatever they wish, usually by means of a JTextField. 

Sets wantsInput to true. Use setInitialSelectionValue to specify the initially-chosen value. After the pane as been enabled, inputValue is set to the value the user has selected. 


    newValues - an array of Objects the user to be displayed (usually in a list or combo-box) from which the user can make a selection 

*javax.swing.JOptionPane.setUI(OptionPaneUI)*

public void setUI(javax.swing.plaf.OptionPaneUI ui)

Sets the UI object which implements the Lfor this component. 


    ui - the OptionPaneUI Lobject 

*javax.swing.JOptionPane.setValue(Object)*

public void setValue(java.lang.Object newValue)

Sets the value the user has chosen. 


    newValue - the chosen value 

*javax.swing.JOptionPane.setWantsInput(boolean)*

public void setWantsInput(boolean newValue)

Sets the wantsInput property. If newValue is true, an input component (such as a text field or combo box) whose parent is parentComponent is provided to allow the user to input a 
value. If getSelectionValues returns a non-null array, the input value is one of the objects in that array. Otherwise the input value is whatever the user inputs. 

This is a bound property. 



*javax.swing.JOptionPane.showConfirmDialog(Component,Object)*

public static int showConfirmDialog(
  java.awt.Component parentComponent,
  java.lang.Object message)
  throws |java.awt.HeadlessException|
         
Brings up a dialog with the options Yes, No and Cancel; with the title, Select an Option. 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used 
    message - the Object to display 

    Returns: an integer indicating the option selected by the user 

*javax.swing.JOptionPane.showConfirmDialog(Component,Object,String,int)*

public static int showConfirmDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int optionType)
  throws |java.awt.HeadlessException|
         
Brings up a dialog where the number of choices is determined by the optionType parameter. 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used 
    message - the Object to display 
    title - the title string for the dialog 
    optionType - an int designating the options available on the dialog: YES_NO_OPTION, or YES_NO_CANCEL_OPTION 

    Returns: an int indicating the option selected by the user 

*javax.swing.JOptionPane.showConfirmDialog(Component,Object,String,int,int)*

public static int showConfirmDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int optionType,
  int messageType)
  throws |java.awt.HeadlessException|
         
Brings up a dialog where the number of choices is determined by the optionType parameter, where the messageType parameter determines the icon to display. The messageType parameter 
is primarily used to supply a default icon from the Look and Feel. 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used. 
    message - the Object to display 
    title - the title string for the dialog 
    optionType - an integer designating the options available on the dialog: YES_NO_OPTION, or YES_NO_CANCEL_OPTION 
    messageType - an integer designating the kind of message this is; primarily used to determine the icon from the pluggable Look and Feel: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, 
       QUESTION_MESSAGE, or PLAIN_MESSAGE 

    Returns: an integer indicating the option selected by the user 

*javax.swing.JOptionPane.showConfirmDialog(Component,Object,String,int,int,Icon)*

public static int showConfirmDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int optionType,
  int messageType,
  javax.swing.Icon icon)
  throws |java.awt.HeadlessException|
         
Brings up a dialog with a specified icon, where the number of choices is determined by the optionType parameter. The messageType parameter is primarily used to supply a default 
icon from the look and feel. 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used 
    message - the Object to display 
    title - the title string for the dialog 
    optionType - an int designating the options available on the dialog: YES_NO_OPTION, or YES_NO_CANCEL_OPTION 
    messageType - an int designating the kind of message this is, primarily used to determine the icon from the pluggable Look and Feel: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, 
       QUESTION_MESSAGE, or PLAIN_MESSAGE 
    icon - the icon to display in the dialog 

    Returns: an int indicating the option selected by the user 

*javax.swing.JOptionPane.showInputDialog(Component,Object)*

public static |java.lang.String| showInputDialog(
  java.awt.Component parentComponent,
  java.lang.Object message)
  throws |java.awt.HeadlessException|
         
Shows a question-message dialog requesting input from the user parented to parentComponent. The dialog is displayed on top of the Component's frame, and is usually positioned 
below the Component. 


    parentComponent - the parent Component for the dialog 
    message - the Object to display 

*javax.swing.JOptionPane.showInputDialog(Component,Object,Object)*

public static |java.lang.String| showInputDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.Object initialSelectionValue)

Shows a question-message dialog requesting input from the user and parented to parentComponent. The input value will be initialized to initialSelectionValue. The dialog is 
displayed on top of the Component's frame, and is usually positioned below the Component. 


    parentComponent - the parent Component for the dialog 
    message - the Object to display 
    initialSelectionValue - the value used to initialize the input field 

*javax.swing.JOptionPane.showInputDialog(Component,Object,String,int)*

public static |java.lang.String| showInputDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int messageType)
  throws |java.awt.HeadlessException|
         
Shows a dialog requesting input from the user parented to parentComponent with the dialog having the title title and message type messageType. 


    parentComponent - the parent Component for the dialog 
    message - the Object to display 
    title - the String to display in the dialog title bar 
    messageType - the type of message that is to be displayed: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE 

*javax.swing.JOptionPane.showInputDialog(Component,Object,String,int,Icon,Object[],Object)*

public static |java.lang.Object| showInputDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int messageType,
  javax.swing.Icon icon,
  java.lang.Object[] selectionValues,
  java.lang.Object initialSelectionValue)
  throws |java.awt.HeadlessException|
         
Prompts the user for input in a blocking dialog where the initial selection, possible selections, and all other options can be specified. The user will able to choose from 
selectionValues, where null implies the user can input whatever they wish, usually by means of a JTextField. initialSelectionValue is the initial value to prompt the user with. It 
is up to the UI to decide how best to represent the selectionValues, but usually a JComboBox, JList, or JTextField will be used. 


    parentComponent - the parent Component for the dialog 
    message - the Object to display 
    title - the String to display in the dialog title bar 
    messageType - the type of message to be displayed: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE 
    icon - the Icon image to display 
    selectionValues - an array of Objects that gives the possible selections 
    initialSelectionValue - the value used to initialize the input field 

    Returns: user's input, or null meaning the user canceled the input 

*javax.swing.JOptionPane.showInputDialog(Object)*

public static |java.lang.String| showInputDialog(java.lang.Object message)
  throws |java.awt.HeadlessException|
         
Shows a question-message dialog requesting input from the user. The dialog uses the default frame, which usually means it is centered on the screen. 


    message - the Object to display 

*javax.swing.JOptionPane.showInputDialog(Object,Object)*

public static |java.lang.String| showInputDialog(
  java.lang.Object message,
  java.lang.Object initialSelectionValue)

Shows a question-message dialog requesting input from the user, with the input value initialized to initialSelectionValue. The dialog uses the default frame, which usually means 
it is centered on the screen. 


    message - the Object to display 
    initialSelectionValue - the value used to initialize the input field 

*javax.swing.JOptionPane.showInternalConfirmDialog(Component,Object)*

public static int showInternalConfirmDialog(
  java.awt.Component parentComponent,
  java.lang.Object message)

Brings up an internal dialog panel with the options Yes, No and Cancel; with the title, Select an Option. 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used 
    message - the Object to display 

    Returns: an integer indicating the option selected by the user 

*javax.swing.JOptionPane.showInternalConfirmDialog(Component,Object,String,int)*

public static int showInternalConfirmDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int optionType)

Brings up a internal dialog panel where the number of choices is determined by the optionType parameter. 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used 
    message - the object to display in the dialog; a Component object is rendered as a Component; a String object is rendered as a string; other objects are converted to a String using the 
       toString method 
    title - the title string for the dialog 
    optionType - an integer designating the options available on the dialog: YES_NO_OPTION, or YES_NO_CANCEL_OPTION 

    Returns: an integer indicating the option selected by the user 

*javax.swing.JOptionPane.showInternalConfirmDialog(Component,Object,String,int,int)*

public static int showInternalConfirmDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int optionType,
  int messageType)

Brings up an internal dialog panel where the number of choices is determined by the optionType parameter, where the messageType parameter determines the icon to display. The 
messageType parameter is primarily used to supply a default icon from the Look and Feel. 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used 
    message - the object to display in the dialog; a Component object is rendered as a Component; a String object is rendered as a string; other objects are converted to a String using the 
       toString method 
    title - the title string for the dialog 
    optionType - an integer designating the options available on the dialog: YES_NO_OPTION, or YES_NO_CANCEL_OPTION 
    messageType - an integer designating the kind of message this is, primarily used to determine the icon from the pluggable Look and Feel: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, 
       QUESTION_MESSAGE, or PLAIN_MESSAGE 

    Returns: an integer indicating the option selected by the user 

*javax.swing.JOptionPane.showInternalConfirmDialog(Component,Object,String,int,int,Icon)*

public static int showInternalConfirmDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int optionType,
  int messageType,
  javax.swing.Icon icon)

Brings up an internal dialog panel with a specified icon, where the number of choices is determined by the optionType parameter. The messageType parameter is primarily used to 
supply a default icon from the look and feel. 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used 
    message - the object to display in the dialog; a Component object is rendered as a Component; a String object is rendered as a string; other objects are converted to a String using the 
       toString method 
    title - the title string for the dialog 
    optionType - an integer designating the options available on the dialog: YES_NO_OPTION, or YES_NO_CANCEL_OPTION. 
    messageType - an integer designating the kind of message this is, primarily used to determine the icon from the pluggable Look and Feel: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, 
       QUESTION_MESSAGE, or PLAIN_MESSAGE 
    icon - the icon to display in the dialog 

    Returns: an integer indicating the option selected by the user 

*javax.swing.JOptionPane.showInternalInputDialog(Component,Object)*

public static |java.lang.String| showInternalInputDialog(
  java.awt.Component parentComponent,
  java.lang.Object message)

Shows an internal question-message dialog requesting input from the user parented to parentComponent. The dialog is displayed in the Component's frame, and is usually positioned 
below the Component. 


    parentComponent - the parent Component for the dialog 
    message - the Object to display 

*javax.swing.JOptionPane.showInternalInputDialog(Component,Object,String,int)*

public static |java.lang.String| showInternalInputDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int messageType)

Shows an internal dialog requesting input from the user parented to parentComponent with the dialog having the title title and message type messageType. 


    parentComponent - the parent Component for the dialog 
    message - the Object to display 
    title - the String to display in the dialog title bar 
    messageType - the type of message that is to be displayed: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE 

*javax.swing.JOptionPane.showInternalInputDialog(Component,Object,String,int,Icon,Object[],Object)*

public static |java.lang.Object| showInternalInputDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int messageType,
  javax.swing.Icon icon,
  java.lang.Object[] selectionValues,
  java.lang.Object initialSelectionValue)

Prompts the user for input in a blocking internal dialog where the initial selection, possible selections, and all other options can be specified. The user will able to choose 
from selectionValues, where null implies the user can input whatever they wish, usually by means of a JTextField. initialSelectionValue is the initial value to prompt the user 
with. It is up to the UI to decide how best to represent the selectionValues, but usually a JComboBox, JList, or JTextField will be used. 


    parentComponent - the parent Component for the dialog 
    message - the Object to display 
    title - the String to display in the dialog title bar 
    messageType - the type of message to be displayed: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE 
    icon - the Icon image to display 
    selectionValues - an array of Objects that gives the possible selections 
    initialSelectionValue - the value used to initialize the input field 

    Returns: user's input, or null meaning the user canceled the input 

*javax.swing.JOptionPane.showInternalMessageDialog(Component,Object)*

public static void showInternalMessageDialog(
  java.awt.Component parentComponent,
  java.lang.Object message)

Brings up an internal confirmation dialog panel. The dialog is a information-message dialog titled "Message". 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used 
    message - the object to display 

*javax.swing.JOptionPane.showInternalMessageDialog(Component,Object,String,int)*

public static void showInternalMessageDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int messageType)

Brings up an internal dialog panel that displays a message using a default icon determined by the messageType parameter. 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used 
    message - the Object to display 
    title - the title string for the dialog 
    messageType - the type of message to be displayed: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE 

*javax.swing.JOptionPane.showInternalMessageDialog(Component,Object,String,int,Icon)*

public static void showInternalMessageDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int messageType,
  javax.swing.Icon icon)

Brings up an internal dialog panel displaying a message, specifying all parameters. 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used 
    message - the Object to display 
    title - the title string for the dialog 
    messageType - the type of message to be displayed: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE 
    icon - an icon to display in the dialog that helps the user identify the kind of message that is being displayed 

*javax.swing.JOptionPane.showInternalOptionDialog(Component,Object,String,int,int,Icon,Object[],Object)*

public static int showInternalOptionDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int optionType,
  int messageType,
  javax.swing.Icon icon,
  java.lang.Object[] options,
  java.lang.Object initialValue)

Brings up an internal dialog panel with a specified icon, where the initial choice is determined by the initialValue parameter and the number of choices is determined by the 
optionType parameter. 

If optionType is YES_NO_OPTION, or YES_NO_CANCEL_OPTION and the options parameter is null, then the options are supplied by the Look and Feel. 

The messageType parameter is primarily used to supply a default icon from the look and feel. 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used 
    message - the object to display in the dialog; a Component object is rendered as a Component; a String object is rendered as a string. Other objects are converted to a String using the 
       toString method 
    title - the title string for the dialog 
    optionType - an integer designating the options available on the dialog: YES_NO_OPTION, or YES_NO_CANCEL_OPTION 
    messageType - an integer designating the kind of message this is; primarily used to determine the icon from the pluggable Look and Feel: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, 
       QUESTION_MESSAGE, or PLAIN_MESSAGE 
    icon - the icon to display in the dialog 
    options - an array of objects indicating the possible choices the user can make; if the objects are components, they are rendered properly; non-String objects are rendered using their 
       toString methods; if this parameter is null, the options are determined by the Look and Feel 
    initialValue - the object that represents the default selection for the dialog; only meaningful if options is used; can be null 

    Returns: an integer indicating the option chosen by the user, or CLOSED_OPTION if the user closed the Dialog 

*javax.swing.JOptionPane.showMessageDialog(Component,Object)*

public static void showMessageDialog(
  java.awt.Component parentComponent,
  java.lang.Object message)
  throws |java.awt.HeadlessException|
         
Brings up an information-message dialog titled "Message". 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used 
    message - the Object to display 

*javax.swing.JOptionPane.showMessageDialog(Component,Object,String,int)*

public static void showMessageDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int messageType)
  throws |java.awt.HeadlessException|
         
Brings up a dialog that displays a message using a default icon determined by the messageType parameter. 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used 
    message - the Object to display 
    title - the title string for the dialog 
    messageType - the type of message to be displayed: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE 

*javax.swing.JOptionPane.showMessageDialog(Component,Object,String,int,Icon)*

public static void showMessageDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int messageType,
  javax.swing.Icon icon)
  throws |java.awt.HeadlessException|
         
Brings up a dialog displaying a message, specifying all parameters. 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used 
    message - the Object to display 
    title - the title string for the dialog 
    messageType - the type of message to be displayed: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE 
    icon - an icon to display in the dialog that helps the user identify the kind of message that is being displayed 

*javax.swing.JOptionPane.showOptionDialog(Component,Object,String,int,int,Icon,Object[],Object)*

public static int showOptionDialog(
  java.awt.Component parentComponent,
  java.lang.Object message,
  java.lang.String title,
  int optionType,
  int messageType,
  javax.swing.Icon icon,
  java.lang.Object[] options,
  java.lang.Object initialValue)
  throws |java.awt.HeadlessException|
         
Brings up a dialog with a specified icon, where the initial choice is determined by the initialValue parameter and the number of choices is determined by the optionType parameter. 

If optionType is YES_NO_OPTION, or YES_NO_CANCEL_OPTION and the options parameter is null, then the options are supplied by the look and feel. 

The messageType parameter is primarily used to supply a default icon from the look and feel. 


    parentComponent - determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used 
    message - the Object to display 
    title - the title string for the dialog 
    optionType - an integer designating the options available on the dialog: YES_NO_OPTION, or YES_NO_CANCEL_OPTION 
    messageType - an integer designating the kind of message this is, primarily used to determine the icon from the pluggable Look and Feel: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, 
       QUESTION_MESSAGE, or PLAIN_MESSAGE 
    icon - the icon to display in the dialog 
    options - an array of objects indicating the possible choices the user can make; if the objects are components, they are rendered properly; non-String objects are rendered using their 
       toString methods; if this parameter is null, the options are determined by the Look and Feel 
    initialValue - the object that represents the default selection for the dialog; only meaningful if options is used; can be null 

    Returns: an integer indicating the option chosen by the user, or CLOSED_OPTION if the user closed the dialog 

*javax.swing.JOptionPane.updateUI()*

public void updateUI()

Notification from the UIManager that the Lhas changed. Replaces the current UI object with the latest version from the UIManager. 




