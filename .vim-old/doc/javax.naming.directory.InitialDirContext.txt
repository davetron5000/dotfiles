*javax.naming.directory.InitialDirContext* *InitialDirContext* This class is the starting context for performing 
 directory operations.

public class InitialDirContext
  extends    |javax.naming.InitialContext|
  implements |javax.naming.directory.DirContext|

|javax.naming.directory.InitialDirContext_Description|
|javax.naming.directory.InitialDirContext_Fields|
|javax.naming.directory.InitialDirContext_Constructors|
|javax.naming.directory.InitialDirContext_Methods|

====================================================================================================================================================================================

*javax.naming.directory.InitialDirContext_Constructors*
|javax.naming.directory.InitialDirContext()|Constructs an initial DirContext.
|javax.naming.directory.InitialDirContext(boolean)|Constructs an initial DirContext with the option of not  initializing it.
|javax.naming.directory.InitialDirContext(Hashtable<?,?>)|Constructs an initial DirContext using the supplied environment.

*javax.naming.directory.InitialDirContext_Methods*
|javax.naming.directory.InitialDirContext.bind(Name,Object,Attributes)|
|javax.naming.directory.InitialDirContext.bind(String,Object,Attributes)|
|javax.naming.directory.InitialDirContext.createSubcontext(Name,Attributes)|
|javax.naming.directory.InitialDirContext.createSubcontext(String,Attributes)|
|javax.naming.directory.InitialDirContext.getAttributes(Name)|
|javax.naming.directory.InitialDirContext.getAttributes(Name,String[])|
|javax.naming.directory.InitialDirContext.getAttributes(String)|
|javax.naming.directory.InitialDirContext.getAttributes(String,String[])|
|javax.naming.directory.InitialDirContext.getSchema(Name)|
|javax.naming.directory.InitialDirContext.getSchema(String)|
|javax.naming.directory.InitialDirContext.getSchemaClassDefinition(Name)|
|javax.naming.directory.InitialDirContext.getSchemaClassDefinition(String)|
|javax.naming.directory.InitialDirContext.modifyAttributes(Name,int,Attributes)|
|javax.naming.directory.InitialDirContext.modifyAttributes(Name,ModificationItem[])|
|javax.naming.directory.InitialDirContext.modifyAttributes(String,int,Attributes)|
|javax.naming.directory.InitialDirContext.modifyAttributes(String,ModificationItem[])|
|javax.naming.directory.InitialDirContext.rebind(Name,Object,Attributes)|
|javax.naming.directory.InitialDirContext.rebind(String,Object,Attributes)|
|javax.naming.directory.InitialDirContext.search(Name,Attributes)|
|javax.naming.directory.InitialDirContext.search(Name,Attributes,String[])|
|javax.naming.directory.InitialDirContext.search(Name,String,Object[],SearchControls)|
|javax.naming.directory.InitialDirContext.search(Name,String,SearchControls)|
|javax.naming.directory.InitialDirContext.search(String,Attributes)|
|javax.naming.directory.InitialDirContext.search(String,Attributes,String[])|
|javax.naming.directory.InitialDirContext.search(String,String,Object[],SearchControls)|
|javax.naming.directory.InitialDirContext.search(String,String,SearchControls)|

*javax.naming.directory.InitialDirContext_Description*

This class is the starting context for performing directory operations. The documentation in the class description of InitialContext (including those for synchronization) apply 
here. 



*javax.naming.directory.InitialDirContext()*

public InitialDirContext()
  throws |javax.naming.NamingException|
         
Constructs an initial DirContext. No environment properties are supplied. Equivalent to new InitialDirContext(null). 


*javax.naming.directory.InitialDirContext(boolean)*

protected InitialDirContext(boolean lazy)
  throws |javax.naming.NamingException|
         
Constructs an initial DirContext with the option of not initializing it. This may be used by a constructor in a subclass when the value of the environment parameter is not yet 
known at the time the InitialDirContext constructor is called. The subclass's constructor will call this constructor, compute the value of the environment, and then call init() 
before returning. 

    lazy - true means do not initialize the initial DirContext; false is equivalent to calling new InitialDirContext() 

*javax.naming.directory.InitialDirContext(Hashtable<?,?>)*

public InitialDirContext(java.util.Hashtable<?, ?> environment)
  throws |javax.naming.NamingException|
         
Constructs an initial DirContext using the supplied environment. Environment properties are discussed in the javax.naming.InitialContext class description. 

This constructor will not modify environment or save a reference to it, but may save a clone. 

    environment - environment used to create the initial DirContext. Null indicates an empty environment. 

*javax.naming.directory.InitialDirContext.bind(Name,Object,Attributes)*

public void bind(
  javax.naming.Name name,
  java.lang.Object obj,
  javax.naming.directory.Attributes attrs)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.bind(String,Object,Attributes)*

public void bind(
  java.lang.String name,
  java.lang.Object obj,
  javax.naming.directory.Attributes attrs)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.createSubcontext(Name,Attributes)*

public |javax.naming.directory.DirContext| createSubcontext(
  javax.naming.Name name,
  javax.naming.directory.Attributes attrs)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.createSubcontext(String,Attributes)*

public |javax.naming.directory.DirContext| createSubcontext(
  java.lang.String name,
  javax.naming.directory.Attributes attrs)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.getAttributes(Name)*

public |javax.naming.directory.Attributes| getAttributes(javax.naming.Name name)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.getAttributes(Name,String[])*

public |javax.naming.directory.Attributes| getAttributes(
  javax.naming.Name name,
  java.lang.String[] attrIds)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.getAttributes(String)*

public |javax.naming.directory.Attributes| getAttributes(java.lang.String name)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.getAttributes(String,String[])*

public |javax.naming.directory.Attributes| getAttributes(
  java.lang.String name,
  java.lang.String[] attrIds)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.getSchema(Name)*

public |javax.naming.directory.DirContext| getSchema(javax.naming.Name name)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.getSchema(String)*

public |javax.naming.directory.DirContext| getSchema(java.lang.String name)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.getSchemaClassDefinition(Name)*

public |javax.naming.directory.DirContext| getSchemaClassDefinition(javax.naming.Name name)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.getSchemaClassDefinition(String)*

public |javax.naming.directory.DirContext| getSchemaClassDefinition(java.lang.String name)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.modifyAttributes(Name,int,Attributes)*

public void modifyAttributes(
  javax.naming.Name name,
  int mod_op,
  javax.naming.directory.Attributes attrs)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.modifyAttributes(Name,ModificationItem[])*

public void modifyAttributes(
  javax.naming.Name name,
  javax.naming.directory.ModificationItem[] mods)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.modifyAttributes(String,int,Attributes)*

public void modifyAttributes(
  java.lang.String name,
  int mod_op,
  javax.naming.directory.Attributes attrs)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.modifyAttributes(String,ModificationItem[])*

public void modifyAttributes(
  java.lang.String name,
  javax.naming.directory.ModificationItem[] mods)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.rebind(Name,Object,Attributes)*

public void rebind(
  javax.naming.Name name,
  java.lang.Object obj,
  javax.naming.directory.Attributes attrs)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.rebind(String,Object,Attributes)*

public void rebind(
  java.lang.String name,
  java.lang.Object obj,
  javax.naming.directory.Attributes attrs)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.search(Name,Attributes)*

public |javax.naming.NamingEnumeration|<SearchResult> search(
  javax.naming.Name name,
  javax.naming.directory.Attributes matchingAttributes)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.search(Name,Attributes,String[])*

public |javax.naming.NamingEnumeration|<SearchResult> search(
  javax.naming.Name name,
  javax.naming.directory.Attributes matchingAttributes,
  java.lang.String[] attributesToReturn)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.search(Name,String,Object[],SearchControls)*

public |javax.naming.NamingEnumeration|<SearchResult> search(
  javax.naming.Name name,
  java.lang.String filterExpr,
  java.lang.Object[] filterArgs,
  javax.naming.directory.SearchControls cons)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.search(Name,String,SearchControls)*

public |javax.naming.NamingEnumeration|<SearchResult> search(
  javax.naming.Name name,
  java.lang.String filter,
  javax.naming.directory.SearchControls cons)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.search(String,Attributes)*

public |javax.naming.NamingEnumeration|<SearchResult> search(
  java.lang.String name,
  javax.naming.directory.Attributes matchingAttributes)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.search(String,Attributes,String[])*

public |javax.naming.NamingEnumeration|<SearchResult> search(
  java.lang.String name,
  javax.naming.directory.Attributes matchingAttributes,
  java.lang.String[] attributesToReturn)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.search(String,String,Object[],SearchControls)*

public |javax.naming.NamingEnumeration|<SearchResult> search(
  java.lang.String name,
  java.lang.String filterExpr,
  java.lang.Object[] filterArgs,
  javax.naming.directory.SearchControls cons)
  throws |javax.naming.NamingException|
         




*javax.naming.directory.InitialDirContext.search(String,String,SearchControls)*

public |javax.naming.NamingEnumeration|<SearchResult> search(
  java.lang.String name,
  java.lang.String filter,
  javax.naming.directory.SearchControls cons)
  throws |javax.naming.NamingException|
         





