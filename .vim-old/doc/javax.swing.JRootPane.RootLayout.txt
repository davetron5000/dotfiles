*javax.swing.JRootPane.RootLayout* *JRootPane.RootLayout* A custom layout manager that is responsible for the layout of 
 layeredPane, glassPane, and menuBar.

protected class JRootPane.RootLayout
  extends    |java.lang.Object|
  implements |java.awt.LayoutManager2|
             |java.io.Serializable|

|javax.swing.JRootPane.RootLayout_Description|
|javax.swing.JRootPane.RootLayout_Fields|
|javax.swing.JRootPane.RootLayout_Constructors|
|javax.swing.JRootPane.RootLayout_Methods|

====================================================================================================================================================================================

*javax.swing.JRootPane.RootLayout_Constructors*
|javax.swing.JRootPane.RootLayout()|

*javax.swing.JRootPane.RootLayout_Methods*
|javax.swing.JRootPane.RootLayout.addLayoutComponent(Component,Object)|
|javax.swing.JRootPane.RootLayout.addLayoutComponent(String,Component)|
|javax.swing.JRootPane.RootLayout.getLayoutAlignmentX(Container)|
|javax.swing.JRootPane.RootLayout.getLayoutAlignmentY(Container)|
|javax.swing.JRootPane.RootLayout.invalidateLayout(Container)|
|javax.swing.JRootPane.RootLayout.layoutContainer(Container)|Instructs the layout manager to perform the layout for the specified  container.
|javax.swing.JRootPane.RootLayout.maximumLayoutSize(Container)|Returns the maximum amount of space the layout can use.
|javax.swing.JRootPane.RootLayout.minimumLayoutSize(Container)|Returns the minimum amount of space the layout needs.
|javax.swing.JRootPane.RootLayout.preferredLayoutSize(Container)|Returns the amount of space the layout would like to have.
|javax.swing.JRootPane.RootLayout.removeLayoutComponent(Component)|

*javax.swing.JRootPane.RootLayout_Description*

A custom layout manager that is responsible for the layout of layeredPane, glassPane, and menuBar. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*javax.swing.JRootPane.RootLayout()*

protected JRootPane.RootLayout()




*javax.swing.JRootPane.RootLayout.addLayoutComponent(Component,Object)*

public void addLayoutComponent(
  java.awt.Component comp,
  java.lang.Object constraints)





*javax.swing.JRootPane.RootLayout.addLayoutComponent(String,Component)*

public void addLayoutComponent(
  java.lang.String name,
  java.awt.Component comp)





*javax.swing.JRootPane.RootLayout.getLayoutAlignmentX(Container)*

public float getLayoutAlignmentX(java.awt.Container target)





*javax.swing.JRootPane.RootLayout.getLayoutAlignmentY(Container)*

public float getLayoutAlignmentY(java.awt.Container target)





*javax.swing.JRootPane.RootLayout.invalidateLayout(Container)*

public void invalidateLayout(java.awt.Container target)





*javax.swing.JRootPane.RootLayout.layoutContainer(Container)*

public void layoutContainer(java.awt.Container parent)

Instructs the layout manager to perform the layout for the specified container. 


    parent - the Container for which this layout manager is being used 

*javax.swing.JRootPane.RootLayout.maximumLayoutSize(Container)*

public |java.awt.Dimension| maximumLayoutSize(java.awt.Container target)

Returns the maximum amount of space the layout can use. 


    target - the Container for which this layout manager is being used 

    Returns: a Dimension object containing the layout's maximum size 

*javax.swing.JRootPane.RootLayout.minimumLayoutSize(Container)*

public |java.awt.Dimension| minimumLayoutSize(java.awt.Container parent)

Returns the minimum amount of space the layout needs. 


    parent - the Container for which this layout manager is being used 

    Returns: a Dimension object containing the layout's minimum size 

*javax.swing.JRootPane.RootLayout.preferredLayoutSize(Container)*

public |java.awt.Dimension| preferredLayoutSize(java.awt.Container parent)

Returns the amount of space the layout would like to have. 


    parent - the Container for which this layout manager is being used 

    Returns: a Dimension object containing the layout's preferred size 

*javax.swing.JRootPane.RootLayout.removeLayoutComponent(Component)*

public void removeLayoutComponent(java.awt.Component comp)






