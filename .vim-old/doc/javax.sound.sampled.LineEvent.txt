*javax.sound.sampled.LineEvent* *LineEvent* The LineEvent class encapsulates inf

public class LineEvent
  extends    |java.util.EventObject|

|javax.sound.sampled.LineEvent_Description|
|javax.sound.sampled.LineEvent_Fields|
|javax.sound.sampled.LineEvent_Constructors|
|javax.sound.sampled.LineEvent_Methods|

================================================================================

*javax.sound.sampled.LineEvent_Constructors*
|javax.sound.sampled.LineEvent(Line,LineEvent.Type,long)|Constructs a new event

*javax.sound.sampled.LineEvent_Methods*
|javax.sound.sampled.LineEvent.getFramePosition()|Obtains the position in the l
|javax.sound.sampled.LineEvent.getLine()|Obtains the audio line that is the sou
|javax.sound.sampled.LineEvent.getType()|Obtains the event's type.
|javax.sound.sampled.LineEvent.toString()|Obtains a string representation of th

*javax.sound.sampled.LineEvent_Description*

The LineEvent class encapsulates information that a line sends its listeners 
whenever the line opens, closes, starts, or stops. Each of these four state 
changes is represented by a corresponding type of event. A listener receives 
the event as a parameter to its update(|javax.sound.sampled.LineListener|) 
method. By querying the event, the listener can learn the type of event, the 
line responsible for the event, and how much data the line had processed when 
the event occurred. 

Although this class implements Serializable, attempts to serialize a LineEvent 
object will fail. 


*javax.sound.sampled.LineEvent(Line,LineEvent.Type,long)*

public LineEvent(
  javax.sound.sampled.Line line,
  javax.sound.sampled.LineEvent.Type type,
  long position)

Constructs a new event of the specified type, originating from the specified 
line. 

    line - the source of this event 
    type - the event type (OPEN, CLOSE, START, or STOP) 
    position - the number of sample frames that the line had already processed when the event 
       occurred, or {@link AudioSystem#NOT_SPECIFIED} 

*javax.sound.sampled.LineEvent.getFramePosition()*

public final long getFramePosition()

Obtains the position in the line's audio data when the event occurred, 
expressed in sample frames. For example, if a source line had already played 
back 14 sample frames at the time it was paused, the pause event would report 
the line's position as 14. The next frame to be processed would be frame number 
14 using zero-based numbering, or 15 using one-based numbering. 

Note that this field is relevant only to certain events generated by data 
lines, such as START and STOP. For events generated by lines that do not count 
sample frames, and for any other events for which this value is not known, the 
position value should be (|javax.sound.sampled.AudioSystem|) . 


    Returns: the line's position as a sample frame number 
*javax.sound.sampled.LineEvent.getLine()*

public final |javax.sound.sampled.Line| getLine()

Obtains the audio line that is the source of this event. 


    Returns: the line responsible for this event 
*javax.sound.sampled.LineEvent.getType()*

public final |javax.sound.sampled.LineEvent.Type| getType()

Obtains the event's type. 


    Returns: this event's type ({@link Type#OPEN}, {@link Type#CLOSE}, {@link Type#START}, 
             or {@link Type#STOP}) 
*javax.sound.sampled.LineEvent.toString()*

public |java.lang.String| toString()

Obtains a string representation of the event. The contents of the string may 
vary between implementations of Java Sound. 


    Returns: a string describing the event. 

