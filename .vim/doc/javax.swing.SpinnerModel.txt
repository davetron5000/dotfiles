*javax.swing.SpinnerModel* *SpinnerModel* A model for a potentially unbounded se

public interface interface SpinnerModel


|javax.swing.SpinnerModel_Description|
|javax.swing.SpinnerModel_Fields|
|javax.swing.SpinnerModel_Constructors|
|javax.swing.SpinnerModel_Methods|

================================================================================

*javax.swing.SpinnerModel_Methods*
|javax.swing.SpinnerModel.addChangeListener(ChangeListener)|Adds a ChangeListen
|javax.swing.SpinnerModel.getNextValue()|Return the object in the sequence that
|javax.swing.SpinnerModel.getPreviousValue()|Return the object in the sequence 
|javax.swing.SpinnerModel.getValue()|The current element of the sequence.
|javax.swing.SpinnerModel.removeChangeListener(ChangeListener)|Removes a Change
|javax.swing.SpinnerModel.setValue(Object)|Changes current value of the model, 

*javax.swing.SpinnerModel_Description*

A model for a potentially unbounded sequence of object values. This model is 
similar to ListModel however there are some important differences: 

The number of sequence elements isn't neccessarily bounded. The model doesn't 
support indexed random access to sequence elements. Only three sequence values 
are accessible at a time: current, next and previous. The current sequence 
element, can be set. 

A SpinnerModel has three properties, only the first is read/write. 

value The current element of the sequence. 

nextValue The following element or null if value is the last element of the 
sequence. 

previousValue The preceeding element or null if value is the first element of 
the sequence. 

When the the value property changes, ChangeListeners are notified. SpinnerModel 
may choose to notify the ChangeListeners under other circumstances. 


*javax.swing.SpinnerModel.addChangeListener(ChangeListener)*

public void addChangeListener(javax.swing.event.ChangeListener l)

Adds a ChangeListener to the model's listener list. The ChangeListeners must be 
notified when models value changes. 

    l - the ChangeListener to add 

*javax.swing.SpinnerModel.getNextValue()*

public |java.lang.Object| getNextValue()

Return the object in the sequence that comes after the object returned by 
getValue(). If the end of the sequence has been reached then return null. 
Calling this method does not effect value. 


    Returns: the next legal value or null if one doesn't exist 
*javax.swing.SpinnerModel.getPreviousValue()*

public |java.lang.Object| getPreviousValue()

Return the object in the sequence that comes before the object returned by 
getValue(). If the end of the sequence has been reached then return null. 
Calling this method does not effect value. 


    Returns: the previous legal value or null if one doesn't exist 
*javax.swing.SpinnerModel.getValue()*

public |java.lang.Object| getValue()

The current element of the sequence. This element is usually displayed by the 
editor part of a JSpinner. 


    Returns: the current spinner value. 
*javax.swing.SpinnerModel.removeChangeListener(ChangeListener)*

public void removeChangeListener(javax.swing.event.ChangeListener l)

Removes a ChangeListener from the model's listener list. 

    l - the ChangeListener to remove 

*javax.swing.SpinnerModel.setValue(Object)*

public void setValue(java.lang.Object value)

Changes current value of the model, typically this value is displayed by the 
editor part of a JSpinner. If the SpinnerModel implementation doesn't support 
the specified value then an IllegalArgumentException is thrown. For example a 
SpinnerModel for numbers might only support values that are integer multiples 
of ten. In that case, model.setValue(new Number(11)) would throw an exception. 



