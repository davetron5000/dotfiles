*javax.management.timer.TimerMBean* *TimerMBean* Exposes the management interfac

public interface interface TimerMBean


|javax.management.timer.TimerMBean_Description|
|javax.management.timer.TimerMBean_Fields|
|javax.management.timer.TimerMBean_Constructors|
|javax.management.timer.TimerMBean_Methods|

================================================================================

*javax.management.timer.TimerMBean_Methods*
|javax.management.timer.TimerMBean.addNotification(String,String,Object,Date)|C
|javax.management.timer.TimerMBean.addNotification(String,String,Object,Date,long)|
|javax.management.timer.TimerMBean.addNotification(String,String,Object,Date,long,long)|
|javax.management.timer.TimerMBean.addNotification(String,String,Object,Date,long,long,boolean)|
|javax.management.timer.TimerMBean.getAllNotificationIDs()|Gets all timer notif
|javax.management.timer.TimerMBean.getDate(Integer)|Gets a copy of the date ass
|javax.management.timer.TimerMBean.getFixedRate(Integer)|Gets a copy of the fla
|javax.management.timer.TimerMBean.getNbNotifications()|Gets the number of time
|javax.management.timer.TimerMBean.getNbOccurences(Integer)|Gets a copy of the 
|javax.management.timer.TimerMBean.getNotificationIDs(String)|Gets all the iden
|javax.management.timer.TimerMBean.getNotificationMessage(Integer)|Gets the tim
|javax.management.timer.TimerMBean.getNotificationType(Integer)|Gets the timer 
|javax.management.timer.TimerMBean.getNotificationUserData(Integer)|Gets the ti
|javax.management.timer.TimerMBean.getPeriod(Integer)|Gets a copy of the period
|javax.management.timer.TimerMBean.getSendPastNotifications()|Gets the flag ind
|javax.management.timer.TimerMBean.isActive()|Tests whether the timer MBean is 
|javax.management.timer.TimerMBean.isEmpty()|Tests whether the list of timer no
|javax.management.timer.TimerMBean.removeAllNotifications()|Removes all the tim
|javax.management.timer.TimerMBean.removeNotification(Integer)|Removes the time
|javax.management.timer.TimerMBean.removeNotifications(String)|Removes all the 
|javax.management.timer.TimerMBean.setSendPastNotifications(boolean)|Sets the f
|javax.management.timer.TimerMBean.start()|Starts the timer.
|javax.management.timer.TimerMBean.stop()|Stops the timer.

*javax.management.timer.TimerMBean_Description*

Exposes the management interface of the timer MBean. 


*javax.management.timer.TimerMBean.addNotification(String,String,Object,Date)*

public |java.lang.Integer| addNotification(
  java.lang.String type,
  java.lang.String message,
  java.lang.Object userData,
  java.util.Date date)
  throws |java.lang.IllegalArgumentException|
         
Creates a new timer notification with the specified type, message and userData 
and inserts it into the list of notifications with a given date and a null 
period and number of occurrences. 

The timer notification will be handled once at the specified date. 

If the timer notification to be inserted has a date that is before the current 
date, the method behaves as if the specified date were the current date and the 
notification is delivered immediately. 

    type - The timer notification type. 
    message - The timer notification detailed message. 
    userData - The timer notification user data object. 
    date - The date when the notification occurs. 

    Returns: The identifier of the new created timer notification. 
*javax.management.timer.TimerMBean.addNotification(String,String,Object,Date,long)*

public |java.lang.Integer| addNotification(
  java.lang.String type,
  java.lang.String message,
  java.lang.Object userData,
  java.util.Date date,
  long period)
  throws |java.lang.IllegalArgumentException|
         
Creates a new timer notification with the specified type, message and userData 
and inserts it into the list of notifications with a given date and period and 
a null number of occurrences. 

The timer notification will repeat continuously using the timer period using a 
fixed-delay execution scheme, as specified in (|java.util.Timer|) . In order to 
use a fixed-rate execution scheme, use (|javax.management.timer.TimerMBean|) 
instead. 

If the timer notification to be inserted has a date that is before the current 
date, the method behaves as if the specified date were the current date. The 
first notification is delivered immediately and the subsequent ones are spaced 
as specified by the period parameter. 

    type - The timer notification type. 
    message - The timer notification detailed message. 
    userData - The timer notification user data object. 
    date - The date when the notification occurs. 
    period - The period of the timer notification (in milliseconds). 

    Returns: The identifier of the new created timer notification. 
*javax.management.timer.TimerMBean.addNotification(String,String,Object,Date,long,long)*

public |java.lang.Integer| addNotification(
  java.lang.String type,
  java.lang.String message,
  java.lang.Object userData,
  java.util.Date date,
  long period,
  long nbOccurences)
  throws |java.lang.IllegalArgumentException|
         
Creates a new timer notification with the specified type, message and userData 
and inserts it into the list of notifications with a given date, period and 
number of occurrences. 

If the timer notification to be inserted has a date that is before the current 
date, the method behaves as if the specified date were the current date. For 
once-off notifications, the notification is delivered immediately. For periodic 
notifications, the first notification is delivered immediately and the 
subsequent ones are spaced as specified by the period parameter. 

Note that once the timer notification has been added into the list of 
notifications, its associated date, period and number of occurrences cannot be 
updated. 

In the case of a periodic notification, uses a fixed-delay execution scheme, as 
specified in (|java.util.Timer|) . In order to use a fixed-rate execution 
scheme, use (|javax.management.timer.TimerMBean|) instead. 

    type - The timer notification type. 
    message - The timer notification detailed message. 
    userData - The timer notification user data object. 
    date - The date when the notification occurs. 
    period - The period of the timer notification (in milliseconds). 
    nbOccurences - The total number the timer notification will be emitted. 

    Returns: The identifier of the new created timer notification. 
*javax.management.timer.TimerMBean.addNotification(String,String,Object,Date,long,long,boolean)*

public |java.lang.Integer| addNotification(
  java.lang.String type,
  java.lang.String message,
  java.lang.Object userData,
  java.util.Date date,
  long period,
  long nbOccurences,
  boolean fixedRate)
  throws |java.lang.IllegalArgumentException|
         
Creates a new timer notification with the specified type, message and userData 
and inserts it into the list of notifications with a given date, period and 
number of occurrences. 

If the timer notification to be inserted has a date that is before the current 
date, the method behaves as if the specified date were the current date. For 
once-off notifications, the notification is delivered immediately. For periodic 
notifications, the first notification is delivered immediately and the 
subsequent ones are spaced as specified by the period parameter. 

Note that once the timer notification has been added into the list of 
notifications, its associated date, period and number of occurrences cannot be 
updated. 

In the case of a periodic notification, the value of parameter fixedRate is 
used to specify the execution scheme, as specified in (|java.util.Timer|) . 

    type - The timer notification type. 
    message - The timer notification detailed message. 
    userData - The timer notification user data object. 
    date - The date when the notification occurs. 
    period - The period of the timer notification (in milliseconds). 
    nbOccurences - The total number the timer notification will be emitted. 
    fixedRate - If true and if the notification is periodic, the notification is scheduled with 
       a fixed-rate execution scheme. If false and if the notification is 
       periodic, the notification is scheduled with a fixed-delay execution 
       scheme. Ignored if the notification is not periodic. 

    Returns: The identifier of the new created timer notification. 
*javax.management.timer.TimerMBean.getAllNotificationIDs()*

public |java.util.Vector| getAllNotificationIDs()

Gets all timer notification identifiers registered into the list of 
notifications. 


    Returns: A vector of Integer objects containing all the timer notification identifiers. 
             The vector is empty if there is no timer notification registered 
             for this timer MBean. 
*javax.management.timer.TimerMBean.getDate(Integer)*

public |java.util.Date| getDate(java.lang.Integer id)

Gets a copy of the date associated to a timer notification. 

    id - The timer notification identifier. 

    Returns: A copy of the date or null if the identifier is not mapped to any timer 
             notification registered for this timer MBean. 
*javax.management.timer.TimerMBean.getFixedRate(Integer)*

public |java.lang.Boolean| getFixedRate(java.lang.Integer id)

Gets a copy of the flag indicating whether a periodic notification is executed 
at fixed-delay or at fixed-rate. 

    id - The timer notification identifier. 

    Returns: A copy of the flag indicating whether a periodic notification is executed at 
             fixed-delay or at fixed-rate. 
*javax.management.timer.TimerMBean.getNbNotifications()*

public int getNbNotifications()

Gets the number of timer notifications registered into the list of 
notifications. 


    Returns: The number of timer notifications. 
*javax.management.timer.TimerMBean.getNbOccurences(Integer)*

public |java.lang.Long| getNbOccurences(java.lang.Integer id)

Gets a copy of the remaining number of occurrences associated to a timer 
notification. 

    id - The timer notification identifier. 

    Returns: A copy of the remaining number of occurrences or null if the identifier is not 
             mapped to any timer notification registered for this timer MBean. 
*javax.management.timer.TimerMBean.getNotificationIDs(String)*

public |java.util.Vector| getNotificationIDs(java.lang.String type)

Gets all the identifiers of timer notifications corresponding to the specified 
type. 

    type - The timer notification type. 

    Returns: A vector of Integer objects containing all the identifiers of timer 
             notifications with the specified type. The vector is empty if 
             there is no timer notifications registered for this timer MBean 
             with the specified type. 
*javax.management.timer.TimerMBean.getNotificationMessage(Integer)*

public |java.lang.String| getNotificationMessage(java.lang.Integer id)

Gets the timer notification detailed message corresponding to the specified 
identifier. 

    id - The timer notification identifier. 

    Returns: The timer notification detailed message or null if the identifier is not mapped 
             to any timer notification registered for this timer MBean. 
*javax.management.timer.TimerMBean.getNotificationType(Integer)*

public |java.lang.String| getNotificationType(java.lang.Integer id)

Gets the timer notification type corresponding to the specified identifier. 

    id - The timer notification identifier. 

    Returns: The timer notification type or null if the identifier is not mapped to any 
             timer notification registered for this timer MBean. 
*javax.management.timer.TimerMBean.getNotificationUserData(Integer)*

public |java.lang.Object| getNotificationUserData(java.lang.Integer id)

Gets the timer notification user data object corresponding to the specified 
identifier. 

    id - The timer notification identifier. 

    Returns: The timer notification user data object or null if the identifier is not mapped 
             to any timer notification registered for this timer MBean. 
*javax.management.timer.TimerMBean.getPeriod(Integer)*

public |java.lang.Long| getPeriod(java.lang.Integer id)

Gets a copy of the period (in milliseconds) associated to a timer notification. 

    id - The timer notification identifier. 

    Returns: A copy of the period or null if the identifier is not mapped to any timer 
             notification registered for this timer MBean. 
*javax.management.timer.TimerMBean.getSendPastNotifications()*

public boolean getSendPastNotifications()

Gets the flag indicating whether or not the timer sends past notifications. 


    Returns: The past notifications sending on/off flag value. 
*javax.management.timer.TimerMBean.isActive()*

public boolean isActive()

Tests whether the timer MBean is active. A timer MBean is marked active when 
the start(|javax.management.timer.TimerMBean|) method is called. It becomes 
inactive when the stop(|javax.management.timer.TimerMBean|) method is called. 


    Returns: true if the timer MBean is active, false otherwise. 
*javax.management.timer.TimerMBean.isEmpty()*

public boolean isEmpty()

Tests whether the list of timer notifications is empty. 


    Returns: true if the list of timer notifications is empty, false otherwise. 
*javax.management.timer.TimerMBean.removeAllNotifications()*

public void removeAllNotifications()

Removes all the timer notifications from the list of notifications and resets 
the counter used to update the timer notification identifiers. 


*javax.management.timer.TimerMBean.removeNotification(Integer)*

public void removeNotification(java.lang.Integer id)
  throws |javax.management.InstanceNotFoundException|
         
Removes the timer notification corresponding to the specified identifier from 
the list of notifications. 

    id - The timer notification identifier. 

*javax.management.timer.TimerMBean.removeNotifications(String)*

public void removeNotifications(java.lang.String type)
  throws |javax.management.InstanceNotFoundException|
         
Removes all the timer notifications corresponding to the specified type from 
the list of notifications. 

    type - The timer notification type. 

*javax.management.timer.TimerMBean.setSendPastNotifications(boolean)*

public void setSendPastNotifications(boolean value)

Sets the flag indicating whether the timer sends past notifications or not. 

    value - The past notifications sending on/off flag value. 

*javax.management.timer.TimerMBean.start()*

public void start()

Starts the timer. 

If there is one or more timer notifications before the time in the list of 
notifications, the notification is sent according to the sendPastNotifications 
flag and then, updated according to its period and remaining number of 
occurrences. If the timer notification date remains earlier than the current 
date, this notification is just removed from the list of notifications. 


*javax.management.timer.TimerMBean.stop()*

public void stop()

Stops the timer. 



