*javax.sql.rowset.serial.SQLInputImpl* *SQLInputImpl* An input stream used for c

public class SQLInputImpl
  extends    |java.lang.Object|
  implements |java.sql.SQLInput|

|javax.sql.rowset.serial.SQLInputImpl_Description|
|javax.sql.rowset.serial.SQLInputImpl_Fields|
|javax.sql.rowset.serial.SQLInputImpl_Constructors|
|javax.sql.rowset.serial.SQLInputImpl_Methods|

================================================================================

*javax.sql.rowset.serial.SQLInputImpl_Constructors*
|javax.sql.rowset.serial.SQLInputImpl(Object[],Map)|Creates an SQLInputImpl obj

*javax.sql.rowset.serial.SQLInputImpl_Methods*
|javax.sql.rowset.serial.SQLInputImpl.readArray()|Reads an SQL ARRAY value from
|javax.sql.rowset.serial.SQLInputImpl.readAsciiStream()|Returns the next attrib
|javax.sql.rowset.serial.SQLInputImpl.readBigDecimal()|Retrieves the next attri
|javax.sql.rowset.serial.SQLInputImpl.readBinaryStream()|Returns the next attri
|javax.sql.rowset.serial.SQLInputImpl.readBlob()|Retrieves the BLOB value at th
|javax.sql.rowset.serial.SQLInputImpl.readBoolean()|Retrieves the next attribut
|javax.sql.rowset.serial.SQLInputImpl.readByte()|Retrieves the next attribute i
|javax.sql.rowset.serial.SQLInputImpl.readBytes()|Retrieves the next attribute 
|javax.sql.rowset.serial.SQLInputImpl.readCharacterStream()|Retrieves the next 
|javax.sql.rowset.serial.SQLInputImpl.readClob()|Retrieves the CLOB value at th
|javax.sql.rowset.serial.SQLInputImpl.readDate()|Retrieves the next attribute i
|javax.sql.rowset.serial.SQLInputImpl.readDouble()|Retrieves the next attribute
|javax.sql.rowset.serial.SQLInputImpl.readFloat()|Retrieves the next attribute 
|javax.sql.rowset.serial.SQLInputImpl.readInt()|Retrieves the next attribute in
|javax.sql.rowset.serial.SQLInputImpl.readLong()|Retrieves the next attribute i
|javax.sql.rowset.serial.SQLInputImpl.readObject()|Retrieves the value at the h
|javax.sql.rowset.serial.SQLInputImpl.readRef()|Retrieves the value at the head
|javax.sql.rowset.serial.SQLInputImpl.readShort()|Retrieves the next attribute 
|javax.sql.rowset.serial.SQLInputImpl.readString()|Retrieves the next attribute
|javax.sql.rowset.serial.SQLInputImpl.readTime()|Retrieves the next attribute i
|javax.sql.rowset.serial.SQLInputImpl.readTimestamp()|Retrieves the next attrib
|javax.sql.rowset.serial.SQLInputImpl.readURL()|Reads an SQL DATALINK value fro
|javax.sql.rowset.serial.SQLInputImpl.wasNull()|Ascertains whether the last val

*javax.sql.rowset.serial.SQLInputImpl_Description*

An input stream used for custom mapping user-defined types (UDTs). An 
SQLInputImpl object is an input stream that contains a stream of values that 
are the attributes of a UDT. 

This class is used by the driver behind the scenes when the method getObject is 
called on an SQL structured or distinct type that has a custom mapping; a 
programmer never invokes SQLInputImpl methods directly. They are provided here 
as a convenience for those who write RowSet implementations. 

The SQLInputImpl class provides a set of reader methods analogous to the 
ResultSet getter methods. These methods make it possible to read the values in 
an SQLInputImpl object. 

The method wasNull is used to determine whether the the last value read was SQL 
NULL. When the method getObject is called with an object of a class 
implementing the interface SQLData, the JDBC driver calls the method 
SQLData.getSQLType to determine the SQL type of the UDT being custom mapped. 
The driver creates an instance of SQLInputImpl, populating it with the 
attributes of the UDT. The driver then passes the input stream to the method 
SQLData.readSQL, which in turn calls the SQLInputImpl reader methods to read 
the attributes from the input stream. 


*javax.sql.rowset.serial.SQLInputImpl(Object[],Map)*

public SQLInputImpl(
  java.lang.Object[] attributes,
  java.util.Map map)
  throws |java.sql.SQLException|
         
Creates an SQLInputImpl object initialized with the given array of attributes 
and the given type map. If any of the attributes is a UDT whose name is in an 
entry in the type map, the attribute will be mapped according to the 
corresponding SQLData implementation. 

    attributes - an array of Object instances in which each element is an attribute of a UDT. 
       The order of the attributes in the array is the same order in which the 
       attributes were defined in the UDT definition. 
    map - a java.util.Map object containing zero or more entries, with each entry 
       consisting of 1) a String giving the fully qualified name of the UDT and 
       2) the Class object for the SQLData implementation that defines how the 
       UDT is to be mapped 

*javax.sql.rowset.serial.SQLInputImpl.readArray()*

public |java.sql.Array| readArray()
  throws |java.sql.SQLException|
         
Reads an SQL ARRAY value from the stream and returns it as an Array object in 
the Java programming language. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type as this responsibility is delegated to the UDT 
mapping as implemented by a SQLData implementation. 


    Returns: an Array object representing the SQL ARRAY value at the head of the stream; * 
             if the value is SQL NULL, return null 
*javax.sql.rowset.serial.SQLInputImpl.readAsciiStream()*

public |java.io.InputStream| readAsciiStream()
  throws |java.sql.SQLException|
         
Returns the next attribute in this SQLInputImpl object as a stream of ASCII 
characters. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type as this responsibility is delegated to the UDT 
mapping as implemented by a SQLData implementation. 


    Returns: the attribute; if the value is SQL NULL, return null 
*javax.sql.rowset.serial.SQLInputImpl.readBigDecimal()*

public |java.math.BigDecimal| readBigDecimal()
  throws |java.sql.SQLException|
         
Retrieves the next attribute in this SQLInputImpl object as a 
java.math.BigDecimal. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type; this responsibility is delegated to the UDT mapping 
as defined by a SQLData implementation. 


    Returns: the next attribute in this SQLInputImpl object; if the value is SQL NULL, 
             return null 
*javax.sql.rowset.serial.SQLInputImpl.readBinaryStream()*

public |java.io.InputStream| readBinaryStream()
  throws |java.sql.SQLException|
         
Returns the next attribute in this SQLInputImpl object as a stream of 
uninterpreted bytes. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type as this responsibility is delegated to the UDT 
mapping as implemented by a SQLData implementation. 


    Returns: the attribute; if the value is SQL NULL, return null 
*javax.sql.rowset.serial.SQLInputImpl.readBlob()*

public |java.sql.Blob| readBlob()
  throws |java.sql.SQLException|
         
Retrieves the BLOB value at the head of this SQLInputImpl object as a Blob 
object in the Java programming language. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type as this responsibility is delegated to the UDT 
mapping as implemented by a SQLData implementation. 


    Returns: a Blob object representing the SQL BLOB value at the head of this stream; if 
             the value is SQL NULL, return null 
*javax.sql.rowset.serial.SQLInputImpl.readBoolean()*

public boolean readBoolean()
  throws |java.sql.SQLException|
         
Retrieves the next attribute in this SQLInputImpl object as a boolean in the 
Java programming language. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type; this responsibility is delegated to the UDT mapping 
as defined by a SQLData implementation. 


    Returns: the next attribute in this SQLInputImpl object; if the value is SQL NULL, 
             return null 
*javax.sql.rowset.serial.SQLInputImpl.readByte()*

public byte readByte()
  throws |java.sql.SQLException|
         
Retrieves the next attribute in this SQLInputImpl object as a byte in the Java 
programming language. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type; this responsibility is delegated to the UDT mapping 
as defined by a SQLData implementation. 


    Returns: the next attribute in this SQLInputImpl object; if the value is SQL NULL, 
             return null 
*javax.sql.rowset.serial.SQLInputImpl.readBytes()*

public byte readBytes()
  throws |java.sql.SQLException|
         
Retrieves the next attribute in this SQLInputImpl object as an array of bytes. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type; this responsibility is delegated to the UDT mapping 
as defined by a SQLData implementation. 


    Returns: the next attribute in this SQLInputImpl object; if the value is SQL NULL, 
             return null 
*javax.sql.rowset.serial.SQLInputImpl.readCharacterStream()*

public |java.io.Reader| readCharacterStream()
  throws |java.sql.SQLException|
         
Retrieves the next attribute in this SQLInputImpl object as a stream of Unicode 
characters. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type as this responsibility is delegated to the UDT 
mapping as implemented by a SQLData implementation. 


    Returns: the attribute; if the value is SQL NULL, return null 
*javax.sql.rowset.serial.SQLInputImpl.readClob()*

public |java.sql.Clob| readClob()
  throws |java.sql.SQLException|
         
Retrieves the CLOB value at the head of this SQLInputImpl object as a Clob 
object in the Java programming language. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type as this responsibility is delegated to the UDT 
mapping as implemented by a SQLData implementation. 


    Returns: a Clob object representing the SQL CLOB value at the head of the stream; if the 
             value is SQL NULL, return null 
*javax.sql.rowset.serial.SQLInputImpl.readDate()*

public |java.sql.Date| readDate()
  throws |java.sql.SQLException|
         
Retrieves the next attribute in this SQLInputImpl as a java.sql.Date object. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type; this responsibility is delegated to the UDT mapping 
as defined by a SQLData implementation. 


    Returns: the next attribute in this SQLInputImpl object; if the value is SQL NULL, 
             return null 
*javax.sql.rowset.serial.SQLInputImpl.readDouble()*

public double readDouble()
  throws |java.sql.SQLException|
         
Retrieves the next attribute in this SQLInputImpl object as a double in the 
Java programming language. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type; this responsibility is delegated to the UDT mapping 
as defined by a SQLData implementation. 


    Returns: the next attribute in this SQLInputImpl object; if the value is SQL NULL, 
             return null 
*javax.sql.rowset.serial.SQLInputImpl.readFloat()*

public float readFloat()
  throws |java.sql.SQLException|
         
Retrieves the next attribute in this SQLInputImpl object as a float in the Java 
programming language. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type; this responsibility is delegated to the UDT mapping 
as defined by a SQLData implementation. 


    Returns: the next attribute in this SQLInputImpl object; if the value is SQL NULL, 
             return null 
*javax.sql.rowset.serial.SQLInputImpl.readInt()*

public int readInt()
  throws |java.sql.SQLException|
         
Retrieves the next attribute in this SQLInputImpl object as an int in the Java 
programming language. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type; this responsibility is delegated to the UDT mapping 
as defined by a SQLData implementation. 


    Returns: the next attribute in this SQLInputImpl object; if the value is SQL NULL, 
             return null 
*javax.sql.rowset.serial.SQLInputImpl.readLong()*

public long readLong()
  throws |java.sql.SQLException|
         
Retrieves the next attribute in this SQLInputImpl object as a long in the Java 
programming language. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type; this responsibility is delegated to the UDT mapping 
as defined by a SQLData implementation. 


    Returns: the next attribute in this SQLInputImpl object; if the value is SQL NULL, 
             return null 
*javax.sql.rowset.serial.SQLInputImpl.readObject()*

public |java.lang.Object| readObject()
  throws |java.sql.SQLException|
         
Retrieves the value at the head of this SQLInputImpl object as an Object in the 
Java programming language. The actual type of the object returned is determined 
by the default mapping of SQL types to types in the Java programming language 
unless there is a custom mapping, in which case the type of the object returned 
is determined by this stream's type map. 

The JDBC technology-enabled driver registers a type map with the stream before 
passing the stream to the application. 

When the datum at the head of the stream is an SQL NULL, this method returns 
null. If the datum is an SQL structured or distinct type with a custom mapping, 
this method determines the SQL type of the datum at the head of the stream, 
constructs an object of the appropriate class, and calls the method 
SQLData.readSQL on that object. The readSQL method then calls the appropriate 
SQLInputImpl.readXXX methods to retrieve the attribute values from the stream. 


    Returns: the value at the head of the stream as an Object in the Java programming 
             language; null if the value is SQL NULL 
*javax.sql.rowset.serial.SQLInputImpl.readRef()*

public |java.sql.Ref| readRef()
  throws |java.sql.SQLException|
         
Retrieves the value at the head of this SQLInputImpl object as a Ref object in 
the Java programming language. 


    Returns: a Ref object representing the SQL REF value at the head of the stream; if the 
             value is SQL NULL return null 
*javax.sql.rowset.serial.SQLInputImpl.readShort()*

public short readShort()
  throws |java.sql.SQLException|
         
Retrieves the next attribute in this SQLInputImpl object as a short in the Java 
programming language. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type; this responsibility is delegated to the UDT mapping 
as defined by a SQLData implementation. 


    Returns: the next attribute in this SQLInputImpl object; if the value is SQL NULL, 
             return null 
*javax.sql.rowset.serial.SQLInputImpl.readString()*

public |java.lang.String| readString()
  throws |java.sql.SQLException|
         
Retrieves the next attribute in this SQLInputImpl object as a String in the 
Java programming language. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type; this responsibility is delegated to the UDT mapping 
as defined by a SQLData implementation. 


    Returns: the next attribute in this SQLInputImpl object; if the value is SQL NULL, 
             return null 
*javax.sql.rowset.serial.SQLInputImpl.readTime()*

public |java.sql.Time| readTime()
  throws |java.sql.SQLException|
         
Retrieves the next attribute in this SQLInputImpl object as a java.sql.Time 
object. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type as this responsibility is delegated to the UDT 
mapping as implemented by a SQLData implementation. 


    Returns: the attribute; if the value is SQL NULL, return null 
*javax.sql.rowset.serial.SQLInputImpl.readTimestamp()*

public |java.sql.Timestamp| readTimestamp()
  throws |java.sql.SQLException|
         
Retrieves the next attribute in this SQLInputImpl object as a 
java.sql.Timestamp object. 


    Returns: the attribute; if the value is SQL NULL, return null 
*javax.sql.rowset.serial.SQLInputImpl.readURL()*

public |java.net.URL| readURL()
  throws |java.sql.SQLException|
         
Reads an SQL DATALINK value from the stream and returns it as an URL object in 
the Java programming language. 

This method does not perform type-safe checking to determine if the returned 
type is the expected type as this responsibility is delegated to the UDT 
mapping as implemented by a SQLData implementation. 


    Returns: an URL object representing the SQL DATALINK value at the head of the stream; * 
             if the value is SQL NULL, return null 
*javax.sql.rowset.serial.SQLInputImpl.wasNull()*

public boolean wasNull()
  throws |java.sql.SQLException|
         
Ascertains whether the last value read from this SQLInputImpl object was null. 


    Returns: true if the SQL value read most recently was null; otherwise, false; by default 
             it will return false 

