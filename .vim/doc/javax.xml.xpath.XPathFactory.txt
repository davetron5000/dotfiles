*javax.xml.xpath.XPathFactory* *XPathFactory* An XPathFactory instance can be us

public abstract class XPathFactory
  extends    |java.lang.Object|

|javax.xml.xpath.XPathFactory_Description|
|javax.xml.xpath.XPathFactory_Fields|
|javax.xml.xpath.XPathFactory_Constructors|
|javax.xml.xpath.XPathFactory_Methods|

================================================================================

*javax.xml.xpath.XPathFactory_Fields*
|java.lang.String_javax.xml.xpath.XPathFactory.DEFAULT_OBJECT_MODEL_URI|
|java.lang.String_javax.xml.xpath.XPathFactory.DEFAULT_PROPERTY_NAME|

*javax.xml.xpath.XPathFactory_Constructors*
|javax.xml.xpath.XPathFactory()|Protected constructor as#newInstance()or#newIns

*javax.xml.xpath.XPathFactory_Methods*
|javax.xml.xpath.XPathFactory.getFeature(String)|Get the state of the named fea
|javax.xml.xpath.XPathFactory.isObjectModelSupported(String)|Is specified objec
|javax.xml.xpath.XPathFactory.newInstance()|Get a new XPathFactory instance usi
|javax.xml.xpath.XPathFactory.newInstance(String)|Get a new XPathFactory instan
|javax.xml.xpath.XPathFactory.newXPath()|Return a new XPath using the underlyin
|javax.xml.xpath.XPathFactory.setFeature(String,boolean)|Set a feature for this
|javax.xml.xpath.XPathFactory.setXPathFunctionResolver(XPathFunctionResolver)|E
|javax.xml.xpath.XPathFactory.setXPathVariableResolver(XPathVariableResolver)|E

*javax.xml.xpath.XPathFactory_Description*

An XPathFactory instance can be used to create (|javax.xml.xpath.XPath|) 
objects. 

See (|javax.xml.xpath.XPathFactory|) for lookup mechanism. 


*java.lang.String_javax.xml.xpath.XPathFactory.DEFAULT_OBJECT_MODEL_URI*

An XPathFactory instance can be used to create (|javax.xml.xpath.XPath|) 
objects. 

See (|javax.xml.xpath.XPathFactory|) for lookup mechanism. 


*java.lang.String_javax.xml.xpath.XPathFactory.DEFAULT_PROPERTY_NAME*

An XPathFactory instance can be used to create (|javax.xml.xpath.XPath|) 
objects. 

See (|javax.xml.xpath.XPathFactory|) for lookup mechanism. 



*javax.xml.xpath.XPathFactory()*

protected XPathFactory()

Protected constructor as (|javax.xml.xpath.XPathFactory|) or 
(|javax.xml.xpath.XPathFactory|) should be used to create a new instance of an 
XPathFactory. 


*javax.xml.xpath.XPathFactory.getFeature(String)*

public abstract boolean getFeature(java.lang.String name)
  throws |javax.xml.xpath.XPathFactoryConfigurationException|
         
Get the state of the named feature. 

Feature names are fully qualified (|java.net.URI|) s. Implementations may 
define their own features. An 
(|javax.xml.xpath.XPathFactoryConfigurationException|) is thrown if this 
XPathFactory or the XPaths it creates cannot support the feature. It is 
possible for an XPathFactory to expose a feature value but be unable to change 
its state. 

    name - Feature name. 

    Returns: State of the named feature. 
*javax.xml.xpath.XPathFactory.isObjectModelSupported(String)*

public abstract boolean isObjectModelSupported(java.lang.String objectModel)

Is specified object model supported by this XPathFactory? 

    objectModel - Specifies the object model which the returned XPathFactory will understand. 

    Returns: true if XPathFactory supports objectModel, else false. 
*javax.xml.xpath.XPathFactory.newInstance()*

public static final |javax.xml.xpath.XPathFactory| newInstance()

Get a new XPathFactory instance using the default object model, 
(|javax.xml.xpath.XPathFactory|) , the W3C DOM. 

This method is functionally equivalent to: 

newInstance(DEFAULT_OBJECT_MODEL_URI) 

Since the implementation for the W3C DOM is always available, this method will 
never fail. 


    Returns: Instance of an XPathFactory. 
*javax.xml.xpath.XPathFactory.newInstance(String)*

public static final |javax.xml.xpath.XPathFactory| newInstance(java.lang.String uri)
  throws |javax.xml.xpath.XPathFactoryConfigurationException|
         
Get a new XPathFactory instance using the specified object model. 

To find a XPathFactory object, this method looks the following places in the 
following order where "the class loader" refers to the context class loader: 

If the system property (|javax.xml.xpath.XPathFactory|) + ":uri" is present, 
where uri is the parameter to this method, then its value is read as a class 
name. The method will try to create a new instance of this class by using the 
class loader, and returns it if it is successfully created. 

${java.home}/lib/jaxp.properties is read and the value associated with the key 
being the system property above is looked for. If present, the value is 
processed just like above. 

The class loader is asked for service provider provider-configuration files 
matching javax.xml.xpath.XPathFactory in the resource directory 
META-INF/services. See the JAR File Specification for file format and parsing 
rules. Each potential service provider is required to implement the method: 

(|javax.xml.xpath.XPathFactory|) 

The first service provider found in class loader order that supports the 
specified object model is returned. 

Platform default XPathFactory is located in a platform specific way. There must 
be a platform default XPathFactory for the W3C DOM, i.e. 
(|javax.xml.xpath.XPathFactory|) . 

If everything fails, an XPathFactoryConfigurationException will be thrown. 

Tip for Trouble-shooting: See (|java.util.Properties|) for exactly how a 
property file is parsed. In particular, colons ':' need to be escaped in a 
property file, so make sure the URIs are properly escaped in it. For example: 

http\://java.sun.com/jaxp/xpath/dom=org.acme.DomXPathFactory 

    uri - Identifies the underlying object model. The specification only defines the URI 
       {@link #DEFAULT_OBJECT_MODEL_URI}, http://java.sun.com/jaxp/xpath/dom 
       for the W3C DOM, the org.w3c.dom package, and implementations are free 
       to introduce other URIs for other object models. 

    Returns: Instance of an XPathFactory. 
*javax.xml.xpath.XPathFactory.newXPath()*

public abstract |javax.xml.xpath.XPath| newXPath()

Return a new XPath using the underlying object model determined when the 
XPathFactory was instantiated. 


    Returns: New instance of an XPath. 
*javax.xml.xpath.XPathFactory.setFeature(String,boolean)*

public abstract void setFeature(
  java.lang.String name,
  boolean value)
  throws |javax.xml.xpath.XPathFactoryConfigurationException|
         
Set a feature for this XPathFactory and XPaths created by this factory. 

Feature names are fully qualified (|java.net.URI|) s. Implementations may 
define their own features. An 
(|javax.xml.xpath.XPathFactoryConfigurationException|) is thrown if this 
XPathFactory or the XPaths it creates cannot support the feature. It is 
possible for an XPathFactory to expose a feature value but be unable to change 
its state. 



All implementations are required to support the (|javax.xml.XMLConstants|) 
feature. When the feature is true, any reference to an external function is an 
error. Under these conditions, the implementation must not call the 
(|javax.xml.xpath.XPathFunctionResolver|) and must throw an 
(|javax.xml.xpath.XPathFunctionException|) . 

    name - Feature name. 
    value - Is feature state true or false. 

*javax.xml.xpath.XPathFactory.setXPathFunctionResolver(XPathFunctionResolver)*

public abstract void setXPathFunctionResolver(javax.xml.xpath.XPathFunctionResolver resolver)

Establish a default function resolver. 

Any XPath objects constructed from this factory will use the specified resolver 
by default. 

A NullPointerException is thrown if resolver is null. 

    resolver - XPath function resolver. 

*javax.xml.xpath.XPathFactory.setXPathVariableResolver(XPathVariableResolver)*

public abstract void setXPathVariableResolver(javax.xml.xpath.XPathVariableResolver resolver)

Establish a default variable resolver. 

Any XPath objects constructed from this factory will use the specified resolver 
by default. 

A NullPointerException is thrown if resolver is null. 

    resolver - Variable resolver. 


