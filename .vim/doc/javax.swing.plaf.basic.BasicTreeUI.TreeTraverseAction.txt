*javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction* *BasicTreeUI.TreeTraverseAction* 

public class BasicTreeUI.TreeTraverseAction
  extends    |javax.swing.AbstractAction|

|javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction_Description|
|javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction_Fields|
|javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction_Constructors|
|javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction_Methods|

================================================================================

*javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction_Fields*
|int_javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction.direction|

*javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction_Constructors*
|javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction(int,String)|

*javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction_Methods*
|javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction.actionPerformed(ActionEvent)|
|javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction.isEnabled()|

*javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction_Description*

TreeTraverseAction is the action used for left/right keys. Will toggle the 
expandedness of a node, as well as potentially incrementing the selection. 


*int_javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction.direction*

TreeTraverseAction is the action used for left/right keys. Will toggle the 
expandedness of a node, as well as potentially incrementing the selection. 



*javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction(int,String)*

public BasicTreeUI.TreeTraverseAction(
  int direction,
  java.lang.String name)




*javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction.actionPerformed(ActionEvent)*

public void actionPerformed(java.awt.event.ActionEvent e)




*javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction.isEnabled()*

public boolean isEnabled()





