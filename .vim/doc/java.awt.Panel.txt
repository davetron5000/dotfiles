*java.awt.Panel* *Panel* Panel is the simplest container class.

public class Panel
  extends    |java.awt.Container|
  implements |javax.accessibility.Accessible|

|java.awt.Panel_Description|
|java.awt.Panel_Fields|
|java.awt.Panel_Constructors|
|java.awt.Panel_Methods|

====================================================================================================================================================================================

*java.awt.Panel_Constructors*
|java.awt.Panel()|Creates a new panel using the default layout manager.
|java.awt.Panel(LayoutManager)|Creates a new panel with the specified layout manager.

*java.awt.Panel_Methods*
|java.awt.Panel.addNotify()|Creates the Panel's peer.
|java.awt.Panel.getAccessibleContext()|Gets the AccessibleContext associated with this Panel.

*java.awt.Panel_Description*

Panel is the simplest container class. A panel provides space in which an application can attach any other component, including other panels. 

The default layout manager for a panel is the FlowLayout layout manager. 



*java.awt.Panel()*

public Panel()

Creates a new panel using the default layout manager. The default layout manager for all panels is the FlowLayout class. 


*java.awt.Panel(LayoutManager)*

public Panel(java.awt.LayoutManager layout)

Creates a new panel with the specified layout manager. 

    layout - the layout manager for this panel. 

*java.awt.Panel.addNotify()*

public void addNotify()

Creates the Panel's peer. The peer allows you to modify the appearance of the panel without changing its functionality. 



*java.awt.Panel.getAccessibleContext()*

public |javax.accessibility.AccessibleContext| getAccessibleContext()

Gets the AccessibleContext associated with this Panel. For panels, the AccessibleContext takes the form of an AccessibleAWTPanel. A new AccessibleAWTPanel instance is created if 
necessary. 



    Returns: an AccessibleAWTPanel that serves as the AccessibleContext of this Panel 


