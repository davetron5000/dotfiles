*java.lang.Boolean* *Boolean* The Boolean class wraps a value of the primitive t

public final class Boolean
  extends    |java.lang.Object|
  implements |java.io.Serializable|
             |java.lang.Comparable|

|java.lang.Boolean_Description|
|java.lang.Boolean_Fields|
|java.lang.Boolean_Constructors|
|java.lang.Boolean_Methods|

================================================================================

*java.lang.Boolean_Fields*
|java.lang.Boolean_java.lang.Boolean.FALSE|
|java.lang.Boolean_java.lang.Boolean.TRUE|
|java.lang.Class_java.lang.Boolean.TYPE|

*java.lang.Boolean_Constructors*
|java.lang.Boolean(boolean)|Allocates a Boolean object representing the   value
|java.lang.Boolean(String)|Allocates a Boolean object representing the value   

*java.lang.Boolean_Methods*
|java.lang.Boolean.booleanValue()|Returns the value of this Boolean object as a
|java.lang.Boolean.compareTo(Boolean)|Compares this Boolean instance with anoth
|java.lang.Boolean.equals(Object)|Returns true if and only if the argument is n
|java.lang.Boolean.getBoolean(String)|Returns true if and only if the system pr
|java.lang.Boolean.hashCode()|Returns a hash code for this Boolean object.
|java.lang.Boolean.parseBoolean(String)|Parses the string argument as a boolean
|java.lang.Boolean.toString()|Returns a String object representing this Boolean
|java.lang.Boolean.toString(boolean)|Returns a String object representing the s
|java.lang.Boolean.valueOf(boolean)|Returns a Boolean instance representing the
|java.lang.Boolean.valueOf(String)|Returns a Boolean with a value represented b

*java.lang.Boolean_Description*

The Boolean class wraps a value of the primitive type boolean in an object. An 
object of type Boolean contains a single field whose type is boolean. 

In addition, this class provides many methods for converting a boolean to a 
String and a String to a boolean, as well as other constants and methods useful 
when dealing with a boolean. 


*java.lang.Boolean_java.lang.Boolean.FALSE*

The Boolean class wraps a value of the primitive type boolean in an object. An 
object of type Boolean contains a single field whose type is boolean. 

In addition, this class provides many methods for converting a boolean to a 
String and a String to a boolean, as well as other constants and methods useful 
when dealing with a boolean. 


*java.lang.Boolean_java.lang.Boolean.TRUE*

The Boolean class wraps a value of the primitive type boolean in an object. An 
object of type Boolean contains a single field whose type is boolean. 

In addition, this class provides many methods for converting a boolean to a 
String and a String to a boolean, as well as other constants and methods useful 
when dealing with a boolean. 


*java.lang.Class_java.lang.Boolean.TYPE*

The Boolean class wraps a value of the primitive type boolean in an object. An 
object of type Boolean contains a single field whose type is boolean. 

In addition, this class provides many methods for converting a boolean to a 
String and a String to a boolean, as well as other constants and methods useful 
when dealing with a boolean. 



*java.lang.Boolean(boolean)*

public Boolean(boolean value)

Allocates a Boolean object representing the value argument. 

Note: It is rarely appropriate to use this constructor. Unless a new instance 
is required, the static factory (|java.lang.Boolean|) is generally a better 
choice. It is likely to yield significantly better space and time performance. 

    value - the value of the Boolean. 

*java.lang.Boolean(String)*

public Boolean(java.lang.String s)

Allocates a Boolean object representing the value true if the string argument 
is not null and is equal, ignoring case, to the string "true". Otherwise, 
allocate a Boolean object representing the value false. Examples: 
newBoolean("True") produces a Boolean object that represents true. 
newBoolean("yes") produces a Boolean object that represents false. 

    s - the string to be converted to a Boolean. 

*java.lang.Boolean.booleanValue()*

public boolean booleanValue()

Returns the value of this Boolean object as a boolean primitive. 


    Returns: the primitive boolean value of this object. 
*java.lang.Boolean.compareTo(Boolean)*

public int compareTo(java.lang.Boolean b)

Compares this Boolean instance with another. 

    b - the Boolean instance to be compared 

    Returns: zero if this object represents the same boolean value as the argument; a 
             positive value if this object represents true and the argument 
             represents false; and a negative value if this object represents 
             false and the argument represents true 
*java.lang.Boolean.equals(Object)*

public boolean equals(java.lang.Object obj)

Returns true if and only if the argument is not null and is a Boolean object 
that represents the same boolean value as this object. 

    obj - the object to compare with. 

    Returns: true if the Boolean objects represent the same value; false otherwise. 
*java.lang.Boolean.getBoolean(String)*

public static boolean getBoolean(java.lang.String name)

Returns true if and only if the system property named by the argument exists 
and is equal to the string "true". (Beginning with version 1.0.2 of the JavaTM 
platform, the test of this string is case insensitive.) A system property is 
accessible through getProperty, a method defined by the System class. 

If there is no property with the specified name, or if the specified name is 
empty or null, then false is returned. 

    name - the system property name. 

    Returns: the boolean value of the system property. 
*java.lang.Boolean.hashCode()*

public int hashCode()

Returns a hash code for this Boolean object. 


    Returns: the integer 1231 if this object represents true; returns the integer 1237 if 
             this object represents false. 
*java.lang.Boolean.parseBoolean(String)*

public static boolean parseBoolean(java.lang.String s)

Parses the string argument as a boolean. The boolean returned represents the 
value true if the string argument is not null and is equal, ignoring case, to 
the string "true". 

    s - the String containing the boolean representation to be parsed 

    Returns: the boolean represented by the string argument 
*java.lang.Boolean.toString()*

public |java.lang.String| toString()

Returns a String object representing this Boolean's value. If this object 
represents the value true, a string equal to "true" is returned. Otherwise, a 
string equal to "false" is returned. 


    Returns: a string representation of this object. 
*java.lang.Boolean.toString(boolean)*

public static |java.lang.String| toString(boolean b)

Returns a String object representing the specified boolean. If the specified 
boolean is true, then the string "true" will be returned, otherwise the string 
"false" will be returned. 

    b - the boolean to be converted 

    Returns: the string representation of the specified boolean 
*java.lang.Boolean.valueOf(boolean)*

public static |java.lang.Boolean| valueOf(boolean b)

Returns a Boolean instance representing the specified boolean value. If the 
specified boolean value is true, this method returns Boolean.TRUE; if it is 
false, this method returns Boolean.FALSE. If a new Boolean instance is not 
required, this method should generally be used in preference to the constructor 
(|java.lang.Boolean|) , as this method is likely to yield significantly better 
space and time performance. 

    b - a boolean value. 

    Returns: a Boolean instance representing b. 
*java.lang.Boolean.valueOf(String)*

public static |java.lang.Boolean| valueOf(java.lang.String s)

Returns a Boolean with a value represented by the specified String. The Boolean 
returned represents the value true if the string argument is not null and is 
equal, ignoring case, to the string "true". Example: Boolean.valueOf("True") 
returns true. Example: Boolean.valueOf("yes") returns false. 

    s - a string. 

    Returns: the Boolean value represented by the string. 

