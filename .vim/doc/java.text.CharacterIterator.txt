*java.text.CharacterIterator* *CharacterIterator* This interface defines a protocol for bidirectional iteration over text.

public interface interface CharacterIterator

  implements |java.lang.Cloneable|

|java.text.CharacterIterator_Description|
|java.text.CharacterIterator_Fields|
|java.text.CharacterIterator_Constructors|
|java.text.CharacterIterator_Methods|

====================================================================================================================================================================================

*java.text.CharacterIterator_Fields*
|char_java.text.CharacterIterator.DONE|

*java.text.CharacterIterator_Methods*
|java.text.CharacterIterator.clone()|Create a copy of this iterator
|java.text.CharacterIterator.current()|Gets the character at the current position (as returned by getIndex()).
|java.text.CharacterIterator.first()|Sets the position to getBeginIndex() and returns the character at that  position.
|java.text.CharacterIterator.getBeginIndex()|Returns the start index of the text.
|java.text.CharacterIterator.getEndIndex()|Returns the end index of the text.
|java.text.CharacterIterator.getIndex()|Returns the current index.
|java.text.CharacterIterator.last()|Sets the position to getEndIndex()-1 (getEndIndex() if the text is empty)  and returns the character at that position.
|java.text.CharacterIterator.next()|Increments the iterator's index by one and returns the character  at the new index.
|java.text.CharacterIterator.previous()|Decrements the iterator's index by one and returns the character  at the new index.
|java.text.CharacterIterator.setIndex(int)|Sets the position to the specified position in the text and returns that  character.

*java.text.CharacterIterator_Description*

This interface defines a protocol for bidirectional iteration over text. The iterator iterates over a bounded sequence of characters. Characters are indexed with values beginning 
with the value returned by getBeginIndex() and continuing through the value returned by getEndIndex()-1. 

Iterators maintain a current character index, whose valid range is from getBeginIndex() to getEndIndex(); the value getEndIndex() is included to allow handling of zero-length text 
ranges and for historical reasons. The current index can be retrieved by calling getIndex() and set directly by calling setIndex(), first(), and last(). 

The methods previous() and next() are used for iteration. They return DONE if they would move outside the range from getBeginIndex() to getEndIndex() -1, signaling that the 
iterator has reached the end of the sequence. DONE is also returned by other methods to indicate that the current index is outside this range. 

Examples: 

Traverse the text from start to finish 

public void traverseForward(CharacterIterator iter) { for(char c = iter.first(); c != CharacterIterator.DONE; c = iter.next()) { processChar(c); } } 

Traverse the text backwards, from end to start 

public void traverseBackward(CharacterIterator iter) { for(char c = iter.last(); c != CharacterIterator.DONE; c = iter.previous()) { processChar(c); } } 

Traverse both forward and backward from a given position in the text. Calls to notBoundary() in this example represents some additional stopping criteria. 

public void traverseOut(CharacterIterator iter, int pos) { for (char c = iter.setIndex(pos); c != CharacterIterator.DONE notBoundary(c); c = iter.next()) { } int end = 
iter.getIndex(); for (char c = iter.setIndex(pos); c != CharacterIterator.DONE notBoundary(c); c = iter.previous()) { } int start = iter.getIndex(); processSection(start, end); } 



*char_java.text.CharacterIterator.DONE*

Constant that is returned when the iterator has reached either the end or the beginning of the text. The value is '\\uFFFF', the "not a character" value which should not occur in 
any valid Unicode string. 



*java.text.CharacterIterator.clone()*

public |java.lang.Object| clone()

Create a copy of this iterator 



    Returns: A copy of this 

*java.text.CharacterIterator.current()*

public char current()

Gets the character at the current position (as returned by getIndex()). 



    Returns: the character at the current position or DONE if the current position is off the end of the text. 

*java.text.CharacterIterator.first()*

public char first()

Sets the position to getBeginIndex() and returns the character at that position. 



    Returns: the first character in the text, or DONE if the text is empty 

*java.text.CharacterIterator.getBeginIndex()*

public int getBeginIndex()

Returns the start index of the text. 



    Returns: the index at which the text begins. 

*java.text.CharacterIterator.getEndIndex()*

public int getEndIndex()

Returns the end index of the text. This index is the index of the first character following the end of the text. 



    Returns: the index after the last character in the text 

*java.text.CharacterIterator.getIndex()*

public int getIndex()

Returns the current index. 



    Returns: the current index. 

*java.text.CharacterIterator.last()*

public char last()

Sets the position to getEndIndex()-1 (getEndIndex() if the text is empty) and returns the character at that position. 



    Returns: the last character in the text, or DONE if the text is empty 

*java.text.CharacterIterator.next()*

public char next()

Increments the iterator's index by one and returns the character at the new index. If the resulting index is greater or equal to getEndIndex(), the current index is reset to 
getEndIndex() and a value of DONE is returned. 



    Returns: the character at the new position or DONE if the new position is off the end of the text range. 

*java.text.CharacterIterator.previous()*

public char previous()

Decrements the iterator's index by one and returns the character at the new index. If the current index is getBeginIndex(), the index remains at getBeginIndex() and a value of 
DONE is returned. 



    Returns: the character at the new position or DONE if the current position is equal to getBeginIndex(). 

*java.text.CharacterIterator.setIndex(int)*

public char setIndex(int position)

Sets the position to the specified position in the text and returns that character. 


    position - the position within the text. Valid values range from getBeginIndex() to getEndIndex(). An IllegalArgumentException is thrown if an invalid value is supplied. 

    Returns: the character at the specified position or DONE if the specified position is equal to getEndIndex() 


