*javax.swing.colorchooser.DefaultColorSelectionModel* *DefaultColorSelectionModel* 

public class DefaultColorSelectionModel
  extends    |java.lang.Object|
  implements |javax.swing.colorchooser.ColorSelectionModel|
             |java.io.Serializable|

|javax.swing.colorchooser.DefaultColorSelectionModel_Description|
|javax.swing.colorchooser.DefaultColorSelectionModel_Fields|
|javax.swing.colorchooser.DefaultColorSelectionModel_Constructors|
|javax.swing.colorchooser.DefaultColorSelectionModel_Methods|

================================================================================

*javax.swing.colorchooser.DefaultColorSelectionModel_Fields*
|javax.swing.event.ChangeEvent_javax.swing.colorchooser.DefaultColorSelectionModel.changeEvent|
|javax.swing.event.EventListenerList_javax.swing.colorchooser.DefaultColorSelectionModel.listenerList|

*javax.swing.colorchooser.DefaultColorSelectionModel_Constructors*
|javax.swing.colorchooser.DefaultColorSelectionModel()|Creates a DefaultColorSe
|javax.swing.colorchooser.DefaultColorSelectionModel(Color)|Creates a DefaultCo

*javax.swing.colorchooser.DefaultColorSelectionModel_Methods*
|javax.swing.colorchooser.DefaultColorSelectionModel.addChangeListener(ChangeListener)|
|javax.swing.colorchooser.DefaultColorSelectionModel.fireStateChanged()|Runs ea
|javax.swing.colorchooser.DefaultColorSelectionModel.getChangeListeners()|Retur
|javax.swing.colorchooser.DefaultColorSelectionModel.getSelectedColor()|Returns
|javax.swing.colorchooser.DefaultColorSelectionModel.removeChangeListener(ChangeListener)|
|javax.swing.colorchooser.DefaultColorSelectionModel.setSelectedColor(Color)|Se

*javax.swing.colorchooser.DefaultColorSelectionModel_Description*

A generic implementation of ColorSelectionModel. 


*javax.swing.event.ChangeEvent_javax.swing.colorchooser.DefaultColorSelectionModel.changeEvent*

A generic implementation of ColorSelectionModel. 


*javax.swing.event.EventListenerList_javax.swing.colorchooser.DefaultColorSelectionModel.listenerList*

A generic implementation of ColorSelectionModel. 



*javax.swing.colorchooser.DefaultColorSelectionModel()*

public DefaultColorSelectionModel()

Creates a DefaultColorSelectionModel with the current color set to Color.white. 
This is the default constructor. 


*javax.swing.colorchooser.DefaultColorSelectionModel(Color)*

public DefaultColorSelectionModel(java.awt.Color color)

Creates a DefaultColorSelectionModel with the current color set to color, which 
should be non-null. Note that setting the color to null is undefined and may 
have unpredictable results. 

    color - the new Color 

*javax.swing.colorchooser.DefaultColorSelectionModel.addChangeListener(ChangeListener)*

public void addChangeListener(javax.swing.event.ChangeListener l)

Adds a ChangeListener to the model. 

    l - the ChangeListener to be added 

*javax.swing.colorchooser.DefaultColorSelectionModel.fireStateChanged()*

protected void fireStateChanged()

Runs each ChangeListener's stateChanged method. 




*javax.swing.colorchooser.DefaultColorSelectionModel.getChangeListeners()*

public |javax.swing.event.ChangeListener| getChangeListeners()

Returns an array of all the ChangeListeners added to this 
DefaultColorSelectionModel with addChangeListener. 


    Returns: all of the ChangeListeners added, or an empty array if no listeners have been 
             added 
*javax.swing.colorchooser.DefaultColorSelectionModel.getSelectedColor()*

public |java.awt.Color| getSelectedColor()

Returns the selected Color which should be non-null. 


    Returns: the selected Color 
*javax.swing.colorchooser.DefaultColorSelectionModel.removeChangeListener(ChangeListener)*

public void removeChangeListener(javax.swing.event.ChangeListener l)

Removes a ChangeListener from the model. 

    l - the ChangeListener to be removed 

*javax.swing.colorchooser.DefaultColorSelectionModel.setSelectedColor(Color)*

public void setSelectedColor(java.awt.Color color)

Sets the selected color to color. Note that setting the color to null is 
undefined and may have unpredictable results. This method fires a state changed 
event if it sets the current color to a new non-null color; if the new color is 
the same as the current color, no event is fired. 

    color - the new Color 


