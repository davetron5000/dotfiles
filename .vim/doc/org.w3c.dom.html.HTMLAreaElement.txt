*org.w3c.dom.html.HTMLAreaElement* *HTMLAreaElement* Client-side image map area 

public interface interface HTMLAreaElement

  implements |org.w3c.dom.html.HTMLElement|

|org.w3c.dom.html.HTMLAreaElement_Description|
|org.w3c.dom.html.HTMLAreaElement_Fields|
|org.w3c.dom.html.HTMLAreaElement_Constructors|
|org.w3c.dom.html.HTMLAreaElement_Methods|

================================================================================

*org.w3c.dom.html.HTMLAreaElement_Methods*
|org.w3c.dom.html.HTMLAreaElement.getAccessKey()|A single character access key 
|org.w3c.dom.html.HTMLAreaElement.getAlt()|Alternate text for user agents not r
|org.w3c.dom.html.HTMLAreaElement.getCoords()|Comma-separated list of lengths, 
|org.w3c.dom.html.HTMLAreaElement.getHref()|The URI of the linked resource.
|org.w3c.dom.html.HTMLAreaElement.getNoHref()|Specifies that this area is inact
|org.w3c.dom.html.HTMLAreaElement.getShape()|The shape of the active area.
|org.w3c.dom.html.HTMLAreaElement.getTabIndex()|Index that represents the eleme
|org.w3c.dom.html.HTMLAreaElement.getTarget()|Frame to render the resource in.
|org.w3c.dom.html.HTMLAreaElement.setAccessKey(String)|
|org.w3c.dom.html.HTMLAreaElement.setAlt(String)|
|org.w3c.dom.html.HTMLAreaElement.setCoords(String)|
|org.w3c.dom.html.HTMLAreaElement.setHref(String)|
|org.w3c.dom.html.HTMLAreaElement.setNoHref(boolean)|
|org.w3c.dom.html.HTMLAreaElement.setShape(String)|
|org.w3c.dom.html.HTMLAreaElement.setTabIndex(int)|
|org.w3c.dom.html.HTMLAreaElement.setTarget(String)|

*org.w3c.dom.html.HTMLAreaElement_Description*

Client-side image map area definition. See the AREA element definition in HTML 
4.0. See also the Document Object Model (DOM) Level 2 Specification. 


*org.w3c.dom.html.HTMLAreaElement.getAccessKey()*

public |java.lang.String| getAccessKey()

A single character access key to give access to the form control. See the 
accesskey attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLAreaElement.getAlt()*

public |java.lang.String| getAlt()

Alternate text for user agents not rendering the normal content of this 
element. See the alt attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLAreaElement.getCoords()*

public |java.lang.String| getCoords()

Comma-separated list of lengths, defining an active region geometry. See also 
shape for the shape of the region. See the coords attribute definition in HTML 
4.0. 


*org.w3c.dom.html.HTMLAreaElement.getHref()*

public |java.lang.String| getHref()

The URI of the linked resource. See the href attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLAreaElement.getNoHref()*

public boolean getNoHref()

Specifies that this area is inactive, i.e., has no associated action. See the 
nohref attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLAreaElement.getShape()*

public |java.lang.String| getShape()

The shape of the active area. The coordinates are given by coords . See the 
shape attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLAreaElement.getTabIndex()*

public int getTabIndex()

Index that represents the element's position in the tabbing order. See the 
tabindex attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLAreaElement.getTarget()*

public |java.lang.String| getTarget()

Frame to render the resource in. See the target attribute definition in HTML 
4.0. 


*org.w3c.dom.html.HTMLAreaElement.setAccessKey(String)*

public void setAccessKey(java.lang.String accessKey)




*org.w3c.dom.html.HTMLAreaElement.setAlt(String)*

public void setAlt(java.lang.String alt)




*org.w3c.dom.html.HTMLAreaElement.setCoords(String)*

public void setCoords(java.lang.String coords)




*org.w3c.dom.html.HTMLAreaElement.setHref(String)*

public void setHref(java.lang.String href)




*org.w3c.dom.html.HTMLAreaElement.setNoHref(boolean)*

public void setNoHref(boolean noHref)




*org.w3c.dom.html.HTMLAreaElement.setShape(String)*

public void setShape(java.lang.String shape)




*org.w3c.dom.html.HTMLAreaElement.setTabIndex(int)*

public void setTabIndex(int tabIndex)




*org.w3c.dom.html.HTMLAreaElement.setTarget(String)*

public void setTarget(java.lang.String target)





