*javax.swing.Popup* *Popup* Popups are used to display a Component to the user, typically
 on top of all the other Components in a particular containment
 hierarchy.

public class Popup
  extends    |java.lang.Object|

|javax.swing.Popup_Description|
|javax.swing.Popup_Fields|
|javax.swing.Popup_Constructors|
|javax.swing.Popup_Methods|

====================================================================================================================================================================================

*javax.swing.Popup_Constructors*
|javax.swing.Popup()|Creates a Popup.
|javax.swing.Popup(Component,Component,int,int)|Creates a Popup for the Component owner  containing the Component contents.

*javax.swing.Popup_Methods*
|javax.swing.Popup.hide()|Hides and disposes of the Popup.
|javax.swing.Popup.show()|Makes the Popup visible.

*javax.swing.Popup_Description*

Popups are used to display a Component to the user, typically on top of all the other Components in a particular containment hierarchy. Popups have a very small life cycle. Once 
you have obtained a Popup, and hidden it (invoked the hide method), you should no longer invoke any methods on it. This allows the PopupFactory to cache Popups for later use. 

The general contract is that if you need to change the size of the Component, or location of the Popup, you should obtain a new Popup. 

Popup does not descend from Component, rather implementations of Popup are responsible for creating and maintaining their own Components to render the requested Component to the 
user. 

You typically do not explicitly create an instance of Popup, instead obtain one from a PopupFactory. 



*javax.swing.Popup()*

protected Popup()

Creates a Popup. This is provided for subclasses. 


*javax.swing.Popup(Component,Component,int,int)*

protected Popup(
  java.awt.Component owner,
  java.awt.Component contents,
  int x,
  int y)

Creates a Popup for the Component owner containing the Component contents. owner is used to determine which Window the new Popup will parent the Component the Popup creates to. A 
null owner implies there is no valid parent. x and y specify the preferred initial location to place the Popup at. Based on screen size, or other paramaters, the Popup may not 
display at x and y. 

    owner - Component mouse coordinates are relative to, may be null 
    contents - Contents of the Popup 
    x - Initial x screen coordinate 
    y - Initial y screen coordinate 

*javax.swing.Popup.hide()*

public void hide()

Hides and disposes of the Popup. Once a Popup has been disposed you should no longer invoke methods on it. A disposed Popup may be reclaimed and later used based on the 
PopupFactory. As such, if you invoke methods on a disposed Popup, indeterminate behavior will result. 



*javax.swing.Popup.show()*

public void show()

Makes the Popup visible. If the Popup is currently visible, this has no effect. 




