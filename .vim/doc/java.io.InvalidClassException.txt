*java.io.InvalidClassException* *InvalidClassException* Thrown when the Serialization runtime detects one of the following
 problems with a Class.

public class InvalidClassException
  extends    |java.io.ObjectStreamException|

|java.io.InvalidClassException_Description|
|java.io.InvalidClassException_Fields|
|java.io.InvalidClassException_Constructors|
|java.io.InvalidClassException_Methods|

====================================================================================================================================================================================

*java.io.InvalidClassException_Fields*
|java.lang.String_java.io.InvalidClassException.classname|

*java.io.InvalidClassException_Constructors*
|java.io.InvalidClassException(String)|Report a InvalidClassException for the reason specified.
|java.io.InvalidClassException(String,String)|Constructs an InvalidClassException object.

*java.io.InvalidClassException_Methods*
|java.io.InvalidClassException.getMessage()|Produce the message and include the classname, if present.

*java.io.InvalidClassException_Description*

Thrown when the Serialization runtime detects one of the following problems with a Class. 

The serial version of the class does not match that of the class descriptor read from the stream The class contains unknown datatypes The class does not have an accessible no-arg 
constructor 



*java.lang.String_java.io.InvalidClassException.classname*

Name of the invalid class. 



*java.io.InvalidClassException(String)*

public InvalidClassException(java.lang.String reason)

Report a InvalidClassException for the reason specified. 

    reason - String describing the reason for the exception. 

*java.io.InvalidClassException(String,String)*

public InvalidClassException(
  java.lang.String cname,
  java.lang.String reason)

Constructs an InvalidClassException object. 

    cname - a String naming the invalid class. 
    reason - a String describing the reason for the exception. 

*java.io.InvalidClassException.getMessage()*

public |java.lang.String| getMessage()

Produce the message and include the classname, if present. 




