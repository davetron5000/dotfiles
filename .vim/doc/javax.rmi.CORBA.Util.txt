*javax.rmi.CORBA.Util* *Util* Provides utility methods that can be used by stubs

public class Util
  extends    |java.lang.Object|

|javax.rmi.CORBA.Util_Description|
|javax.rmi.CORBA.Util_Fields|
|javax.rmi.CORBA.Util_Constructors|
|javax.rmi.CORBA.Util_Methods|

================================================================================

*javax.rmi.CORBA.Util_Methods*
|javax.rmi.CORBA.Util.copyObject(Object,ORB)|Copies or connects an object.
|javax.rmi.CORBA.Util.copyObjects(Object[],ORB)|Copies or connects an array of 
|javax.rmi.CORBA.Util.createValueHandler()|Returns a singleton instance of a cl
|javax.rmi.CORBA.Util.getCodebase(Class)|Returns the codebase, if any, for the 
|javax.rmi.CORBA.Util.getTie(Remote)|Returns the tie (if any) for a given targe
|javax.rmi.CORBA.Util.isLocal(Stub)|The isLocal method has the same semantics a
|javax.rmi.CORBA.Util.loadClass(String,String,ClassLoader)|Returns a class inst
|javax.rmi.CORBA.Util.mapSystemException(SystemException)|Maps a SystemExceptio
|javax.rmi.CORBA.Util.readAny(InputStream)|Reads a java.lang.Object as a CORBA 
|javax.rmi.CORBA.Util.registerTarget(Tie,Remote)|Registers a target for a tie.
|javax.rmi.CORBA.Util.unexportObject(Remote)|Removes the associated tie from an
|javax.rmi.CORBA.Util.wrapException(Throwable)|Wraps an exception thrown by an 
|javax.rmi.CORBA.Util.writeAbstractObject(OutputStream,Object)|Writes a java.la
|javax.rmi.CORBA.Util.writeAny(OutputStream,Object)|Writes any java.lang.Object
|javax.rmi.CORBA.Util.writeRemoteObject(OutputStream,Object)|Writes a java.lang

*javax.rmi.CORBA.Util_Description*

Provides utility methods that can be used by stubs and ties to perform common 
operations. 


*javax.rmi.CORBA.Util.copyObject(Object,ORB)*

public static |java.lang.Object| copyObject(
  java.lang.Object obj,
  org.omg.CORBA.ORB orb)
  throws |java.rmi.RemoteException|
         
Copies or connects an object. Used by local stubs to copy an actual parameter, 
result object, or exception. 

    obj - the object to copy. 
    orb - the ORB. 

    Returns: the copy or connected object. 
*javax.rmi.CORBA.Util.copyObjects(Object[],ORB)*

public static |java.lang.Object| copyObjects(
  java.lang.Object[] obj,
  org.omg.CORBA.ORB orb)
  throws |java.rmi.RemoteException|
         
Copies or connects an array of objects. Used by local stubs to copy any number 
of actual parameters, preserving sharing across parameters as necessary to 
support RMI semantics. 

    obj - the objects to copy or connect. 
    orb - the ORB. 

    Returns: the copied or connected objects. 
*javax.rmi.CORBA.Util.createValueHandler()*

public static |javax.rmi.CORBA.ValueHandler| createValueHandler()

Returns a singleton instance of a class that implements the 
(|javax.rmi.CORBA.ValueHandler|) interface. 


    Returns: a class which implements the ValueHandler interface. 
*javax.rmi.CORBA.Util.getCodebase(Class)*

public static |java.lang.String| getCodebase(java.lang.Class clz)

Returns the codebase, if any, for the given class. 

    clz - the class to get a codebase for. 

    Returns: a space-separated list of URLs, or null. 
*javax.rmi.CORBA.Util.getTie(Remote)*

public static |javax.rmi.CORBA.Tie| getTie(java.rmi.Remote target)

Returns the tie (if any) for a given target object. 


    Returns: the tie or null if no tie is registered for the given target. 
*javax.rmi.CORBA.Util.isLocal(Stub)*

public static boolean isLocal(javax.rmi.CORBA.Stub stub)
  throws |java.rmi.RemoteException|
         
The isLocal method has the same semantics as the ObjectImpl._is_local method, 
except that it can throw a RemoteException. 

The _is_local() method is provided so that stubs may determine if a particular 
object is implemented by a local servant and hence local invocation APIs may be 
used. 

    stub - the stub to test. 

    Returns: The _is_local() method returns true if the servant incarnating the object is 
             located in the same process as the stub and they both share the 
             same ORB instance. The _is_local() method returns false otherwise. 
             The default behavior of _is_local() is to return false. 
*javax.rmi.CORBA.Util.loadClass(String,String,ClassLoader)*

public static |java.lang.Class| loadClass(
  java.lang.String className,
  java.lang.String remoteCodebase,
  java.lang.ClassLoader loader)
  throws |java.lang.ClassNotFoundException|
         
Returns a class instance for the specified class. The spec for this method is 
the "Java to IDL language mapping", ptc/00-01-06. In Java 2 Platform, this 
method works as follows: Find the first non-null ClassLoader on the call stack 
and attempt to load the class using this ClassLoader. If the first step fails, 
and if remoteCodebase is non-null and useCodebaseOnly is false, then call 
java.rmi.server.RMIClassLoader.loadClass(remoteCodebase, className). If 
remoteCodebase is null or useCodebaseOnly is true, then call 
java.rmi.server.RMIClassLoader.loadClass(className). If a class was not 
successfully loaded by step 1, 2, or 3, and loader is non-null, then call 
loader.loadClass(className). If a class was successfully loaded by step 1, 2, 
3, or 4, then return the loaded class, else throw ClassNotFoundException. 

    className - the name of the class. 
    remoteCodebase - a space-separated list of URLs at which the class might be found. May be null. 
    loader - a ClassLoader that may be used to load the class if all other methods fail. 

    Returns: the Class object representing the loaded class. 
*javax.rmi.CORBA.Util.mapSystemException(SystemException)*

public static |java.rmi.RemoteException| mapSystemException(org.omg.CORBA.SystemException ex)

Maps a SystemException to a RemoteException. 

    ex - the SystemException to map. 

    Returns: the mapped exception. 
*javax.rmi.CORBA.Util.readAny(InputStream)*

public static |java.lang.Object| readAny(org.omg.CORBA.portable.InputStream in)

Reads a java.lang.Object as a CORBA any. 

    in - the stream from which to read the any. 

    Returns: the object read from the stream. 
*javax.rmi.CORBA.Util.registerTarget(Tie,Remote)*

public static void registerTarget(
  javax.rmi.CORBA.Tie tie,
  java.rmi.Remote target)

Registers a target for a tie. Adds the tie to an internal table and calls 
(|javax.rmi.CORBA.Tie|) on the tie object. 

    tie - the tie to register. 
    target - the target for the tie. 

*javax.rmi.CORBA.Util.unexportObject(Remote)*

public static void unexportObject(java.rmi.Remote target)
  throws |java.rmi.NoSuchObjectException|
         
Removes the associated tie from an internal table and calls 
(|javax.rmi.CORBA.Tie|) to deactivate the object. 

    target - the object to unexport. 

*javax.rmi.CORBA.Util.wrapException(Throwable)*

public static |java.rmi.RemoteException| wrapException(java.lang.Throwable orig)

Wraps an exception thrown by an implementation method. It returns the 
corresponding client-side exception. 

    orig - the exception to wrap. 

    Returns: the wrapped exception. 
*javax.rmi.CORBA.Util.writeAbstractObject(OutputStream,Object)*

public static void writeAbstractObject(
  org.omg.CORBA.portable.OutputStream out,
  java.lang.Object obj)

Writes a java.lang.Object as either a value or a CORBA Object. If obj is a 
value object or a stub object, it is written to 
out.write_abstract_interface(java.lang.Object). If obj is an exported RMI-IIOP 
server object, the tie is found and wired to obj, then written to 
out.write_abstract_interface(java.lang.Object). 

    out - the stream in which to write the object. 
    obj - the object to write. 

*javax.rmi.CORBA.Util.writeAny(OutputStream,Object)*

public static void writeAny(
  org.omg.CORBA.portable.OutputStream out,
  java.lang.Object obj)

Writes any java.lang.Object as a CORBA any. 

    out - the stream in which to write the any. 
    obj - the object to write as an any. 

*javax.rmi.CORBA.Util.writeRemoteObject(OutputStream,Object)*

public static void writeRemoteObject(
  org.omg.CORBA.portable.OutputStream out,
  java.lang.Object obj)

Writes a java.lang.Object as a CORBA Object. If obj is an exported RMI-IIOP 
server object, the tie is found and wired to obj, then written to 
out.write_Object(org.omg.CORBA.Object). If obj is a CORBA Object, it is written 
to out.write_Object(org.omg.CORBA.Object). 

    out - the stream in which to write the object. 
    obj - the object to write. 


