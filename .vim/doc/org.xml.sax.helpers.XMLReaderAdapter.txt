*org.xml.sax.helpers.XMLReaderAdapter* *XMLReaderAdapter* Adapt a SAX2 XMLReader

public class XMLReaderAdapter
  extends    |java.lang.Object|
  implements |org.xml.sax.Parser|
             |org.xml.sax.ContentHandler|

|org.xml.sax.helpers.XMLReaderAdapter_Description|
|org.xml.sax.helpers.XMLReaderAdapter_Fields|
|org.xml.sax.helpers.XMLReaderAdapter_Constructors|
|org.xml.sax.helpers.XMLReaderAdapter_Methods|

================================================================================

*org.xml.sax.helpers.XMLReaderAdapter_Constructors*
|org.xml.sax.helpers.XMLReaderAdapter()|Create a new adapter.
|org.xml.sax.helpers.XMLReaderAdapter(XMLReader)|Create a new adapter.

*org.xml.sax.helpers.XMLReaderAdapter_Methods*
|org.xml.sax.helpers.XMLReaderAdapter.characters(char[],int,int)|Adapt a SAX2 c
|org.xml.sax.helpers.XMLReaderAdapter.endDocument()|End document event.
|org.xml.sax.helpers.XMLReaderAdapter.endElement(String,String,String)|Adapt a 
|org.xml.sax.helpers.XMLReaderAdapter.endPrefixMapping(String)|Adapt a SAX2 end
|org.xml.sax.helpers.XMLReaderAdapter.ignorableWhitespace(char[],int,int)|Adapt
|org.xml.sax.helpers.XMLReaderAdapter.parse(InputSource)|Parse the document.
|org.xml.sax.helpers.XMLReaderAdapter.parse(String)|Parse the document.
|org.xml.sax.helpers.XMLReaderAdapter.processingInstruction(String,String)|Adap
|org.xml.sax.helpers.XMLReaderAdapter.setDocumentHandler(DocumentHandler)|Regis
|org.xml.sax.helpers.XMLReaderAdapter.setDocumentLocator(Locator)|Set a documen
|org.xml.sax.helpers.XMLReaderAdapter.setDTDHandler(DTDHandler)|Register the DT
|org.xml.sax.helpers.XMLReaderAdapter.setEntityResolver(EntityResolver)|Registe
|org.xml.sax.helpers.XMLReaderAdapter.setErrorHandler(ErrorHandler)|Register th
|org.xml.sax.helpers.XMLReaderAdapter.setLocale(Locale)|Set the locale for erro
|org.xml.sax.helpers.XMLReaderAdapter.skippedEntity(String)|Adapt a SAX2 skippe
|org.xml.sax.helpers.XMLReaderAdapter.startDocument()|Start document event.
|org.xml.sax.helpers.XMLReaderAdapter.startElement(String,String,String,Attributes)|
|org.xml.sax.helpers.XMLReaderAdapter.startPrefixMapping(String,String)|Adapt a

*org.xml.sax.helpers.XMLReaderAdapter_Description*

Adapt a SAX2 XMLReader as a SAX1 Parser. 

This module, both source code and documentation, is in the Public Domain, and 
comes with NO WARRANTY. See http://www.saxproject.org for further information. 

This class wraps a SAX2 XMLReader(|org.xml.sax.XMLReader|) and makes it act as 
a SAX1 Parser(|org.xml.sax.Parser|) . The XMLReader must support a true value 
for the http://xml.org/sax/features/namespace-prefixes property or parsing will 
fail with a SAXException(|org.xml.sax.SAXException|) ; if the XMLReader 
supports a false value for the http://xml.org/sax/features/namespaces property, 
that will also be used to improve efficiency. 


*org.xml.sax.helpers.XMLReaderAdapter()*

public XMLReaderAdapter()
  throws |org.xml.sax.SAXException|
         
Create a new adapter. 

Use the "org.xml.sax.driver" property to locate the SAX2 driver to embed. 


*org.xml.sax.helpers.XMLReaderAdapter(XMLReader)*

public XMLReaderAdapter(org.xml.sax.XMLReader xmlReader)

Create a new adapter. 

Create a new adapter, wrapped around a SAX2 XMLReader. The adapter will make 
the XMLReader act like a SAX1 Parser. 

    xmlReader - The SAX2 XMLReader to wrap. 

*org.xml.sax.helpers.XMLReaderAdapter.characters(char[],int,int)*

public void characters(
  char[] ch,
  int start,
  int length)
  throws |org.xml.sax.SAXException|
         
Adapt a SAX2 characters event. 

    ch - An array of characters. 
    start - The starting position in the array. 
    length - The number of characters to use. 

*org.xml.sax.helpers.XMLReaderAdapter.endDocument()*

public void endDocument()
  throws |org.xml.sax.SAXException|
         
End document event. 


*org.xml.sax.helpers.XMLReaderAdapter.endElement(String,String,String)*

public void endElement(
  java.lang.String uri,
  java.lang.String localName,
  java.lang.String qName)
  throws |org.xml.sax.SAXException|
         
Adapt a SAX2 end element event. 

    uri - The Namespace URI. 
    localName - The Namespace local name. 
    qName - The qualified (prefixed) name. 

*org.xml.sax.helpers.XMLReaderAdapter.endPrefixMapping(String)*

public void endPrefixMapping(java.lang.String prefix)

Adapt a SAX2 end prefix mapping event. 

    prefix - The prefix being mapped. 

*org.xml.sax.helpers.XMLReaderAdapter.ignorableWhitespace(char[],int,int)*

public void ignorableWhitespace(
  char[] ch,
  int start,
  int length)
  throws |org.xml.sax.SAXException|
         
Adapt a SAX2 ignorable whitespace event. 

    ch - An array of characters. 
    start - The starting position in the array. 
    length - The number of characters to use. 

*org.xml.sax.helpers.XMLReaderAdapter.parse(InputSource)*

public void parse(org.xml.sax.InputSource input)
  throws |java.io.IOException|
         |org.xml.sax.SAXException|
         
Parse the document. 

This method will throw an exception if the embedded XMLReader does not support 
the http://xml.org/sax/features/namespace-prefixes property. 

    input - An input source for the document. 

*org.xml.sax.helpers.XMLReaderAdapter.parse(String)*

public void parse(java.lang.String systemId)
  throws |java.io.IOException|
         |org.xml.sax.SAXException|
         
Parse the document. 

This method will throw an exception if the embedded XMLReader does not support 
the http://xml.org/sax/features/namespace-prefixes property. 

    systemId - The absolute URL of the document. 

*org.xml.sax.helpers.XMLReaderAdapter.processingInstruction(String,String)*

public void processingInstruction(
  java.lang.String target,
  java.lang.String data)
  throws |org.xml.sax.SAXException|
         
Adapt a SAX2 processing instruction event. 

    target - The processing instruction target. 
    data - The remainder of the processing instruction 

*org.xml.sax.helpers.XMLReaderAdapter.setDocumentHandler(DocumentHandler)*

public void setDocumentHandler(org.xml.sax.DocumentHandler handler)

Register the SAX1 document event handler. 

Note that the SAX1 document handler has no Namespace support. 

    handler - The new SAX1 document event handler. 

*org.xml.sax.helpers.XMLReaderAdapter.setDocumentLocator(Locator)*

public void setDocumentLocator(org.xml.sax.Locator locator)

Set a document locator. 

    locator - The document locator. 

*org.xml.sax.helpers.XMLReaderAdapter.setDTDHandler(DTDHandler)*

public void setDTDHandler(org.xml.sax.DTDHandler handler)

Register the DTD event handler. 

    handler - The new DTD event handler. 

*org.xml.sax.helpers.XMLReaderAdapter.setEntityResolver(EntityResolver)*

public void setEntityResolver(org.xml.sax.EntityResolver resolver)

Register the entity resolver. 

    resolver - The new resolver. 

*org.xml.sax.helpers.XMLReaderAdapter.setErrorHandler(ErrorHandler)*

public void setErrorHandler(org.xml.sax.ErrorHandler handler)

Register the error event handler. 

    handler - The new error event handler. 

*org.xml.sax.helpers.XMLReaderAdapter.setLocale(Locale)*

public void setLocale(java.util.Locale locale)
  throws |org.xml.sax.SAXException|
         
Set the locale for error reporting. 

This is not supported in SAX2, and will always throw an exception. 

    locale - the locale for error reporting. 

*org.xml.sax.helpers.XMLReaderAdapter.skippedEntity(String)*

public void skippedEntity(java.lang.String name)
  throws |org.xml.sax.SAXException|
         
Adapt a SAX2 skipped entity event. 

    name - The name of the skipped entity. 

*org.xml.sax.helpers.XMLReaderAdapter.startDocument()*

public void startDocument()
  throws |org.xml.sax.SAXException|
         
Start document event. 


*org.xml.sax.helpers.XMLReaderAdapter.startElement(String,String,String,Attributes)*

public void startElement(
  java.lang.String uri,
  java.lang.String localName,
  java.lang.String qName,
  org.xml.sax.Attributes atts)
  throws |org.xml.sax.SAXException|
         
Adapt a SAX2 start element event. 

    uri - The Namespace URI. 
    localName - The Namespace local name. 
    qName - The qualified (prefixed) name. 
    atts - The SAX2 attributes. 

*org.xml.sax.helpers.XMLReaderAdapter.startPrefixMapping(String,String)*

public void startPrefixMapping(
  java.lang.String prefix,
  java.lang.String uri)

Adapt a SAX2 start prefix mapping event. 

    prefix - The prefix being mapped. 
    uri - The Namespace URI being mapped to. 


