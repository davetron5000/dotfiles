*javax.imageio.plugins.jpeg.JPEGQTable* *JPEGQTable* A class encapsulating a sin

public class JPEGQTable
  extends    |java.lang.Object|

|javax.imageio.plugins.jpeg.JPEGQTable_Description|
|javax.imageio.plugins.jpeg.JPEGQTable_Fields|
|javax.imageio.plugins.jpeg.JPEGQTable_Constructors|
|javax.imageio.plugins.jpeg.JPEGQTable_Methods|

================================================================================

*javax.imageio.plugins.jpeg.JPEGQTable_Fields*
|javax.imageio.plugins.jpeg.JPEGQTable_javax.imageio.plugins.jpeg.JPEGQTable.K1Div2Luminance|
|javax.imageio.plugins.jpeg.JPEGQTable_javax.imageio.plugins.jpeg.JPEGQTable.K1Luminance|
|javax.imageio.plugins.jpeg.JPEGQTable_javax.imageio.plugins.jpeg.JPEGQTable.K2Chrominance|
|javax.imageio.plugins.jpeg.JPEGQTable_javax.imageio.plugins.jpeg.JPEGQTable.K2Div2Chrominance|

*javax.imageio.plugins.jpeg.JPEGQTable_Constructors*
|javax.imageio.plugins.jpeg.JPEGQTable(int[])|Constructs a quantization table f

*javax.imageio.plugins.jpeg.JPEGQTable_Methods*
|javax.imageio.plugins.jpeg.JPEGQTable.getScaledInstance(float,boolean)|Returns
|javax.imageio.plugins.jpeg.JPEGQTable.getTable()|Returns a copy of the current
|javax.imageio.plugins.jpeg.JPEGQTable.toString()|

*javax.imageio.plugins.jpeg.JPEGQTable_Description*

A class encapsulating a single JPEG quantization table. The elements appear in 
natural order (as opposed to zig-zag order). Static variables are provided for 
the "standard" tables taken from Annex K of the JPEG spec, as well as the 
default tables conventionally used for visually lossless encoding. 

For more information about the operation of the built-in JPEG plug-ins, see the 
JPEG metadata format specification and usage notes. 


*javax.imageio.plugins.jpeg.JPEGQTable_javax.imageio.plugins.jpeg.JPEGQTable.K1Div2Luminance*

A class encapsulating a single JPEG quantization table. The elements appear in 
natural order (as opposed to zig-zag order). Static variables are provided for 
the "standard" tables taken from Annex K of the JPEG spec, as well as the 
default tables conventionally used for visually lossless encoding. 

For more information about the operation of the built-in JPEG plug-ins, see the 
JPEG metadata format specification and usage notes. 


*javax.imageio.plugins.jpeg.JPEGQTable_javax.imageio.plugins.jpeg.JPEGQTable.K1Luminance*

A class encapsulating a single JPEG quantization table. The elements appear in 
natural order (as opposed to zig-zag order). Static variables are provided for 
the "standard" tables taken from Annex K of the JPEG spec, as well as the 
default tables conventionally used for visually lossless encoding. 

For more information about the operation of the built-in JPEG plug-ins, see the 
JPEG metadata format specification and usage notes. 


*javax.imageio.plugins.jpeg.JPEGQTable_javax.imageio.plugins.jpeg.JPEGQTable.K2Chrominance*

A class encapsulating a single JPEG quantization table. The elements appear in 
natural order (as opposed to zig-zag order). Static variables are provided for 
the "standard" tables taken from Annex K of the JPEG spec, as well as the 
default tables conventionally used for visually lossless encoding. 

For more information about the operation of the built-in JPEG plug-ins, see the 
JPEG metadata format specification and usage notes. 


*javax.imageio.plugins.jpeg.JPEGQTable_javax.imageio.plugins.jpeg.JPEGQTable.K2Div2Chrominance*

A class encapsulating a single JPEG quantization table. The elements appear in 
natural order (as opposed to zig-zag order). Static variables are provided for 
the "standard" tables taken from Annex K of the JPEG spec, as well as the 
default tables conventionally used for visually lossless encoding. 

For more information about the operation of the built-in JPEG plug-ins, see the 
JPEG metadata format specification and usage notes. 



*javax.imageio.plugins.jpeg.JPEGQTable(int[])*

public JPEGQTable(int[] table)

Constructs a quantization table from the argument, which must contain 64 
elements in natural order (not zig-zag order). A copy is made of the the input 
array. 

    table - the quantization table, as an int array. 

*javax.imageio.plugins.jpeg.JPEGQTable.getScaledInstance(float,boolean)*

public |javax.imageio.plugins.jpeg.JPEGQTable| getScaledInstance(
  float scaleFactor,
  boolean forceBaseline)

Returns a new quantization table where the values are multiplied by scaleFactor 
and then clamped to the range 1..32767 (or to 1..255 if forceBaseline is true). 

Values of scaleFactorless than 1 tend to improve the quality level of the 
table, and values greater than 1.0 degrade the quality level of the table. 

    scaleFactor - the multiplicative factor for the table. 
    forceBaseline - if true, the values will be clamped to the range 1..255. 

    Returns: a new quantization table that is a linear multiple of the current table. 
*javax.imageio.plugins.jpeg.JPEGQTable.getTable()*

public int getTable()

Returns a copy of the current quantization table as an array of ints in natural 
(not zig-zag) order. 


    Returns: A copy of the current quantization table. 
*javax.imageio.plugins.jpeg.JPEGQTable.toString()*

public |java.lang.String| toString()





