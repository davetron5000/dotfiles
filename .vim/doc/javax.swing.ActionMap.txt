*javax.swing.ActionMap* *ActionMap* ActionMap provides mappings from
 Objects
 (called keys or Action names)
 to Actions.

public class ActionMap
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|javax.swing.ActionMap_Description|
|javax.swing.ActionMap_Fields|
|javax.swing.ActionMap_Constructors|
|javax.swing.ActionMap_Methods|

====================================================================================================================================================================================

*javax.swing.ActionMap_Constructors*
|javax.swing.ActionMap()|Creates an ActionMap with no parent and no mappings.

*javax.swing.ActionMap_Methods*
|javax.swing.ActionMap.allKeys()|Returns an array of the keys defined in this ActionMap and  its parent.
|javax.swing.ActionMap.clear()|Removes all the mappings from this ActionMap.
|javax.swing.ActionMap.get(Object)|Returns the binding for key, messaging the   parent ActionMap if the binding is not locally defined.
|javax.swing.ActionMap.getParent()|Returns this ActionMap's parent.
|javax.swing.ActionMap.keys()|Returns the Action names that are bound in this ActionMap.
|javax.swing.ActionMap.put(Object,Action)|Adds a binding for key to action.
|javax.swing.ActionMap.remove(Object)|Removes the binding for key from this ActionMap.
|javax.swing.ActionMap.setParent(ActionMap)|Sets this ActionMap's parent.
|javax.swing.ActionMap.size()|Returns the number of KeyStroke bindings.

*javax.swing.ActionMap_Description*

ActionMap provides mappings from Objects (called keys or Action names) to Actions. An ActionMap is usually used with an InputMap to locate a particular action when a key is 
pressed. As with InputMap, an ActionMap can have a parent that is searched for keys not defined in the ActionMap. As with InputMap if you create a cycle, eg: 

ActionMap am = new ActionMap(); ActionMap bm = new ActionMap(): am.setParent(bm); bm.setParent(am); 

some of the methods will cause a StackOverflowError to be thrown. 



*javax.swing.ActionMap()*

public ActionMap()

Creates an ActionMap with no parent and no mappings. 


*javax.swing.ActionMap.allKeys()*

public |java.lang.Object|[] allKeys()

Returns an array of the keys defined in this ActionMap and its parent. This method differs from keys() in that this method includes the keys defined in the parent. 



*javax.swing.ActionMap.clear()*

public void clear()

Removes all the mappings from this ActionMap. 



*javax.swing.ActionMap.get(Object)*

public |javax.swing.Action| get(java.lang.Object key)

Returns the binding for key, messaging the parent ActionMap if the binding is not locally defined. 



*javax.swing.ActionMap.getParent()*

public |javax.swing.ActionMap| getParent()

Returns this ActionMap's parent. 



    Returns: the ActionMap that is the parent of this one, or null if this ActionMap has no parent 

*javax.swing.ActionMap.keys()*

public |java.lang.Object|[] keys()

Returns the Action names that are bound in this ActionMap. 



*javax.swing.ActionMap.put(Object,Action)*

public void put(
  java.lang.Object key,
  javax.swing.Action action)

Adds a binding for key to action. If action is null, this removes the current binding for key. In most instances, key will be action.getValue(NAME). 



*javax.swing.ActionMap.remove(Object)*

public void remove(java.lang.Object key)

Removes the binding for key from this ActionMap. 



*javax.swing.ActionMap.setParent(ActionMap)*

public void setParent(javax.swing.ActionMap map)

Sets this ActionMap's parent. 


    map - the ActionMap that is the parent of this one 

*javax.swing.ActionMap.size()*

public int size()

Returns the number of KeyStroke bindings. 




