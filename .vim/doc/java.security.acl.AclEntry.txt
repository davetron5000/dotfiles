*java.security.acl.AclEntry* *AclEntry* This is the interface used for represent

public interface interface AclEntry

  implements |java.lang.Cloneable|

|java.security.acl.AclEntry_Description|
|java.security.acl.AclEntry_Fields|
|java.security.acl.AclEntry_Constructors|
|java.security.acl.AclEntry_Methods|

================================================================================

*java.security.acl.AclEntry_Methods*
|java.security.acl.AclEntry.addPermission(Permission)|Adds the specified permis
|java.security.acl.AclEntry.checkPermission(Permission)|Checks if the specified
|java.security.acl.AclEntry.clone()|Clones this ACL entry.
|java.security.acl.AclEntry.getPrincipal()|Returns the principal for which perm
|java.security.acl.AclEntry.isNegative()|Returns true if this is a negative ACL
|java.security.acl.AclEntry.permissions()|Returns an enumeration of the permiss
|java.security.acl.AclEntry.removePermission(Permission)|Removes the specified 
|java.security.acl.AclEntry.setNegativePermissions()|Sets this ACL entry to be 
|java.security.acl.AclEntry.setPrincipal(Principal)|Specifies the principal for
|java.security.acl.AclEntry.toString()|Returns a string representation of the c

*java.security.acl.AclEntry_Description*

This is the interface used for representing one entry in an Access Control List 
(ACL). 

An ACL can be thought of as a data structure with multiple ACL entry objects. 
Each ACL entry object contains a set of permissions associated with a 
particular principal. (A principal represents an entity such as an individual 
user or a group). Additionally, each ACL entry is specified as being either 
positive or negative. If positive, the permissions are to be granted to the 
associated principal. If negative, the permissions are to be denied. Each 
principal can have at most one positive ACL entry and one negative entry; that 
is, multiple positive or negative ACL entries are not allowed for any 
principal. 

Note: ACL entries are by default positive. An entry becomes a negative entry 
only if the setNegativePermissions(|java.security.acl.AclEntry|) method is 
called on it. 


*java.security.acl.AclEntry.addPermission(Permission)*

public boolean addPermission(java.security.acl.Permission permission)

Adds the specified permission to this ACL entry. Note: An entry can have 
multiple permissions. 

    permission - the permission to be associated with the principal in this entry. 

    Returns: true if the permission was added, false if the permission was already part of 
             this entry's permission set. 
*java.security.acl.AclEntry.checkPermission(Permission)*

public boolean checkPermission(java.security.acl.Permission permission)

Checks if the specified permission is part of the permission set in this entry. 

    permission - the permission to be checked for. 

    Returns: true if the permission is part of the permission set in this entry, false 
             otherwise. 
*java.security.acl.AclEntry.clone()*

public |java.lang.Object| clone()

Clones this ACL entry. 


    Returns: a clone of this ACL entry. 
*java.security.acl.AclEntry.getPrincipal()*

public |java.security.Principal| getPrincipal()

Returns the principal for which permissions are granted or denied by this ACL 
entry. Returns null if there is no principal set for this entry yet. 


    Returns: the principal associated with this entry. 
*java.security.acl.AclEntry.isNegative()*

public boolean isNegative()

Returns true if this is a negative ACL entry (one denying the associated 
principal the set of permissions in the entry), false otherwise. 


    Returns: true if this is a negative ACL entry, false if it's not. 
*java.security.acl.AclEntry.permissions()*

public |java.util.Enumeration| permissions()

Returns an enumeration of the permissions in this ACL entry. 


    Returns: an enumeration of the permissions in this ACL entry. 
*java.security.acl.AclEntry.removePermission(Permission)*

public boolean removePermission(java.security.acl.Permission permission)

Removes the specified permission from this ACL entry. 

    permission - the permission to be removed from this entry. 

    Returns: true if the permission is removed, false if the permission was not part of this 
             entry's permission set. 
*java.security.acl.AclEntry.setNegativePermissions()*

public void setNegativePermissions()

Sets this ACL entry to be a negative one. That is, the associated principal 
(e.g., a user or a group) will be denied the permission set specified in the 
entry. 

Note: ACL entries are by default positive. An entry becomes a negative entry 
only if this setNegativePermissions method is called on it. 


*java.security.acl.AclEntry.setPrincipal(Principal)*

public boolean setPrincipal(java.security.Principal user)

Specifies the principal for which permissions are granted or denied by this ACL 
entry. If a principal was already set for this ACL entry, false is returned, 
otherwise true is returned. 

    user - the principal to be set for this entry. 

    Returns: true if the principal is set, false if there was already a principal set for 
             this entry. 
*java.security.acl.AclEntry.toString()*

public |java.lang.String| toString()

Returns a string representation of the contents of this ACL entry. 


    Returns: a string representation of the contents. 

