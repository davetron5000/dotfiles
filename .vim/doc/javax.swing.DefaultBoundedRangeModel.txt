*javax.swing.DefaultBoundedRangeModel* *DefaultBoundedRangeModel* A generic impl

public class DefaultBoundedRangeModel
  extends    |java.lang.Object|
  implements |javax.swing.BoundedRangeModel|
             |java.io.Serializable|

|javax.swing.DefaultBoundedRangeModel_Description|
|javax.swing.DefaultBoundedRangeModel_Fields|
|javax.swing.DefaultBoundedRangeModel_Constructors|
|javax.swing.DefaultBoundedRangeModel_Methods|

================================================================================

*javax.swing.DefaultBoundedRangeModel_Fields*
|javax.swing.event.ChangeEvent_javax.swing.DefaultBoundedRangeModel.changeEvent|
|javax.swing.event.EventListenerList_javax.swing.DefaultBoundedRangeModel.listenerList|

*javax.swing.DefaultBoundedRangeModel_Constructors*
|javax.swing.DefaultBoundedRangeModel()|Initializes all of the properties with 
|javax.swing.DefaultBoundedRangeModel(int,int,int,int)|Initializes value, exten

*javax.swing.DefaultBoundedRangeModel_Methods*
|javax.swing.DefaultBoundedRangeModel.addChangeListener(ChangeListener)|Adds a 
|javax.swing.DefaultBoundedRangeModel.fireStateChanged()|Runs each ChangeListen
|javax.swing.DefaultBoundedRangeModel.getChangeListeners()|Returns an array of 
|javax.swing.DefaultBoundedRangeModel.getExtent()|Returns the model's extent.
|javax.swing.DefaultBoundedRangeModel.getListeners(Class)|Returns an array of a
|javax.swing.DefaultBoundedRangeModel.getMaximum()|Returns the model's maximum.
|javax.swing.DefaultBoundedRangeModel.getMinimum()|Returns the model's minimum.
|javax.swing.DefaultBoundedRangeModel.getValue()|Returns the model's current va
|javax.swing.DefaultBoundedRangeModel.getValueIsAdjusting()|Returns true if the
|javax.swing.DefaultBoundedRangeModel.removeChangeListener(ChangeListener)|Remo
|javax.swing.DefaultBoundedRangeModel.setExtent(int)|Sets the extent to n after
|javax.swing.DefaultBoundedRangeModel.setMaximum(int)|Sets the maximum to n aft
|javax.swing.DefaultBoundedRangeModel.setMinimum(int)|Sets the minimum to n aft
|javax.swing.DefaultBoundedRangeModel.setRangeProperties(int,int,int,int,boolean)|
|javax.swing.DefaultBoundedRangeModel.setValue(int)|Sets the current value of t
|javax.swing.DefaultBoundedRangeModel.setValueIsAdjusting(boolean)|Sets the val
|javax.swing.DefaultBoundedRangeModel.toString()|Returns a string that displays

*javax.swing.DefaultBoundedRangeModel_Description*

A generic implementation of BoundedRangeModel. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.event.ChangeEvent_javax.swing.DefaultBoundedRangeModel.changeEvent*

A generic implementation of BoundedRangeModel. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.event.EventListenerList_javax.swing.DefaultBoundedRangeModel.listenerList*

A generic implementation of BoundedRangeModel. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 



*javax.swing.DefaultBoundedRangeModel()*

public DefaultBoundedRangeModel()

Initializes all of the properties with default values. Those values are: 

value = 0 extent = 0 minimum = 0 maximum = 100 adjusting = false 


*javax.swing.DefaultBoundedRangeModel(int,int,int,int)*

public DefaultBoundedRangeModel(
  int value,
  int extent,
  int min,
  int max)

Initializes value, extent, minimum and maximum. Adjusting is false. Throws an 
IllegalArgumentException if the following constraints aren't satisfied: 

min <= value <= value+extent <= max 


*javax.swing.DefaultBoundedRangeModel.addChangeListener(ChangeListener)*

public void addChangeListener(javax.swing.event.ChangeListener l)

Adds a ChangeListener. The change listeners are run each time any one of the 
Bounded Range model properties changes. 

    l - the ChangeListener to add 

*javax.swing.DefaultBoundedRangeModel.fireStateChanged()*

protected void fireStateChanged()

Runs each ChangeListener's stateChanged method. 


*javax.swing.DefaultBoundedRangeModel.getChangeListeners()*

public |javax.swing.event.ChangeListener| getChangeListeners()

Returns an array of all the change listeners registered on this 
DefaultBoundedRangeModel. 


    Returns: all of this model's ChangeListeners or an empty array if no change listeners 
             are currently registered 
*javax.swing.DefaultBoundedRangeModel.getExtent()*

public int getExtent()

Returns the model's extent. 


    Returns: the model's extent 
*javax.swing.DefaultBoundedRangeModel.getListeners(Class)*

public |java.util.EventListener| getListeners(java.lang.Class listenerType)

Returns an array of all the objects currently registered as FooListeners upon 
this model. FooListeners are registered using the addFooListener method. 

You can specify the listenerType argument with a class literal, such as 
FooListener.class. For example, you can query a DefaultBoundedRangeModel 
instance m for its change listeners with the following code: 

ChangeListener[] cls = 
(ChangeListener[])(m.getListeners(ChangeListener.class)); 

If no such listeners exist, this method returns an empty array. 

    listenerType - the type of listeners requested; this parameter should specify an interface 
       that descends from java.util.EventListener 

    Returns: an array of all objects registered as FooListeners on this model, or an empty 
             array if no such listeners have been added 
*javax.swing.DefaultBoundedRangeModel.getMaximum()*

public int getMaximum()

Returns the model's maximum. 


    Returns: the model's maximum 
*javax.swing.DefaultBoundedRangeModel.getMinimum()*

public int getMinimum()

Returns the model's minimum. 


    Returns: the model's minimum 
*javax.swing.DefaultBoundedRangeModel.getValue()*

public int getValue()

Returns the model's current value. 


    Returns: the model's current value 
*javax.swing.DefaultBoundedRangeModel.getValueIsAdjusting()*

public boolean getValueIsAdjusting()

Returns true if the value is in the process of changing as a result of actions 
being taken by the user. 


    Returns: the value of the valueIsAdjusting property 
*javax.swing.DefaultBoundedRangeModel.removeChangeListener(ChangeListener)*

public void removeChangeListener(javax.swing.event.ChangeListener l)

Removes a ChangeListener. 

    l - the ChangeListener to remove 

*javax.swing.DefaultBoundedRangeModel.setExtent(int)*

public void setExtent(int n)

Sets the extent to n after ensuring that n is greater than or equal to zero and 
falls within the model's constraints: 

minimum <= value <= value+extent <= maximum 


*javax.swing.DefaultBoundedRangeModel.setMaximum(int)*

public void setMaximum(int n)

Sets the maximum to n after ensuring that n that the other three properties 
obey the model's constraints: 

minimum <= value <= value+extent <= maximum 


*javax.swing.DefaultBoundedRangeModel.setMinimum(int)*

public void setMinimum(int n)

Sets the minimum to n after ensuring that n that the other three properties 
obey the model's constraints: 

minimum <= value <= value+extent <= maximum 


*javax.swing.DefaultBoundedRangeModel.setRangeProperties(int,int,int,int,boolean)*

public void setRangeProperties(
  int newValue,
  int newExtent,
  int newMin,
  int newMax,
  boolean adjusting)

Sets all of the BoundedRangeModel properties after forcing the arguments to 
obey the usual constraints: 

minimum At most, one ChangeEvent is generated. 


*javax.swing.DefaultBoundedRangeModel.setValue(int)*

public void setValue(int n)

Sets the current value of the model. For a slider, that determines where the 
knob appears. Ensures that the new value, n falls within the model's 
constraints: 

minimum <= value <= value+extent <= maximum 


*javax.swing.DefaultBoundedRangeModel.setValueIsAdjusting(boolean)*

public void setValueIsAdjusting(boolean b)

Sets the valueIsAdjusting property. 


*javax.swing.DefaultBoundedRangeModel.toString()*

public |java.lang.String| toString()

Returns a string that displays all of the BoundedRangeModel properties. 



