*javax.swing.plaf.multi.MultiRootPaneUI* *MultiRootPaneUI* A multiplexing UI use

public class MultiRootPaneUI
  extends    |javax.swing.plaf.RootPaneUI|

|javax.swing.plaf.multi.MultiRootPaneUI_Description|
|javax.swing.plaf.multi.MultiRootPaneUI_Fields|
|javax.swing.plaf.multi.MultiRootPaneUI_Constructors|
|javax.swing.plaf.multi.MultiRootPaneUI_Methods|

================================================================================

*javax.swing.plaf.multi.MultiRootPaneUI_Fields*
|java.util.Vector_javax.swing.plaf.multi.MultiRootPaneUI.uis|

*javax.swing.plaf.multi.MultiRootPaneUI_Constructors*
|javax.swing.plaf.multi.MultiRootPaneUI()|

*javax.swing.plaf.multi.MultiRootPaneUI_Methods*
|javax.swing.plaf.multi.MultiRootPaneUI.contains(JComponent,int,int)|Invokes th
|javax.swing.plaf.multi.MultiRootPaneUI.createUI(JComponent)|Returns a multiple
|javax.swing.plaf.multi.MultiRootPaneUI.getAccessibleChild(JComponent,int)|Invo
|javax.swing.plaf.multi.MultiRootPaneUI.getAccessibleChildrenCount(JComponent)|
|javax.swing.plaf.multi.MultiRootPaneUI.getMaximumSize(JComponent)|Invokes the 
|javax.swing.plaf.multi.MultiRootPaneUI.getMinimumSize(JComponent)|Invokes the 
|javax.swing.plaf.multi.MultiRootPaneUI.getPreferredSize(JComponent)|Invokes th
|javax.swing.plaf.multi.MultiRootPaneUI.getUIs()|Returns the list of UIs associ
|javax.swing.plaf.multi.MultiRootPaneUI.installUI(JComponent)|Invokes the insta
|javax.swing.plaf.multi.MultiRootPaneUI.paint(Graphics,JComponent)|Invokes the 
|javax.swing.plaf.multi.MultiRootPaneUI.uninstallUI(JComponent)|Invokes the uni
|javax.swing.plaf.multi.MultiRootPaneUI.update(Graphics,JComponent)|Invokes the

*javax.swing.plaf.multi.MultiRootPaneUI_Description*

A multiplexing UI used to combine RootPaneUIs. 

This file was automatically generated by AutoMulti. 


*java.util.Vector_javax.swing.plaf.multi.MultiRootPaneUI.uis*

A multiplexing UI used to combine RootPaneUIs. 

This file was automatically generated by AutoMulti. 



*javax.swing.plaf.multi.MultiRootPaneUI()*

public MultiRootPaneUI()




*javax.swing.plaf.multi.MultiRootPaneUI.contains(JComponent,int,int)*

public boolean contains(
  javax.swing.JComponent a,
  int b,
  int c)

Invokes the contains method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiRootPaneUI.createUI(JComponent)*

public static |javax.swing.plaf.ComponentUI| createUI(javax.swing.JComponent a)

Returns a multiplexing UI instance if any of the auxiliary LookAndFeels 
supports this UI. Otherwise, just returns the UI object obtained from the 
default LookAndFeel. 


*javax.swing.plaf.multi.MultiRootPaneUI.getAccessibleChild(JComponent,int)*

public |javax.accessibility.Accessible| getAccessibleChild(
  javax.swing.JComponent a,
  int b)

Invokes the getAccessibleChild method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiRootPaneUI.getAccessibleChildrenCount(JComponent)*

public int getAccessibleChildrenCount(javax.swing.JComponent a)

Invokes the getAccessibleChildrenCount method on each UI handled by this 
object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiRootPaneUI.getMaximumSize(JComponent)*

public |java.awt.Dimension| getMaximumSize(javax.swing.JComponent a)

Invokes the getMaximumSize method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiRootPaneUI.getMinimumSize(JComponent)*

public |java.awt.Dimension| getMinimumSize(javax.swing.JComponent a)

Invokes the getMinimumSize method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiRootPaneUI.getPreferredSize(JComponent)*

public |java.awt.Dimension| getPreferredSize(javax.swing.JComponent a)

Invokes the getPreferredSize method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiRootPaneUI.getUIs()*

public |javax.swing.plaf.ComponentUI| getUIs()

Returns the list of UIs associated with this multiplexing UI. This allows 
processing of the UIs by an application aware of multiplexing UIs on 
components. 


*javax.swing.plaf.multi.MultiRootPaneUI.installUI(JComponent)*

public void installUI(javax.swing.JComponent a)

Invokes the installUI method on each UI handled by this object. 


*javax.swing.plaf.multi.MultiRootPaneUI.paint(Graphics,JComponent)*

public void paint(
  java.awt.Graphics a,
  javax.swing.JComponent b)

Invokes the paint method on each UI handled by this object. 


*javax.swing.plaf.multi.MultiRootPaneUI.uninstallUI(JComponent)*

public void uninstallUI(javax.swing.JComponent a)

Invokes the uninstallUI method on each UI handled by this object. 


*javax.swing.plaf.multi.MultiRootPaneUI.update(Graphics,JComponent)*

public void update(
  java.awt.Graphics a,
  javax.swing.JComponent b)

Invokes the update method on each UI handled by this object. 



