*java.security.cert.CertStoreException* *CertStoreException* An exception indicating one of a variety of problems retrieving
 certificates and CRLs from a CertStore.

public class CertStoreException
  extends    |java.security.GeneralSecurityException|

|java.security.cert.CertStoreException_Description|
|java.security.cert.CertStoreException_Fields|
|java.security.cert.CertStoreException_Constructors|
|java.security.cert.CertStoreException_Methods|

====================================================================================================================================================================================

*java.security.cert.CertStoreException_Constructors*
|java.security.cert.CertStoreException()|Creates a CertStoreException with null as  its detail message.
|java.security.cert.CertStoreException(String)|Creates a CertStoreException with the given detail  message.
|java.security.cert.CertStoreException(String,Throwable)|Creates a CertStoreException with the specified detail  message and cause.
|java.security.cert.CertStoreException(Throwable)|Creates a CertStoreException that wraps the specified  throwable.

*java.security.cert.CertStoreException_Description*

An exception indicating one of a variety of problems retrieving certificates and CRLs from a CertStore. 

A CertStoreException provides support for wrapping exceptions. The getCause(|java.security.cert.CertStoreException|) method returns the throwable, if any, that caused this 
exception to be thrown. 

Concurrent Access 

Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst 
themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize. 



*java.security.cert.CertStoreException()*

public CertStoreException()

Creates a CertStoreException with null as its detail message. 


*java.security.cert.CertStoreException(String)*

public CertStoreException(java.lang.String msg)

Creates a CertStoreException with the given detail message. A detail message is a String that describes this particular exception. 

    msg - the detail message 

*java.security.cert.CertStoreException(String,Throwable)*

public CertStoreException(
  java.lang.String msg,
  java.lang.Throwable cause)

Creates a CertStoreException with the specified detail message and cause. 

    msg - the detail message 
    cause - the cause (which is saved for later retrieval by the {@link #getCause getCause()} method). (A null value is permitted, and indicates that the cause is nonexistent or unknown.) 

*java.security.cert.CertStoreException(Throwable)*

public CertStoreException(java.lang.Throwable cause)

Creates a CertStoreException that wraps the specified throwable. This allows any exception to be converted into a CertStoreException, while retaining information about the cause, 
which may be useful for debugging. The detail message is set to (cause==null ? null : cause.toString()) (which typically contains the class and detail message of cause). 

    cause - the cause (which is saved for later retrieval by the {@link #getCause getCause()} method). (A null value is permitted, and indicates that the cause is nonexistent or unknown.) 

