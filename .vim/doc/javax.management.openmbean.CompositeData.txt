*javax.management.openmbean.CompositeData* *CompositeData* The CompositeData int

public interface interface CompositeData


|javax.management.openmbean.CompositeData_Description|
|javax.management.openmbean.CompositeData_Fields|
|javax.management.openmbean.CompositeData_Constructors|
|javax.management.openmbean.CompositeData_Methods|

================================================================================

*javax.management.openmbean.CompositeData_Methods*
|javax.management.openmbean.CompositeData.containsKey(String)|Returns true if a
|javax.management.openmbean.CompositeData.containsValue(Object)|Returns true if
|javax.management.openmbean.CompositeData.equals(Object)|Compares the specified
|javax.management.openmbean.CompositeData.get(String)|Returns the value of the 
|javax.management.openmbean.CompositeData.getAll(String[])|Returns an array of 
|javax.management.openmbean.CompositeData.getCompositeType()|Returns the compos
|javax.management.openmbean.CompositeData.hashCode()|Returns the hash code valu
|javax.management.openmbean.CompositeData.toString()|Returns a string represent
|javax.management.openmbean.CompositeData.values()|Returns an unmodifiable Coll

*javax.management.openmbean.CompositeData_Description*

The CompositeData interface specifies the behavior of a specific type of 
complex open data objects which represent composite data structures. 


*javax.management.openmbean.CompositeData.containsKey(String)*

public boolean containsKey(java.lang.String key)

Returns true if and only if this CompositeData instance contains an item whose 
name is key. If key is a null or empty String, this method simply returns 
false. 

    key - the key to be tested. 

    Returns: true if this CompositeData contains the key. 
*javax.management.openmbean.CompositeData.containsValue(Object)*

public boolean containsValue(java.lang.Object value)

Returns true if and only if this CompositeData instance contains an item whose 
value is value. 

    value - the value to be tested. 

    Returns: true if this CompositeData contains the value. 
*javax.management.openmbean.CompositeData.equals(Object)*

public boolean equals(java.lang.Object obj)

Compares the specified obj parameter with this CompositeData instance for 
equality. 

Returns true if and only if all of the following statements are true: 

obj is non null, obj also implements the CompositeData interface, their 
composite types are equal their contents (ie item values) are equal. 

This ensures that this equals method works properly for obj parameters which 
are different implementations of the CompositeData interface. 

    obj - the object to be compared for equality with this CompositeData instance; 

    Returns: true if the specified object is equal to this CompositeData instance. 
*javax.management.openmbean.CompositeData.get(String)*

public |java.lang.Object| get(java.lang.String key)

Returns the value of the item whose name is key. 

    key - the name of the item. 

    Returns: the value associated with this key. 
*javax.management.openmbean.CompositeData.getAll(String[])*

public |java.lang.Object| getAll(java.lang.String[] keys)

Returns an array of the values of the items whose names are specified by keys, 
in the same order as keys. 

    keys - the names of the items. 

    Returns: the values corresponding to the keys. 
*javax.management.openmbean.CompositeData.getCompositeType()*

public |javax.management.openmbean.CompositeType| getCompositeType()

Returns the composite type of this composite data instance. 


    Returns: the type of this CompositeData. 
*javax.management.openmbean.CompositeData.hashCode()*

public int hashCode()

Returns the hash code value for this CompositeData instance. 

The hash code of a CompositeData instance is the sum of the hash codes of all 
elements of information used in equals comparisons (ie: its composite type and 
all the item values). 

This ensures that t1.equals(t2) implies that t1.hashCode()==t2.hashCode() for 
any two CompositeData instances t1 and t2, as required by the general contract 
of the method Object.hashCode()(|java.lang.Object|) . 


    Returns: the hash code value for this CompositeData instance 
*javax.management.openmbean.CompositeData.toString()*

public |java.lang.String| toString()

Returns a string representation of this CompositeData instance. 

The string representation consists of the name of the implementing class, the 
string representation of the composite type of this instance, and the string 
representation of the contents (ie list the itemName=itemValue mappings). 


    Returns: a string representation of this CompositeData instance 
*javax.management.openmbean.CompositeData.values()*

public |java.util.Collection| values()

Returns an unmodifiable Collection view of the item values contained in this 
CompositeData instance. The returned collection's iterator will return the 
values in the ascending lexicographic order of the corresponding item names. 


    Returns: 

