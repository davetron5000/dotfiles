*org.omg.CORBA.FloatHolder* *FloatHolder* The Holder for Float.

public final class FloatHolder
  extends    |java.lang.Object|
  implements |org.omg.CORBA.portable.Streamable|

|org.omg.CORBA.FloatHolder_Description|
|org.omg.CORBA.FloatHolder_Fields|
|org.omg.CORBA.FloatHolder_Constructors|
|org.omg.CORBA.FloatHolder_Methods|

================================================================================

*org.omg.CORBA.FloatHolder_Fields*
|float_org.omg.CORBA.FloatHolder.value|

*org.omg.CORBA.FloatHolder_Constructors*
|org.omg.CORBA.FloatHolder()|Constructs a new FloatHolder object with its  valu
|org.omg.CORBA.FloatHolder(float)|Constructs a new FloatHolder object for the g

*org.omg.CORBA.FloatHolder_Methods*
|org.omg.CORBA.FloatHolder._read(InputStream)|Read a float from an input stream
|org.omg.CORBA.FloatHolder._type()|Return the TypeCode of this Streamable.
|org.omg.CORBA.FloatHolder._write(OutputStream)|Write the float value into an o

*org.omg.CORBA.FloatHolder_Description*

The Holder for Float. For more information on Holder files, see "Generated 
Files: Holder Files". A Holder class for a float that is used to store "out" 
and "inout" parameters in IDL methods. If an IDL method signature has an IDL 
float as an "out" or "inout" parameter, the programmer must pass an instance of 
FloatHolder as the corresponding parameter in the method invocation; for 
"inout" parameters, the programmer must also fill the "in" value to be sent to 
the server. Before the method invocation returns, the ORB will fill in the 
value corresponding to the "out" value returned from the server. 

If myFloatHolder is an instance of FloatHolder, the value stored in its value 
field can be accessed with myFloatHolder.value. 


*float_org.omg.CORBA.FloatHolder.value*

The Holder for Float. For more information on Holder files, see "Generated 
Files: Holder Files". A Holder class for a float that is used to store "out" 
and "inout" parameters in IDL methods. If an IDL method signature has an IDL 
float as an "out" or "inout" parameter, the programmer must pass an instance of 
FloatHolder as the corresponding parameter in the method invocation; for 
"inout" parameters, the programmer must also fill the "in" value to be sent to 
the server. Before the method invocation returns, the ORB will fill in the 
value corresponding to the "out" value returned from the server. 

If myFloatHolder is an instance of FloatHolder, the value stored in its value 
field can be accessed with myFloatHolder.value. 



*org.omg.CORBA.FloatHolder()*

public FloatHolder()

Constructs a new FloatHolder object with its value field initialized to 0.0. 


*org.omg.CORBA.FloatHolder(float)*

public FloatHolder(float initial)

Constructs a new FloatHolder object for the given float. 

    initial - the float with which to initialize the value field of the new FloatHolder 
       object 

*org.omg.CORBA.FloatHolder._read(InputStream)*

public void _read(org.omg.CORBA.portable.InputStream input)

Read a float from an input stream and initialize the value member with the 
float value. 

    input - the InputStream to read from. 

*org.omg.CORBA.FloatHolder._type()*

public |org.omg.CORBA.TypeCode| _type()

Return the TypeCode of this Streamable. 


    Returns: the TypeCode object. 
*org.omg.CORBA.FloatHolder._write(OutputStream)*

public void _write(org.omg.CORBA.portable.OutputStream output)

Write the float value into an output stream. 

    output - the OutputStream to write into. 


