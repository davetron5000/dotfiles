*javax.swing.plaf.basic.BasicEditorPaneUI* *BasicEditorPaneUI* Provides the look and feel for a JEditorPane.

public class BasicEditorPaneUI
  extends    |javax.swing.plaf.basic.BasicTextUI|

|javax.swing.plaf.basic.BasicEditorPaneUI_Description|
|javax.swing.plaf.basic.BasicEditorPaneUI_Fields|
|javax.swing.plaf.basic.BasicEditorPaneUI_Constructors|
|javax.swing.plaf.basic.BasicEditorPaneUI_Methods|

====================================================================================================================================================================================

*javax.swing.plaf.basic.BasicEditorPaneUI_Constructors*
|javax.swing.plaf.basic.BasicEditorPaneUI()|Creates a new BasicEditorPaneUI.

*javax.swing.plaf.basic.BasicEditorPaneUI_Methods*
|javax.swing.plaf.basic.BasicEditorPaneUI.createUI(JComponent)|Creates a UI for the JTextPane.
|javax.swing.plaf.basic.BasicEditorPaneUI.getEditorKit(JTextComponent)|Fetches the EditorKit for the UI.
|javax.swing.plaf.basic.BasicEditorPaneUI.getPropertyPrefix()|Fetches the name used as a key to lookup properties through the  UIManager.
|javax.swing.plaf.basic.BasicEditorPaneUI.installUI(JComponent)|
|javax.swing.plaf.basic.BasicEditorPaneUI.propertyChange(PropertyChangeEvent)|This method gets called when a bound property is changed  on the associated JTextComponent.
|javax.swing.plaf.basic.BasicEditorPaneUI.uninstallUI(JComponent)|

*javax.swing.plaf.basic.BasicEditorPaneUI_Description*

Provides the look and feel for a JEditorPane. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*javax.swing.plaf.basic.BasicEditorPaneUI()*

public BasicEditorPaneUI()

Creates a new BasicEditorPaneUI. 


*javax.swing.plaf.basic.BasicEditorPaneUI.createUI(JComponent)*

public static |javax.swing.plaf.ComponentUI| createUI(javax.swing.JComponent c)

Creates a UI for the JTextPane. 


    c - the JTextPane component 

    Returns: 

*javax.swing.plaf.basic.BasicEditorPaneUI.getEditorKit(JTextComponent)*

public |javax.swing.text.EditorKit| getEditorKit(javax.swing.text.JTextComponent tc)

Fetches the EditorKit for the UI. This is whatever is currently set in the associated JEditorPane. 



    Returns: the editor capabilities 

*javax.swing.plaf.basic.BasicEditorPaneUI.getPropertyPrefix()*

protected |java.lang.String| getPropertyPrefix()

Fetches the name used as a key to lookup properties through the UIManager. This is used as a prefix to all the standard text properties. 



    Returns: the name ("EditorPane") 

*javax.swing.plaf.basic.BasicEditorPaneUI.installUI(JComponent)*

public void installUI(javax.swing.JComponent c)





*javax.swing.plaf.basic.BasicEditorPaneUI.propertyChange(PropertyChangeEvent)*

protected void propertyChange(java.beans.PropertyChangeEvent evt)

This method gets called when a bound property is changed on the associated JTextComponent. This is a hook which UI implementations may change to reflect how the UI displays bound 
properties of JTextComponent subclasses. This is implemented to rebuild the ActionMap based upon an EditorKit change. 


    evt - the property change event 

*javax.swing.plaf.basic.BasicEditorPaneUI.uninstallUI(JComponent)*

public void uninstallUI(javax.swing.JComponent c)






