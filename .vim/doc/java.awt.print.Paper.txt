*java.awt.print.Paper* *Paper* The Paper class describes the physical characteri

public class Paper
  extends    |java.lang.Object|
  implements |java.lang.Cloneable|

|java.awt.print.Paper_Description|
|java.awt.print.Paper_Fields|
|java.awt.print.Paper_Constructors|
|java.awt.print.Paper_Methods|

================================================================================

*java.awt.print.Paper_Constructors*
|java.awt.print.Paper()|Creates a letter sized piece of paper  with one inch ma

*java.awt.print.Paper_Methods*
|java.awt.print.Paper.clone()|Creates a copy of this Paper with the same conten
|java.awt.print.Paper.getHeight()|Returns the height of the page in 1/72nds of 
|java.awt.print.Paper.getImageableHeight()|Returns the height of this Paper obj
|java.awt.print.Paper.getImageableWidth()|Returns the width of this Paper objec
|java.awt.print.Paper.getImageableX()|Returns the x coordinate of the upper-lef
|java.awt.print.Paper.getImageableY()|Returns the y coordinate of the upper-lef
|java.awt.print.Paper.getWidth()|Returns the width of the page in 1/72nds  of a
|java.awt.print.Paper.setImageableArea(double,double,double,double)|Sets the im
|java.awt.print.Paper.setSize(double,double)|Sets the width and height of this 

*java.awt.print.Paper_Description*

The Paper class describes the physical characteristics of a piece of paper. 

When creating a Paper object, it is the application's responsibility to ensure 
that the paper size and the imageable area are compatible. For example, if the 
paper size is changed from 11 x 17 to 8.5 x 11, the application might need to 
reduce the imageable area so that whatever is printed fits on the page. 


*java.awt.print.Paper()*

public Paper()

Creates a letter sized piece of paper with one inch margins. 


*java.awt.print.Paper.clone()*

public |java.lang.Object| clone()

Creates a copy of this Paper with the same contents as this Paper. 


    Returns: a copy of this Paper. 
*java.awt.print.Paper.getHeight()*

public double getHeight()

Returns the height of the page in 1/72nds of an inch. 


    Returns: the height of the page described by this Paper. 
*java.awt.print.Paper.getImageableHeight()*

public double getImageableHeight()

Returns the height of this Paper object's imageable area. 


    Returns: the height of the imageable area. 
*java.awt.print.Paper.getImageableWidth()*

public double getImageableWidth()

Returns the width of this Paper object's imageable area. 


    Returns: the width of the imageable area. 
*java.awt.print.Paper.getImageableX()*

public double getImageableX()

Returns the x coordinate of the upper-left corner of this Paper object's 
imageable area. 


    Returns: the x coordinate of the imageable area. 
*java.awt.print.Paper.getImageableY()*

public double getImageableY()

Returns the y coordinate of the upper-left corner of this Paper object's 
imageable area. 


    Returns: the y coordinate of the imageable area. 
*java.awt.print.Paper.getWidth()*

public double getWidth()

Returns the width of the page in 1/72nds of an inch. 


    Returns: the width of the page described by this Paper. 
*java.awt.print.Paper.setImageableArea(double,double,double,double)*

public void setImageableArea(
  double x,
  double y,
  double width,
  double height)

Sets the imageable area of this Paper. The imageable area is the area on the 
page in which printing occurs. 

    x,&nbsp;y - the coordinates to which to set the upper-left corner of the imageable area of 
       this Paper 
    width - the value to which to set the width of the imageable area of this Paper 
    height - the value to which to set the height of the imageable area of this Paper 

*java.awt.print.Paper.setSize(double,double)*

public void setSize(
  double width,
  double height)

Sets the width and height of this Paper object, which represents the properties 
of the page onto which printing occurs. The dimensions are supplied in 1/72nds 
of an inch. 

    width - the value to which to set this Paper object's width 
    height - the value to which to set this Paper object's height 


