*javax.swing.SingleSelectionModel* *SingleSelectionModel* A model that supports 

public interface interface SingleSelectionModel


|javax.swing.SingleSelectionModel_Description|
|javax.swing.SingleSelectionModel_Fields|
|javax.swing.SingleSelectionModel_Constructors|
|javax.swing.SingleSelectionModel_Methods|

================================================================================

*javax.swing.SingleSelectionModel_Methods*
|javax.swing.SingleSelectionModel.addChangeListener(ChangeListener)|Adds listen
|javax.swing.SingleSelectionModel.clearSelection()|Clears the selection (to -1)
|javax.swing.SingleSelectionModel.getSelectedIndex()|Returns the model's select
|javax.swing.SingleSelectionModel.isSelected()|Returns true if the selection mo
|javax.swing.SingleSelectionModel.removeChangeListener(ChangeListener)|Removes 
|javax.swing.SingleSelectionModel.setSelectedIndex(int)|Sets the model's select

*javax.swing.SingleSelectionModel_Description*

A model that supports at most one indexed selection. 


*javax.swing.SingleSelectionModel.addChangeListener(ChangeListener)*

public void addChangeListener(javax.swing.event.ChangeListener listener)

Adds listener as a listener to changes in the model. 

    listener - the ChangeListener to add 

*javax.swing.SingleSelectionModel.clearSelection()*

public void clearSelection()

Clears the selection (to -1). 


*javax.swing.SingleSelectionModel.getSelectedIndex()*

public int getSelectedIndex()

Returns the model's selection. 


    Returns: the model's selection, or -1 if there is no selection 
*javax.swing.SingleSelectionModel.isSelected()*

public boolean isSelected()

Returns true if the selection model currently has a selected value. 


    Returns: true if a value is currently selected 
*javax.swing.SingleSelectionModel.removeChangeListener(ChangeListener)*

public void removeChangeListener(javax.swing.event.ChangeListener listener)

Removes listener as a listener to changes in the model. 

    listener - the ChangeListener to remove 

*javax.swing.SingleSelectionModel.setSelectedIndex(int)*

public void setSelectedIndex(int index)

Sets the model's selected index to index. 

Notifies any listeners if the model changes 

    index - an int specifying the model selection 


