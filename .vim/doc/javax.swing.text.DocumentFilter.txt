*javax.swing.text.DocumentFilter* *DocumentFilter* DocumentFilter, as the name implies, is a filter for the
 Document mutation methods.

public class DocumentFilter
  extends    |java.lang.Object|

|javax.swing.text.DocumentFilter_Description|
|javax.swing.text.DocumentFilter_Fields|
|javax.swing.text.DocumentFilter_Constructors|
|javax.swing.text.DocumentFilter_Methods|

====================================================================================================================================================================================

*javax.swing.text.DocumentFilter_Constructors*
|javax.swing.text.DocumentFilter()|

*javax.swing.text.DocumentFilter_Methods*
|javax.swing.text.DocumentFilter.insertString(DocumentFilter.FilterBypass,int,String,AttributeSet)|Invoked prior to insertion of text into the  specified Document.
|javax.swing.text.DocumentFilter.remove(DocumentFilter.FilterBypass,int,int)|Invoked prior to removal of the specified region in the  specified Document.
|javax.swing.text.DocumentFilter.replace(DocumentFilter.FilterBypass,int,int,String,AttributeSet)|Invoked prior to replacing a region of text in the  specified Document.

*javax.swing.text.DocumentFilter_Description*

DocumentFilter, as the name implies, is a filter for the Document mutation methods. When a Document containing a DocumentFilter is modified (either through insert or remove), it 
forwards the appropriate method invocation to the DocumentFilter. The default implementation allows the modification to occur. Subclasses can filter the modifications by 
conditionally invoking methods on the superclass, or invoking the necessary methods on the passed in FilterBypass. Subclasses should NOT call back into the Document for the 
modification instead call into the superclass or the FilterBypass. 

When remove or insertString is invoked on the DocumentFilter, the DocumentFilter may callback into the FilterBypass multiple times, or for different regions, but it should not 
callback into the FilterBypass after returning from the remove or insertString method. 



*javax.swing.text.DocumentFilter()*

public DocumentFilter()




*javax.swing.text.DocumentFilter.insertString(DocumentFilter.FilterBypass,int,String,AttributeSet)*

public void insertString(
  javax.swing.text.DocumentFilter.FilterBypass fb,
  int offset,
  java.lang.String string,
  javax.swing.text.AttributeSet attr)
  throws |javax.swing.text.BadLocationException|
         
Invoked prior to insertion of text into the specified Document. Subclasses that want to conditionally allow insertion should override this and only call supers implementation as 
necessary, or call directly into the FilterBypass. 


    fb - FilterBypass that can be used to mutate Document 
    offset - the offset into the document to insert the content >= 0. All positions that track change at or after the given location will move. 
    string - the string to insert 
    attr - the attributes to associate with the inserted content. This may be null if there are no attributes. 

*javax.swing.text.DocumentFilter.remove(DocumentFilter.FilterBypass,int,int)*

public void remove(
  javax.swing.text.DocumentFilter.FilterBypass fb,
  int offset,
  int length)
  throws |javax.swing.text.BadLocationException|
         
Invoked prior to removal of the specified region in the specified Document. Subclasses that want to conditionally allow removal should override this and only call supers 
implementation as necessary, or call directly into the FilterBypass as necessary. 


    fb - FilterBypass that can be used to mutate Document 
    offset - the offset from the beginning >= 0 
    length - the number of characters to remove >= 0 

*javax.swing.text.DocumentFilter.replace(DocumentFilter.FilterBypass,int,int,String,AttributeSet)*

public void replace(
  javax.swing.text.DocumentFilter.FilterBypass fb,
  int offset,
  int length,
  java.lang.String text,
  javax.swing.text.AttributeSet attrs)
  throws |javax.swing.text.BadLocationException|
         
Invoked prior to replacing a region of text in the specified Document. Subclasses that want to conditionally allow replace should override this and only call supers implementation 
as necessary, or call directly into the FilterBypass. 


    fb - FilterBypass that can be used to mutate Document 
    offset - Location in Document 
    length - Length of text to delete 
    text - Text to insert, null indicates no text to insert 
    attrs - AttributeSet indicating attributes of inserted text, null is legal. 


