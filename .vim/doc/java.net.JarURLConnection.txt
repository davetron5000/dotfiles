*java.net.JarURLConnection* *JarURLConnection* A URL Connection to a Java ARchive (JAR) file or an entry in a JAR
 file.

public abstract class JarURLConnection
  extends    |java.net.URLConnection|

|java.net.JarURLConnection_Description|
|java.net.JarURLConnection_Fields|
|java.net.JarURLConnection_Constructors|
|java.net.JarURLConnection_Methods|

====================================================================================================================================================================================

*java.net.JarURLConnection_Fields*
|java.net.URLConnection_java.net.JarURLConnection.jarFileURLConnection|

*java.net.JarURLConnection_Constructors*
|java.net.JarURLConnection(URL)|Creates the new JarURLConnection to the specified URL.

*java.net.JarURLConnection_Methods*
|java.net.JarURLConnection.getAttributes()|Return the Attributes object for this connection if the URL  for it points to a JAR file entry, null otherwise.
|java.net.JarURLConnection.getCertificates()|Return the Certificate object for this connection if the URL  for it points to a JAR file entry, null otherwise.
|java.net.JarURLConnection.getEntryName()|Return the entry name for this connection.
|java.net.JarURLConnection.getJarEntry()|Return the JAR entry object for this connection, if any.
|java.net.JarURLConnection.getJarFile()|Return the JAR file for this connection.
|java.net.JarURLConnection.getJarFileURL()|Returns the URL for the Jar file for this connection.
|java.net.JarURLConnection.getMainAttributes()|Returns the main Attributes for the JAR file for this  connection.
|java.net.JarURLConnection.getManifest()|Returns the Manifest for this connection, or null if none.

*java.net.JarURLConnection_Description*

A URL Connection to a Java ARchive (JAR) file or an entry in a JAR file. 

The syntax of a JAR URL is: 



jar:<url>!/{entry} 

for example: 

jar:http://www.foo.com/bar/baz.jar!/COM/foo/Quux.class 

Jar URLs should be used to refer to a JAR file or entries in a JAR file. The example above is a JAR URL which refers to a JAR entry. If the entry name is omitted, the URL refers 
to the whole JAR file: 

jar:http://www.foo.com/bar/baz.jar!/ 

Users should cast the generic URLConnection to a JarURLConnection when they know that the URL they created is a JAR URL, and they need JAR-specific functionality. For example: 



URL url = new URL("jar:file:/home/duke/duke.jar!/"); JarURLConnection jarConnection = (JarURLConnection)url.openConnection(); Manifest manifest = jarConnection.getManifest(); 

JarURLConnection instances can only be used to read from JAR files. It is not possible to get a (|java.io.OutputStream|) to modify or write to the underlying JAR file using this 
class. Examples: 



A Jar entry jar:http://www.foo.com/bar/baz.jar!/COM/foo/Quux.class 

A Jar file jar:http://www.foo.com/bar/baz.jar!/ 

A Jar directory jar:http://www.foo.com/bar/baz.jar!/COM/foo/ 



!/ is refered to as the separator. 

When constructing a JAR url via new URL(context, spec), the following rules apply: 



if there is no context URL and the specification passed to the URL constructor doesn't contain a separator, the URL is considered to refer to a JarFile. 

if there is a context URL, the context URL is assumed to refer to a JAR file or a Jar directory. 

if the specification begins with a '/', the Jar directory is ignored, and the spec is considered to be at the root of the Jar file. 

Examples: 



context: jar:http://www.foo.com/bar/jar.jar!/, spec:baz/entry.txt 

url:jar:http://www.foo.com/bar/jar.jar!/baz/entry.txt 

context: jar:http://www.foo.com/bar/jar.jar!/baz, spec:entry.txt 

url:jar:http://www.foo.com/bar/jar.jar!/baz/entry.txt 

context: jar:http://www.foo.com/bar/jar.jar!/baz, spec:/entry.txt 

url:jar:http://www.foo.com/bar/jar.jar!/entry.txt 







*java.net.URLConnection_java.net.JarURLConnection.jarFileURLConnection*

The connection to the JAR file URL, if the connection has been initiated. This should be set by connect. 



*java.net.JarURLConnection(URL)*

protected JarURLConnection(java.net.URL url)
  throws |java.net.MalformedURLException|
         
Creates the new JarURLConnection to the specified URL. 

    url - the URL 

*java.net.JarURLConnection.getAttributes()*

public |java.util.jar.Attributes| getAttributes()
  throws |java.io.IOException|
         
Return the Attributes object for this connection if the URL for it points to a JAR file entry, null otherwise. 



    Returns: the Attributes object for this connection if the URL for it points to a JAR file entry, null otherwise. 

*java.net.JarURLConnection.getCertificates()*

public |java.security.cert.Certificate|[] getCertificates()
  throws |java.io.IOException|
         
Return the Certificate object for this connection if the URL for it points to a JAR file entry, null otherwise. This method can only be called once the connection has been 
completely verified by reading from the input stream until the end of the stream has been reached. Otherwise, this method will return null 



    Returns: the Certificate object for this connection if the URL for it points to a JAR file entry, null otherwise. 

*java.net.JarURLConnection.getEntryName()*

public |java.lang.String| getEntryName()

Return the entry name for this connection. This method returns null if the JAR file URL corresponding to this connection points to a JAR file and not a JAR file entry. 



    Returns: the entry name for this connection, if any. 

*java.net.JarURLConnection.getJarEntry()*

public |java.util.jar.JarEntry| getJarEntry()
  throws |java.io.IOException|
         
Return the JAR entry object for this connection, if any. This method returns null if the JAR file URL corresponding to this connection points to a JAR file and not a JAR file 
entry. 



    Returns: the JAR entry object for this connection, or null if the JAR URL for this connection points to a JAR file. 

*java.net.JarURLConnection.getJarFile()*

public abstract |java.util.jar.JarFile| getJarFile()
  throws |java.io.IOException|
         
Return the JAR file for this connection. 



    Returns: the JAR file for this connection. If the connection is a connection to an entry of a JAR file, the JAR file object is returned 

*java.net.JarURLConnection.getJarFileURL()*

public |java.net.URL| getJarFileURL()

Returns the URL for the Jar file for this connection. 



    Returns: the URL for the Jar file for this connection. 

*java.net.JarURLConnection.getMainAttributes()*

public |java.util.jar.Attributes| getMainAttributes()
  throws |java.io.IOException|
         
Returns the main Attributes for the JAR file for this connection. 



    Returns: the main Attributes for the JAR file for this connection. 

*java.net.JarURLConnection.getManifest()*

public |java.util.jar.Manifest| getManifest()
  throws |java.io.IOException|
         
Returns the Manifest for this connection, or null if none. 



    Returns: the manifest object corresponding to the JAR file object for this connection. 


