*java.net.Inet4Address* *Inet4Address* This class represents an Internet Protoco

public final class Inet4Address
  extends    |java.net.InetAddress|

|java.net.Inet4Address_Description|
|java.net.Inet4Address_Fields|
|java.net.Inet4Address_Constructors|
|java.net.Inet4Address_Methods|

================================================================================

*java.net.Inet4Address_Methods*
|java.net.Inet4Address.equals(Object)|Compares this object against the specifie
|java.net.Inet4Address.getAddress()|Returns the raw IP address of this InetAddr
|java.net.Inet4Address.getHostAddress()|Returns the IP address string in textua
|java.net.Inet4Address.hashCode()|Returns a hashcode for this IP address.
|java.net.Inet4Address.isAnyLocalAddress()|Utility routine to check if the Inet
|java.net.Inet4Address.isLinkLocalAddress()|Utility routine to check if the Ine
|java.net.Inet4Address.isLoopbackAddress()|
|java.net.Inet4Address.isMCGlobal()|Utility routine to check if the multicast a
|java.net.Inet4Address.isMCLinkLocal()|Utility routine to check if the multicas
|java.net.Inet4Address.isMCNodeLocal()|Utility routine to check if the multicas
|java.net.Inet4Address.isMCOrgLocal()|Utility routine to check if the multicast
|java.net.Inet4Address.isMCSiteLocal()|Utility routine to check if the multicas
|java.net.Inet4Address.isMulticastAddress()|Utility routine to check if the Ine
|java.net.Inet4Address.isSiteLocalAddress()|Utility routine to check if the Ine

*java.net.Inet4Address_Description*

This class represents an Internet Protocol version 4 (IPv4) address. Defined by 
RFC790: Assigned Numbers, 

RFC1918: Address Allocation for Private Internets, and RFC2365: 
Administratively Scoped IP Multicast 

Textual representation of IP addresses 

Textual representation of IPv4 address used as input to methods takes one of 
the following forms: 

d.d.d.d d.d.d d.d d 

When four parts are specified, each is interpreted as a byte of data and 
assigned, from left to right, to the four bytes of an IPv4 address. 

When a three part address is specified, the last part is interpreted as a 
16-bit quantity and placed in the right most two bytes of the network address. 
This makes the three part address format convenient for specifying Class B net- 
work addresses as 128.net.host. 

When a two part address is supplied, the last part is interpreted as a 24-bit 
quantity and placed in the right most three bytes of the network address. This 
makes the two part address format convenient for specifying Class A network 
addresses as net.host. 

When only one part is given, the value is stored directly in the network 
address without any byte rearrangement. 

For methods that return a textual representation as output value, the first 
form, i.e. a dotted-quad string, is used. 

The Scope of a Multicast Address 

Historically the IPv4 TTL field in the IP header has doubled as a multicast 
scope field: a TTL of 0 means node-local, 1 means link-local, up through 32 
means site-local, up through 64 means region-local, up through 128 means 
continent-local, and up through 255 are global. However, the administrative 
scoping is preferred. Please refer to RFC2365: Administratively Scoped IP 
Multicast 


*java.net.Inet4Address.equals(Object)*

public boolean equals(java.lang.Object obj)

Compares this object against the specified object. The result is true if and 
only if the argument is not null and it represents the same IP address as this 
object. 

Two instances of InetAddress represent the same IP address if the length of the 
byte arrays returned by getAddress is the same for both, and each of the array 
components is the same for the byte arrays. 

    obj - the object to compare against. 

    Returns: true if the objects are the same; false otherwise. 
*java.net.Inet4Address.getAddress()*

public byte getAddress()

Returns the raw IP address of this InetAddress object. The result is in network 
byte order: the highest order byte of the address is in getAddress()[0]. 


    Returns: the raw IP address of this object. 
*java.net.Inet4Address.getHostAddress()*

public |java.lang.String| getHostAddress()

Returns the IP address string in textual presentation form. 


    Returns: the raw IP address in a string format. 
*java.net.Inet4Address.hashCode()*

public int hashCode()

Returns a hashcode for this IP address. 


    Returns: a hash code value for this IP address. 
*java.net.Inet4Address.isAnyLocalAddress()*

public boolean isAnyLocalAddress()

Utility routine to check if the InetAddress in a wildcard address. 


    Returns: a boolean indicating if the Inetaddress is a wildcard address. 
*java.net.Inet4Address.isLinkLocalAddress()*

public boolean isLinkLocalAddress()

Utility routine to check if the InetAddress is an link local address. 


    Returns: a boolean indicating if the InetAddress is a link local address; or false if 
             address is not a link local unicast address. 
*java.net.Inet4Address.isLoopbackAddress()*

public boolean isLoopbackAddress()




*java.net.Inet4Address.isMCGlobal()*

public boolean isMCGlobal()

Utility routine to check if the multicast address has global scope. 


    Returns: a boolean indicating if the address has is a multicast address of global scope, 
             false if it is not of global scope or it is not a multicast 
             address 
*java.net.Inet4Address.isMCLinkLocal()*

public boolean isMCLinkLocal()

Utility routine to check if the multicast address has link scope. 


    Returns: a boolean indicating if the address has is a multicast address of link-local 
             scope, false if it is not of link-local scope or it is not a 
             multicast address 
*java.net.Inet4Address.isMCNodeLocal()*

public boolean isMCNodeLocal()

Utility routine to check if the multicast address has node scope. 


    Returns: a boolean indicating if the address has is a multicast address of node-local 
             scope, false if it is not of node-local scope or it is not a 
             multicast address 
*java.net.Inet4Address.isMCOrgLocal()*

public boolean isMCOrgLocal()

Utility routine to check if the multicast address has organization scope. 


    Returns: a boolean indicating if the address has is a multicast address of 
             organization-local scope, false if it is not of organization-local 
             scope or it is not a multicast address 
*java.net.Inet4Address.isMCSiteLocal()*

public boolean isMCSiteLocal()

Utility routine to check if the multicast address has site scope. 


    Returns: a boolean indicating if the address has is a multicast address of site-local 
             scope, false if it is not of site-local scope or it is not a 
             multicast address 
*java.net.Inet4Address.isMulticastAddress()*

public boolean isMulticastAddress()

Utility routine to check if the InetAddress is an IP multicast address. IP 
multicast address is a Class D address i.e first four bits of the address are 
1110. 


    Returns: a boolean indicating if the InetAddress is an IP multicast address 
*java.net.Inet4Address.isSiteLocalAddress()*

public boolean isSiteLocalAddress()

Utility routine to check if the InetAddress is a site local address. 


    Returns: a boolean indicating if the InetAddress is a site local address; or false if 
             address is not a site local unicast address. 

