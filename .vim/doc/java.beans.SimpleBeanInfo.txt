*java.beans.SimpleBeanInfo* *SimpleBeanInfo* This is a support class to make it easier for people to provide
 BeanInfo classes.

public class SimpleBeanInfo
  extends    |java.lang.Object|
  implements |java.beans.BeanInfo|

|java.beans.SimpleBeanInfo_Description|
|java.beans.SimpleBeanInfo_Fields|
|java.beans.SimpleBeanInfo_Constructors|
|java.beans.SimpleBeanInfo_Methods|

====================================================================================================================================================================================

*java.beans.SimpleBeanInfo_Constructors*
|java.beans.SimpleBeanInfo()|

*java.beans.SimpleBeanInfo_Methods*
|java.beans.SimpleBeanInfo.getAdditionalBeanInfo()|Claim there are no other relevant BeanInfo objects.
|java.beans.SimpleBeanInfo.getBeanDescriptor()|Deny knowledge about the class and customizer of the bean.
|java.beans.SimpleBeanInfo.getDefaultEventIndex()|Deny knowledge of a default event.
|java.beans.SimpleBeanInfo.getDefaultPropertyIndex()|Deny knowledge of a default property.
|java.beans.SimpleBeanInfo.getEventSetDescriptors()|Deny knowledge of event sets.
|java.beans.SimpleBeanInfo.getIcon(int)|Claim there are no icons available.
|java.beans.SimpleBeanInfo.getMethodDescriptors()|Deny knowledge of methods.
|java.beans.SimpleBeanInfo.getPropertyDescriptors()|Deny knowledge of properties.
|java.beans.SimpleBeanInfo.loadImage(String)|This is a utility method to help in loading icon images.

*java.beans.SimpleBeanInfo_Description*

This is a support class to make it easier for people to provide BeanInfo classes. 

It defaults to providing "noop" information, and can be selectively overriden to provide more explicit information on chosen topics. When the introspector sees the "noop" values, 
it will apply low level introspection and design patterns to automatically analyze the target bean. 



*java.beans.SimpleBeanInfo()*

public SimpleBeanInfo()




*java.beans.SimpleBeanInfo.getAdditionalBeanInfo()*

public |java.beans.BeanInfo|[] getAdditionalBeanInfo()

Claim there are no other relevant BeanInfo objects. You may override this if you want to (for example) return a BeanInfo for a base class. 



*java.beans.SimpleBeanInfo.getBeanDescriptor()*

public |java.beans.BeanDescriptor| getBeanDescriptor()

Deny knowledge about the class and customizer of the bean. You can override this if you wish to provide explicit info. 



*java.beans.SimpleBeanInfo.getDefaultEventIndex()*

public int getDefaultEventIndex()

Deny knowledge of a default event. You can override this if you wish to define a default event for the bean. 



*java.beans.SimpleBeanInfo.getDefaultPropertyIndex()*

public int getDefaultPropertyIndex()

Deny knowledge of a default property. You can override this if you wish to define a default property for the bean. 



*java.beans.SimpleBeanInfo.getEventSetDescriptors()*

public |java.beans.EventSetDescriptor|[] getEventSetDescriptors()

Deny knowledge of event sets. You can override this if you wish to provide explicit event set info. 



*java.beans.SimpleBeanInfo.getIcon(int)*

public |java.awt.Image| getIcon(int iconKind)

Claim there are no icons available. You can override this if you want to provide icons for your bean. 



*java.beans.SimpleBeanInfo.getMethodDescriptors()*

public |java.beans.MethodDescriptor|[] getMethodDescriptors()

Deny knowledge of methods. You can override this if you wish to provide explicit method info. 



*java.beans.SimpleBeanInfo.getPropertyDescriptors()*

public |java.beans.PropertyDescriptor|[] getPropertyDescriptors()

Deny knowledge of properties. You can override this if you wish to provide explicit property info. 



*java.beans.SimpleBeanInfo.loadImage(String)*

public |java.awt.Image| loadImage(java.lang.String resourceName)

This is a utility method to help in loading icon images. It takes the name of a resource file associated with the current object's class file and loads an image object from that 
file. Typically images will be GIFs. 


    resourceName - A pathname relative to the directory holding the class file of the current class. For example, "wombat.gif". 

    Returns: an image object. May be null if the load failed. 


