*java.awt.TextComponent.AccessibleAWTTextComponent* *TextComponent.AccessibleAWTTextComponent* This class implements accessibility support for the 
 TextComponent class.

protected class TextComponent.AccessibleAWTTextComponent
  extends    |java.awt.Component.AccessibleAWTComponent|
  implements |javax.accessibility.AccessibleText|
             |java.awt.event.TextListener|

|java.awt.TextComponent.AccessibleAWTTextComponent_Description|
|java.awt.TextComponent.AccessibleAWTTextComponent_Fields|
|java.awt.TextComponent.AccessibleAWTTextComponent_Constructors|
|java.awt.TextComponent.AccessibleAWTTextComponent_Methods|

====================================================================================================================================================================================

*java.awt.TextComponent.AccessibleAWTTextComponent_Constructors*
|java.awt.TextComponent.AccessibleAWTTextComponent()|Constructs an AccessibleAWTTextComponent.

*java.awt.TextComponent.AccessibleAWTTextComponent_Methods*
|java.awt.TextComponent.AccessibleAWTTextComponent.getAccessibleRole()|Gets the role of this object.
|java.awt.TextComponent.AccessibleAWTTextComponent.getAccessibleStateSet()|Gets the state set of the TextComponent.
|java.awt.TextComponent.AccessibleAWTTextComponent.getAccessibleText()|Get the AccessibleText associated with this object.
|java.awt.TextComponent.AccessibleAWTTextComponent.getAfterIndex(int,int)|Returns the String after a given index.
|java.awt.TextComponent.AccessibleAWTTextComponent.getAtIndex(int,int)|Returns the String at a given index.
|java.awt.TextComponent.AccessibleAWTTextComponent.getBeforeIndex(int,int)|Returns the String before a given index.
|java.awt.TextComponent.AccessibleAWTTextComponent.getCaretPosition()|Returns the zero-based offset of the caret.
|java.awt.TextComponent.AccessibleAWTTextComponent.getCharacterAttribute(int)|Returns the AttributeSet for a given character (at a given index).
|java.awt.TextComponent.AccessibleAWTTextComponent.getCharacterBounds(int)|Determines the bounding box of the character at the given  index into the string.
|java.awt.TextComponent.AccessibleAWTTextComponent.getCharCount()|Returns the number of characters (valid indicies)
|java.awt.TextComponent.AccessibleAWTTextComponent.getIndexAtPoint(Point)|Given a point in local coordinates, return the zero-based index  of the character under that Point.
|java.awt.TextComponent.AccessibleAWTTextComponent.getSelectedText()|Returns the portion of the text that is selected.
|java.awt.TextComponent.AccessibleAWTTextComponent.getSelectionEnd()|Returns the end offset within the selected text.
|java.awt.TextComponent.AccessibleAWTTextComponent.getSelectionStart()|Returns the start offset within the selected text.
|java.awt.TextComponent.AccessibleAWTTextComponent.textValueChanged(TextEvent)|TextListener notification of a text value change.

*java.awt.TextComponent.AccessibleAWTTextComponent_Description*

This class implements accessibility support for the TextComponent class. It provides an implementation of the Java Accessibility API appropriate to text component user-interface 
elements. 



*java.awt.TextComponent.AccessibleAWTTextComponent()*

public TextComponent.AccessibleAWTTextComponent()

Constructs an AccessibleAWTTextComponent. Adds a listener to track caret change. 


*java.awt.TextComponent.AccessibleAWTTextComponent.getAccessibleRole()*

public |javax.accessibility.AccessibleRole| getAccessibleRole()

Gets the role of this object. 



    Returns: an instance of AccessibleRole describing the role of the object (AccessibleRole.TEXT) 

*java.awt.TextComponent.AccessibleAWTTextComponent.getAccessibleStateSet()*

public |javax.accessibility.AccessibleStateSet| getAccessibleStateSet()

Gets the state set of the TextComponent. The AccessibleStateSet of an object is composed of a set of unique AccessibleStates. A change in the AccessibleStateSet of an object will 
cause a PropertyChangeEvent to be fired for the AccessibleContext.ACCESSIBLE_STATE_PROPERTY property. 



    Returns: an instance of AccessibleStateSet containing the current state set of the object 

*java.awt.TextComponent.AccessibleAWTTextComponent.getAccessibleText()*

public |javax.accessibility.AccessibleText| getAccessibleText()

Get the AccessibleText associated with this object. In the implementation of the Java Accessibility API for this class, return this object, which is responsible for implementing 
the AccessibleText interface on behalf of itself. 



    Returns: 

*java.awt.TextComponent.AccessibleAWTTextComponent.getAfterIndex(int,int)*

public |java.lang.String| getAfterIndex(
  int part,
  int index)

Returns the String after a given index. 


    part - the AccessibleText.CHARACTER, AccessibleText.WORD, or AccessibleText.SENTENCE to retrieve 
    index - an index within the text >= 0 

    Returns: the letter, word, or sentence, null for an invalid index or part 

*java.awt.TextComponent.AccessibleAWTTextComponent.getAtIndex(int,int)*

public |java.lang.String| getAtIndex(
  int part,
  int index)

Returns the String at a given index. 


    part - the AccessibleText.CHARACTER, AccessibleText.WORD, or AccessibleText.SENTENCE to retrieve 
    index - an index within the text >= 0 

    Returns: the letter, word, or sentence, null for an invalid index or part 

*java.awt.TextComponent.AccessibleAWTTextComponent.getBeforeIndex(int,int)*

public |java.lang.String| getBeforeIndex(
  int part,
  int index)

Returns the String before a given index. 


    part - the AccessibleText.CHARACTER, AccessibleText.WORD, or AccessibleText.SENTENCE to retrieve 
    index - an index within the text >= 0 

    Returns: the letter, word, or sentence, null for an invalid index or part 

*java.awt.TextComponent.AccessibleAWTTextComponent.getCaretPosition()*

public int getCaretPosition()

Returns the zero-based offset of the caret. 

Note: The character to the right of the caret will have the same index value as the offset (the caret is between two characters). 



    Returns: the zero-based offset of the caret. 

*java.awt.TextComponent.AccessibleAWTTextComponent.getCharacterAttribute(int)*

public |javax.swing.text.AttributeSet| getCharacterAttribute(int i)

Returns the AttributeSet for a given character (at a given index). 


    i - the zero-based index into the text 

    Returns: the AttributeSet of the character 

*java.awt.TextComponent.AccessibleAWTTextComponent.getCharacterBounds(int)*

public |java.awt.Rectangle| getCharacterBounds(int i)

Determines the bounding box of the character at the given index into the string. The bounds are returned in local coordinates. If the index is invalid a null rectangle is 
returned. 


    i - the index into the String >= 0 

    Returns: the screen coordinates of the character's bounding box 

*java.awt.TextComponent.AccessibleAWTTextComponent.getCharCount()*

public int getCharCount()

Returns the number of characters (valid indicies) 



    Returns: the number of characters >= 0 

*java.awt.TextComponent.AccessibleAWTTextComponent.getIndexAtPoint(Point)*

public int getIndexAtPoint(java.awt.Point p)

Given a point in local coordinates, return the zero-based index of the character under that Point. If the point is invalid, this method returns -1. 


    p - the Point in local coordinates 

    Returns: the zero-based index of the character under Point p. 

*java.awt.TextComponent.AccessibleAWTTextComponent.getSelectedText()*

public |java.lang.String| getSelectedText()

Returns the portion of the text that is selected. 



    Returns: the text, null if no selection 

*java.awt.TextComponent.AccessibleAWTTextComponent.getSelectionEnd()*

public int getSelectionEnd()

Returns the end offset within the selected text. If there is no selection, but there is a caret, the start and end offsets will be the same. Return 0 if the text is empty, or the 
caret position if no selection. 



    Returns: the index into teh text of the end of the selection >= 0 

*java.awt.TextComponent.AccessibleAWTTextComponent.getSelectionStart()*

public int getSelectionStart()

Returns the start offset within the selected text. If there is no selection, but there is a caret, the start and end offsets will be the same. Return 0 if the text is empty, or 
the caret position if no selection. 



    Returns: the index into the text of the start of the selection >= 0 

*java.awt.TextComponent.AccessibleAWTTextComponent.textValueChanged(TextEvent)*

public void textValueChanged(java.awt.event.TextEvent textEvent)

TextListener notification of a text value change. 




