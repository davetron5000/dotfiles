*javax.swing.event.TreeSelectionEvent* *TreeSelectionEvent* An event that charac

public class TreeSelectionEvent
  extends    |java.util.EventObject|

|javax.swing.event.TreeSelectionEvent_Description|
|javax.swing.event.TreeSelectionEvent_Fields|
|javax.swing.event.TreeSelectionEvent_Constructors|
|javax.swing.event.TreeSelectionEvent_Methods|

================================================================================

*javax.swing.event.TreeSelectionEvent_Fields*
|boolean[]_javax.swing.event.TreeSelectionEvent.areNew|
|javax.swing.tree.TreePath_javax.swing.event.TreeSelectionEvent.newLeadSelectionPath|
|javax.swing.tree.TreePath_javax.swing.event.TreeSelectionEvent.oldLeadSelectionPath|
|javax.swing.tree.TreePath[]_javax.swing.event.TreeSelectionEvent.paths|

*javax.swing.event.TreeSelectionEvent_Constructors*
|javax.swing.event.TreeSelectionEvent(Object,TreePath[],boolean[],TreePath,TreePath)|
|javax.swing.event.TreeSelectionEvent(Object,TreePath,boolean,TreePath,TreePath)|

*javax.swing.event.TreeSelectionEvent_Methods*
|javax.swing.event.TreeSelectionEvent.cloneWithSource(Object)|Returns a copy of
|javax.swing.event.TreeSelectionEvent.getNewLeadSelectionPath()|Returns the cur
|javax.swing.event.TreeSelectionEvent.getOldLeadSelectionPath()|Returns the pat
|javax.swing.event.TreeSelectionEvent.getPath()|Returns the first path element.
|javax.swing.event.TreeSelectionEvent.getPaths()|Returns the paths that have be
|javax.swing.event.TreeSelectionEvent.isAddedPath()|Returns true if the first p
|javax.swing.event.TreeSelectionEvent.isAddedPath(int)|Returns true if the path
|javax.swing.event.TreeSelectionEvent.isAddedPath(TreePath)|Returns true if the

*javax.swing.event.TreeSelectionEvent_Description*

An event that characterizes a change in the current selection. The change is 
based on any number of paths. TreeSelectionListeners will generally query the 
source of the event for the new selected status of each potentially changed 
row. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*boolean[]_javax.swing.event.TreeSelectionEvent.areNew*

An event that characterizes a change in the current selection. The change is 
based on any number of paths. TreeSelectionListeners will generally query the 
source of the event for the new selected status of each potentially changed 
row. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.tree.TreePath_javax.swing.event.TreeSelectionEvent.newLeadSelectionPath*

An event that characterizes a change in the current selection. The change is 
based on any number of paths. TreeSelectionListeners will generally query the 
source of the event for the new selected status of each potentially changed 
row. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.tree.TreePath_javax.swing.event.TreeSelectionEvent.oldLeadSelectionPath*

An event that characterizes a change in the current selection. The change is 
based on any number of paths. TreeSelectionListeners will generally query the 
source of the event for the new selected status of each potentially changed 
row. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.tree.TreePath[]_javax.swing.event.TreeSelectionEvent.paths*

An event that characterizes a change in the current selection. The change is 
based on any number of paths. TreeSelectionListeners will generally query the 
source of the event for the new selected status of each potentially changed 
row. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 



*javax.swing.event.TreeSelectionEvent(Object,TreePath[],boolean[],TreePath,TreePath)*

public TreeSelectionEvent(
  java.lang.Object source,
  javax.swing.tree.TreePath[] paths,
  boolean[] areNew,
  javax.swing.tree.TreePath oldLeadSelectionPath,
  javax.swing.tree.TreePath newLeadSelectionPath)

Represents a change in the selection of a TreeSelectionModel. paths identifies 
the paths that have been either added or removed from the selection. 

    source - source of event 
    paths - the paths that have changed in the selection 

*javax.swing.event.TreeSelectionEvent(Object,TreePath,boolean,TreePath,TreePath)*

public TreeSelectionEvent(
  java.lang.Object source,
  javax.swing.tree.TreePath path,
  boolean isNew,
  javax.swing.tree.TreePath oldLeadSelectionPath,
  javax.swing.tree.TreePath newLeadSelectionPath)

Represents a change in the selection of a TreeSelectionModel. path identifies 
the path that have been either added or removed from the selection. 

    source - source of event 
    path - the path that has changed in the selection 
    isNew - whether or not the path is new to the selection, false means path was removed 
       from the selection. 

*javax.swing.event.TreeSelectionEvent.cloneWithSource(Object)*

public |java.lang.Object| cloneWithSource(java.lang.Object newSource)

Returns a copy of the receiver, but with the source being newSource. 


*javax.swing.event.TreeSelectionEvent.getNewLeadSelectionPath()*

public |javax.swing.tree.TreePath| getNewLeadSelectionPath()

Returns the current lead path. 


*javax.swing.event.TreeSelectionEvent.getOldLeadSelectionPath()*

public |javax.swing.tree.TreePath| getOldLeadSelectionPath()

Returns the path that was previously the lead path. 


*javax.swing.event.TreeSelectionEvent.getPath()*

public |javax.swing.tree.TreePath| getPath()

Returns the first path element. 


*javax.swing.event.TreeSelectionEvent.getPaths()*

public |javax.swing.tree.TreePath| getPaths()

Returns the paths that have been added or removed from the selection. 


*javax.swing.event.TreeSelectionEvent.isAddedPath()*

public boolean isAddedPath()

Returns true if the first path element has been added to the selection, a 
return value of false means the first path has been removed from the selection. 


*javax.swing.event.TreeSelectionEvent.isAddedPath(int)*

public boolean isAddedPath(int index)

Returns true if the path identified by index was added to the selection. A 
return value of false means the path was in the selection but is no longer in 
the selection. This will raise if index = getPaths.length. 


*javax.swing.event.TreeSelectionEvent.isAddedPath(TreePath)*

public boolean isAddedPath(javax.swing.tree.TreePath path)

Returns true if the path identified by path was added to the selection. A 
return value of false means the path was in the selection but is no longer in 
the selection. This will raise if path is not one of the paths identified by 
this event. 



