*javax.swing.text.StyleConstants* *StyleConstants* 
 A collection of well known or common attribute keys
 and methods to apply to an AttributeSet or MutableAttributeSet
 to get/set

public class StyleConstants
  extends    |java.lang.Object|

|javax.swing.text.StyleConstants_Description|
|javax.swing.text.StyleConstants_Fields|
|javax.swing.text.StyleConstants_Constructors|
|javax.swing.text.StyleConstants_Methods|

====================================================================================================================================================================================

*javax.swing.text.StyleConstants_Fields*
|int_javax.swing.text.StyleConstants.ALIGN_CENTER|
|int_javax.swing.text.StyleConstants.ALIGN_JUSTIFIED|
|int_javax.swing.text.StyleConstants.ALIGN_LEFT|
|int_javax.swing.text.StyleConstants.ALIGN_RIGHT|
|java.lang.Object_javax.swing.text.StyleConstants.Alignment|
|java.lang.Object_javax.swing.text.StyleConstants.Background|
|java.lang.Object_javax.swing.text.StyleConstants.BidiLevel|
|java.lang.Object_javax.swing.text.StyleConstants.Bold|
|java.lang.Object_javax.swing.text.StyleConstants.ComponentAttribute|
|java.lang.String_javax.swing.text.StyleConstants.ComponentElementName|
|java.lang.Object_javax.swing.text.StyleConstants.ComposedTextAttribute|
|java.lang.Object_javax.swing.text.StyleConstants.Family|
|java.lang.Object_javax.swing.text.StyleConstants.FirstLineIndent|
|java.lang.Object_javax.swing.text.StyleConstants.FontFamily|
|java.lang.Object_javax.swing.text.StyleConstants.FontSize|
|java.lang.Object_javax.swing.text.StyleConstants.Foreground|
|java.lang.Object_javax.swing.text.StyleConstants.IconAttribute|
|java.lang.String_javax.swing.text.StyleConstants.IconElementName|
|java.lang.Object_javax.swing.text.StyleConstants.Italic|
|java.lang.Object_javax.swing.text.StyleConstants.LeftIndent|
|java.lang.Object_javax.swing.text.StyleConstants.LineSpacing|
|java.lang.Object_javax.swing.text.StyleConstants.ModelAttribute|
|java.lang.Object_javax.swing.text.StyleConstants.NameAttribute|
|java.lang.Object_javax.swing.text.StyleConstants.Orientation|
|java.lang.Object_javax.swing.text.StyleConstants.ResolveAttribute|
|java.lang.Object_javax.swing.text.StyleConstants.RightIndent|
|java.lang.Object_javax.swing.text.StyleConstants.Size|
|java.lang.Object_javax.swing.text.StyleConstants.SpaceAbove|
|java.lang.Object_javax.swing.text.StyleConstants.SpaceBelow|
|java.lang.Object_javax.swing.text.StyleConstants.StrikeThrough|
|java.lang.Object_javax.swing.text.StyleConstants.Subscript|
|java.lang.Object_javax.swing.text.StyleConstants.Superscript|
|java.lang.Object_javax.swing.text.StyleConstants.TabSet|
|java.lang.Object_javax.swing.text.StyleConstants.Underline|

*javax.swing.text.StyleConstants_Methods*
|javax.swing.text.StyleConstants.getAlignment(AttributeSet)|Gets the alignment setting.
|javax.swing.text.StyleConstants.getBackground(AttributeSet)|Gets the background color setting from the attribute list.
|javax.swing.text.StyleConstants.getBidiLevel(AttributeSet)|Gets the BidiLevel setting.
|javax.swing.text.StyleConstants.getComponent(AttributeSet)|Gets the component setting from the attribute list.
|javax.swing.text.StyleConstants.getFirstLineIndent(AttributeSet)|Gets the first line indent setting.
|javax.swing.text.StyleConstants.getFontFamily(AttributeSet)|Gets the font family setting from the attribute list.
|javax.swing.text.StyleConstants.getFontSize(AttributeSet)|Gets the font size setting from the attribute list.
|javax.swing.text.StyleConstants.getForeground(AttributeSet)|Gets the foreground color setting from the attribute list.
|javax.swing.text.StyleConstants.getIcon(AttributeSet)|Gets the icon setting from the attribute list.
|javax.swing.text.StyleConstants.getLeftIndent(AttributeSet)|Gets the left indent setting.
|javax.swing.text.StyleConstants.getLineSpacing(AttributeSet)|Gets the line spacing setting.
|javax.swing.text.StyleConstants.getRightIndent(AttributeSet)|Gets the right indent setting.
|javax.swing.text.StyleConstants.getSpaceAbove(AttributeSet)|Gets the space above setting.
|javax.swing.text.StyleConstants.getSpaceBelow(AttributeSet)|Gets the space below setting.
|javax.swing.text.StyleConstants.getTabSet(AttributeSet)|Gets the TabSet.
|javax.swing.text.StyleConstants.isBold(AttributeSet)|Checks whether the bold attribute is set.
|javax.swing.text.StyleConstants.isItalic(AttributeSet)|Checks whether the italic attribute is set.
|javax.swing.text.StyleConstants.isStrikeThrough(AttributeSet)|Checks whether the strikethrough attribute is set.
|javax.swing.text.StyleConstants.isSubscript(AttributeSet)|Checks whether the subscript attribute is set.
|javax.swing.text.StyleConstants.isSuperscript(AttributeSet)|Checks whether the superscript attribute is set.
|javax.swing.text.StyleConstants.isUnderline(AttributeSet)|Checks whether the underline attribute is set.
|javax.swing.text.StyleConstants.setAlignment(MutableAttributeSet,int)|Sets alignment.
|javax.swing.text.StyleConstants.setBackground(MutableAttributeSet,Color)|Sets the background color.
|javax.swing.text.StyleConstants.setBidiLevel(MutableAttributeSet,int)|Sets the BidiLevel.
|javax.swing.text.StyleConstants.setBold(MutableAttributeSet,boolean)|Sets the bold attribute.
|javax.swing.text.StyleConstants.setComponent(MutableAttributeSet,Component)|Sets the component attribute.
|javax.swing.text.StyleConstants.setFirstLineIndent(MutableAttributeSet,float)|Sets the first line indent.
|javax.swing.text.StyleConstants.setFontFamily(MutableAttributeSet,String)|Sets the font attribute.
|javax.swing.text.StyleConstants.setFontSize(MutableAttributeSet,int)|Sets the font size attribute.
|javax.swing.text.StyleConstants.setForeground(MutableAttributeSet,Color)|Sets the foreground color.
|javax.swing.text.StyleConstants.setIcon(MutableAttributeSet,Icon)|Sets the icon attribute.
|javax.swing.text.StyleConstants.setItalic(MutableAttributeSet,boolean)|Sets the italic attribute.
|javax.swing.text.StyleConstants.setLeftIndent(MutableAttributeSet,float)|Sets left indent.
|javax.swing.text.StyleConstants.setLineSpacing(MutableAttributeSet,float)|Sets line spacing.
|javax.swing.text.StyleConstants.setRightIndent(MutableAttributeSet,float)|Sets right indent.
|javax.swing.text.StyleConstants.setSpaceAbove(MutableAttributeSet,float)|Sets space above.
|javax.swing.text.StyleConstants.setSpaceBelow(MutableAttributeSet,float)|Sets space below.
|javax.swing.text.StyleConstants.setStrikeThrough(MutableAttributeSet,boolean)|Sets the strikethrough attribute.
|javax.swing.text.StyleConstants.setSubscript(MutableAttributeSet,boolean)|Sets the subscript attribute.
|javax.swing.text.StyleConstants.setSuperscript(MutableAttributeSet,boolean)|Sets the superscript attribute.
|javax.swing.text.StyleConstants.setTabSet(MutableAttributeSet,TabSet)|Sets the TabSet.
|javax.swing.text.StyleConstants.setUnderline(MutableAttributeSet,boolean)|Sets the underline attribute.
|javax.swing.text.StyleConstants.toString()|Returns the string representation.

*javax.swing.text.StyleConstants_Description*

A collection of well known or common attribute keys and methods to apply to an AttributeSet or MutableAttributeSet to get/set the properties in a typesafe manner. 

The paragraph attributes form the definition of a paragraph to be rendered. All sizes are specified in points (such as found in postscript), a device independent measure. 





*int_javax.swing.text.StyleConstants.ALIGN_CENTER*

A possible value for paragraph alignment. This specifies that the text is aligned to the center and extra whitespace should be placed equally on the left and right. 


*int_javax.swing.text.StyleConstants.ALIGN_JUSTIFIED*

A possible value for paragraph alignment. This specifies that extra whitespace should be spread out through the rows of the paragraph with the text lined up with the left and 
right indent except on the last line which should be aligned to the left. 


*int_javax.swing.text.StyleConstants.ALIGN_LEFT*

A possible value for paragraph alignment. This specifies that the text is aligned to the left indent and extra whitespace should be placed on the right. 


*int_javax.swing.text.StyleConstants.ALIGN_RIGHT*

A possible value for paragraph alignment. This specifies that the text is aligned to the right indent and extra whitespace should be placed on the left. 


*java.lang.Object_javax.swing.text.StyleConstants.Alignment*

Alignment for the paragraph. The type is Integer. Valid values are: 

ALIGN_LEFT ALIGN_RIGHT ALIGN_CENTER ALIGN_JUSTIFED 


*java.lang.Object_javax.swing.text.StyleConstants.Background*

Name of the background color attribute. 


*java.lang.Object_javax.swing.text.StyleConstants.BidiLevel*

Bidirectional level of a character as assigned by the Unicode bidi algorithm. 


*java.lang.Object_javax.swing.text.StyleConstants.Bold*

Name of the bold attribute. 


*java.lang.Object_javax.swing.text.StyleConstants.ComponentAttribute*

Name of the component attribute. 


*java.lang.String_javax.swing.text.StyleConstants.ComponentElementName*

Name of elements used to represent components. 


*java.lang.Object_javax.swing.text.StyleConstants.ComposedTextAttribute*

Name of the input method composed text attribute. The value of this attribute is an instance of AttributedString which represents the composed text. 


*java.lang.Object_javax.swing.text.StyleConstants.Family*

Name of the font family. 


*java.lang.Object_javax.swing.text.StyleConstants.FirstLineIndent*

The amount of space to indent the first line of the paragraph. This value may be negative to offset in the reverse direction. The type is Float and specifies the size of the space 
in points. 


*java.lang.Object_javax.swing.text.StyleConstants.FontFamily*

Name of the font family. 


*java.lang.Object_javax.swing.text.StyleConstants.FontSize*

Name of the font size. 


*java.lang.Object_javax.swing.text.StyleConstants.Foreground*

Name of the foreground color attribute. 


*java.lang.Object_javax.swing.text.StyleConstants.IconAttribute*

Name of the icon attribute. 


*java.lang.String_javax.swing.text.StyleConstants.IconElementName*

Name of elements used to represent icons. 


*java.lang.Object_javax.swing.text.StyleConstants.Italic*

Name of the italic attribute. 


*java.lang.Object_javax.swing.text.StyleConstants.LeftIndent*

The amount to indent the left side of the paragraph. Type is float and specifies the size in points. 


*java.lang.Object_javax.swing.text.StyleConstants.LineSpacing*

The amount of space between lines of the paragraph. Type is float and specifies the size as a factor of the line height 


*java.lang.Object_javax.swing.text.StyleConstants.ModelAttribute*

Attribute used to identify the model for embedded objects that have a model view separation. 


*java.lang.Object_javax.swing.text.StyleConstants.NameAttribute*

Attribute name used to name the collection of attributes. 


*java.lang.Object_javax.swing.text.StyleConstants.Orientation*

Orientation for a paragraph. 


*java.lang.Object_javax.swing.text.StyleConstants.ResolveAttribute*

Attribute name used to identifiy the resolving parent set of attributes, if one is defined. 


*java.lang.Object_javax.swing.text.StyleConstants.RightIndent*

The amount to indent the right side of the paragraph. Type is float and specifies the size in points. 


*java.lang.Object_javax.swing.text.StyleConstants.Size*

Name of the font size. 


*java.lang.Object_javax.swing.text.StyleConstants.SpaceAbove*

The amount of space above the paragraph. Type is float and specifies the size in points. 


*java.lang.Object_javax.swing.text.StyleConstants.SpaceBelow*

The amount of space below the paragraph. Type is float and specifies the size in points. 


*java.lang.Object_javax.swing.text.StyleConstants.StrikeThrough*

Name of the Strikethrough attribute. 


*java.lang.Object_javax.swing.text.StyleConstants.Subscript*

Name of the Subscript attribute. 


*java.lang.Object_javax.swing.text.StyleConstants.Superscript*

Name of the Superscript attribute. 


*java.lang.Object_javax.swing.text.StyleConstants.TabSet*

TabSet for the paragraph, type is a TabSet containing TabStops. 


*java.lang.Object_javax.swing.text.StyleConstants.Underline*

Name of the underline attribute. 



*javax.swing.text.StyleConstants.getAlignment(AttributeSet)*

public static int getAlignment(javax.swing.text.AttributeSet a)

Gets the alignment setting. 


    a - the attribute set 

    Returns: the value StyleConstants.ALIGN_LEFT if not set 

*javax.swing.text.StyleConstants.getBackground(AttributeSet)*

public static |java.awt.Color| getBackground(javax.swing.text.AttributeSet a)

Gets the background color setting from the attribute list. 


    a - the attribute set 

    Returns: the color, Color.black as the default 

*javax.swing.text.StyleConstants.getBidiLevel(AttributeSet)*

public static int getBidiLevel(javax.swing.text.AttributeSet a)

Gets the BidiLevel setting. 


    a - the attribute set 

    Returns: 

*javax.swing.text.StyleConstants.getComponent(AttributeSet)*

public static |java.awt.Component| getComponent(javax.swing.text.AttributeSet a)

Gets the component setting from the attribute list. 


    a - the attribute set 

    Returns: the component, null if none 

*javax.swing.text.StyleConstants.getFirstLineIndent(AttributeSet)*

public static float getFirstLineIndent(javax.swing.text.AttributeSet a)

Gets the first line indent setting. 


    a - the attribute set 

    Returns: the value, 0 if not set 

*javax.swing.text.StyleConstants.getFontFamily(AttributeSet)*

public static |java.lang.String| getFontFamily(javax.swing.text.AttributeSet a)

Gets the font family setting from the attribute list. 


    a - the attribute set 

    Returns: the font family, "Monospaced" as the default 

*javax.swing.text.StyleConstants.getFontSize(AttributeSet)*

public static int getFontSize(javax.swing.text.AttributeSet a)

Gets the font size setting from the attribute list. 


    a - the attribute set 

    Returns: the font size, 12 as the default 

*javax.swing.text.StyleConstants.getForeground(AttributeSet)*

public static |java.awt.Color| getForeground(javax.swing.text.AttributeSet a)

Gets the foreground color setting from the attribute list. 


    a - the attribute set 

    Returns: the color, Color.black as the default 

*javax.swing.text.StyleConstants.getIcon(AttributeSet)*

public static |javax.swing.Icon| getIcon(javax.swing.text.AttributeSet a)

Gets the icon setting from the attribute list. 


    a - the attribute set 

    Returns: the icon, null if none 

*javax.swing.text.StyleConstants.getLeftIndent(AttributeSet)*

public static float getLeftIndent(javax.swing.text.AttributeSet a)

Gets the left indent setting. 


    a - the attribute set 

    Returns: the value, 0 if not set 

*javax.swing.text.StyleConstants.getLineSpacing(AttributeSet)*

public static float getLineSpacing(javax.swing.text.AttributeSet a)

Gets the line spacing setting. 


    a - the attribute set 

    Returns: the value, 0 if not set 

*javax.swing.text.StyleConstants.getRightIndent(AttributeSet)*

public static float getRightIndent(javax.swing.text.AttributeSet a)

Gets the right indent setting. 


    a - the attribute set 

    Returns: the value, 0 if not set 

*javax.swing.text.StyleConstants.getSpaceAbove(AttributeSet)*

public static float getSpaceAbove(javax.swing.text.AttributeSet a)

Gets the space above setting. 


    a - the attribute set 

    Returns: the value, 0 if not set 

*javax.swing.text.StyleConstants.getSpaceBelow(AttributeSet)*

public static float getSpaceBelow(javax.swing.text.AttributeSet a)

Gets the space below setting. 


    a - the attribute set 

    Returns: the value, 0 if not set 

*javax.swing.text.StyleConstants.getTabSet(AttributeSet)*

public static |javax.swing.text.TabSet| getTabSet(javax.swing.text.AttributeSet a)

Gets the TabSet. 


    a - the attribute set 

    Returns: 

*javax.swing.text.StyleConstants.isBold(AttributeSet)*

public static boolean isBold(javax.swing.text.AttributeSet a)

Checks whether the bold attribute is set. 


    a - the attribute set 

    Returns: true if set else false 

*javax.swing.text.StyleConstants.isItalic(AttributeSet)*

public static boolean isItalic(javax.swing.text.AttributeSet a)

Checks whether the italic attribute is set. 


    a - the attribute set 

    Returns: true if set else false 

*javax.swing.text.StyleConstants.isStrikeThrough(AttributeSet)*

public static boolean isStrikeThrough(javax.swing.text.AttributeSet a)

Checks whether the strikethrough attribute is set. 


    a - the attribute set 

    Returns: true if set else false 

*javax.swing.text.StyleConstants.isSubscript(AttributeSet)*

public static boolean isSubscript(javax.swing.text.AttributeSet a)

Checks whether the subscript attribute is set. 


    a - the attribute set 

    Returns: true if set else false 

*javax.swing.text.StyleConstants.isSuperscript(AttributeSet)*

public static boolean isSuperscript(javax.swing.text.AttributeSet a)

Checks whether the superscript attribute is set. 


    a - the attribute set 

    Returns: true if set else false 

*javax.swing.text.StyleConstants.isUnderline(AttributeSet)*

public static boolean isUnderline(javax.swing.text.AttributeSet a)

Checks whether the underline attribute is set. 


    a - the attribute set 

    Returns: true if set else false 

*javax.swing.text.StyleConstants.setAlignment(MutableAttributeSet,int)*

public static void setAlignment(
  javax.swing.text.MutableAttributeSet a,
  int align)

Sets alignment. 


    a - the attribute set 
    align - the alignment value 

*javax.swing.text.StyleConstants.setBackground(MutableAttributeSet,Color)*

public static void setBackground(
  javax.swing.text.MutableAttributeSet a,
  java.awt.Color fg)

Sets the background color. 


    a - the attribute set 
    fg - the color 

*javax.swing.text.StyleConstants.setBidiLevel(MutableAttributeSet,int)*

public static void setBidiLevel(
  javax.swing.text.MutableAttributeSet a,
  int o)

Sets the BidiLevel. 


    a - the attribute set 
    o - the bidi level value 

*javax.swing.text.StyleConstants.setBold(MutableAttributeSet,boolean)*

public static void setBold(
  javax.swing.text.MutableAttributeSet a,
  boolean b)

Sets the bold attribute. 


    a - the attribute set 
    b - specifies true/false for setting the attribute 

*javax.swing.text.StyleConstants.setComponent(MutableAttributeSet,Component)*

public static void setComponent(
  javax.swing.text.MutableAttributeSet a,
  java.awt.Component c)

Sets the component attribute. 


    a - the attribute set 
    c - the component 

*javax.swing.text.StyleConstants.setFirstLineIndent(MutableAttributeSet,float)*

public static void setFirstLineIndent(
  javax.swing.text.MutableAttributeSet a,
  float i)

Sets the first line indent. 


    a - the attribute set 
    i - the value 

*javax.swing.text.StyleConstants.setFontFamily(MutableAttributeSet,String)*

public static void setFontFamily(
  javax.swing.text.MutableAttributeSet a,
  java.lang.String fam)

Sets the font attribute. 


    a - the attribute set 
    fam - the font 

*javax.swing.text.StyleConstants.setFontSize(MutableAttributeSet,int)*

public static void setFontSize(
  javax.swing.text.MutableAttributeSet a,
  int s)

Sets the font size attribute. 


    a - the attribute set 
    s - the font size 

*javax.swing.text.StyleConstants.setForeground(MutableAttributeSet,Color)*

public static void setForeground(
  javax.swing.text.MutableAttributeSet a,
  java.awt.Color fg)

Sets the foreground color. 


    a - the attribute set 
    fg - the color 

*javax.swing.text.StyleConstants.setIcon(MutableAttributeSet,Icon)*

public static void setIcon(
  javax.swing.text.MutableAttributeSet a,
  javax.swing.Icon c)

Sets the icon attribute. 


    a - the attribute set 
    c - the icon 

*javax.swing.text.StyleConstants.setItalic(MutableAttributeSet,boolean)*

public static void setItalic(
  javax.swing.text.MutableAttributeSet a,
  boolean b)

Sets the italic attribute. 


    a - the attribute set 
    b - specifies true/false for setting the attribute 

*javax.swing.text.StyleConstants.setLeftIndent(MutableAttributeSet,float)*

public static void setLeftIndent(
  javax.swing.text.MutableAttributeSet a,
  float i)

Sets left indent. 


    a - the attribute set 
    i - the value 

*javax.swing.text.StyleConstants.setLineSpacing(MutableAttributeSet,float)*

public static void setLineSpacing(
  javax.swing.text.MutableAttributeSet a,
  float i)

Sets line spacing. 


    a - the attribute set 
    i - the value 

*javax.swing.text.StyleConstants.setRightIndent(MutableAttributeSet,float)*

public static void setRightIndent(
  javax.swing.text.MutableAttributeSet a,
  float i)

Sets right indent. 


    a - the attribute set 
    i - the value 

*javax.swing.text.StyleConstants.setSpaceAbove(MutableAttributeSet,float)*

public static void setSpaceAbove(
  javax.swing.text.MutableAttributeSet a,
  float i)

Sets space above. 


    a - the attribute set 
    i - the value 

*javax.swing.text.StyleConstants.setSpaceBelow(MutableAttributeSet,float)*

public static void setSpaceBelow(
  javax.swing.text.MutableAttributeSet a,
  float i)

Sets space below. 


    a - the attribute set 
    i - the value 

*javax.swing.text.StyleConstants.setStrikeThrough(MutableAttributeSet,boolean)*

public static void setStrikeThrough(
  javax.swing.text.MutableAttributeSet a,
  boolean b)

Sets the strikethrough attribute. 


    a - the attribute set 
    b - specifies true/false for setting the attribute 

*javax.swing.text.StyleConstants.setSubscript(MutableAttributeSet,boolean)*

public static void setSubscript(
  javax.swing.text.MutableAttributeSet a,
  boolean b)

Sets the subscript attribute. 


    a - the attribute set 
    b - specifies true/false for setting the attribute 

*javax.swing.text.StyleConstants.setSuperscript(MutableAttributeSet,boolean)*

public static void setSuperscript(
  javax.swing.text.MutableAttributeSet a,
  boolean b)

Sets the superscript attribute. 


    a - the attribute set 
    b - specifies true/false for setting the attribute 

*javax.swing.text.StyleConstants.setTabSet(MutableAttributeSet,TabSet)*

public static void setTabSet(
  javax.swing.text.MutableAttributeSet a,
  javax.swing.text.TabSet tabs)

Sets the TabSet. 


    a - the attribute set. 
    tabs - the TabSet 

*javax.swing.text.StyleConstants.setUnderline(MutableAttributeSet,boolean)*

public static void setUnderline(
  javax.swing.text.MutableAttributeSet a,
  boolean b)

Sets the underline attribute. 


    a - the attribute set 
    b - specifies true/false for setting the attribute 

*javax.swing.text.StyleConstants.toString()*

public |java.lang.String| toString()

Returns the string representation. 



    Returns: 


