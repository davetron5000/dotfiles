*javax.print.attribute.standard.PrinterStateReason* *PrinterStateReason* Class PrinterStateReason is a printing attribute class, an enumeration,
 that provides additional informati

public class PrinterStateReason
  extends    |javax.print.attribute.EnumSyntax|
  implements |javax.print.attribute.Attribute|

|javax.print.attribute.standard.PrinterStateReason_Description|
|javax.print.attribute.standard.PrinterStateReason_Fields|
|javax.print.attribute.standard.PrinterStateReason_Constructors|
|javax.print.attribute.standard.PrinterStateReason_Methods|

====================================================================================================================================================================================

*javax.print.attribute.standard.PrinterStateReason_Fields*
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.CONNECTING_TO_DEVICE|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.COVER_OPEN|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.DEVELOPER_EMPTY|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.DEVELOPER_LOW|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.DOOR_OPEN|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.FUSER_OVER_TEMP|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.FUSER_UNDER_TEMP|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.INPUT_TRAY_MISSING|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.INTERLOCK_OPEN|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.INTERPRETER_RESOURCE_UNAVAILABLE|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MARKER_SUPPLY_EMPTY|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MARKER_SUPPLY_LOW|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MARKER_WASTE_ALMOST_FULL|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MARKER_WASTE_FULL|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MEDIA_EMPTY|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MEDIA_JAM|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MEDIA_LOW|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MEDIA_NEEDED|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MOVING_TO_PAUSED|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.OPC_LIFE_OVER|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.OPC_NEAR_EOL|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.OTHER|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.OUTPUT_AREA_ALMOST_FULL|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.OUTPUT_AREA_FULL|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.OUTPUT_TRAY_MISSING|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.PAUSED|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.SHUTDOWN|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.SPOOL_AREA_FULL|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.STOPPED_PARTLY|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.STOPPING|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.TIMED_OUT|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.TONER_EMPTY|
|javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.TONER_LOW|

*javax.print.attribute.standard.PrinterStateReason_Constructors*
|javax.print.attribute.standard.PrinterStateReason(int)|Construct a new printer state reason enumeration value with  the given integer value.

*javax.print.attribute.standard.PrinterStateReason_Methods*
|javax.print.attribute.standard.PrinterStateReason.getCategory()|Get the printing attribute class which is to be used as the "category"   for this printing attribute value.
|javax.print.attribute.standard.PrinterStateReason.getEnumValueTable()|Returns the enumeration value table for class PrinterStateReason.
|javax.print.attribute.standard.PrinterStateReason.getName()|Get the name of the category of which this attribute value is an   instance.
|javax.print.attribute.standard.PrinterStateReason.getStringTable()|Returns the string table for class PrinterStateReason.

*javax.print.attribute.standard.PrinterStateReason_Description*

Class PrinterStateReason is a printing attribute class, an enumeration, that provides additional information about the printer's current state, i.e., information that augments the 
value of the printer's PrinterState(|javax.print.attribute.standard.PrinterState|) attribute. Class PrinterStateReason defines standard printer state reason values. A Print 
Service implementation only needs to report those printer state reasons which are appropriate for the particular implementation; it does not have to report every defined printer 
state reason. 

Instances of PrinterStateReason do not appear in a Print Service's attribute set directly. Rather, a PrinterStateReasons(|javax.print.attribute.standard.PrinterStateReasons|) 
attribute appears in the Print Service's attribute set. The PrinterStateReasons(|javax.print.attribute.standard.PrinterStateReasons|) attribute contains zero, one, or more than 
one PrinterStateReason objects which pertain to the Print Service's status, and each PrinterStateReason object is associated with a 
Severity(|javax.print.attribute.standard.Severity|) level of REPORT (least severe), WARNING, or ERROR (most severe). The printer adds a PrinterStateReason object to the Print 
Service's PrinterStateReasons(|javax.print.attribute.standard.PrinterStateReasons|) attribute when the corresponding condition becomes true of the printer, and the printer 
removesthe PrinterStateReason object again when the corresponding condition becomes false, regardless of whether the Print Service's overall 
PrinterState(|javax.print.attribute.standard.PrinterState|) also changed. 

IPP Compatibility: The string values returned by each individual (|javax.print.attribute.standard.PrinterStateReason|) and associated (|javax.print.attribute.standard.Severity|) 
object's toString() methods, concatenated together with a hyphen ("-") in between, gives the IPP keyword value for a (|javax.print.attribute.standard.PrinterStateReasons|) . The 
category name returned by getName() gives the IPP attribute name. 



*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.CONNECTING_TO_DEVICE*

The printer has scheduled a job on the output device and is in the process of connecting to a shared network output device (and might not be able to actually start printing the 
job for an arbitrarily long time depending on the usage of the output device by other servers on the network). 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.COVER_OPEN*

One or more covers on the device are open. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.DEVELOPER_EMPTY*

The device is out of developer. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.DEVELOPER_LOW*

The device is low on developer. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.DOOR_OPEN*

One or more doors on the device are open. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.FUSER_OVER_TEMP*

The fuser temperature is above normal. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.FUSER_UNDER_TEMP*

The fuser temperature is below normal. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.INPUT_TRAY_MISSING*

One or more input trays are not in the device. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.INTERLOCK_OPEN*

One or more interlock devices on the printer are unlocked. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.INTERPRETER_RESOURCE_UNAVAILABLE*

An interpreter resource is unavailable (e.g., font, form). 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MARKER_SUPPLY_EMPTY*

The device is out of at least one marker supply (e.g. toner, ink, ribbon). 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MARKER_SUPPLY_LOW*

The device is low on at least one marker supply (e.g. toner, ink, ribbon). 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MARKER_WASTE_ALMOST_FULL*

The device marker supply waste receptacle is almost full. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MARKER_WASTE_FULL*

The device marker supply waste receptacle is full. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MEDIA_EMPTY*

At least one input tray is empty. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MEDIA_JAM*

The device has a media jam. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MEDIA_LOW*

At least one input tray is low on media. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MEDIA_NEEDED*

A tray has run out of media. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.MOVING_TO_PAUSED*

Someone has paused the printer, but the device(s) are taking an appreciable time to stop. Later, when all output has stopped, the 
PrinterState(|javax.print.attribute.standard.PrinterState|) becomes STOPPED, and the PAUSED value replaces the MOVING_TO_PAUSED value in the 
PrinterStateReasons(|javax.print.attribute.standard.PrinterStateReasons|) attribute. This value must be supported if the printer can be paused and the implementation takes 
significant time to pause a device in certain circumstances. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.OPC_LIFE_OVER*

The optical photo conductor is no longer functioning. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.OPC_NEAR_EOL*

The optical photo conductor is near end of life. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.OTHER*

The printer has detected an error other than ones listed below. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.OUTPUT_AREA_ALMOST_FULL*

One or more output areas are almost full (e.g. tray, stacker, collator). 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.OUTPUT_AREA_FULL*

One or more output areas are full (e.g. tray, stacker, collator). 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.OUTPUT_TRAY_MISSING*

One or more output trays are not in the device. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.PAUSED*

Someone has paused the printer and the printer's PrinterState(|javax.print.attribute.standard.PrinterState|) is STOPPED. In this state, a printer must not produce printed output, 
but it must perform other operations requested by a client. If a printer had been printing a job when the printer was paused, the Printer must resume printing that job when the 
printer is no longer paused and leave no evidence in the printed output of such a pause. This value must be supported if the printer can be paused. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.SHUTDOWN*

Someone has removed a printer from service, and the device may be powered down or physically removed. In this state, a printer must not produce printed output, and unless the 
printer is realized by a print server that is still active, the printer must perform no other operations requested by a client. If a printer had been printing a job when it was 
shut down, the printer need not resume printing that job when the printer is no longer shut down. If the printer resumes printing such a job, it may leave evidence in the printed 
output of such a shutdown, e.g. the part printed before the shutdown may be printed a second time after the shutdown. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.SPOOL_AREA_FULL*

The limit of persistent storage allocated for spooling has been reached. The printer is temporarily unable to accept more jobs. The printer will remove this reason when it is able 
to accept more jobs. This value should be used by a non-spooling printer that only accepts one or a small number jobs at a time or a spooling printer that has filled the spool 
space. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.STOPPED_PARTLY*

When a printer controls more than one output device, this reason indicates that one or more output devices are stopped. If the reason's severity is a report, fewer than half of 
the output devices are stopped. If the reason's severity is a warning, half or more but fewer than all of the output devices are stopped. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.STOPPING*

The printer is in the process of stopping the device and will be stopped in a while. When the device is stopped, the printer will change the 
PrinterState(|javax.print.attribute.standard.PrinterState|) to STOPPED. The STOPPING reason is never an error, even for a printer with a single output device. When an output 
device ceases accepting jobs, the printer's PrinterStateReasons(|javax.print.attribute.standard.PrinterStateReasons|) will have this reason while the output device completes 
printing. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.TIMED_OUT*

The server was able to connect to the output device (or is always connected), but was unable to get a response from the output device. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.TONER_EMPTY*

The device is out of toner. 


*javax.print.attribute.standard.PrinterStateReason_javax.print.attribute.standard.PrinterStateReason.TONER_LOW*

The device is low on toner. 



*javax.print.attribute.standard.PrinterStateReason(int)*

protected PrinterStateReason(int value)

Construct a new printer state reason enumeration value with the given integer value. 

    value - Integer value. 

*javax.print.attribute.standard.PrinterStateReason.getCategory()*

public final |java.lang.Class|<? extends javax.print.attribute.Attribute> getCategory()

Get the printing attribute class which is to be used as the "category" for this printing attribute value. 

For class PrinterStateReason and any vendor-defined subclasses, the category is class PrinterStateReason itself. 



    Returns: Printing attribute class (category), an instance of class {@link java.lang.Class java.lang.Class}. 

*javax.print.attribute.standard.PrinterStateReason.getEnumValueTable()*

protected |javax.print.attribute.EnumSyntax|[] getEnumValueTable()

Returns the enumeration value table for class PrinterStateReason. 



*javax.print.attribute.standard.PrinterStateReason.getName()*

public final |java.lang.String| getName()

Get the name of the category of which this attribute value is an instance. 

For class PrinterStateReason and any vendor-defined subclasses, the category name is "printer-state-reason". 



    Returns: Attribute category name. 

*javax.print.attribute.standard.PrinterStateReason.getStringTable()*

protected |java.lang.String|[] getStringTable()

Returns the string table for class PrinterStateReason. 




