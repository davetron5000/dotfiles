*java.awt.geom.PathIterator* *PathIterator* The PathIterator interface provides 

public interface interface PathIterator


|java.awt.geom.PathIterator_Description|
|java.awt.geom.PathIterator_Fields|
|java.awt.geom.PathIterator_Constructors|
|java.awt.geom.PathIterator_Methods|

================================================================================

*java.awt.geom.PathIterator_Fields*
|int_java.awt.geom.PathIterator.SEG_CLOSE|
|int_java.awt.geom.PathIterator.SEG_CUBICTO|
|int_java.awt.geom.PathIterator.SEG_LINETO|
|int_java.awt.geom.PathIterator.SEG_MOVETO|
|int_java.awt.geom.PathIterator.SEG_QUADTO|
|int_java.awt.geom.PathIterator.WIND_EVEN_ODD|
|int_java.awt.geom.PathIterator.WIND_NON_ZERO|

*java.awt.geom.PathIterator_Methods*
|java.awt.geom.PathIterator.currentSegment(double[])|Returns the coordinates an
|java.awt.geom.PathIterator.currentSegment(float[])|Returns the coordinates and
|java.awt.geom.PathIterator.getWindingRule()|Returns the winding rule for deter
|java.awt.geom.PathIterator.isDone()|Tests if the iteration is complete.
|java.awt.geom.PathIterator.next()|Moves the iterator to the next segment of th

*java.awt.geom.PathIterator_Description*

The PathIterator interface provides the mechanism for objects that implement 
the Shape(|java.awt.Shape|) interface to return the geometry of their boundary 
by allowing a caller to retrieve the path of that boundary a segment at a time. 
This interface allows these objects to retrieve the path of their boundary a 
segment at a time by using 1st through 3rd order Bzier curves, which are lines 
and quadratic or cubic Bzier splines. 

Multiple subpaths can be expressed by using a "MOVETO" segment to create a 
discontinuity in the geometry to move from the end of one subpath to the 
beginning of the next. 

Each subpath can be closed manually by ending the last segment in the subpath 
on the same coordinate as the beginning "MOVETO" segment for that subpath or by 
using a "CLOSE" segment to append a line segment from the last point back to 
the first. Be aware that manually closing an outline as opposed to using a 
"CLOSE" segment to close the path might result in different line style 
decorations being used at the end points of the subpath. For example, the 
BasicStroke(|java.awt.BasicStroke|) object uses a line "JOIN" decoration to 
connect the first and last points if a "CLOSE" segment is encountered, whereas 
simply ending the path on the same coordinate as the beginning coordinate 
results in line "CAP" decorations being used at the ends. 


*int_java.awt.geom.PathIterator.SEG_CLOSE*

The PathIterator interface provides the mechanism for objects that implement 
the Shape(|java.awt.Shape|) interface to return the geometry of their boundary 
by allowing a caller to retrieve the path of that boundary a segment at a time. 
This interface allows these objects to retrieve the path of their boundary a 
segment at a time by using 1st through 3rd order Bzier curves, which are lines 
and quadratic or cubic Bzier splines. 

Multiple subpaths can be expressed by using a "MOVETO" segment to create a 
discontinuity in the geometry to move from the end of one subpath to the 
beginning of the next. 

Each subpath can be closed manually by ending the last segment in the subpath 
on the same coordinate as the beginning "MOVETO" segment for that subpath or by 
using a "CLOSE" segment to append a line segment from the last point back to 
the first. Be aware that manually closing an outline as opposed to using a 
"CLOSE" segment to close the path might result in different line style 
decorations being used at the end points of the subpath. For example, the 
BasicStroke(|java.awt.BasicStroke|) object uses a line "JOIN" decoration to 
connect the first and last points if a "CLOSE" segment is encountered, whereas 
simply ending the path on the same coordinate as the beginning coordinate 
results in line "CAP" decorations being used at the ends. 


*int_java.awt.geom.PathIterator.SEG_CUBICTO*

The PathIterator interface provides the mechanism for objects that implement 
the Shape(|java.awt.Shape|) interface to return the geometry of their boundary 
by allowing a caller to retrieve the path of that boundary a segment at a time. 
This interface allows these objects to retrieve the path of their boundary a 
segment at a time by using 1st through 3rd order Bzier curves, which are lines 
and quadratic or cubic Bzier splines. 

Multiple subpaths can be expressed by using a "MOVETO" segment to create a 
discontinuity in the geometry to move from the end of one subpath to the 
beginning of the next. 

Each subpath can be closed manually by ending the last segment in the subpath 
on the same coordinate as the beginning "MOVETO" segment for that subpath or by 
using a "CLOSE" segment to append a line segment from the last point back to 
the first. Be aware that manually closing an outline as opposed to using a 
"CLOSE" segment to close the path might result in different line style 
decorations being used at the end points of the subpath. For example, the 
BasicStroke(|java.awt.BasicStroke|) object uses a line "JOIN" decoration to 
connect the first and last points if a "CLOSE" segment is encountered, whereas 
simply ending the path on the same coordinate as the beginning coordinate 
results in line "CAP" decorations being used at the ends. 


*int_java.awt.geom.PathIterator.SEG_LINETO*

The PathIterator interface provides the mechanism for objects that implement 
the Shape(|java.awt.Shape|) interface to return the geometry of their boundary 
by allowing a caller to retrieve the path of that boundary a segment at a time. 
This interface allows these objects to retrieve the path of their boundary a 
segment at a time by using 1st through 3rd order Bzier curves, which are lines 
and quadratic or cubic Bzier splines. 

Multiple subpaths can be expressed by using a "MOVETO" segment to create a 
discontinuity in the geometry to move from the end of one subpath to the 
beginning of the next. 

Each subpath can be closed manually by ending the last segment in the subpath 
on the same coordinate as the beginning "MOVETO" segment for that subpath or by 
using a "CLOSE" segment to append a line segment from the last point back to 
the first. Be aware that manually closing an outline as opposed to using a 
"CLOSE" segment to close the path might result in different line style 
decorations being used at the end points of the subpath. For example, the 
BasicStroke(|java.awt.BasicStroke|) object uses a line "JOIN" decoration to 
connect the first and last points if a "CLOSE" segment is encountered, whereas 
simply ending the path on the same coordinate as the beginning coordinate 
results in line "CAP" decorations being used at the ends. 


*int_java.awt.geom.PathIterator.SEG_MOVETO*

The PathIterator interface provides the mechanism for objects that implement 
the Shape(|java.awt.Shape|) interface to return the geometry of their boundary 
by allowing a caller to retrieve the path of that boundary a segment at a time. 
This interface allows these objects to retrieve the path of their boundary a 
segment at a time by using 1st through 3rd order Bzier curves, which are lines 
and quadratic or cubic Bzier splines. 

Multiple subpaths can be expressed by using a "MOVETO" segment to create a 
discontinuity in the geometry to move from the end of one subpath to the 
beginning of the next. 

Each subpath can be closed manually by ending the last segment in the subpath 
on the same coordinate as the beginning "MOVETO" segment for that subpath or by 
using a "CLOSE" segment to append a line segment from the last point back to 
the first. Be aware that manually closing an outline as opposed to using a 
"CLOSE" segment to close the path might result in different line style 
decorations being used at the end points of the subpath. For example, the 
BasicStroke(|java.awt.BasicStroke|) object uses a line "JOIN" decoration to 
connect the first and last points if a "CLOSE" segment is encountered, whereas 
simply ending the path on the same coordinate as the beginning coordinate 
results in line "CAP" decorations being used at the ends. 


*int_java.awt.geom.PathIterator.SEG_QUADTO*

The PathIterator interface provides the mechanism for objects that implement 
the Shape(|java.awt.Shape|) interface to return the geometry of their boundary 
by allowing a caller to retrieve the path of that boundary a segment at a time. 
This interface allows these objects to retrieve the path of their boundary a 
segment at a time by using 1st through 3rd order Bzier curves, which are lines 
and quadratic or cubic Bzier splines. 

Multiple subpaths can be expressed by using a "MOVETO" segment to create a 
discontinuity in the geometry to move from the end of one subpath to the 
beginning of the next. 

Each subpath can be closed manually by ending the last segment in the subpath 
on the same coordinate as the beginning "MOVETO" segment for that subpath or by 
using a "CLOSE" segment to append a line segment from the last point back to 
the first. Be aware that manually closing an outline as opposed to using a 
"CLOSE" segment to close the path might result in different line style 
decorations being used at the end points of the subpath. For example, the 
BasicStroke(|java.awt.BasicStroke|) object uses a line "JOIN" decoration to 
connect the first and last points if a "CLOSE" segment is encountered, whereas 
simply ending the path on the same coordinate as the beginning coordinate 
results in line "CAP" decorations being used at the ends. 


*int_java.awt.geom.PathIterator.WIND_EVEN_ODD*

The PathIterator interface provides the mechanism for objects that implement 
the Shape(|java.awt.Shape|) interface to return the geometry of their boundary 
by allowing a caller to retrieve the path of that boundary a segment at a time. 
This interface allows these objects to retrieve the path of their boundary a 
segment at a time by using 1st through 3rd order Bzier curves, which are lines 
and quadratic or cubic Bzier splines. 

Multiple subpaths can be expressed by using a "MOVETO" segment to create a 
discontinuity in the geometry to move from the end of one subpath to the 
beginning of the next. 

Each subpath can be closed manually by ending the last segment in the subpath 
on the same coordinate as the beginning "MOVETO" segment for that subpath or by 
using a "CLOSE" segment to append a line segment from the last point back to 
the first. Be aware that manually closing an outline as opposed to using a 
"CLOSE" segment to close the path might result in different line style 
decorations being used at the end points of the subpath. For example, the 
BasicStroke(|java.awt.BasicStroke|) object uses a line "JOIN" decoration to 
connect the first and last points if a "CLOSE" segment is encountered, whereas 
simply ending the path on the same coordinate as the beginning coordinate 
results in line "CAP" decorations being used at the ends. 


*int_java.awt.geom.PathIterator.WIND_NON_ZERO*

The PathIterator interface provides the mechanism for objects that implement 
the Shape(|java.awt.Shape|) interface to return the geometry of their boundary 
by allowing a caller to retrieve the path of that boundary a segment at a time. 
This interface allows these objects to retrieve the path of their boundary a 
segment at a time by using 1st through 3rd order Bzier curves, which are lines 
and quadratic or cubic Bzier splines. 

Multiple subpaths can be expressed by using a "MOVETO" segment to create a 
discontinuity in the geometry to move from the end of one subpath to the 
beginning of the next. 

Each subpath can be closed manually by ending the last segment in the subpath 
on the same coordinate as the beginning "MOVETO" segment for that subpath or by 
using a "CLOSE" segment to append a line segment from the last point back to 
the first. Be aware that manually closing an outline as opposed to using a 
"CLOSE" segment to close the path might result in different line style 
decorations being used at the end points of the subpath. For example, the 
BasicStroke(|java.awt.BasicStroke|) object uses a line "JOIN" decoration to 
connect the first and last points if a "CLOSE" segment is encountered, whereas 
simply ending the path on the same coordinate as the beginning coordinate 
results in line "CAP" decorations being used at the ends. 



*java.awt.geom.PathIterator.currentSegment(double[])*

public int currentSegment(double[] coords)

Returns the coordinates and type of the current path segment in the iteration. 
The return value is the path-segment type: SEG_MOVETO, SEG_LINETO, SEG_QUADTO, 
SEG_CUBICTO, or SEG_CLOSE. A double array of length 6 must be passed in and can 
be used to store the coordinates of the point(s). Each point is stored as a 
pair of double x,y coordinates. SEG_MOVETO and SEG_LINETO types returns one 
point, SEG_QUADTO returns two points, SEG_CUBICTO returns 3 points and 
SEG_CLOSE does not return any points. 

    coords - an array that holds the data returned from this method 

    Returns: the path-segment type of the current path segment. 
*java.awt.geom.PathIterator.currentSegment(float[])*

public int currentSegment(float[] coords)

Returns the coordinates and type of the current path segment in the iteration. 
The return value is the path-segment type: SEG_MOVETO, SEG_LINETO, SEG_QUADTO, 
SEG_CUBICTO, or SEG_CLOSE. A float array of length 6 must be passed in and can 
be used to store the coordinates of the point(s). Each point is stored as a 
pair of float x,y coordinates. SEG_MOVETO and SEG_LINETO types returns one 
point, SEG_QUADTO returns two points, SEG_CUBICTO returns 3 points and 
SEG_CLOSE does not return any points. 

    coords - an array that holds the data returned from this method 

    Returns: the path-segment type of the current path segment. 
*java.awt.geom.PathIterator.getWindingRule()*

public int getWindingRule()

Returns the winding rule for determining the interior of the path. 


    Returns: the winding rule. 
*java.awt.geom.PathIterator.isDone()*

public boolean isDone()

Tests if the iteration is complete. 


    Returns: true if all the segments have been read; false otherwise. 
*java.awt.geom.PathIterator.next()*

public void next()

Moves the iterator to the next segment of the path forwards along the primary 
direction of traversal as long as there are more points in that direction. 



