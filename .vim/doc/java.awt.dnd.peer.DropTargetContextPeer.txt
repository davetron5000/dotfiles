*java.awt.dnd.peer.DropTargetContextPeer* *DropTargetContextPeer* 
 This interface is exposed by the underlying window system platform to 
 enable control of platform DnD operation

public interface interface DropTargetContextPeer


|java.awt.dnd.peer.DropTargetContextPeer_Description|
|java.awt.dnd.peer.DropTargetContextPeer_Fields|
|java.awt.dnd.peer.DropTargetContextPeer_Constructors|
|java.awt.dnd.peer.DropTargetContextPeer_Methods|

====================================================================================================================================================================================

*java.awt.dnd.peer.DropTargetContextPeer_Methods*
|java.awt.dnd.peer.DropTargetContextPeer.acceptDrag(int)|accept the Drag
|java.awt.dnd.peer.DropTargetContextPeer.acceptDrop(int)|accept the Drop
|java.awt.dnd.peer.DropTargetContextPeer.dropComplete(boolean)|signal complete
|java.awt.dnd.peer.DropTargetContextPeer.getDropTarget()|get the DropTarget associated with this peer
|java.awt.dnd.peer.DropTargetContextPeer.getTargetActions()|get the current Target actions
|java.awt.dnd.peer.DropTargetContextPeer.getTransferable()|get an input stream to the remote data
|java.awt.dnd.peer.DropTargetContextPeer.getTransferDataFlavors()|get the (remote) DataFlavors from the peer
|java.awt.dnd.peer.DropTargetContextPeer.isTransferableJVMLocal()|
|java.awt.dnd.peer.DropTargetContextPeer.rejectDrag()|reject the Drag
|java.awt.dnd.peer.DropTargetContextPeer.rejectDrop()|reject the Drop
|java.awt.dnd.peer.DropTargetContextPeer.setTargetActions(int)|update the peer's notion of the Target's actions

*java.awt.dnd.peer.DropTargetContextPeer_Description*

This interface is exposed by the underlying window system platform to enable control of platform DnD operations 



*java.awt.dnd.peer.DropTargetContextPeer.acceptDrag(int)*

public void acceptDrag(int dragAction)

accept the Drag 



*java.awt.dnd.peer.DropTargetContextPeer.acceptDrop(int)*

public void acceptDrop(int dropAction)

accept the Drop 



*java.awt.dnd.peer.DropTargetContextPeer.dropComplete(boolean)*

public void dropComplete(boolean success)

signal complete 



*java.awt.dnd.peer.DropTargetContextPeer.getDropTarget()*

public |java.awt.dnd.DropTarget| getDropTarget()

get the DropTarget associated with this peer 



*java.awt.dnd.peer.DropTargetContextPeer.getTargetActions()*

public int getTargetActions()

get the current Target actions 



*java.awt.dnd.peer.DropTargetContextPeer.getTransferable()*

public |java.awt.datatransfer.Transferable| getTransferable()
  throws |java.awt.dnd.InvalidDnDOperationException|
         
get an input stream to the remote data 



*java.awt.dnd.peer.DropTargetContextPeer.getTransferDataFlavors()*

public |java.awt.datatransfer.DataFlavor|[] getTransferDataFlavors()

get the (remote) DataFlavors from the peer 



*java.awt.dnd.peer.DropTargetContextPeer.isTransferableJVMLocal()*

public boolean isTransferableJVMLocal()





    Returns: if the DragSource Transferable is in the same JVM as the Target 

*java.awt.dnd.peer.DropTargetContextPeer.rejectDrag()*

public void rejectDrag()

reject the Drag 



*java.awt.dnd.peer.DropTargetContextPeer.rejectDrop()*

public void rejectDrop()

reject the Drop 



*java.awt.dnd.peer.DropTargetContextPeer.setTargetActions(int)*

public void setTargetActions(int actions)

update the peer's notion of the Target's actions 




