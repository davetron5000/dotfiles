*java.security.SecureClassLoader* *SecureClassLoader* This class extends ClassLo

public class SecureClassLoader
  extends    |java.lang.ClassLoader|

|java.security.SecureClassLoader_Description|
|java.security.SecureClassLoader_Fields|
|java.security.SecureClassLoader_Constructors|
|java.security.SecureClassLoader_Methods|

================================================================================

*java.security.SecureClassLoader_Constructors*
|java.security.SecureClassLoader()|Creates a new SecureClassLoader using the de
|java.security.SecureClassLoader(ClassLoader)|Creates a new SecureClassLoader u

*java.security.SecureClassLoader_Methods*
|java.security.SecureClassLoader.defineClass(String,byte[],int,int,CodeSource)|
|java.security.SecureClassLoader.defineClass(String,ByteBuffer,CodeSource)|Conv
|java.security.SecureClassLoader.getPermissions(CodeSource)|Returns the permiss

*java.security.SecureClassLoader_Description*

This class extends ClassLoader with additional support for defining classes 
with an associated code source and permissions which are retrieved by the 
system policy by default. 


*java.security.SecureClassLoader()*

protected SecureClassLoader()

Creates a new SecureClassLoader using the default parent class loader for 
delegation. 

If there is a security manager, this method first calls the security manager's 
checkCreateClassLoader method to ensure creation of a class loader is allowed. 


*java.security.SecureClassLoader(ClassLoader)*

protected SecureClassLoader(java.lang.ClassLoader parent)

Creates a new SecureClassLoader using the specified parent class loader for 
delegation. 

If there is a security manager, this method first calls the security manager's 
checkCreateClassLoader method to ensure creation of a class loader is allowed. 

    parent - the parent ClassLoader 

*java.security.SecureClassLoader.defineClass(String,byte[],int,int,CodeSource)*

protected final |java.lang.Class| defineClass(
  java.lang.String name,
  byte[] b,
  int off,
  int len,
  java.security.CodeSource cs)

Converts an array of bytes into an instance of class Class, with an optional 
CodeSource. Before the class can be used it must be resolved. 

If a non-null CodeSource is supplied a ProtectionDomain is constructed and 
associated with the class being defined. 

    name - the expected name of the class, or null if not known, using '.' and not '/' as 
       the separator and without a trailing ".class" suffix. 
    b - the bytes that make up the class data. The bytes in positions off through 
       off+len-1 should have the format of a valid class file as defined by the 
       Java Virtual Machine Specification. 
    off - the start offset in b of the class data 
    len - the length of the class data 
    cs - the associated CodeSource, or null if none 

    Returns: the Class object created from the data, and optional CodeSource. 
*java.security.SecureClassLoader.defineClass(String,ByteBuffer,CodeSource)*

protected final |java.lang.Class| defineClass(
  java.lang.String name,
  java.nio.ByteBuffer b,
  java.security.CodeSource cs)

Converts a <tt>ByteBuffer</tt>(|java.nio.ByteBuffer|) into an instance of class 
Class, with an optional CodeSource. Before the class can be used it must be 
resolved. 

If a non-null CodeSource is supplied a ProtectionDomain is constructed and 
associated with the class being defined. 

    name - the expected name of the class, or null if not known, using '.' and not '/' as 
       the separator and without a trailing ".class" suffix. 
    b - the bytes that make up the class data. The bytes from positions b.position() 
       through b.position() + b.limit() -1 should have the format of a valid 
       class file as defined by the Java Virtual Machine Specification. 
    cs - the associated CodeSource, or null if none 

    Returns: the Class object created from the data, and optional CodeSource. 
*java.security.SecureClassLoader.getPermissions(CodeSource)*

protected |java.security.PermissionCollection| getPermissions(java.security.CodeSource codesource)

Returns the permissions for the given CodeSource object. 

This method is invoked by the defineClass method which takes a CodeSource as an 
argument when it is constructing the ProtectionDomain for the class being 
defined. 

    codesource - the codesource. 

    Returns: the permissions granted to the codesource. 

