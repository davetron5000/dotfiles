*java.util.zip.CheckedInputStream* *CheckedInputStream* An input stream that als

public class CheckedInputStream
  extends    |java.io.FilterInputStream|

|java.util.zip.CheckedInputStream_Description|
|java.util.zip.CheckedInputStream_Fields|
|java.util.zip.CheckedInputStream_Constructors|
|java.util.zip.CheckedInputStream_Methods|

================================================================================

*java.util.zip.CheckedInputStream_Constructors*
|java.util.zip.CheckedInputStream(InputStream,Checksum)|Creates an input stream

*java.util.zip.CheckedInputStream_Methods*
|java.util.zip.CheckedInputStream.getChecksum()|Returns the Checksum for this i
|java.util.zip.CheckedInputStream.read()|Reads a byte.
|java.util.zip.CheckedInputStream.read(byte[],int,int)|Reads into an array of b
|java.util.zip.CheckedInputStream.skip(long)|Skips specified number of bytes of

*java.util.zip.CheckedInputStream_Description*

An input stream that also maintains a checksum of the data being read. The 
checksum can then be used to verify the integrity of the input data. 


*java.util.zip.CheckedInputStream(InputStream,Checksum)*

public CheckedInputStream(
  java.io.InputStream in,
  java.util.zip.Checksum cksum)

Creates an input stream using the specified Checksum. 

    in - the input stream 
    cksum - the Checksum 

*java.util.zip.CheckedInputStream.getChecksum()*

public |java.util.zip.Checksum| getChecksum()

Returns the Checksum for this input stream. 


    Returns: the Checksum value 
*java.util.zip.CheckedInputStream.read()*

public int read()
  throws |java.io.IOException|
         
Reads a byte. Will block if no input is available. 


    Returns: the byte read, or -1 if the end of the stream is reached. 
*java.util.zip.CheckedInputStream.read(byte[],int,int)*

public int read(
  byte[] buf,
  int off,
  int len)
  throws |java.io.IOException|
         
Reads into an array of bytes. Will block until some input is available. 

    buf - the buffer into which the data is read 
    off - the start offset of the data 
    len - the maximum number of bytes read 

    Returns: the actual number of bytes read, or -1 if the end of the stream is reached. 
*java.util.zip.CheckedInputStream.skip(long)*

public long skip(long n)
  throws |java.io.IOException|
         
Skips specified number of bytes of input. 

    n - the number of bytes to skip 

    Returns: the actual number of bytes skipped 

