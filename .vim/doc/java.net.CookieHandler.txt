*java.net.CookieHandler* *CookieHandler* A CookieHandler object provides a callb

public abstract class CookieHandler
  extends    |java.lang.Object|

|java.net.CookieHandler_Description|
|java.net.CookieHandler_Fields|
|java.net.CookieHandler_Constructors|
|java.net.CookieHandler_Methods|

================================================================================

*java.net.CookieHandler_Constructors*
|java.net.CookieHandler()|

*java.net.CookieHandler_Methods*
|java.net.CookieHandler.get(URI,Map)|Gets all the applicable cookies from a coo
|java.net.CookieHandler.getDefault()|Gets the system-wide cookie handler.
|java.net.CookieHandler.put(URI,Map)|Sets all the applicable cookies, examples 
|java.net.CookieHandler.setDefault(CookieHandler)|Sets (or unsets) the system-w

*java.net.CookieHandler_Description*

A CookieHandler object provides a callback mechanism to hook up a HTTP state 
management policy implementation into the HTTP protocol handler. The HTTP state 
management mechanism specifies a way to create a stateful session with HTTP 
requests and responses. 

A system-wide CookieHandler that to used by the HTTP protocol handler can be 
registered by doing a CookieHandler.setDefault(CookieHandler). The currently 
registered CookieHandler can be retrieved by calling 
CookieHandler.getDefault(). 

For more information on HTTP state management, see RFC2965: HTTP State 
Management Mechanism 


*java.net.CookieHandler()*

public CookieHandler()




*java.net.CookieHandler.get(URI,Map)*

public abstract |java.util.Map| get(
  java.net.URI uri,
  java.util.Map requestHeaders)
  throws |java.io.IOException|
         
Gets all the applicable cookies from a cookie cache for the specified uri in 
the request header. 

HTTP protocol implementers should make sure that this method is called after 
all request headers related to choosing cookies are added, and before the 
request is sent. 

    uri - a URI to send cookies to in a request 
    requestHeaders - - a Map from request header field names to lists of field values representing 
       the current request headers 

    Returns: an immutable map from state management headers, with field names "Cookie" or 
             "Cookie2" to a list of cookies containing state information 
*java.net.CookieHandler.getDefault()*

public static synchronized |java.net.CookieHandler| getDefault()

Gets the system-wide cookie handler. 


    Returns: the system-wide cookie handler; A null return means there is no system-wide 
             cookie handler currently set. 
*java.net.CookieHandler.put(URI,Map)*

public abstract void put(
  java.net.URI uri,
  java.util.Map responseHeaders)
  throws |java.io.IOException|
         
Sets all the applicable cookies, examples are response header fields that are 
named Set-Cookie2, present in the response headers into a cookie cache. 

    uri - a URI where the cookies come from 
    responseHeaders - an immutable map from field names to lists of field values representing the 
       response header fields returned 

*java.net.CookieHandler.setDefault(CookieHandler)*

public static synchronized void setDefault(java.net.CookieHandler cHandler)

Sets (or unsets) the system-wide cookie handler. 

Note: non-standard http protocol handlers may ignore this setting. 

    cHandler - The HTTP cookie handler, or null to unset. 


