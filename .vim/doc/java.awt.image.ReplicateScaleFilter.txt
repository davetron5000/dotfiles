*java.awt.image.ReplicateScaleFilter* *ReplicateScaleFilter* An ImageFilter clas

public class ReplicateScaleFilter
  extends    |java.awt.image.ImageFilter|

|java.awt.image.ReplicateScaleFilter_Description|
|java.awt.image.ReplicateScaleFilter_Fields|
|java.awt.image.ReplicateScaleFilter_Constructors|
|java.awt.image.ReplicateScaleFilter_Methods|

================================================================================

*java.awt.image.ReplicateScaleFilter_Fields*
|int_java.awt.image.ReplicateScaleFilter.destHeight|
|int_java.awt.image.ReplicateScaleFilter.destWidth|
|java.lang.Object_java.awt.image.ReplicateScaleFilter.outpixbuf|
|int[]_java.awt.image.ReplicateScaleFilter.srccols|
|int_java.awt.image.ReplicateScaleFilter.srcHeight|
|int[]_java.awt.image.ReplicateScaleFilter.srcrows|
|int_java.awt.image.ReplicateScaleFilter.srcWidth|

*java.awt.image.ReplicateScaleFilter_Constructors*
|java.awt.image.ReplicateScaleFilter(int,int)|Constructs a ReplicateScaleFilter

*java.awt.image.ReplicateScaleFilter_Methods*
|java.awt.image.ReplicateScaleFilter.setDimensions(int,int)|Override the dimens
|java.awt.image.ReplicateScaleFilter.setPixels(int,int,int,int,ColorModel,byte[],int,int)|
|java.awt.image.ReplicateScaleFilter.setPixels(int,int,int,int,ColorModel,int[],int,int)|
|java.awt.image.ReplicateScaleFilter.setProperties(Hashtable)|Passes along the 

*java.awt.image.ReplicateScaleFilter_Description*

An ImageFilter class for scaling images using the simplest algorithm. This 
class extends the basic ImageFilter Class to scale an existing image and 
provide a source for a new image containing the resampled image. The pixels in 
the source image are sampled to produce pixels for an image of the specified 
size by replicating rows and columns of pixels to scale up or omitting rows and 
columns of pixels to scale down. It is meant to be used in conjunction with a 
FilteredImageSource object to produce scaled versions of existing images. Due 
to implementation dependencies, there may be differences in pixel values of an 
image filtered on different platforms. 


*int_java.awt.image.ReplicateScaleFilter.destHeight*

An ImageFilter class for scaling images using the simplest algorithm. This 
class extends the basic ImageFilter Class to scale an existing image and 
provide a source for a new image containing the resampled image. The pixels in 
the source image are sampled to produce pixels for an image of the specified 
size by replicating rows and columns of pixels to scale up or omitting rows and 
columns of pixels to scale down. It is meant to be used in conjunction with a 
FilteredImageSource object to produce scaled versions of existing images. Due 
to implementation dependencies, there may be differences in pixel values of an 
image filtered on different platforms. 


*int_java.awt.image.ReplicateScaleFilter.destWidth*

An ImageFilter class for scaling images using the simplest algorithm. This 
class extends the basic ImageFilter Class to scale an existing image and 
provide a source for a new image containing the resampled image. The pixels in 
the source image are sampled to produce pixels for an image of the specified 
size by replicating rows and columns of pixels to scale up or omitting rows and 
columns of pixels to scale down. It is meant to be used in conjunction with a 
FilteredImageSource object to produce scaled versions of existing images. Due 
to implementation dependencies, there may be differences in pixel values of an 
image filtered on different platforms. 


*java.lang.Object_java.awt.image.ReplicateScaleFilter.outpixbuf*

An ImageFilter class for scaling images using the simplest algorithm. This 
class extends the basic ImageFilter Class to scale an existing image and 
provide a source for a new image containing the resampled image. The pixels in 
the source image are sampled to produce pixels for an image of the specified 
size by replicating rows and columns of pixels to scale up or omitting rows and 
columns of pixels to scale down. It is meant to be used in conjunction with a 
FilteredImageSource object to produce scaled versions of existing images. Due 
to implementation dependencies, there may be differences in pixel values of an 
image filtered on different platforms. 


*int[]_java.awt.image.ReplicateScaleFilter.srccols*

An ImageFilter class for scaling images using the simplest algorithm. This 
class extends the basic ImageFilter Class to scale an existing image and 
provide a source for a new image containing the resampled image. The pixels in 
the source image are sampled to produce pixels for an image of the specified 
size by replicating rows and columns of pixels to scale up or omitting rows and 
columns of pixels to scale down. It is meant to be used in conjunction with a 
FilteredImageSource object to produce scaled versions of existing images. Due 
to implementation dependencies, there may be differences in pixel values of an 
image filtered on different platforms. 


*int_java.awt.image.ReplicateScaleFilter.srcHeight*

An ImageFilter class for scaling images using the simplest algorithm. This 
class extends the basic ImageFilter Class to scale an existing image and 
provide a source for a new image containing the resampled image. The pixels in 
the source image are sampled to produce pixels for an image of the specified 
size by replicating rows and columns of pixels to scale up or omitting rows and 
columns of pixels to scale down. It is meant to be used in conjunction with a 
FilteredImageSource object to produce scaled versions of existing images. Due 
to implementation dependencies, there may be differences in pixel values of an 
image filtered on different platforms. 


*int[]_java.awt.image.ReplicateScaleFilter.srcrows*

An ImageFilter class for scaling images using the simplest algorithm. This 
class extends the basic ImageFilter Class to scale an existing image and 
provide a source for a new image containing the resampled image. The pixels in 
the source image are sampled to produce pixels for an image of the specified 
size by replicating rows and columns of pixels to scale up or omitting rows and 
columns of pixels to scale down. It is meant to be used in conjunction with a 
FilteredImageSource object to produce scaled versions of existing images. Due 
to implementation dependencies, there may be differences in pixel values of an 
image filtered on different platforms. 


*int_java.awt.image.ReplicateScaleFilter.srcWidth*

An ImageFilter class for scaling images using the simplest algorithm. This 
class extends the basic ImageFilter Class to scale an existing image and 
provide a source for a new image containing the resampled image. The pixels in 
the source image are sampled to produce pixels for an image of the specified 
size by replicating rows and columns of pixels to scale up or omitting rows and 
columns of pixels to scale down. It is meant to be used in conjunction with a 
FilteredImageSource object to produce scaled versions of existing images. Due 
to implementation dependencies, there may be differences in pixel values of an 
image filtered on different platforms. 



*java.awt.image.ReplicateScaleFilter(int,int)*

public ReplicateScaleFilter(
  int width,
  int height)

Constructs a ReplicateScaleFilter that scales the pixels from its source Image 
as specified by the width and height parameters. 

    width - the target width to scale the image 
    height - the target height to scale the image 

*java.awt.image.ReplicateScaleFilter.setDimensions(int,int)*

public void setDimensions(
  int w,
  int h)

Override the dimensions of the source image and pass the dimensions of the new 
scaled size to the ImageConsumer. 

Note: This method is intended to be called by the ImageProducer of the Image 
whose pixels are being filtered. Developers using this class to filter pixels 
from an image should avoid calling this method directly since that operation 
could interfere with the filtering operation. 


*java.awt.image.ReplicateScaleFilter.setPixels(int,int,int,int,ColorModel,byte[],int,int)*

public void setPixels(
  int x,
  int y,
  int w,
  int h,
  java.awt.image.ColorModel model,
  byte[] pixels,
  int off,
  int scansize)

Choose which rows and columns of the delivered byte pixels are needed for the 
destination scaled image and pass through just those rows and columns that are 
needed, replicated as necessary. 

Note: This method is intended to be called by the ImageProducer of the Image 
whose pixels are being filtered. Developers using this class to filter pixels 
from an image should avoid calling this method directly since that operation 
could interfere with the filtering operation. 


*java.awt.image.ReplicateScaleFilter.setPixels(int,int,int,int,ColorModel,int[],int,int)*

public void setPixels(
  int x,
  int y,
  int w,
  int h,
  java.awt.image.ColorModel model,
  int[] pixels,
  int off,
  int scansize)

Choose which rows and columns of the delivered int pixels are needed for the 
destination scaled image and pass through just those rows and columns that are 
needed, replicated as necessary. 

Note: This method is intended to be called by the ImageProducer of the Image 
whose pixels are being filtered. Developers using this class to filter pixels 
from an image should avoid calling this method directly since that operation 
could interfere with the filtering operation. 


*java.awt.image.ReplicateScaleFilter.setProperties(Hashtable)*

public void setProperties(java.util.Hashtable props)

Passes along the properties from the source object after adding a property 
indicating the scale applied. This method invokes super.setProperties, which 
might result in additional properties being added. 

Note: This method is intended to be called by the ImageProducer of the Image 
whose pixels are being filtered. Developers using this class to filter pixels 
from an image should avoid calling this method directly since that operation 
could interfere with the filtering operation. 



