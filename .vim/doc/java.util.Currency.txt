*java.util.Currency* *Currency* Represents a currency.

public final class Currency
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|java.util.Currency_Description|
|java.util.Currency_Fields|
|java.util.Currency_Constructors|
|java.util.Currency_Methods|

================================================================================

*java.util.Currency_Methods*
|java.util.Currency.getCurrencyCode()|Gets the ISO 4217 currency code of this c
|java.util.Currency.getDefaultFractionDigits()|Gets the default number of fract
|java.util.Currency.getInstance(Locale)|Returns the Currency instance for the c
|java.util.Currency.getInstance(String)|Returns the Currency instance for the g
|java.util.Currency.getSymbol()|Gets the symbol of this currency for the defaul
|java.util.Currency.getSymbol(Locale)|Gets the symbol of this currency for the 
|java.util.Currency.toString()|Returns the ISO 4217 currency code of this curre

*java.util.Currency_Description*

Represents a currency. Currencies are identified by their ISO 4217 currency 
codes. See the 

ISO 4217 maintenance agency for more information, including a table of currency 
codes. 

The class is designed so that there's never more than one Currency instance for 
any given currency. Therefore, there's no public constructor. You obtain a 
Currency instance using the getInstance methods. 


*java.util.Currency.getCurrencyCode()*

public |java.lang.String| getCurrencyCode()

Gets the ISO 4217 currency code of this currency. 


    Returns: the ISO 4217 currency code of this currency. 
*java.util.Currency.getDefaultFractionDigits()*

public int getDefaultFractionDigits()

Gets the default number of fraction digits used with this currency. For 
example, the default number of fraction digits for the Euro is 2, while for the 
Japanese Yen it's 0. In the case of pseudo-currencies, such as IMF Special 
Drawing Rights, -1 is returned. 


    Returns: the default number of fraction digits used with this currency 
*java.util.Currency.getInstance(Locale)*

public static |java.util.Currency| getInstance(java.util.Locale locale)

Returns the Currency instance for the country of the given locale. The language 
and variant components of the locale are ignored. The result may vary over 
time, as countries change their currencies. For example, for the original 
member countries of the European Monetary Union, the method returns the old 
national currencies until December 31, 2001, and the Euro from January 1, 2002, 
local time of the respective countries. 

The method returns null for territories that don't have a currency, such as 
Antarctica. 

    locale - the locale for whose country a Currency instance is needed 

    Returns: the Currency instance for the country of the given locale, or null 
*java.util.Currency.getInstance(String)*

public static |java.util.Currency| getInstance(java.lang.String currencyCode)

Returns the Currency instance for the given currency code. 

    currencyCode - the ISO 4217 code of the currency 

    Returns: the Currency instance for the given currency code 
*java.util.Currency.getSymbol()*

public |java.lang.String| getSymbol()

Gets the symbol of this currency for the default locale. For example, for the 
US Dollar, the symbol is "$" if the default locale is the US, while for other 
locales it may be "US$". If no symbol can be determined, the ISO 4217 currency 
code is returned. 


    Returns: the symbol of this currency for the default locale 
*java.util.Currency.getSymbol(Locale)*

public |java.lang.String| getSymbol(java.util.Locale locale)

Gets the symbol of this currency for the specified locale. For example, for the 
US Dollar, the symbol is "$" if the specified locale is the US, while for other 
locales it may be "US$". If no symbol can be determined, the ISO 4217 currency 
code is returned. 

    locale - the locale for which a display name for this currency is needed 

    Returns: the symbol of this currency for the specified locale 
*java.util.Currency.toString()*

public |java.lang.String| toString()

Returns the ISO 4217 currency code of this currency. 


    Returns: the ISO 4217 currency code of this currency 

