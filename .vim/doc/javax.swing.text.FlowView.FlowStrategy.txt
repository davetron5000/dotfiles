*javax.swing.text.FlowView.FlowStrategy* *FlowView.FlowStrategy* Strategy for maintaining the physical form
 of the flow.

public static class FlowView.FlowStrategy
  extends    |java.lang.Object|

|javax.swing.text.FlowView.FlowStrategy_Description|
|javax.swing.text.FlowView.FlowStrategy_Fields|
|javax.swing.text.FlowView.FlowStrategy_Constructors|
|javax.swing.text.FlowView.FlowStrategy_Methods|

====================================================================================================================================================================================

*javax.swing.text.FlowView.FlowStrategy_Constructors*
|javax.swing.text.FlowView.FlowStrategy()|

*javax.swing.text.FlowView.FlowStrategy_Methods*
|javax.swing.text.FlowView.FlowStrategy.adjustRow(FlowView,int,int,int)|Adjusts the given row if possible to fit within the  layout span.
|javax.swing.text.FlowView.FlowStrategy.changedUpdate(FlowView,DocumentEvent,Rectangle)|Gives notification from the document that attributes were changed  in a location that this 
|javax.swing.text.FlowView.FlowStrategy.createView(FlowView,int,int,int)|Creates a view that can be used to represent the current piece  of the flow.
|javax.swing.text.FlowView.FlowStrategy.getLogicalView(FlowView)|This method gives flow strategies access to the logical  view of the FlowView.
|javax.swing.text.FlowView.FlowStrategy.insertUpdate(FlowView,DocumentEvent,Rectangle)|Gives notification that something was inserted into the document  in a location that the giv
|javax.swing.text.FlowView.FlowStrategy.layout(FlowView)|Update the flow on the given FlowView.
|javax.swing.text.FlowView.FlowStrategy.layoutRow(FlowView,int,int)|Creates a row of views that will fit within the   layout span of the row.
|javax.swing.text.FlowView.FlowStrategy.removeUpdate(FlowView,DocumentEvent,Rectangle)|Gives notification that something was removed from the document  in a location that the give

*javax.swing.text.FlowView.FlowStrategy_Description*

Strategy for maintaining the physical form of the flow. The default implementation is completely stateless, and recalculates the entire flow if the layout is invalid on the given 
FlowView. Alternative strategies can be implemented by subclassing, and might perform incrementatal repair to the layout or alternative breaking behavior. 



*javax.swing.text.FlowView.FlowStrategy()*

public FlowView.FlowStrategy()




*javax.swing.text.FlowView.FlowStrategy.adjustRow(FlowView,int,int,int)*

protected void adjustRow(
  javax.swing.text.FlowView fv,
  int rowIndex,
  int desiredSpan,
  int x)

Adjusts the given row if possible to fit within the layout span. By default this will try to find the highest break weight possible nearest the end of the row. If a forced break 
is encountered, the break will be positioned there. 


    rowIndex - the row to adjust to the current layout span. 
    desiredSpan - the current layout span >= 0 
    x - the location r starts at. 

*javax.swing.text.FlowView.FlowStrategy.changedUpdate(FlowView,DocumentEvent,Rectangle)*

public void changedUpdate(
  javax.swing.text.FlowView fv,
  javax.swing.event.DocumentEvent e,
  java.awt.Rectangle alloc)

Gives notification from the document that attributes were changed in a location that this view is responsible for. 


    fv - the FlowView containing the changes 
    e - the DocumentEvent describing the changes done to the Document 
    alloc - Bounds of the View 

*javax.swing.text.FlowView.FlowStrategy.createView(FlowView,int,int,int)*

protected |javax.swing.text.View| createView(
  javax.swing.text.FlowView fv,
  int startOffset,
  int spanLeft,
  int rowIndex)

Creates a view that can be used to represent the current piece of the flow. This can be either an entire view from the logical view, or a fragment of the logical view. 


    fv - the view holding the flow 
    startOffset - the start location for the view being created 
    spanLeft - the about of span left to fill in the row 
    rowIndex - the row the view will be placed into 

*javax.swing.text.FlowView.FlowStrategy.getLogicalView(FlowView)*

protected |javax.swing.text.View| getLogicalView(javax.swing.text.FlowView fv)

This method gives flow strategies access to the logical view of the FlowView. 



*javax.swing.text.FlowView.FlowStrategy.insertUpdate(FlowView,DocumentEvent,Rectangle)*

public void insertUpdate(
  javax.swing.text.FlowView fv,
  javax.swing.event.DocumentEvent e,
  java.awt.Rectangle alloc)

Gives notification that something was inserted into the document in a location that the given flow view is responsible for. The strategy should update the appropriate changed 
region (which depends upon the strategy used for repair). 


    e - the change information from the associated document 
    alloc - the current allocation of the view inside of the insets. This value will be null if the view has not yet been displayed. 

*javax.swing.text.FlowView.FlowStrategy.layout(FlowView)*

public void layout(javax.swing.text.FlowView fv)

Update the flow on the given FlowView. By default, this causes all of the rows (child views) to be rebuilt to match the given constraints for each row. This is called by a 
FlowView.layout to update the child views in the flow. 


    fv - the view to reflow 

*javax.swing.text.FlowView.FlowStrategy.layoutRow(FlowView,int,int)*

protected int layoutRow(
  javax.swing.text.FlowView fv,
  int rowIndex,
  int pos)

Creates a row of views that will fit within the layout span of the row. This is called by the layout method. This is implemented to fill the row by repeatedly calling the 
createView method until the available span has been exhausted, a forced break was encountered, or the createView method returned null. If the remaining span was exhaused, the 
adjustRow method will be called to perform adjustments to the row to try and make it fit into the given span. 


    rowIndex - the index of the row to fill in with views. The row is assumed to be empty on entry. 
    pos - The current position in the children of this views element from which to start. 

    Returns: the position to start the next row 

*javax.swing.text.FlowView.FlowStrategy.removeUpdate(FlowView,DocumentEvent,Rectangle)*

public void removeUpdate(
  javax.swing.text.FlowView fv,
  javax.swing.event.DocumentEvent e,
  java.awt.Rectangle alloc)

Gives notification that something was removed from the document in a location that the given flow view is responsible for. 


    e - the change information from the associated document 
    alloc - the current allocation of the view inside of the insets. 


