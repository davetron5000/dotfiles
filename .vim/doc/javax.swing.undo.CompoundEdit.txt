*javax.swing.undo.CompoundEdit* *CompoundEdit* A concrete subclass of AbstractUndoableEdit, used to assemble little
 UndoableEdits into great big ones.

public class CompoundEdit
  extends    |javax.swing.undo.AbstractUndoableEdit|

|javax.swing.undo.CompoundEdit_Description|
|javax.swing.undo.CompoundEdit_Fields|
|javax.swing.undo.CompoundEdit_Constructors|
|javax.swing.undo.CompoundEdit_Methods|

====================================================================================================================================================================================

*javax.swing.undo.CompoundEdit_Fields*
|java.util.Vector<javax.swing.undo.UndoableEdit>_javax.swing.undo.CompoundEdit.edits|

*javax.swing.undo.CompoundEdit_Constructors*
|javax.swing.undo.CompoundEdit()|

*javax.swing.undo.CompoundEdit_Methods*
|javax.swing.undo.CompoundEdit.addEdit(UndoableEdit)|If this edit is inProgress,  accepts anEdit and returns true.
|javax.swing.undo.CompoundEdit.canRedo()|Returns false if isInProgress or if super   returns false.
|javax.swing.undo.CompoundEdit.canUndo()|Returns false if isInProgress or if super  returns false.
|javax.swing.undo.CompoundEdit.die()|Sends die to each subedit,  in the reverse of the order that they were added.
|javax.swing.undo.CompoundEdit.end()|Sets inProgress to false.
|javax.swing.undo.CompoundEdit.getPresentationName()|Returns getPresentationName from the  last UndoableEdit added to  edits.
|javax.swing.undo.CompoundEdit.getRedoPresentationName()|Returns getRedoPresentationName  from the last UndoableEdit  added to edits.
|javax.swing.undo.CompoundEdit.getUndoPresentationName()|Returns getUndoPresentationName  from the last UndoableEdit  added to edits.
|javax.swing.undo.CompoundEdit.isInProgress()|Returns true if this edit is in progress--that is, it has not  received end.
|javax.swing.undo.CompoundEdit.isSignificant()|Returns true if any of the UndoableEdits  in edits do.
|javax.swing.undo.CompoundEdit.lastEdit()|Returns the last UndoableEdit in   edits, or null  if edits is empty.
|javax.swing.undo.CompoundEdit.redo()|Sends redo to all contained  UndoableEdits in the order in  which they were added.
|javax.swing.undo.CompoundEdit.toString()|Returns a string that displays and identifies this  object's properties.
|javax.swing.undo.CompoundEdit.undo()|Sends undo to all contained  UndoableEdits in the reverse of  the order in which they were added.

*javax.swing.undo.CompoundEdit_Description*

A concrete subclass of AbstractUndoableEdit, used to assemble little UndoableEdits into great big ones. 



*java.util.Vector<javax.swing.undo.UndoableEdit>_javax.swing.undo.CompoundEdit.edits*

The collection of UndoableEdits undone/redone en masse by this CompoundEdit. 



*javax.swing.undo.CompoundEdit()*

public CompoundEdit()




*javax.swing.undo.CompoundEdit.addEdit(UndoableEdit)*

public boolean addEdit(javax.swing.undo.UndoableEdit anEdit)

If this edit is inProgress, accepts anEdit and returns true. 

The last edit added to this CompoundEdit is given a chance to addEdit(anEdit). If it refuses (returns false), anEdit is given a chance to replaceEdit the last edit. If anEdit 
returns false here, it is added to edits. 


    anEdit - the edit to be added 

    Returns: true if the edit is inProgress; otherwise returns false 

*javax.swing.undo.CompoundEdit.canRedo()*

public boolean canRedo()

Returns false if isInProgress or if super returns false. 



*javax.swing.undo.CompoundEdit.canUndo()*

public boolean canUndo()

Returns false if isInProgress or if super returns false. 



*javax.swing.undo.CompoundEdit.die()*

public void die()

Sends die to each subedit, in the reverse of the order that they were added. 



*javax.swing.undo.CompoundEdit.end()*

public void end()

Sets inProgress to false. 



*javax.swing.undo.CompoundEdit.getPresentationName()*

public |java.lang.String| getPresentationName()

Returns getPresentationName from the last UndoableEdit added to edits. If edits is empty, calls super. 



*javax.swing.undo.CompoundEdit.getRedoPresentationName()*

public |java.lang.String| getRedoPresentationName()

Returns getRedoPresentationName from the last UndoableEdit added to edits. If edits is empty, calls super. 



*javax.swing.undo.CompoundEdit.getUndoPresentationName()*

public |java.lang.String| getUndoPresentationName()

Returns getUndoPresentationName from the last UndoableEdit added to edits. If edits is empty, calls super. 



*javax.swing.undo.CompoundEdit.isInProgress()*

public boolean isInProgress()

Returns true if this edit is in progress--that is, it has not received end. This generally means that edits are still being added to it. 



*javax.swing.undo.CompoundEdit.isSignificant()*

public boolean isSignificant()

Returns true if any of the UndoableEdits in edits do. Returns false if they all return false. 



*javax.swing.undo.CompoundEdit.lastEdit()*

protected |javax.swing.undo.UndoableEdit| lastEdit()

Returns the last UndoableEdit in edits, or null if edits is empty. 



*javax.swing.undo.CompoundEdit.redo()*

public void redo()
  throws |javax.swing.undo.CannotRedoException|
         
Sends redo to all contained UndoableEdits in the order in which they were added. 



*javax.swing.undo.CompoundEdit.toString()*

public |java.lang.String| toString()

Returns a string that displays and identifies this object's properties. 



    Returns: a String representation of this object 

*javax.swing.undo.CompoundEdit.undo()*

public void undo()
  throws |javax.swing.undo.CannotUndoException|
         
Sends undo to all contained UndoableEdits in the reverse of the order in which they were added. 




