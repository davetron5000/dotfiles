*java.nio.charset.CharsetDecoder* *CharsetDecoder* An engine that can transform a sequence of bytes in a specific charset into a sequence of
 sixteen-bit Unicode characters.

public abstract class CharsetDecoder
  extends    |java.lang.Object|

|java.nio.charset.CharsetDecoder_Description|
|java.nio.charset.CharsetDecoder_Fields|
|java.nio.charset.CharsetDecoder_Constructors|
|java.nio.charset.CharsetDecoder_Methods|

====================================================================================================================================================================================

*java.nio.charset.CharsetDecoder_Constructors*
|java.nio.charset.CharsetDecoder(Charset,float,float)|Initializes a new decoder.

*java.nio.charset.CharsetDecoder_Methods*
|java.nio.charset.CharsetDecoder.averageCharsPerByte()|Returns the average number of characters that will be produced for each  byte of input.
|java.nio.charset.CharsetDecoder.charset()|Returns the charset that created this decoder.
|java.nio.charset.CharsetDecoder.decode(ByteBuffer)|Convenience method that decodes the remaining content of a single input  byte buffer into a newly-allocated character buffer.
|java.nio.charset.CharsetDecoder.decode(ByteBuffer,CharBuffer,boolean)|Decodes as many bytes as possible from the given input buffer,  writing the results to the given output buff
|java.nio.charset.CharsetDecoder.decodeLoop(ByteBuffer,CharBuffer)|Decodes one or more bytes into one or more characters.
|java.nio.charset.CharsetDecoder.detectedCharset()|Retrieves the charset that was detected by this  decoder(optional operation).
|java.nio.charset.CharsetDecoder.flush(CharBuffer)|Flushes this decoder.
|java.nio.charset.CharsetDecoder.implFlush(CharBuffer)|Flushes this decoder.
|java.nio.charset.CharsetDecoder.implOnMalformedInput(CodingErrorAction)|Reports a change to this decoder's malformed-input action.
|java.nio.charset.CharsetDecoder.implOnUnmappableCharacter(CodingErrorAction)|Reports a change to this decoder's unmappable-character action.
|java.nio.charset.CharsetDecoder.implReplaceWith(String)|Reports a change to this decoder's replacement value.
|java.nio.charset.CharsetDecoder.implReset()|Resets this decoder, clearing any charset-specific internal state.
|java.nio.charset.CharsetDecoder.isAutoDetecting()|Tells whether or not this decoder implements an auto-detecting charset.
|java.nio.charset.CharsetDecoder.isCharsetDetected()|Tells whether or not this decoder has yet detected a  charset(optional operation).
|java.nio.charset.CharsetDecoder.malformedInputAction()|Returns this decoder's current action for malformed-input errors.
|java.nio.charset.CharsetDecoder.maxCharsPerByte()|Returns the maximum number of characters that will be produced for each  byte of input.
|java.nio.charset.CharsetDecoder.onMalformedInput(CodingErrorAction)|Changes this decoder's action for malformed-input errors.
|java.nio.charset.CharsetDecoder.onUnmappableCharacter(CodingErrorAction)|Changes this decoder's action for unmappable-character errors.
|java.nio.charset.CharsetDecoder.replacement()|Returns this decoder's replacement value.
|java.nio.charset.CharsetDecoder.replaceWith(String)|Changes this decoder's replacement value.
|java.nio.charset.CharsetDecoder.reset()|Resets this decoder, clearing any internal state.
|java.nio.charset.CharsetDecoder.unmappableCharacterAction()|Returns this decoder's current action for unmappable-character errors.

*java.nio.charset.CharsetDecoder_Description*

An engine that can transform a sequence of bytes in a specific charset into a sequence of sixteen-bit Unicode characters. 



The input byte sequence is provided in a byte buffer or a series of such buffers. The output character sequence is written to a character buffer or a series of such buffers. A 
decoder should always be used by making the following sequence of method invocations, hereinafter referred to as a decoding operation: 



Reset the decoder via the reset(|java.nio.charset.CharsetDecoder|) method, unless it has not been used before; 

Invoke the decode(|java.nio.charset.CharsetDecoder|) method zero or more times, as long as additional input may be available, passing false for the endOfInput argument and filling 
the input buffer and flushing the output buffer between invocations; 

Invoke the decode(|java.nio.charset.CharsetDecoder|) method one final time, passing true for the endOfInput argument; and then 

Invoke the flush(|java.nio.charset.CharsetDecoder|) method so that the decoder can flush any internal state to the output buffer. 



Each invocation of the decode(|java.nio.charset.CharsetDecoder|) method will decode as many bytes as possible from the input buffer, writing the resulting characters to the output 
buffer. The decode(|java.nio.charset.CharsetDecoder|) method returns when more input is required, when there is not enough room in the output buffer, or when a decoding error has 
occurred. In each case a (|java.nio.charset.CoderResult|) object is returned to describe the reason for termination. An invoker can examine this object and fill the input buffer, 
flush the output buffer, or attempt to recover from a decoding error, as appropriate, and try again. 



There are two general types of decoding errors. If the input byte sequence is not legal for this charset then the input is considered malformed. If the input byte sequence is 
legal but cannot be mapped to a valid Unicode character then an unmappable character has been encountered. 



How a decoding error is handled depends upon the action requested for that type of error, which is described by an instance of the (|java.nio.charset.CodingErrorAction|) class. 
The possible error actions are to </code>ignore<code>(|java.nio.charset.CodingErrorAction|) the erroneous input, </code>report<code>(|java.nio.charset.CodingErrorAction|) the 
error to the invoker via the returned (|java.nio.charset.CoderResult|) object, or </code>replace<code>(|java.nio.charset.CodingErrorAction|) the erroneous input with the current 
value of the replacement string. The replacement 

has the initial value "\$defaultReplName$#92;uFFFD"; 

its value may be changed via the replaceWith(|java.nio.charset.CharsetDecoder|) method. 

The default action for malformed-input and unmappable-character errors is to </code>report<code>(|java.nio.charset.CodingErrorAction|) them. The malformed-input error action may 
be changed via the onMalformedInput(|java.nio.charset.CharsetDecoder|) method; the unmappable-character action may be changed via the 
onUnmappableCharacter(|java.nio.charset.CharsetDecoder|) method. 

This class is designed to handle many of the details of the decoding process, including the implementation of error actions. A decoder for a specific charset, which is a concrete 
subclass of this class, need only implement the abstract decodeLoop(|java.nio.charset.CharsetDecoder|) method, which encapsulates the basic decoding loop. A subclass that 
maintains internal state should, additionally, override the flush(|java.nio.charset.CharsetDecoder|) and reset(|java.nio.charset.CharsetDecoder|) methods. 

Instances of this class are not safe for use by multiple concurrent threads. 



*java.nio.charset.CharsetDecoder(Charset,float,float)*

protected CharsetDecoder(
  java.nio.charset.Charset cs,
  float averageCharsPerByte,
  float maxCharsPerByte)

Initializes a new decoder. The new decoder will have the given chars-per-byte values and its replacement will be the string "\$defaultReplName$#92;uFFFD". 

    averageCharsPerByte - A positive float value indicating the expected number of characters that will be produced for each input byte 
    maxCharsPerByte - A positive float value indicating the maximum number of characters that will be produced for each input byte 

*java.nio.charset.CharsetDecoder.averageCharsPerByte()*

public final float averageCharsPerByte()

Returns the average number of characters that will be produced for each byte of input. This heuristic value may be used to estimate the size of the output buffer required for a 
given input sequence. 



    Returns: The average number of characters produced per byte of input 

*java.nio.charset.CharsetDecoder.charset()*

public final |java.nio.charset.Charset| charset()

Returns the charset that created this decoder. 



    Returns: This decoder's charset 

*java.nio.charset.CharsetDecoder.decode(ByteBuffer)*

public final |java.nio.CharBuffer| decode(java.nio.ByteBuffer in)
  throws |java.nio.charset.CharacterCodingException|
         
Convenience method that decodes the remaining content of a single input byte buffer into a newly-allocated character buffer. 

This method implements an entire decoding operation; that is, it resets this decoder, then it decodes the bytes in the given byte buffer, and finally it flushes this decoder. This 
method should therefore not be invoked if a decoding operation is already in progress. 


    in - The input byte buffer 

    Returns: A newly-allocated character buffer containing the result of the decoding operation. The buffer's position will be zero and its limit will follow the last character written. 

*java.nio.charset.CharsetDecoder.decode(ByteBuffer,CharBuffer,boolean)*

public final |java.nio.charset.CoderResult| decode(
  java.nio.ByteBuffer in,
  java.nio.CharBuffer out,
  boolean endOfInput)

Decodes as many bytes as possible from the given input buffer, writing the results to the given output buffer. 

The buffers are read from, and written to, starting at their current positions. At most in.remaining()(|java.nio.Buffer|) bytes will be read and at most 
out.remaining()(|java.nio.Buffer|) characters will be written. The buffers' positions will be advanced to reflect the bytes read and the characters written, but their marks and 
limits will not be modified. 

In addition to reading bytes from the input buffer and writing characters to the output buffer, this method returns a (|java.nio.charset.CoderResult|) object to describe its 
reason for termination: 



(|java.nio.charset.CoderResult|) indicates that as much of the input buffer as possible has been decoded. If there are no bytes remaining and the invoker has no further input then 
the decoding operation is complete. Otherwise there is insufficient input for the operation to proceed, so this method should be invoked again with further input. 

(|java.nio.charset.CoderResult|) indicates that the output buffer is full. This method should be invoked again with a non-full output buffer. 

A </code>malformed-input<code>(|java.nio.charset.CoderResult|) result indicates that a malformed-input error has been detected. The malformed bytes begin at the input buffer's 
(possibly incremented) position; the number of malformed bytes may be determined by invoking the result object's length(|java.nio.charset.CoderResult|) method. This case applies 
only if the </code>malformed action<code>(|java.nio.charset.CharsetDecoder|) of this decoder is (|java.nio.charset.CodingErrorAction|) ; otherwise the malformed input will be 
ignored or replaced, as requested. 

An </code>unmappable-character<code>(|java.nio.charset.CoderResult|) result indicates that an unmappable-character error has been detected. The bytes that decode the unmappable 
character begin at the input buffer's (possibly incremented) position; the number of such bytes may be determined by invoking the result object's 
length(|java.nio.charset.CoderResult|) method. This case applies only if the </code>unmappable action<code>(|java.nio.charset.CharsetDecoder|) of this decoder is 
(|java.nio.charset.CodingErrorAction|) ; otherwise the unmappable character will be ignored or replaced, as requested. 



In any case, if this method is to be reinvoked in the same decoding operation then care should be taken to preserve any bytes remaining in the input buffer so that they are 
available to the next invocation. 

The endOfInput parameter advises this method as to whether the invoker can provide further input beyond that contained in the given input buffer. If there is a possibility of 
providing additional input then the invoker should pass false for this parameter; if there is no possibility of providing further input then the invoker should pass true. It is 
not erroneous, and in fact it is quite common, to pass false in one invocation and later discover that no further input was actually available. It is critical, however, that the 
final invocation of this method in a sequence of invocations always pass true so that any remaining undecoded input will be treated as being malformed. 

This method works by invoking the decodeLoop(|java.nio.charset.CharsetDecoder|) method, interpreting its results, handling error conditions, and reinvoking it as necessary. 


    in - The input byte buffer 
    out - The output character buffer 
    endOfInput - true if, and only if, the invoker can provide no additional input bytes beyond those in the given buffer 

    Returns: A coder-result object describing the reason for termination 

*java.nio.charset.CharsetDecoder.decodeLoop(ByteBuffer,CharBuffer)*

protected abstract |java.nio.charset.CoderResult| decodeLoop(
  java.nio.ByteBuffer in,
  java.nio.CharBuffer out)

Decodes one or more bytes into one or more characters. 

This method encapsulates the basic decoding loop, decoding as many bytes as possible until it either runs out of input, runs out of room in the output buffer, or encounters a 
decoding error. This method is invoked by the decode(|java.nio.charset.CharsetDecoder|) method, which handles result interpretation and error recovery. 

The buffers are read from, and written to, starting at their current positions. At most in.remaining()(|java.nio.Buffer|) bytes will be read, and at most 
out.remaining()(|java.nio.Buffer|) characters will be written. The buffers' positions will be advanced to reflect the bytes read and the characters written, but their marks and 
limits will not be modified. 

This method returns a (|java.nio.charset.CoderResult|) object to describe its reason for termination, in the same manner as the decode(|java.nio.charset.CharsetDecoder|) method. 
Most implementations of this method will handle decoding errors by returning an appropriate result object for interpretation by the decode(|java.nio.charset.CharsetDecoder|) 
method. An optimized implementation may instead examine the relevant error action and implement that action itself. 

An implementation of this method may perform arbitrary lookahead by returning (|java.nio.charset.CoderResult|) until it receives sufficient input. 


    in - The input byte buffer 
    out - The output character buffer 

    Returns: A coder-result object describing the reason for termination 

*java.nio.charset.CharsetDecoder.detectedCharset()*

public |java.nio.charset.Charset| detectedCharset()

Retrieves the charset that was detected by this decoder(optional operation). 

If this decoder implements an auto-detecting charset then this method returns the actual charset once it has been detected. After that point, this method returns the same value 
for the duration of the current decoding operation. If not enough input bytes have yet been read to determine the actual charset then this method throws an 
(|java.lang.IllegalStateException|) . 

The default implementation of this method always throws an (|java.lang.UnsupportedOperationException|) ; it should be overridden by auto-detecting decoders to return the 
appropriate value. 



    Returns: The charset detected by this auto-detecting decoder, or null if the charset has not yet been determined 

*java.nio.charset.CharsetDecoder.flush(CharBuffer)*

public final |java.nio.charset.CoderResult| flush(java.nio.CharBuffer out)

Flushes this decoder. 

Some decoders maintain internal state and may need to write some final characters to the output buffer once the overall input sequence has been read. 

Any additional output is written to the output buffer beginning at its current position. At most out.remaining()(|java.nio.Buffer|) characters will be written. The buffer's 
position will be advanced appropriately, but its mark and limit will not be modified. 

If this method completes successfully then it returns (|java.nio.charset.CoderResult|) . If there is insufficient room in the output buffer then it returns 
(|java.nio.charset.CoderResult|) . If this happens then this method must be invoked again, with an output buffer that has more room, in order to complete the current decoding 
operation. 

This method invokes the implFlush(|java.nio.charset.CharsetDecoder|) method to perform the actual flushing operation. 


    out - The output character buffer 

    Returns: A coder-result object, either {@link CoderResult#UNDERFLOW} or {@link CoderResult#OVERFLOW} 

*java.nio.charset.CharsetDecoder.implFlush(CharBuffer)*

protected |java.nio.charset.CoderResult| implFlush(java.nio.CharBuffer out)

Flushes this decoder. 

The default implementation of this method does nothing, and always returns (|java.nio.charset.CoderResult|) . This method should be overridden by decoders that may need to write 
final characters to the output buffer once the entire input sequence has been read. 


    out - The output character buffer 

    Returns: A coder-result object, either {@link CoderResult#UNDERFLOW} or {@link CoderResult#OVERFLOW} 

*java.nio.charset.CharsetDecoder.implOnMalformedInput(CodingErrorAction)*

protected void implOnMalformedInput(java.nio.charset.CodingErrorAction newAction)

Reports a change to this decoder's malformed-input action. 

The default implementation of this method does nothing. This method should be overridden by decoders that require notification of changes to the malformed-input action. 



*java.nio.charset.CharsetDecoder.implOnUnmappableCharacter(CodingErrorAction)*

protected void implOnUnmappableCharacter(java.nio.charset.CodingErrorAction newAction)

Reports a change to this decoder's unmappable-character action. 

The default implementation of this method does nothing. This method should be overridden by decoders that require notification of changes to the unmappable-character action. 



*java.nio.charset.CharsetDecoder.implReplaceWith(String)*

protected void implReplaceWith(java.lang.String newReplacement)

Reports a change to this decoder's replacement value. 

The default implementation of this method does nothing. This method should be overridden by decoders that require notification of changes to the replacement. 


    newReplacement - 

*java.nio.charset.CharsetDecoder.implReset()*

protected void implReset()

Resets this decoder, clearing any charset-specific internal state. 

The default implementation of this method does nothing. This method should be overridden by decoders that maintain internal state. 



*java.nio.charset.CharsetDecoder.isAutoDetecting()*

public boolean isAutoDetecting()

Tells whether or not this decoder implements an auto-detecting charset. 

The default implementation of this method always returns false; it should be overridden by auto-detecting decoders to return true. 



    Returns: true if, and only if, this decoder implements an auto-detecting charset 

*java.nio.charset.CharsetDecoder.isCharsetDetected()*

public boolean isCharsetDetected()

Tells whether or not this decoder has yet detected a charset(optional operation). 

If this decoder implements an auto-detecting charset then at a single point during a decoding operation this method may start returning true to indicate that a specific charset 
has been detected in the input byte sequence. Once this occurs, the detectedCharset(|java.nio.charset.CharsetDecoder|) method may be invoked to retrieve the detected charset. 

That this method returns false does not imply that no bytes have yet been decoded. Some auto-detecting decoders are capable of decoding some, or even all, of an input byte 
sequence without fixing on a particular charset. 

The default implementation of this method always throws an (|java.lang.UnsupportedOperationException|) ; it should be overridden by auto-detecting decoders to return true once the 
input charset has been determined. 



    Returns: true if, and only if, this decoder has detected a specific charset 

*java.nio.charset.CharsetDecoder.malformedInputAction()*

public |java.nio.charset.CodingErrorAction| malformedInputAction()

Returns this decoder's current action for malformed-input errors. 



    Returns: The current malformed-input action, which is never null 

*java.nio.charset.CharsetDecoder.maxCharsPerByte()*

public final float maxCharsPerByte()

Returns the maximum number of characters that will be produced for each byte of input. This value may be used to compute the worst-case size of the output buffer required for a 
given input sequence. 



    Returns: The maximum number of characters that will be produced per byte of input 

*java.nio.charset.CharsetDecoder.onMalformedInput(CodingErrorAction)*

public final |java.nio.charset.CharsetDecoder| onMalformedInput(java.nio.charset.CodingErrorAction newAction)

Changes this decoder's action for malformed-input errors. 

This method invokes the implOnMalformedInput(|java.nio.charset.CharsetDecoder|) method, passing the new action. 


    newAction - The new action; must not be null 

    Returns: 

*java.nio.charset.CharsetDecoder.onUnmappableCharacter(CodingErrorAction)*

public final |java.nio.charset.CharsetDecoder| onUnmappableCharacter(java.nio.charset.CodingErrorAction newAction)

Changes this decoder's action for unmappable-character errors. 

This method invokes the implOnUnmappableCharacter(|java.nio.charset.CharsetDecoder|) method, passing the new action. 


    newAction - The new action; must not be null 

    Returns: 

*java.nio.charset.CharsetDecoder.replacement()*

public final |java.lang.String| replacement()

Returns this decoder's replacement value. 



    Returns: This decoder's current replacement, which is never null and is never empty 

*java.nio.charset.CharsetDecoder.replaceWith(String)*

public final |java.nio.charset.CharsetDecoder| replaceWith(java.lang.String newReplacement)

Changes this decoder's replacement value. 

This method invokes the implReplaceWith(|java.nio.charset.CharsetDecoder|) method, passing the new replacement, after checking that the new replacement is acceptable. 


    newReplacement - The new replacement; must not be null and must have non-zero length 

    Returns: 

*java.nio.charset.CharsetDecoder.reset()*

public final |java.nio.charset.CharsetDecoder| reset()

Resets this decoder, clearing any internal state. 

This method resets charset-independent state and also invokes the implReset(|java.nio.charset.CharsetDecoder|) method in order to perform any charset-specific reset actions. 



    Returns: 

*java.nio.charset.CharsetDecoder.unmappableCharacterAction()*

public |java.nio.charset.CodingErrorAction| unmappableCharacterAction()

Returns this decoder's current action for unmappable-character errors. 



    Returns: The current unmappable-character action, which is never null 


