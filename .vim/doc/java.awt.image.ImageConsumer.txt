*java.awt.image.ImageConsumer* *ImageConsumer* The interface for objects express

public interface interface ImageConsumer


|java.awt.image.ImageConsumer_Description|
|java.awt.image.ImageConsumer_Fields|
|java.awt.image.ImageConsumer_Constructors|
|java.awt.image.ImageConsumer_Methods|

================================================================================

*java.awt.image.ImageConsumer_Fields*
|int_java.awt.image.ImageConsumer.COMPLETESCANLINES|
|int_java.awt.image.ImageConsumer.IMAGEABORTED|
|int_java.awt.image.ImageConsumer.IMAGEERROR|
|int_java.awt.image.ImageConsumer.RANDOMPIXELORDER|
|int_java.awt.image.ImageConsumer.SINGLEFRAME|
|int_java.awt.image.ImageConsumer.SINGLEFRAMEDONE|
|int_java.awt.image.ImageConsumer.SINGLEPASS|
|int_java.awt.image.ImageConsumer.STATICIMAGEDONE|
|int_java.awt.image.ImageConsumer.TOPDOWNLEFTRIGHT|

*java.awt.image.ImageConsumer_Methods*
|java.awt.image.ImageConsumer.imageComplete(int)|The imageComplete method is ca
|java.awt.image.ImageConsumer.setColorModel(ColorModel)|Sets the ColorModel obj
|java.awt.image.ImageConsumer.setDimensions(int,int)|The dimensions of the sour
|java.awt.image.ImageConsumer.setHints(int)|Sets the hints that the ImageConsum
|java.awt.image.ImageConsumer.setPixels(int,int,int,int,ColorModel,byte[],int,int)|
|java.awt.image.ImageConsumer.setPixels(int,int,int,int,ColorModel,int[],int,int)|
|java.awt.image.ImageConsumer.setProperties(Hashtable)|Sets the extensible list

*java.awt.image.ImageConsumer_Description*

The interface for objects expressing interest in image data through the 
ImageProducer interfaces. When a consumer is added to an image producer, the 
producer delivers all of the data about the image using the method calls 
defined in this interface. 


*int_java.awt.image.ImageConsumer.COMPLETESCANLINES*

The interface for objects expressing interest in image data through the 
ImageProducer interfaces. When a consumer is added to an image producer, the 
producer delivers all of the data about the image using the method calls 
defined in this interface. 


*int_java.awt.image.ImageConsumer.IMAGEABORTED*

The interface for objects expressing interest in image data through the 
ImageProducer interfaces. When a consumer is added to an image producer, the 
producer delivers all of the data about the image using the method calls 
defined in this interface. 


*int_java.awt.image.ImageConsumer.IMAGEERROR*

The interface for objects expressing interest in image data through the 
ImageProducer interfaces. When a consumer is added to an image producer, the 
producer delivers all of the data about the image using the method calls 
defined in this interface. 


*int_java.awt.image.ImageConsumer.RANDOMPIXELORDER*

The interface for objects expressing interest in image data through the 
ImageProducer interfaces. When a consumer is added to an image producer, the 
producer delivers all of the data about the image using the method calls 
defined in this interface. 


*int_java.awt.image.ImageConsumer.SINGLEFRAME*

The interface for objects expressing interest in image data through the 
ImageProducer interfaces. When a consumer is added to an image producer, the 
producer delivers all of the data about the image using the method calls 
defined in this interface. 


*int_java.awt.image.ImageConsumer.SINGLEFRAMEDONE*

The interface for objects expressing interest in image data through the 
ImageProducer interfaces. When a consumer is added to an image producer, the 
producer delivers all of the data about the image using the method calls 
defined in this interface. 


*int_java.awt.image.ImageConsumer.SINGLEPASS*

The interface for objects expressing interest in image data through the 
ImageProducer interfaces. When a consumer is added to an image producer, the 
producer delivers all of the data about the image using the method calls 
defined in this interface. 


*int_java.awt.image.ImageConsumer.STATICIMAGEDONE*

The interface for objects expressing interest in image data through the 
ImageProducer interfaces. When a consumer is added to an image producer, the 
producer delivers all of the data about the image using the method calls 
defined in this interface. 


*int_java.awt.image.ImageConsumer.TOPDOWNLEFTRIGHT*

The interface for objects expressing interest in image data through the 
ImageProducer interfaces. When a consumer is added to an image producer, the 
producer delivers all of the data about the image using the method calls 
defined in this interface. 



*java.awt.image.ImageConsumer.imageComplete(int)*

public void imageComplete(int status)

The imageComplete method is called when the ImageProducer is finished 
delivering all of the pixels that the source image contains, or when a single 
frame of a multi-frame animation has been completed, or when an error in 
loading or producing the image has occured. The ImageConsumer should remove 
itself from the list of consumers registered with the ImageProducer at this 
time, unless it is interested in successive frames. 

    status - the status of image loading 

*java.awt.image.ImageConsumer.setColorModel(ColorModel)*

public void setColorModel(java.awt.image.ColorModel model)

Sets the ColorModel object used for the majority of the pixels reported using 
the setPixels method calls. Note that each set of pixels delivered using 
setPixels contains its own ColorModel object, so no assumption should be made 
that this model will be the only one used in delivering pixel values. A notable 
case where multiple ColorModel objects may be seen is a filtered image when for 
each set of pixels that it filters, the filter determines whether the pixels 
can be sent on untouched, using the original ColorModel, or whether the pixels 
should be modified (filtered) and passed on using a ColorModel more convenient 
for the filtering process. 

    model - the specified ColorModel 

*java.awt.image.ImageConsumer.setDimensions(int,int)*

public void setDimensions(
  int width,
  int height)

The dimensions of the source image are reported using the setDimensions method 
call. 

    width - the width of the source image 
    height - the height of the source image 

*java.awt.image.ImageConsumer.setHints(int)*

public void setHints(int hintflags)

Sets the hints that the ImageConsumer uses to process the pixels delivered by 
the ImageProducer. The ImageProducer can deliver the pixels in any order, but 
the ImageConsumer may be able to scale or convert the pixels to the destination 
ColorModel more efficiently or with higher quality if it knows some information 
about how the pixels will be delivered up front. The setHints method should be 
called before any calls to any of the setPixels methods with a bit mask of 
hints about the manner in which the pixels will be delivered. If the 
ImageProducer does not follow the guidelines for the indicated hint, the 
results are undefined. 

    hintflags - a set of hints that the ImageConsumer uses to process the pixels 

*java.awt.image.ImageConsumer.setPixels(int,int,int,int,ColorModel,byte[],int,int)*

public void setPixels(
  int x,
  int y,
  int w,
  int h,
  java.awt.image.ColorModel model,
  byte[] pixels,
  int off,
  int scansize)

Delivers the pixels of the image with one or more calls to this method. Each 
call specifies the location and size of the rectangle of source pixels that are 
contained in the array of pixels. The specified ColorModel object should be 
used to convert the pixels into their corresponding color and alpha components. 
Pixel (m,n) is stored in the pixels array at index (n * scansize + m + off). 
The pixels delivered using this method are all stored as bytes. 

    x,&nbsp;y - the coordinates of the upper-left corner of the area of pixels to be set 
    w - the width of the area of pixels 
    h - the height of the area of pixels 
    model - the specified ColorModel 
    pixels - the array of pixels 
    off - the offset into the pixels array 
    scansize - the distance from one row of pixels to the next in the pixels array 

*java.awt.image.ImageConsumer.setPixels(int,int,int,int,ColorModel,int[],int,int)*

public void setPixels(
  int x,
  int y,
  int w,
  int h,
  java.awt.image.ColorModel model,
  int[] pixels,
  int off,
  int scansize)

The pixels of the image are delivered using one or more calls to the setPixels 
method. Each call specifies the location and size of the rectangle of source 
pixels that are contained in the array of pixels. The specified ColorModel 
object should be used to convert the pixels into their corresponding color and 
alpha components. Pixel (m,n) is stored in the pixels array at index (n * 
scansize + m + off). The pixels delivered using this method are all stored as 
ints. this method are all stored as ints. 

    x,&nbsp;y - the coordinates of the upper-left corner of the area of pixels to be set 
    w - the width of the area of pixels 
    h - the height of the area of pixels 
    model - the specified ColorModel 
    pixels - the array of pixels 
    off - the offset into the pixels array 
    scansize - the distance from one row of pixels to the next in the pixels array 

*java.awt.image.ImageConsumer.setProperties(Hashtable)*

public void setProperties(java.util.Hashtable props)

Sets the extensible list of properties associated with this image. 

    props - the list of properties to be associated with this image 


