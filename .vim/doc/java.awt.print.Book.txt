*java.awt.print.Book* *Book* The Book class provides a representation of a docum

public class Book
  extends    |java.lang.Object|
  implements |java.awt.print.Pageable|

|java.awt.print.Book_Description|
|java.awt.print.Book_Fields|
|java.awt.print.Book_Constructors|
|java.awt.print.Book_Methods|

================================================================================

*java.awt.print.Book_Constructors*
|java.awt.print.Book()|Creates a new, empty Book.

*java.awt.print.Book_Methods*
|java.awt.print.Book.append(Printable,PageFormat)|Appends a single page to the 
|java.awt.print.Book.append(Printable,PageFormat,int)|Appends numPages pages to
|java.awt.print.Book.getNumberOfPages()|Returns the number of pages in this Boo
|java.awt.print.Book.getPageFormat(int)|Returns thePageFormatof the page specif
|java.awt.print.Book.getPrintable(int)|Returns thePrintableinstance responsible
|java.awt.print.Book.setPage(int,Printable,PageFormat)|Sets the PageFormat and 

*java.awt.print.Book_Description*

The Book class provides a representation of a document in which pages may have 
different page formats and page painters. This class uses the 
(|java.awt.print.Pageable|) interface to interact with a 
(|java.awt.print.PrinterJob|) . 


*java.awt.print.Book()*

public Book()

Creates a new, empty Book. 


*java.awt.print.Book.append(Printable,PageFormat)*

public void append(
  java.awt.print.Printable painter,
  java.awt.print.PageFormat page)

Appends a single page to the end of this Book. 

    painter - the Printable instance that renders the page 
    page - the size and orientation of the page 

*java.awt.print.Book.append(Printable,PageFormat,int)*

public void append(
  java.awt.print.Printable painter,
  java.awt.print.PageFormat page,
  int numPages)

Appends numPages pages to the end of this Book. Each of the pages is associated 
with page. 

    painter - the Printable instance that renders the page 
    page - the size and orientation of the page 
    numPages - the number of pages to be added to the this Book. 

*java.awt.print.Book.getNumberOfPages()*

public int getNumberOfPages()

Returns the number of pages in this Book. 


    Returns: the number of pages this Book contains. 
*java.awt.print.Book.getPageFormat(int)*

public |java.awt.print.PageFormat| getPageFormat(int pageIndex)
  throws |java.lang.IndexOutOfBoundsException|
         
Returns the (|java.awt.print.PageFormat|) of the page specified by pageIndex. 

    pageIndex - the zero based index of the page whose PageFormat is being requested 

    Returns: the PageFormat describing the size and orientation of the page. 
*java.awt.print.Book.getPrintable(int)*

public |java.awt.print.Printable| getPrintable(int pageIndex)
  throws |java.lang.IndexOutOfBoundsException|
         
Returns the (|java.awt.print.Printable|) instance responsible for rendering the 
page specified by pageIndex. 

    pageIndex - the zero based index of the page whose Printable is being requested 

    Returns: the Printable that renders the page. 
*java.awt.print.Book.setPage(int,Printable,PageFormat)*

public void setPage(
  int pageIndex,
  java.awt.print.Printable painter,
  java.awt.print.PageFormat page)
  throws |java.lang.IndexOutOfBoundsException|
         
Sets the PageFormat and the Painter for a specified page number. 

    pageIndex - the zero based index of the page whose painter and format is altered 
    painter - the Printable instance that renders the page 
    page - the size and orientation of the page 


