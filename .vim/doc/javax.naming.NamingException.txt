*javax.naming.NamingException* *NamingException* This is the superclass of all e

public class NamingException
  extends    |java.lang.Exception|

|javax.naming.NamingException_Description|
|javax.naming.NamingException_Fields|
|javax.naming.NamingException_Constructors|
|javax.naming.NamingException_Methods|

================================================================================

*javax.naming.NamingException_Fields*
|javax.naming.Name_javax.naming.NamingException.remainingName|
|javax.naming.Name_javax.naming.NamingException.resolvedName|
|java.lang.Object_javax.naming.NamingException.resolvedObj|
|java.lang.Throwable_javax.naming.NamingException.rootException|

*javax.naming.NamingException_Constructors*
|javax.naming.NamingException()|Constructs a new NamingException.
|javax.naming.NamingException(String)|Constructs a new NamingException with an 

*javax.naming.NamingException_Methods*
|javax.naming.NamingException.appendRemainingComponent(String)|Add name as the 
|javax.naming.NamingException.appendRemainingName(Name)|Add components from 'na
|javax.naming.NamingException.getCause()|Returns the cause of this exception.
|javax.naming.NamingException.getExplanation()|Retrieves the explanation associ
|javax.naming.NamingException.getRemainingName()|Retrieves the remaining unreso
|javax.naming.NamingException.getResolvedName()|Retrieves the leading portion o
|javax.naming.NamingException.getResolvedObj()|Retrieves the object to which re
|javax.naming.NamingException.getRootCause()|Retrieves the root cause of this N
|javax.naming.NamingException.initCause(Throwable)|Initializes the cause of thi
|javax.naming.NamingException.setRemainingName(Name)|Sets the remaining name fi
|javax.naming.NamingException.setResolvedName(Name)|Sets the resolved name fiel
|javax.naming.NamingException.setResolvedObj(Object)|Sets the resolved object f
|javax.naming.NamingException.setRootCause(Throwable)|Records the root cause of
|javax.naming.NamingException.toString()|Generates the string representation of
|javax.naming.NamingException.toString(boolean)|Generates the string representa

*javax.naming.NamingException_Description*

This is the superclass of all exceptions thrown by operations in the Context 
and DirContext interfaces. The nature of the failure is described by the name 
of the subclass. This exception captures the information pinpointing where the 
operation failed, such as where resolution last proceeded to. 

Resolved Name. Portion of name that has been resolved. Resolved Object. Object 
to which resolution of name proceeded. Remaining Name. Portion of name that has 
not been resolved. Explanation. Detail explaining why name resolution failed. 
Root Exception. The exception that caused this naming exception to be thrown. 

null is an acceptable value for any of these fields. When null, it means that 
no such information has been recorded for that field. 

A NamingException instance is not synchronized against concurrent multithreaded 
access. Multiple threads trying to access and modify a single NamingException 
instance should lock the object. 

This exception has been retrofitted to conform to the general purpose 
exception-chaining mechanism. The root exception (or root cause) is the same 
object as the cause returned by the (|java.lang.Throwable|) method. 


*javax.naming.Name_javax.naming.NamingException.remainingName*

This is the superclass of all exceptions thrown by operations in the Context 
and DirContext interfaces. The nature of the failure is described by the name 
of the subclass. This exception captures the information pinpointing where the 
operation failed, such as where resolution last proceeded to. 

Resolved Name. Portion of name that has been resolved. Resolved Object. Object 
to which resolution of name proceeded. Remaining Name. Portion of name that has 
not been resolved. Explanation. Detail explaining why name resolution failed. 
Root Exception. The exception that caused this naming exception to be thrown. 

null is an acceptable value for any of these fields. When null, it means that 
no such information has been recorded for that field. 

A NamingException instance is not synchronized against concurrent multithreaded 
access. Multiple threads trying to access and modify a single NamingException 
instance should lock the object. 

This exception has been retrofitted to conform to the general purpose 
exception-chaining mechanism. The root exception (or root cause) is the same 
object as the cause returned by the (|java.lang.Throwable|) method. 


*javax.naming.Name_javax.naming.NamingException.resolvedName*

This is the superclass of all exceptions thrown by operations in the Context 
and DirContext interfaces. The nature of the failure is described by the name 
of the subclass. This exception captures the information pinpointing where the 
operation failed, such as where resolution last proceeded to. 

Resolved Name. Portion of name that has been resolved. Resolved Object. Object 
to which resolution of name proceeded. Remaining Name. Portion of name that has 
not been resolved. Explanation. Detail explaining why name resolution failed. 
Root Exception. The exception that caused this naming exception to be thrown. 

null is an acceptable value for any of these fields. When null, it means that 
no such information has been recorded for that field. 

A NamingException instance is not synchronized against concurrent multithreaded 
access. Multiple threads trying to access and modify a single NamingException 
instance should lock the object. 

This exception has been retrofitted to conform to the general purpose 
exception-chaining mechanism. The root exception (or root cause) is the same 
object as the cause returned by the (|java.lang.Throwable|) method. 


*java.lang.Object_javax.naming.NamingException.resolvedObj*

This is the superclass of all exceptions thrown by operations in the Context 
and DirContext interfaces. The nature of the failure is described by the name 
of the subclass. This exception captures the information pinpointing where the 
operation failed, such as where resolution last proceeded to. 

Resolved Name. Portion of name that has been resolved. Resolved Object. Object 
to which resolution of name proceeded. Remaining Name. Portion of name that has 
not been resolved. Explanation. Detail explaining why name resolution failed. 
Root Exception. The exception that caused this naming exception to be thrown. 

null is an acceptable value for any of these fields. When null, it means that 
no such information has been recorded for that field. 

A NamingException instance is not synchronized against concurrent multithreaded 
access. Multiple threads trying to access and modify a single NamingException 
instance should lock the object. 

This exception has been retrofitted to conform to the general purpose 
exception-chaining mechanism. The root exception (or root cause) is the same 
object as the cause returned by the (|java.lang.Throwable|) method. 


*java.lang.Throwable_javax.naming.NamingException.rootException*

This is the superclass of all exceptions thrown by operations in the Context 
and DirContext interfaces. The nature of the failure is described by the name 
of the subclass. This exception captures the information pinpointing where the 
operation failed, such as where resolution last proceeded to. 

Resolved Name. Portion of name that has been resolved. Resolved Object. Object 
to which resolution of name proceeded. Remaining Name. Portion of name that has 
not been resolved. Explanation. Detail explaining why name resolution failed. 
Root Exception. The exception that caused this naming exception to be thrown. 

null is an acceptable value for any of these fields. When null, it means that 
no such information has been recorded for that field. 

A NamingException instance is not synchronized against concurrent multithreaded 
access. Multiple threads trying to access and modify a single NamingException 
instance should lock the object. 

This exception has been retrofitted to conform to the general purpose 
exception-chaining mechanism. The root exception (or root cause) is the same 
object as the cause returned by the (|java.lang.Throwable|) method. 



*javax.naming.NamingException()*

public NamingException()

Constructs a new NamingException. All fields are set to null. 


*javax.naming.NamingException(String)*

public NamingException(java.lang.String explanation)

Constructs a new NamingException with an explanation. All unspecified fields 
are set to null. 

    explanation - A possibly null string containing additional detail about this exception. 

*javax.naming.NamingException.appendRemainingComponent(String)*

public void appendRemainingComponent(java.lang.String name)

Add name as the last component in remaining name. 

    name - The component to add. If name is null, this method does not do anything. 

*javax.naming.NamingException.appendRemainingName(Name)*

public void appendRemainingName(javax.naming.Name name)

Add components from 'name' as the last components in remaining name. 

name is a composite name. If the intent is to append a compound name, you 
should "stringify" the compound name then invoke the overloaded form that 
accepts a String parameter. 

Subsequent changes to name does not affect the remaining name field in this 
NamingException and vice versa. 

    name - The possibly null name containing ordered components to add. If name is null, 
       this method does not do anything. 

*javax.naming.NamingException.getCause()*

public |java.lang.Throwable| getCause()

Returns the cause of this exception. The cause is the throwable that caused 
this naming exception to be thrown. Returns null if the cause is nonexistent or 
unknown. 


    Returns: the cause of this exception, or null if the cause is nonexistent or unknown. 
*javax.naming.NamingException.getExplanation()*

public |java.lang.String| getExplanation()

Retrieves the explanation associated with this exception. 


    Returns: The possibly null detail string explaining more about this exception. If null, 
             it means there is no detail message for this exception. 
*javax.naming.NamingException.getRemainingName()*

public |javax.naming.Name| getRemainingName()

Retrieves the remaining unresolved portion of the name. 


    Returns: The part of the name that has not been resolved. It is a composite name. It can 
             be null, which means the remaining name field has not been set. 
*javax.naming.NamingException.getResolvedName()*

public |javax.naming.Name| getResolvedName()

Retrieves the leading portion of the name that was resolved successfully. 


    Returns: The part of the name that was resolved successfully. It is a composite name. It 
             can be null, which means the resolved name field has not been set. 
*javax.naming.NamingException.getResolvedObj()*

public |java.lang.Object| getResolvedObj()

Retrieves the object to which resolution was successful. This is the object to 
which the resolved name is bound. 


    Returns: The possibly null object that was resolved so far. null means that the resolved 
             object field has not been set. 
*javax.naming.NamingException.getRootCause()*

public |java.lang.Throwable| getRootCause()

Retrieves the root cause of this NamingException, if any. The root cause of a 
naming exception is used when the service provider wants to indicate to the 
caller a non-naming related exception but at the same time wants to use the 
NamingException structure to indicate how far the naming operation proceeded. 

This method predates the general-purpose exception chaining facility. The 
(|javax.naming.NamingException|) method is now the preferred means of obtaining 
this information. 


    Returns: The possibly null exception that caused this naming exception. If null, it 
             means no root cause has been set for this naming exception. 
*javax.naming.NamingException.initCause(Throwable)*

public |java.lang.Throwable| initCause(java.lang.Throwable cause)

Initializes the cause of this exception to the specified value. The cause is 
the throwable that caused this naming exception to be thrown. 

This method may be called at most once. 

    cause - the cause, which is saved for later retrieval by the {@link #getCause()} 
       method. A null value indicates that the cause is nonexistent or unknown. 

    Returns: a reference to this NamingException instance. 
*javax.naming.NamingException.setRemainingName(Name)*

public void setRemainingName(javax.naming.Name name)

Sets the remaining name field of this exception. 

name is a composite name. If the intent is to set this field using a compound 
name or string, you must "stringify" the compound name, and create a composite 
name with a single component using the string. You can then invoke this method 
using the resulting composite name. 

A copy of name is made and stored. Subsequent changes to name does not affect 
the copy in this NamingException and vice versa. 

    name - The possibly null name to set remaining name to. If null, it sets the remaining 
       name field to null. 

*javax.naming.NamingException.setResolvedName(Name)*

public void setResolvedName(javax.naming.Name name)

Sets the resolved name field of this exception. 

name is a composite name. If the intent is to set this field using a compound 
name or string, you must "stringify" the compound name, and create a composite 
name with a single component using the string. You can then invoke this method 
using the resulting composite name. 

A copy of name is made and stored. Subsequent changes to name does not affect 
the copy in this NamingException and vice versa. 

    name - The possibly null name to set resolved name to. If null, it sets the resolved 
       name field to null. 

*javax.naming.NamingException.setResolvedObj(Object)*

public void setResolvedObj(java.lang.Object obj)

Sets the resolved object field of this exception. 

    obj - The possibly null object to set resolved object to. If null, the resolved 
       object field is set to null. 

*javax.naming.NamingException.setRootCause(Throwable)*

public void setRootCause(java.lang.Throwable e)

Records the root cause of this NamingException. If e is this, this method does 
not do anything. 

This method predates the general-purpose exception chaining facility. The 
(|javax.naming.NamingException|) method is now the preferred means of recording 
this information. 

    e - The possibly null exception that caused the naming operation to fail. If null, 
       it means this naming exception has no root cause. 

*javax.naming.NamingException.toString()*

public |java.lang.String| toString()

Generates the string representation of this exception. The string 
representation consists of this exception's class name, its detailed message, 
and if it has a root cause, the string representation of the root cause 
exception, followed by the remaining name (if it is not null). This string is 
used for debugging and not meant to be interpreted programmatically. 


    Returns: The non-null string containing the string representation of this exception. 
*javax.naming.NamingException.toString(boolean)*

public |java.lang.String| toString(boolean detail)

Generates the string representation in more detail. This string representation 
consists of the information returned by the toString() that takes no 
parameters, plus the string representation of the resolved object (if it is not 
null). This string is used for debugging and not meant to be interpreted 
programmatically. 

    detail - If true, include details about the resolved object in addition to the other 
       information. 

    Returns: The non-null string containing the string representation. 

