*java.util.IllegalFormatConversionException* *IllegalFormatConversionException* 

public class IllegalFormatConversionException
  extends    |java.util.IllegalFormatException|

|java.util.IllegalFormatConversionException_Description|
|java.util.IllegalFormatConversionException_Fields|
|java.util.IllegalFormatConversionException_Constructors|
|java.util.IllegalFormatConversionException_Methods|

================================================================================

*java.util.IllegalFormatConversionException_Constructors*
|java.util.IllegalFormatConversionException(char,Class)|Constructs an instance 

*java.util.IllegalFormatConversionException_Methods*
|java.util.IllegalFormatConversionException.getArgumentClass()|Returns the clas
|java.util.IllegalFormatConversionException.getConversion()|Returns the inappli
|java.util.IllegalFormatConversionException.getMessage()|

*java.util.IllegalFormatConversionException_Description*

Unchecked exception thrown when the argument corresponding to the format 
specifier is of an incompatible type. 

Unless otherwise specified, passing a null argument to any method or 
constructor in this class will cause a (|java.lang.NullPointerException|) to be 
thrown. 


*java.util.IllegalFormatConversionException(char,Class)*

public IllegalFormatConversionException(
  char c,
  java.lang.Class arg)

Constructs an instance of this class with the mismatched conversion and the 
corresponding argument class. 

    c - Inapplicable conversion 
    arg - Class of the mismatched argument 

*java.util.IllegalFormatConversionException.getArgumentClass()*

public |java.lang.Class| getArgumentClass()

Returns the class of the mismatched argument. 


    Returns: The class of the mismatched argument 
*java.util.IllegalFormatConversionException.getConversion()*

public char getConversion()

Returns the inapplicable conversion. 


    Returns: The inapplicable conversion 
*java.util.IllegalFormatConversionException.getMessage()*

public |java.lang.String| getMessage()





