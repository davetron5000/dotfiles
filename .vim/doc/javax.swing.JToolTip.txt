*javax.swing.JToolTip* *JToolTip* Used to display a "Tip" for a Component.

public class JToolTip
  extends    |javax.swing.JComponent|
  implements |javax.accessibility.Accessible|

|javax.swing.JToolTip_Description|
|javax.swing.JToolTip_Fields|
|javax.swing.JToolTip_Constructors|
|javax.swing.JToolTip_Methods|

================================================================================

*javax.swing.JToolTip_Constructors*
|javax.swing.JToolTip()|Creates a tool tip.

*javax.swing.JToolTip_Methods*
|javax.swing.JToolTip.getAccessibleContext()|Gets the AccessibleContext associa
|javax.swing.JToolTip.getComponent()|Returns the component the tooltip applies 
|javax.swing.JToolTip.getTipText()|Returns the text that is shown when the tool
|javax.swing.JToolTip.getUI()|Returns the Lobject that renders this component.
|javax.swing.JToolTip.getUIClassID()|Returns the name of the Lclass that render
|javax.swing.JToolTip.paramString()|Returns a string representation of this JTo
|javax.swing.JToolTip.setComponent(JComponent)|Specifies the component that the
|javax.swing.JToolTip.setTipText(String)|Sets the text to show when the tool ti
|javax.swing.JToolTip.updateUI()|Resets the UI property to a value from the cur

*javax.swing.JToolTip_Description*

Used to display a "Tip" for a Component. Typically components provide api to 
automate the process of using ToolTips. For example, any Swing component can 
use the JComponent setToolTipText method to specify the text for a standard 
tooltip. A component that wants to create a custom ToolTip display can override 
JComponent's createToolTip method and use a subclass of this class. 

See How to Use Tool Tips in The Java Tutorial for further documentation. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.JToolTip()*

public JToolTip()

Creates a tool tip. 


*javax.swing.JToolTip.getAccessibleContext()*

public |javax.accessibility.AccessibleContext| getAccessibleContext()

Gets the AccessibleContext associated with this JToolTip. For tool tips, the 
AccessibleContext takes the form of an AccessibleJToolTip. A new 
AccessibleJToolTip instance is created if necessary. 


    Returns: an AccessibleJToolTip that serves as the AccessibleContext of this JToolTip 
*javax.swing.JToolTip.getComponent()*

public |javax.swing.JComponent| getComponent()

Returns the component the tooltip applies to. The returned value may be null. 


    Returns: the component that the tooltip describes 
*javax.swing.JToolTip.getTipText()*

public |java.lang.String| getTipText()

Returns the text that is shown when the tool tip is displayed. The returned 
value may be null. 


    Returns: the String that is displayed 
*javax.swing.JToolTip.getUI()*

public |javax.swing.plaf.ToolTipUI| getUI()

Returns the Lobject that renders this component. 


    Returns: the ToolTipUI object that renders this component 
*javax.swing.JToolTip.getUIClassID()*

public |java.lang.String| getUIClassID()

Returns the name of the Lclass that renders this component. 


    Returns: the string "ToolTipUI" 
*javax.swing.JToolTip.paramString()*

protected |java.lang.String| paramString()

Returns a string representation of this JToolTip. This method is intended to be 
used only for debugging purposes, and the content and format of the returned 
string may vary between implementations. The returned string may be empty but 
may not be null. 


    Returns: a string representation of this JToolTip 
*javax.swing.JToolTip.setComponent(JComponent)*

public void setComponent(javax.swing.JComponent c)

Specifies the component that the tooltip describes. The component c may be null 
and will have no effect. 

This is a bound property. 

    c - the JComponent being described 

*javax.swing.JToolTip.setTipText(String)*

public void setTipText(java.lang.String tipText)

Sets the text to show when the tool tip is displayed. The string tipText may be 
null. 

    tipText - the String to display 

*javax.swing.JToolTip.updateUI()*

public void updateUI()

Resets the UI property to a value from the current look and feel. 



