*javax.swing.plaf.basic.BasicSplitPaneUI* *BasicSplitPaneUI* A Basic Limplementa

public class BasicSplitPaneUI
  extends    |javax.swing.plaf.SplitPaneUI|

|javax.swing.plaf.basic.BasicSplitPaneUI_Description|
|javax.swing.plaf.basic.BasicSplitPaneUI_Fields|
|javax.swing.plaf.basic.BasicSplitPaneUI_Constructors|
|javax.swing.plaf.basic.BasicSplitPaneUI_Methods|

================================================================================

*javax.swing.plaf.basic.BasicSplitPaneUI_Fields*
|int_javax.swing.plaf.basic.BasicSplitPaneUI.beginDragDividerLocation|
|javax.swing.plaf.basic.BasicSplitPaneDivider_javax.swing.plaf.basic.BasicSplitPaneUI.divider|
|javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.dividerResizeToggleKey|
|int_javax.swing.plaf.basic.BasicSplitPaneUI.dividerSize|
|javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.downKey|
|boolean_javax.swing.plaf.basic.BasicSplitPaneUI.draggingHW|
|javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.endKey|
|java.awt.event.FocusListener_javax.swing.plaf.basic.BasicSplitPaneUI.focusListener|
|javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.homeKey|
|int_javax.swing.plaf.basic.BasicSplitPaneUI.KEYBOARD_DIVIDER_MOVE_OFFSET|
|java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardDownRightListener|
|java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardEndListener|
|java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardHomeListener|
|java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardResizeToggleListener|
|java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardUpLeftListener|
|javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager_javax.swing.plaf.basic.BasicSplitPaneUI.layoutManager|
|javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.leftKey|
|java.lang.String_javax.swing.plaf.basic.BasicSplitPaneUI.NON_CONTINUOUS_DIVIDER|
|java.awt.Component_javax.swing.plaf.basic.BasicSplitPaneUI.nonContinuousLayoutDivider|
|java.beans.PropertyChangeListener_javax.swing.plaf.basic.BasicSplitPaneUI.propertyChangeListener|
|javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.rightKey|
|javax.swing.JSplitPane_javax.swing.plaf.basic.BasicSplitPaneUI.splitPane|
|javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.upKey|

*javax.swing.plaf.basic.BasicSplitPaneUI_Constructors*
|javax.swing.plaf.basic.BasicSplitPaneUI()|

*javax.swing.plaf.basic.BasicSplitPaneUI_Methods*
|javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultDivider()|Creates the def
|javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultNonContinuousLayoutDivider()|
|javax.swing.plaf.basic.BasicSplitPaneUI.createFocusListener()|Creates a FocusL
|javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardDownRightListener()|As o
|javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardEndListener()|As of Java
|javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardHomeListener()|As of Jav
|javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardResizeToggleListener()|A
|javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardUpLeftListener()|As of J
|javax.swing.plaf.basic.BasicSplitPaneUI.createPropertyChangeListener()|Creates
|javax.swing.plaf.basic.BasicSplitPaneUI.createUI(JComponent)|Creates a new Bas
|javax.swing.plaf.basic.BasicSplitPaneUI.dragDividerTo(int)|Messaged during a d
|javax.swing.plaf.basic.BasicSplitPaneUI.finishDraggingTo(int)|Messaged to fini
|javax.swing.plaf.basic.BasicSplitPaneUI.finishedPaintingChildren(JSplitPane,Graphics)|
|javax.swing.plaf.basic.BasicSplitPaneUI.getDivider()|Returns the divider betwe
|javax.swing.plaf.basic.BasicSplitPaneUI.getDividerBorderSize()|As of Java 2 pl
|javax.swing.plaf.basic.BasicSplitPaneUI.getDividerLocation(JSplitPane)|Returns
|javax.swing.plaf.basic.BasicSplitPaneUI.getInsets(JComponent)|Returns the inse
|javax.swing.plaf.basic.BasicSplitPaneUI.getLastDragLocation()|Returns the last
|javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumDividerLocation(JSplitPane)|
|javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumSize(JComponent)|Returns the
|javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumDividerLocation(JSplitPane)|
|javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumSize(JComponent)|Returns the
|javax.swing.plaf.basic.BasicSplitPaneUI.getNonContinuousLayoutDivider()|Return
|javax.swing.plaf.basic.BasicSplitPaneUI.getOrientation()|Returns the orientati
|javax.swing.plaf.basic.BasicSplitPaneUI.getPreferredSize(JComponent)|Returns t
|javax.swing.plaf.basic.BasicSplitPaneUI.getSplitPane()|Returns the splitpane t
|javax.swing.plaf.basic.BasicSplitPaneUI.installDefaults()|Installs the UI defa
|javax.swing.plaf.basic.BasicSplitPaneUI.installKeyboardActions()|Installs the 
|javax.swing.plaf.basic.BasicSplitPaneUI.installListeners()|Installs the event 
|javax.swing.plaf.basic.BasicSplitPaneUI.installUI(JComponent)|Installs the UI.
|javax.swing.plaf.basic.BasicSplitPaneUI.isContinuousLayout()|Determines wether
|javax.swing.plaf.basic.BasicSplitPaneUI.paint(Graphics,JComponent)|Messaged to
|javax.swing.plaf.basic.BasicSplitPaneUI.resetLayoutManager()|Resets the layout
|javax.swing.plaf.basic.BasicSplitPaneUI.resetToPreferredSizes(JSplitPane)|Mess
|javax.swing.plaf.basic.BasicSplitPaneUI.setContinuousLayout(boolean)|Turn cont
|javax.swing.plaf.basic.BasicSplitPaneUI.setDividerLocation(JSplitPane,int)|Set
|javax.swing.plaf.basic.BasicSplitPaneUI.setLastDragLocation(int)|Set the last 
|javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider(Component)|
|javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider(Component,boolean)|
|javax.swing.plaf.basic.BasicSplitPaneUI.setOrientation(int)|Set the orientatio
|javax.swing.plaf.basic.BasicSplitPaneUI.startDragging()|Should be messaged bef
|javax.swing.plaf.basic.BasicSplitPaneUI.uninstallDefaults()|Uninstalls the UI 
|javax.swing.plaf.basic.BasicSplitPaneUI.uninstallKeyboardActions()|Uninstalls 
|javax.swing.plaf.basic.BasicSplitPaneUI.uninstallListeners()|Uninstalls the ev
|javax.swing.plaf.basic.BasicSplitPaneUI.uninstallUI(JComponent)|Uninstalls the

*javax.swing.plaf.basic.BasicSplitPaneUI_Description*

A Basic Limplementation of the SplitPaneUI. 


*int_javax.swing.plaf.basic.BasicSplitPaneUI.beginDragDividerLocation*

A Basic Limplementation of the SplitPaneUI. 


*javax.swing.plaf.basic.BasicSplitPaneDivider_javax.swing.plaf.basic.BasicSplitPaneUI.divider*

A Basic Limplementation of the SplitPaneUI. 


*javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.dividerResizeToggleKey*

A Basic Limplementation of the SplitPaneUI. 


*int_javax.swing.plaf.basic.BasicSplitPaneUI.dividerSize*

A Basic Limplementation of the SplitPaneUI. 


*javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.downKey*

A Basic Limplementation of the SplitPaneUI. 


*boolean_javax.swing.plaf.basic.BasicSplitPaneUI.draggingHW*

A Basic Limplementation of the SplitPaneUI. 


*javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.endKey*

A Basic Limplementation of the SplitPaneUI. 


*java.awt.event.FocusListener_javax.swing.plaf.basic.BasicSplitPaneUI.focusListener*

A Basic Limplementation of the SplitPaneUI. 


*javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.homeKey*

A Basic Limplementation of the SplitPaneUI. 


*int_javax.swing.plaf.basic.BasicSplitPaneUI.KEYBOARD_DIVIDER_MOVE_OFFSET*

A Basic Limplementation of the SplitPaneUI. 


*java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardDownRightListener*

A Basic Limplementation of the SplitPaneUI. 


*java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardEndListener*

A Basic Limplementation of the SplitPaneUI. 


*java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardHomeListener*

A Basic Limplementation of the SplitPaneUI. 


*java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardResizeToggleListener*

A Basic Limplementation of the SplitPaneUI. 


*java.awt.event.ActionListener_javax.swing.plaf.basic.BasicSplitPaneUI.keyboardUpLeftListener*

A Basic Limplementation of the SplitPaneUI. 


*javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager_javax.swing.plaf.basic.BasicSplitPaneUI.layoutManager*

A Basic Limplementation of the SplitPaneUI. 


*javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.leftKey*

A Basic Limplementation of the SplitPaneUI. 


*java.lang.String_javax.swing.plaf.basic.BasicSplitPaneUI.NON_CONTINUOUS_DIVIDER*

A Basic Limplementation of the SplitPaneUI. 


*java.awt.Component_javax.swing.plaf.basic.BasicSplitPaneUI.nonContinuousLayoutDivider*

A Basic Limplementation of the SplitPaneUI. 


*java.beans.PropertyChangeListener_javax.swing.plaf.basic.BasicSplitPaneUI.propertyChangeListener*

A Basic Limplementation of the SplitPaneUI. 


*javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.rightKey*

A Basic Limplementation of the SplitPaneUI. 


*javax.swing.JSplitPane_javax.swing.plaf.basic.BasicSplitPaneUI.splitPane*

A Basic Limplementation of the SplitPaneUI. 


*javax.swing.KeyStroke_javax.swing.plaf.basic.BasicSplitPaneUI.upKey*

A Basic Limplementation of the SplitPaneUI. 



*javax.swing.plaf.basic.BasicSplitPaneUI()*

public BasicSplitPaneUI()




*javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultDivider()*

public |javax.swing.plaf.basic.BasicSplitPaneDivider| createDefaultDivider()

Creates the default divider. 


*javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultNonContinuousLayoutDivider()*

protected |java.awt.Component| createDefaultNonContinuousLayoutDivider()

Returns the default non continuous layout divider, which is an instanceof 
Canvas that fills the background in dark gray. 


*javax.swing.plaf.basic.BasicSplitPaneUI.createFocusListener()*

protected |java.awt.event.FocusListener| createFocusListener()

Creates a FocusListener for the JSplitPane UI. 


*javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardDownRightListener()*

protected |java.awt.event.ActionListener| createKeyboardDownRightListener()

As of Java 2 platform v1.3 this method is no longer used. Subclassers 
previously using this method should instead create an Action wrapping the 
ActionListener, and register that Action by overriding installKeyboardActions 
and placing the Action in the SplitPane's ActionMap. Please refer to the key 
bindings specification for further details. 

Creates a ActionListener for the JSplitPane UI that listens for specific key 
presses. 


*javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardEndListener()*

protected |java.awt.event.ActionListener| createKeyboardEndListener()

As of Java 2 platform v1.3 this method is no longer used. Subclassers 
previously using this method should instead create an Action wrapping the 
ActionListener, and register that Action by overriding installKeyboardActions 
and placing the Action in the SplitPane's ActionMap. Please refer to the key 
bindings specification for further details. 

Creates a ActionListener for the JSplitPane UI that listens for specific key 
presses. 


*javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardHomeListener()*

protected |java.awt.event.ActionListener| createKeyboardHomeListener()

As of Java 2 platform v1.3 this method is no longer used. Subclassers 
previously using this method should instead create an Action wrapping the 
ActionListener, and register that Action by overriding installKeyboardActions 
and placing the Action in the SplitPane's ActionMap. Please refer to the key 
bindings specification for further details. 

Creates a ActionListener for the JSplitPane UI that listens for specific key 
presses. 


*javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardResizeToggleListener()*

protected |java.awt.event.ActionListener| createKeyboardResizeToggleListener()

As of Java 2 platform v1.3 this method is no longer used. Subclassers 
previously using this method should instead create an Action wrapping the 
ActionListener, and register that Action by overriding installKeyboardActions 
and placing the Action in the SplitPane's ActionMap. Please refer to the key 
bindings specification for further details. 

Creates a ActionListener for the JSplitPane UI that listens for specific key 
presses. 


*javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardUpLeftListener()*

protected |java.awt.event.ActionListener| createKeyboardUpLeftListener()

As of Java 2 platform v1.3 this method is no longer used. Subclassers 
previously using this method should instead create an Action wrapping the 
ActionListener, and register that Action by overriding installKeyboardActions 
and placing the Action in the SplitPane's ActionMap. Please refer to the key 
bindings specification for further details. 

Creates a ActionListener for the JSplitPane UI that listens for specific key 
presses. 


*javax.swing.plaf.basic.BasicSplitPaneUI.createPropertyChangeListener()*

protected |java.beans.PropertyChangeListener| createPropertyChangeListener()

Creates a PropertyChangeListener for the JSplitPane UI. 


*javax.swing.plaf.basic.BasicSplitPaneUI.createUI(JComponent)*

public static |javax.swing.plaf.ComponentUI| createUI(javax.swing.JComponent x)

Creates a new BasicSplitPaneUI instance 


*javax.swing.plaf.basic.BasicSplitPaneUI.dragDividerTo(int)*

protected void dragDividerTo(int location)

Messaged during a dragging session to move the divider to the passed in 
location. If continuousLayout is true the location is reset and the splitPane 
validated. 


*javax.swing.plaf.basic.BasicSplitPaneUI.finishDraggingTo(int)*

protected void finishDraggingTo(int location)

Messaged to finish the dragging session. If not continuous display the dividers 
location will be reset. 


*javax.swing.plaf.basic.BasicSplitPaneUI.finishedPaintingChildren(JSplitPane,Graphics)*

public void finishedPaintingChildren(
  javax.swing.JSplitPane jc,
  java.awt.Graphics g)

Messaged after the JSplitPane the receiver is providing the look and feel for 
paints its children. 


*javax.swing.plaf.basic.BasicSplitPaneUI.getDivider()*

public |javax.swing.plaf.basic.BasicSplitPaneDivider| getDivider()

Returns the divider between the top Components. 


*javax.swing.plaf.basic.BasicSplitPaneUI.getDividerBorderSize()*

protected int getDividerBorderSize()

As of Java 2 platform v1.3 this method is no longer used. Instead you should 
set the border on the divider. 

Returns the width of one side of the divider border. 


*javax.swing.plaf.basic.BasicSplitPaneUI.getDividerLocation(JSplitPane)*

public int getDividerLocation(javax.swing.JSplitPane jc)

Returns the location of the divider, which may differ from what the splitpane 
thinks the location of the divider is. 


*javax.swing.plaf.basic.BasicSplitPaneUI.getInsets(JComponent)*

public |java.awt.Insets| getInsets(javax.swing.JComponent jc)

Returns the insets. The insets are returned from the border insets of the 
current border. 


*javax.swing.plaf.basic.BasicSplitPaneUI.getLastDragLocation()*

public int getLastDragLocation()

Returns the last drag location of the JSplitPane. 


*javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumDividerLocation(JSplitPane)*

public int getMaximumDividerLocation(javax.swing.JSplitPane jc)

Gets the maximum location of the divider. 


*javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumSize(JComponent)*

public |java.awt.Dimension| getMaximumSize(javax.swing.JComponent jc)

Returns the maximum size for the passed in component, This is passed off to the 
current layoutmanager. 


*javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumDividerLocation(JSplitPane)*

public int getMinimumDividerLocation(javax.swing.JSplitPane jc)

Gets the minimum location of the divider. 


*javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumSize(JComponent)*

public |java.awt.Dimension| getMinimumSize(javax.swing.JComponent jc)

Returns the minimum size for the passed in component, This is passed off to the 
current layoutmanager. 


*javax.swing.plaf.basic.BasicSplitPaneUI.getNonContinuousLayoutDivider()*

public |java.awt.Component| getNonContinuousLayoutDivider()

Returns the divider to use when the splitPane is configured to not continuously 
layout. This divider will only be used during a dragging session. 


*javax.swing.plaf.basic.BasicSplitPaneUI.getOrientation()*

public int getOrientation()

Returns the orientation for the JSplitPane. 


*javax.swing.plaf.basic.BasicSplitPaneUI.getPreferredSize(JComponent)*

public |java.awt.Dimension| getPreferredSize(javax.swing.JComponent jc)

Returns the preferred size for the passed in component, This is passed off to 
the current layoutmanager. 


*javax.swing.plaf.basic.BasicSplitPaneUI.getSplitPane()*

public |javax.swing.JSplitPane| getSplitPane()

Returns the splitpane this instance is currently contained in. 


*javax.swing.plaf.basic.BasicSplitPaneUI.installDefaults()*

protected void installDefaults()

Installs the UI defaults. 


*javax.swing.plaf.basic.BasicSplitPaneUI.installKeyboardActions()*

protected void installKeyboardActions()

Installs the keyboard actions for the UI. 


*javax.swing.plaf.basic.BasicSplitPaneUI.installListeners()*

protected void installListeners()

Installs the event listeners for the UI. 


*javax.swing.plaf.basic.BasicSplitPaneUI.installUI(JComponent)*

public void installUI(javax.swing.JComponent c)

Installs the UI. 


*javax.swing.plaf.basic.BasicSplitPaneUI.isContinuousLayout()*

public boolean isContinuousLayout()

Determines wether the JSplitPane is set to use a continuous layout. 


*javax.swing.plaf.basic.BasicSplitPaneUI.paint(Graphics,JComponent)*

public void paint(
  java.awt.Graphics g,
  javax.swing.JComponent jc)

Messaged to paint the look and feel. 


*javax.swing.plaf.basic.BasicSplitPaneUI.resetLayoutManager()*

protected void resetLayoutManager()

Resets the layout manager based on orientation and messages it with 
invalidateLayout to pull in appropriate Components. 


*javax.swing.plaf.basic.BasicSplitPaneUI.resetToPreferredSizes(JSplitPane)*

public void resetToPreferredSizes(javax.swing.JSplitPane jc)

Messaged to reset the preferred sizes. 


*javax.swing.plaf.basic.BasicSplitPaneUI.setContinuousLayout(boolean)*

public void setContinuousLayout(boolean b)

Turn continuous layout on/off. 


*javax.swing.plaf.basic.BasicSplitPaneUI.setDividerLocation(JSplitPane,int)*

public void setDividerLocation(
  javax.swing.JSplitPane jc,
  int location)

Sets the location of the divider to location. 


*javax.swing.plaf.basic.BasicSplitPaneUI.setLastDragLocation(int)*

public void setLastDragLocation(int l)

Set the last drag location of the JSplitPane. 


*javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider(Component)*

protected void setNonContinuousLayoutDivider(java.awt.Component newDivider)

Sets the divider to use when the splitPane is configured to not continuously 
layout. This divider will only be used during a dragging session. It is 
recommended that the passed in component be a heavy weight. 


*javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider(Component,boolean)*

protected void setNonContinuousLayoutDivider(
  java.awt.Component newDivider,
  boolean rememberSizes)

Sets the divider to use. 


*javax.swing.plaf.basic.BasicSplitPaneUI.setOrientation(int)*

public void setOrientation(int orientation)

Set the orientation for the JSplitPane. 


*javax.swing.plaf.basic.BasicSplitPaneUI.startDragging()*

protected void startDragging()

Should be messaged before the dragging session starts, resets lastDragLocation 
and dividerSize. 


*javax.swing.plaf.basic.BasicSplitPaneUI.uninstallDefaults()*

protected void uninstallDefaults()

Uninstalls the UI defaults. 


*javax.swing.plaf.basic.BasicSplitPaneUI.uninstallKeyboardActions()*

protected void uninstallKeyboardActions()

Uninstalls the keyboard actions for the UI. 


*javax.swing.plaf.basic.BasicSplitPaneUI.uninstallListeners()*

protected void uninstallListeners()

Uninstalls the event listeners for the UI. 


*javax.swing.plaf.basic.BasicSplitPaneUI.uninstallUI(JComponent)*

public void uninstallUI(javax.swing.JComponent c)

Uninstalls the UI. 



