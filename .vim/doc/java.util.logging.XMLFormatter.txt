*java.util.logging.XMLFormatter* *XMLFormatter* Format a LogRecord into a standa

public class XMLFormatter
  extends    |java.util.logging.Formatter|

|java.util.logging.XMLFormatter_Description|
|java.util.logging.XMLFormatter_Fields|
|java.util.logging.XMLFormatter_Constructors|
|java.util.logging.XMLFormatter_Methods|

================================================================================

*java.util.logging.XMLFormatter_Constructors*
|java.util.logging.XMLFormatter()|

*java.util.logging.XMLFormatter_Methods*
|java.util.logging.XMLFormatter.format(LogRecord)|Format the given message to X
|java.util.logging.XMLFormatter.getHead(Handler)|Return the header string for a
|java.util.logging.XMLFormatter.getTail(Handler)|Return the tail string for a s

*java.util.logging.XMLFormatter_Description*

Format a LogRecord into a standard XML format. 

The DTD specification is provided as Appendix A to the Java Logging APIs 
specification. 

The XMLFormatter can be used with arbitrary character encodings, but it is 
recommended that it normally be used with UTF-8. The character encoding can be 
set on the output Handler. 


*java.util.logging.XMLFormatter()*

public XMLFormatter()




*java.util.logging.XMLFormatter.format(LogRecord)*

public |java.lang.String| format(java.util.logging.LogRecord record)

Format the given message to XML. 

    record - the log record to be formatted. 

    Returns: a formatted log record 
*java.util.logging.XMLFormatter.getHead(Handler)*

public |java.lang.String| getHead(java.util.logging.Handler h)

Return the header string for a set of XML formatted records. 

    h - The target handler (can be null) 

    Returns: a valid XML string 
*java.util.logging.XMLFormatter.getTail(Handler)*

public |java.lang.String| getTail(java.util.logging.Handler h)

Return the tail string for a set of XML formatted records. 

    h - The target handler (can be null) 

    Returns: a valid XML string 

