*java.beans.FeatureDescriptor* *FeatureDescriptor* The FeatureDescriptor class is the common baseclass for PropertyDescriptor,
 EventSetDescriptor, and MethodDescriptor, etc.

public class FeatureDescriptor
  extends    |java.lang.Object|

|java.beans.FeatureDescriptor_Description|
|java.beans.FeatureDescriptor_Fields|
|java.beans.FeatureDescriptor_Constructors|
|java.beans.FeatureDescriptor_Methods|

====================================================================================================================================================================================

*java.beans.FeatureDescriptor_Constructors*
|java.beans.FeatureDescriptor()|Constructs a FeatureDescriptor.

*java.beans.FeatureDescriptor_Methods*
|java.beans.FeatureDescriptor.attributeNames()|Gets an enumeration of the locale-independent names of this  feature.
|java.beans.FeatureDescriptor.getDisplayName()|Gets the localized display name of this feature.
|java.beans.FeatureDescriptor.getName()|Gets the programmatic name of this feature.
|java.beans.FeatureDescriptor.getShortDescription()|Gets the short description of this feature.
|java.beans.FeatureDescriptor.getValue(String)|Retrieve a named attribute with this feature.
|java.beans.FeatureDescriptor.isExpert()|The "expert" flag is used to distinguish between those features that are  intended for expert users from those that are intended for norma
|java.beans.FeatureDescriptor.isHidden()|The "hidden" flag is used to identify features that are intended only  for tool use, and which should not be exposed to humans.
|java.beans.FeatureDescriptor.isPreferred()|The "preferred" flag is used to identify features that are particularly  important for presenting to humans.
|java.beans.FeatureDescriptor.setDisplayName(String)|Sets the localized display name of this feature.
|java.beans.FeatureDescriptor.setExpert(boolean)|The "expert" flag is used to distinguish between features that are  intended for expert users from those that are intended for nor
|java.beans.FeatureDescriptor.setHidden(boolean)|The "hidden" flag is used to identify features that are intended only  for tool use, and which should not be exposed to humans.
|java.beans.FeatureDescriptor.setName(String)|Sets the programmatic name of this feature.
|java.beans.FeatureDescriptor.setPreferred(boolean)|The "preferred" flag is used to identify features that are particularly  important for presenting to humans.
|java.beans.FeatureDescriptor.setShortDescription(String)|You can associate a short descriptive string with a feature.
|java.beans.FeatureDescriptor.setValue(String,Object)|Associate a named attribute with this feature.

*java.beans.FeatureDescriptor_Description*

The FeatureDescriptor class is the common baseclass for PropertyDescriptor, EventSetDescriptor, and MethodDescriptor, etc. 

It supports some common information that can be set and retrieved for any of the introspection descriptors. 

In addition it provides an extension mechanism so that arbitrary attribute/value pairs can be associated with a design feature. 



*java.beans.FeatureDescriptor()*

public FeatureDescriptor()

Constructs a FeatureDescriptor. 


*java.beans.FeatureDescriptor.attributeNames()*

public |java.util.Enumeration|<String> attributeNames()

Gets an enumeration of the locale-independent names of this feature. 



    Returns: An enumeration of the locale-independent names of any attributes that have been registered with setValue. 

*java.beans.FeatureDescriptor.getDisplayName()*

public |java.lang.String| getDisplayName()

Gets the localized display name of this feature. 



    Returns: The localized display name for the property/method/event. This defaults to the same as its programmatic name from getName. 

*java.beans.FeatureDescriptor.getName()*

public |java.lang.String| getName()

Gets the programmatic name of this feature. 



    Returns: The programmatic name of the property/method/event 

*java.beans.FeatureDescriptor.getShortDescription()*

public |java.lang.String| getShortDescription()

Gets the short description of this feature. 



    Returns: A localized short description associated with this property/method/event. This defaults to be the display name. 

*java.beans.FeatureDescriptor.getValue(String)*

public |java.lang.Object| getValue(java.lang.String attributeName)

Retrieve a named attribute with this feature. 


    attributeName - The locale-independent name of the attribute 

    Returns: The value of the attribute. May be null if the attribute is unknown. 

*java.beans.FeatureDescriptor.isExpert()*

public boolean isExpert()

The "expert" flag is used to distinguish between those features that are intended for expert users from those that are intended for normal users. 



    Returns: True if this feature is intended for use by experts only. 

*java.beans.FeatureDescriptor.isHidden()*

public boolean isHidden()

The "hidden" flag is used to identify features that are intended only for tool use, and which should not be exposed to humans. 



    Returns: True if this feature should be hidden from human users. 

*java.beans.FeatureDescriptor.isPreferred()*

public boolean isPreferred()

The "preferred" flag is used to identify features that are particularly important for presenting to humans. 



    Returns: True if this feature should be preferentially shown to human users. 

*java.beans.FeatureDescriptor.setDisplayName(String)*

public void setDisplayName(java.lang.String displayName)

Sets the localized display name of this feature. 


    displayName - The localized display name for the property/method/event. 

*java.beans.FeatureDescriptor.setExpert(boolean)*

public void setExpert(boolean expert)

The "expert" flag is used to distinguish between features that are intended for expert users from those that are intended for normal users. 


    expert - True if this feature is intended for use by experts only. 

*java.beans.FeatureDescriptor.setHidden(boolean)*

public void setHidden(boolean hidden)

The "hidden" flag is used to identify features that are intended only for tool use, and which should not be exposed to humans. 


    hidden - True if this feature should be hidden from human users. 

*java.beans.FeatureDescriptor.setName(String)*

public void setName(java.lang.String name)

Sets the programmatic name of this feature. 


    name - The programmatic name of the property/method/event 

*java.beans.FeatureDescriptor.setPreferred(boolean)*

public void setPreferred(boolean preferred)

The "preferred" flag is used to identify features that are particularly important for presenting to humans. 


    preferred - True if this feature should be preferentially shown to human users. 

*java.beans.FeatureDescriptor.setShortDescription(String)*

public void setShortDescription(java.lang.String text)

You can associate a short descriptive string with a feature. Normally these descriptive strings should be less than about 40 characters. 


    text - A (localized) short description to be associated with this property/method/event. 

*java.beans.FeatureDescriptor.setValue(String,Object)*

public void setValue(
  java.lang.String attributeName,
  java.lang.Object value)

Associate a named attribute with this feature. 


    attributeName - The locale-independent name of the attribute 
    value - The value. 


