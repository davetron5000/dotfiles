*java.awt.font.MultipleMaster* *MultipleMaster* The MultipleMaster interface rep

public interface interface MultipleMaster


|java.awt.font.MultipleMaster_Description|
|java.awt.font.MultipleMaster_Fields|
|java.awt.font.MultipleMaster_Constructors|
|java.awt.font.MultipleMaster_Methods|

================================================================================

*java.awt.font.MultipleMaster_Methods*
|java.awt.font.MultipleMaster.deriveMMFont(float[])|Creates a new instance of a
|java.awt.font.MultipleMaster.deriveMMFont(float[],float,float,float,float)|Cre
|java.awt.font.MultipleMaster.getDesignAxisDefaults()|Returns an array of defau
|java.awt.font.MultipleMaster.getDesignAxisNames()|Returns the name for each de
|java.awt.font.MultipleMaster.getDesignAxisRanges()|Returns an array of design 
|java.awt.font.MultipleMaster.getNumDesignAxes()|Returns the number of multiple

*java.awt.font.MultipleMaster_Description*

The MultipleMaster interface represents Type 1 Multiple Master fonts. A 
particular (|java.awt.Font|) object can implement this interface. 


*java.awt.font.MultipleMaster.deriveMMFont(float[])*

public |java.awt.Font| deriveMMFont(float[] axes)

Creates a new instance of a multiple master font based on the design axis 
values contained in the specified array. The size of the array must correspond 
to the value returned from getNumDesignAxes and the values of the array 
elements must fall within limits specified by getDesignAxesLimits. In case of 
an error, null is returned. 

    axes - an array containing axis values 

    Returns: a {@link Font} object that is an instance of MultipleMaster and is based on the 
             design axis values provided by axes. 
*java.awt.font.MultipleMaster.deriveMMFont(float[],float,float,float,float)*

public |java.awt.Font| deriveMMFont(
  float[] glyphWidths,
  float avgStemWidth,
  float typicalCapHeight,
  float typicalXHeight,
  float italicAngle)

Creates a new instance of a multiple master font based on detailed metric 
information. In case of an error, null is returned. 

    glyphWidths - an array of floats representing the desired width of each glyph in font space 
    avgStemWidth - the average stem width for the overall font in font space 
    typicalCapHeight - the height of a typical upper case char 
    typicalXHeight - the height of a typical lower case char 
    italicAngle - the angle at which the italics lean, in degrees counterclockwise from vertical 

    Returns: a Font object that is an instance of MultipleMaster and is based on the 
             specified metric information. 
*java.awt.font.MultipleMaster.getDesignAxisDefaults()*

public float getDesignAxisDefaults()

Returns an array of default design values for each axis. For example, the 
default value for weight could be 1.6. The values are returned in the same 
order returned by getDesignAxisNames. 


    Returns: an array of default design values for each axis. 
*java.awt.font.MultipleMaster.getDesignAxisNames()*

public |java.lang.String| getDesignAxisNames()

Returns the name for each design axis. This also determines the order in which 
the values for each axis are returned. 


    Returns: an array containing the names of each design axis. 
*java.awt.font.MultipleMaster.getDesignAxisRanges()*

public float getDesignAxisRanges()

Returns an array of design limits interleaved in the form [from->to] for each 
axis. For example, design limits for weight could be from 0.1 to 1.0. The 
values are returned in the same order returned by getDesignAxisNames. 


    Returns: an array of design limits for each axis. 
*java.awt.font.MultipleMaster.getNumDesignAxes()*

public int getNumDesignAxes()

Returns the number of multiple master design controls. Design axes include 
things like width, weight and optical scaling. 


    Returns: the number of multiple master design controls 

