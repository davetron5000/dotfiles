*org.w3c.dom.html.HTMLSelectElement* *HTMLSelectElement* The select element allo

public interface interface HTMLSelectElement

  implements |org.w3c.dom.html.HTMLElement|

|org.w3c.dom.html.HTMLSelectElement_Description|
|org.w3c.dom.html.HTMLSelectElement_Fields|
|org.w3c.dom.html.HTMLSelectElement_Constructors|
|org.w3c.dom.html.HTMLSelectElement_Methods|

================================================================================

*org.w3c.dom.html.HTMLSelectElement_Methods*
|org.w3c.dom.html.HTMLSelectElement.add(HTMLElement,HTMLElement)|Add a new elem
|org.w3c.dom.html.HTMLSelectElement.blur()|Removes keyboard focus from this ele
|org.w3c.dom.html.HTMLSelectElement.focus()|Gives keyboard focus to this elemen
|org.w3c.dom.html.HTMLSelectElement.getDisabled()|The control is unavailable in
|org.w3c.dom.html.HTMLSelectElement.getForm()|Returns the FORM element containi
|org.w3c.dom.html.HTMLSelectElement.getLength()|The number of options in this S
|org.w3c.dom.html.HTMLSelectElement.getMultiple()|If true, multiple OPTION elem
|org.w3c.dom.html.HTMLSelectElement.getName()|Form control or object name when 
|org.w3c.dom.html.HTMLSelectElement.getOptions()|The collection of OPTION eleme
|org.w3c.dom.html.HTMLSelectElement.getSelectedIndex()|The ordinal index of the
|org.w3c.dom.html.HTMLSelectElement.getSize()|Number of visible rows.
|org.w3c.dom.html.HTMLSelectElement.getTabIndex()|Index that represents the ele
|org.w3c.dom.html.HTMLSelectElement.getType()|The type of this form control.
|org.w3c.dom.html.HTMLSelectElement.getValue()|The current form control value.
|org.w3c.dom.html.HTMLSelectElement.remove(int)|Remove an element from the coll
|org.w3c.dom.html.HTMLSelectElement.setDisabled(boolean)|
|org.w3c.dom.html.HTMLSelectElement.setMultiple(boolean)|
|org.w3c.dom.html.HTMLSelectElement.setName(String)|
|org.w3c.dom.html.HTMLSelectElement.setSelectedIndex(int)|
|org.w3c.dom.html.HTMLSelectElement.setSize(int)|
|org.w3c.dom.html.HTMLSelectElement.setTabIndex(int)|
|org.w3c.dom.html.HTMLSelectElement.setValue(String)|

*org.w3c.dom.html.HTMLSelectElement_Description*

The select element allows the selection of an option. The contained options can 
be directly accessed through the select element as a collection. See the SELECT 
element definition in HTML 4.0. See also the Document Object Model (DOM) Level 
2 Specification. 


*org.w3c.dom.html.HTMLSelectElement.add(HTMLElement,HTMLElement)*

public void add(
  org.w3c.dom.html.HTMLElement element,
  org.w3c.dom.html.HTMLElement before)
  throws |org.w3c.dom.DOMException|
         
Add a new element to the collection of OPTION elements for this SELECT . This 
method is the equivalent of the appendChild method of the Node interface if the 
before parameter is null . It is equivalent to the insertBefore method on the 
parent of before in all other cases. 

    element - The element to add. 
    before - The element to insert before, or null for the tail of the list. 

*org.w3c.dom.html.HTMLSelectElement.blur()*

public void blur()

Removes keyboard focus from this element. 


*org.w3c.dom.html.HTMLSelectElement.focus()*

public void focus()

Gives keyboard focus to this element. 


*org.w3c.dom.html.HTMLSelectElement.getDisabled()*

public boolean getDisabled()

The control is unavailable in this context. See the disabled attribute 
definition in HTML 4.0. 


*org.w3c.dom.html.HTMLSelectElement.getForm()*

public |org.w3c.dom.html.HTMLFormElement| getForm()

Returns the FORM element containing this control. Returns null if this control 
is not within the context of a form. 


*org.w3c.dom.html.HTMLSelectElement.getLength()*

public int getLength()

The number of options in this SELECT . 


*org.w3c.dom.html.HTMLSelectElement.getMultiple()*

public boolean getMultiple()

If true, multiple OPTION elements may be selected in this SELECT . See the 
multiple attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLSelectElement.getName()*

public |java.lang.String| getName()

Form control or object name when submitted with a form. See the name attribute 
definition in HTML 4.0. 


*org.w3c.dom.html.HTMLSelectElement.getOptions()*

public |org.w3c.dom.html.HTMLCollection| getOptions()

The collection of OPTION elements contained by this element. 


*org.w3c.dom.html.HTMLSelectElement.getSelectedIndex()*

public int getSelectedIndex()

The ordinal index of the selected option, starting from 0. The value -1 is 
returned if no element is selected. If multiple options are selected, the index 
of the first selected option is returned. 


*org.w3c.dom.html.HTMLSelectElement.getSize()*

public int getSize()

Number of visible rows. See the size attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLSelectElement.getTabIndex()*

public int getTabIndex()

Index that represents the element's position in the tabbing order. See the 
tabindex attribute definition in HTML 4.0. 


*org.w3c.dom.html.HTMLSelectElement.getType()*

public |java.lang.String| getType()

The type of this form control. This is the string "select-multiple" when the 
multiple attribute is true and the string "select-one" when false . 


*org.w3c.dom.html.HTMLSelectElement.getValue()*

public |java.lang.String| getValue()

The current form control value. 


*org.w3c.dom.html.HTMLSelectElement.remove(int)*

public void remove(int index)

Remove an element from the collection of OPTION elements for this SELECT . Does 
nothing if no element has the given index. 

    index - The index of the item to remove, starting from 0. 

*org.w3c.dom.html.HTMLSelectElement.setDisabled(boolean)*

public void setDisabled(boolean disabled)




*org.w3c.dom.html.HTMLSelectElement.setMultiple(boolean)*

public void setMultiple(boolean multiple)




*org.w3c.dom.html.HTMLSelectElement.setName(String)*

public void setName(java.lang.String name)




*org.w3c.dom.html.HTMLSelectElement.setSelectedIndex(int)*

public void setSelectedIndex(int selectedIndex)




*org.w3c.dom.html.HTMLSelectElement.setSize(int)*

public void setSize(int size)




*org.w3c.dom.html.HTMLSelectElement.setTabIndex(int)*

public void setTabIndex(int tabIndex)




*org.w3c.dom.html.HTMLSelectElement.setValue(String)*

public void setValue(java.lang.String value)





