*java.lang.reflect.ReflectPermission* *ReflectPermission* The Permission class f

public final class ReflectPermission
  extends    |java.security.BasicPermission|

|java.lang.reflect.ReflectPermission_Description|
|java.lang.reflect.ReflectPermission_Fields|
|java.lang.reflect.ReflectPermission_Constructors|
|java.lang.reflect.ReflectPermission_Methods|

================================================================================

*java.lang.reflect.ReflectPermission_Constructors*
|java.lang.reflect.ReflectPermission(String)|Constructs a ReflectPermission wit
|java.lang.reflect.ReflectPermission(String,String)|Constructs a ReflectPermiss

*java.lang.reflect.ReflectPermission_Description*

The Permission class for reflective operations. A ReflectPermission is a named 
permission and has no actions. The only name currently defined is 
suppressAccessChecks, which allows suppressing the standard Java language 
access checks -- for public, default (package) access, protected, and private 
members -- performed by reflected objects at their point of use. 

The following table provides a summary description of what the permission 
allows, and discusses the risks of granting code the permission. 



Permission Target Name What the Permission Allows Risks of Allowing this 
Permission 

suppressAccessChecks ability to access fields and invoke methods in a class. 
Note that this includes not only public, but protected and private fields and 
methods as well. This is dangerous in that information (possibly confidential) 
and methods normally unavailable would be accessible to malicious code. 




*java.lang.reflect.ReflectPermission(String)*

public ReflectPermission(java.lang.String name)

Constructs a ReflectPermission with the specified name. 

    name - the name of the ReflectPermission 

*java.lang.reflect.ReflectPermission(String,String)*

public ReflectPermission(
  java.lang.String name,
  java.lang.String actions)

Constructs a ReflectPermission with the specified name and actions. The actions 
should be null; they are ignored. 

    name - the name of the ReflectPermission 
    actions - should be null 

