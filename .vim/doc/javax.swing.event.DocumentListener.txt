*javax.swing.event.DocumentListener* *DocumentListener* Interface for an observe

public interface interface DocumentListener

  implements |java.util.EventListener|

|javax.swing.event.DocumentListener_Description|
|javax.swing.event.DocumentListener_Fields|
|javax.swing.event.DocumentListener_Constructors|
|javax.swing.event.DocumentListener_Methods|

================================================================================

*javax.swing.event.DocumentListener_Methods*
|javax.swing.event.DocumentListener.changedUpdate(DocumentEvent)|Gives notifica
|javax.swing.event.DocumentListener.insertUpdate(DocumentEvent)|Gives notificat
|javax.swing.event.DocumentListener.removeUpdate(DocumentEvent)|Gives notificat

*javax.swing.event.DocumentListener_Description*

Interface for an observer to register to receive notifications of changes to a 
text document. 

The default implementation of the Document interface (AbstractDocument) 
supports asynchronous mutations. If this feature is used (i.e. mutations are 
made from a thread other than the Swing event thread), the listeners will be 
notified via the mutating thread. This means that if asynchronous updates are 
made, the implementation of this interface must be threadsafe! 

The DocumentEvent notification is based upon the JavaBeans event model. There 
is no guarantee about the order of delivery to listeners, and all listeners 
must be notified prior to making further mutations to the Document. This means 
implementations of the DocumentListener may not mutate the source of the event 
(i.e. the associated Document). 


*javax.swing.event.DocumentListener.changedUpdate(DocumentEvent)*

public void changedUpdate(javax.swing.event.DocumentEvent e)

Gives notification that an attribute or set of attributes changed. 

    e - the document event 

*javax.swing.event.DocumentListener.insertUpdate(DocumentEvent)*

public void insertUpdate(javax.swing.event.DocumentEvent e)

Gives notification that there was an insert into the document. The range given 
by the DocumentEvent bounds the freshly inserted region. 

    e - the document event 

*javax.swing.event.DocumentListener.removeUpdate(DocumentEvent)*

public void removeUpdate(javax.swing.event.DocumentEvent e)

Gives notification that a portion of the document has been removed. The range 
is given in terms of what the view last saw (that is, before updating sticky 
positions). 

    e - the document event 


