*java.rmi.activation.ActivationGroupDesc.CommandEnvironment* *ActivationGroupDesc.CommandEnvironment* 

public static class ActivationGroupDesc.CommandEnvironment
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|java.rmi.activation.ActivationGroupDesc.CommandEnvironment_Description|
|java.rmi.activation.ActivationGroupDesc.CommandEnvironment_Fields|
|java.rmi.activation.ActivationGroupDesc.CommandEnvironment_Constructors|
|java.rmi.activation.ActivationGroupDesc.CommandEnvironment_Methods|

================================================================================

*java.rmi.activation.ActivationGroupDesc.CommandEnvironment_Constructors*
|java.rmi.activation.ActivationGroupDesc.CommandEnvironment(String,String[])|Cr

*java.rmi.activation.ActivationGroupDesc.CommandEnvironment_Methods*
|java.rmi.activation.ActivationGroupDesc.CommandEnvironment.equals(Object)|Comp
|java.rmi.activation.ActivationGroupDesc.CommandEnvironment.getCommandOptions()|
|java.rmi.activation.ActivationGroupDesc.CommandEnvironment.getCommandPath()|Fe
|java.rmi.activation.ActivationGroupDesc.CommandEnvironment.hashCode()|Return i

*java.rmi.activation.ActivationGroupDesc.CommandEnvironment_Description*

Startup options for ActivationGroup implementations. 

This class allows overriding default system properties and specifying 
implementation-defined options for ActivationGroups. 


*java.rmi.activation.ActivationGroupDesc.CommandEnvironment(String,String[])*

public ActivationGroupDesc.CommandEnvironment(
  java.lang.String cmdpath,
  java.lang.String[] argv)

Create a CommandEnvironment with all the necessary information. 

    cmdpath - the name of the java executable, including the full path, or null, meaning "use 
       rmid's default". The named program must be able to accept multiple 
       -Dpropname=value options (as documented for the "java" tool) 
    argv - extra options which will be used in creating the ActivationGroup. Null has the 
       same effect as an empty list. 

*java.rmi.activation.ActivationGroupDesc.CommandEnvironment.equals(Object)*

public boolean equals(java.lang.Object obj)

Compares two command environments for content equality. 

    obj - the Object to compare with 

    Returns: true if these Objects are equal; false otherwise. 
*java.rmi.activation.ActivationGroupDesc.CommandEnvironment.getCommandOptions()*

public |java.lang.String| getCommandOptions()

Fetch the configured java command options. 


    Returns: An array of the command options which will be passed to the new child command 
             by rmid. Note that rmid may add other options before or after 
             these options, or both. Never returns null. 
*java.rmi.activation.ActivationGroupDesc.CommandEnvironment.getCommandPath()*

public |java.lang.String| getCommandPath()

Fetch the configured path-qualified java command name. 


    Returns: the configured name, or null if configured to accept the default 
*java.rmi.activation.ActivationGroupDesc.CommandEnvironment.hashCode()*

public int hashCode()

Return identical values for similar CommandEnvironments. 


    Returns: 

