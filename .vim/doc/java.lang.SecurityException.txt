*java.lang.SecurityException* *SecurityException* Thrown by the security manager

public class SecurityException
  extends    |java.lang.RuntimeException|

|java.lang.SecurityException_Description|
|java.lang.SecurityException_Fields|
|java.lang.SecurityException_Constructors|
|java.lang.SecurityException_Methods|

================================================================================

*java.lang.SecurityException_Constructors*
|java.lang.SecurityException()|Constructs a SecurityException with no detail  m
|java.lang.SecurityException(String)|Constructs a SecurityException with the sp
|java.lang.SecurityException(String,Throwable)|Creates a SecurityException with
|java.lang.SecurityException(Throwable)|Creates a SecurityException with the sp

*java.lang.SecurityException_Description*

Thrown by the security manager to indicate a security violation. 


*java.lang.SecurityException()*

public SecurityException()

Constructs a SecurityException with no detail message. 


*java.lang.SecurityException(String)*

public SecurityException(java.lang.String s)

Constructs a SecurityException with the specified detail message. 

    s - the detail message. 

*java.lang.SecurityException(String,Throwable)*

public SecurityException(
  java.lang.String message,
  java.lang.Throwable cause)

Creates a SecurityException with the specified detail message and cause. 

    message - the detail message (which is saved for later retrieval by the {@link 
       #getMessage()} method). 
    cause - the cause (which is saved for later retrieval by the {@link #getCause()} 
       method). (A null value is permitted, and indicates that the cause is 
       nonexistent or unknown.) 

*java.lang.SecurityException(Throwable)*

public SecurityException(java.lang.Throwable cause)

Creates a SecurityException with the specified cause and a detail message of 
(cause==null ? null : cause.toString()) (which typically contains the class and 
detail message of cause). 

    cause - the cause (which is saved for later retrieval by the {@link #getCause()} 
       method). (A null value is permitted, and indicates that the cause is 
       nonexistent or unknown.) 

