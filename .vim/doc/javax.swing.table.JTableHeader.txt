*javax.swing.table.JTableHeader* *JTableHeader* This is the object which manages the header of the JTable.

public class JTableHeader
  extends    |javax.swing.JComponent|
  implements |javax.swing.event.TableColumnModelListener|
             |javax.accessibility.Accessible|

|javax.swing.table.JTableHeader_Description|
|javax.swing.table.JTableHeader_Fields|
|javax.swing.table.JTableHeader_Constructors|
|javax.swing.table.JTableHeader_Methods|

====================================================================================================================================================================================

*javax.swing.table.JTableHeader_Fields*
|javax.swing.table.TableColumnModel_javax.swing.table.JTableHeader.columnModel|
|javax.swing.table.TableColumn_javax.swing.table.JTableHeader.draggedColumn|
|int_javax.swing.table.JTableHeader.draggedDistance|
|boolean_javax.swing.table.JTableHeader.reorderingAllowed|
|boolean_javax.swing.table.JTableHeader.resizingAllowed|
|javax.swing.table.TableColumn_javax.swing.table.JTableHeader.resizingColumn|
|javax.swing.JTable_javax.swing.table.JTableHeader.table|
|boolean_javax.swing.table.JTableHeader.updateTableInRealTime|

*javax.swing.table.JTableHeader_Constructors*
|javax.swing.table.JTableHeader()|Constructs a JTableHeader with a default    TableColumnModel.
|javax.swing.table.JTableHeader(TableColumnModel)|Constructs a JTableHeader which is initialized with   cm as the column model.

*javax.swing.table.JTableHeader_Methods*
|javax.swing.table.JTableHeader.columnAdded(TableColumnModelEvent)|Invoked when a column is added to the table column model.
|javax.swing.table.JTableHeader.columnAtPoint(Point)|Returns the index of the column that point lies in, or -1 if it  lies out of bounds.
|javax.swing.table.JTableHeader.columnMarginChanged(ChangeEvent)|Invoked when a column is moved due to a margin change.
|javax.swing.table.JTableHeader.columnMoved(TableColumnModelEvent)|Invoked when a column is repositioned.
|javax.swing.table.JTableHeader.columnRemoved(TableColumnModelEvent)|Invoked when a column is removed from the table column model.
|javax.swing.table.JTableHeader.columnSelectionChanged(ListSelectionEvent)|Invoked when the selection model of the TableColumnModel  is changed.
|javax.swing.table.JTableHeader.createDefaultColumnModel()|Returns the default column model object which is   a DefaultTableColumnModel.
|javax.swing.table.JTableHeader.createDefaultRenderer()|Returns a default renderer to be used when no header renderer    is defined by a TableColumn.
|javax.swing.table.JTableHeader.getAccessibleContext()|Gets the AccessibleContext associated with this JTableHeader.
|javax.swing.table.JTableHeader.getColumnModel()|Returns the TableColumnModel that contains all column information  of this table header.
|javax.swing.table.JTableHeader.getDefaultRenderer()|Returns the default renderer used when no headerRenderer  is defined by a TableColumn.
|javax.swing.table.JTableHeader.getDraggedColumn()|Returns the the dragged column, if and only if, a drag is in  process, otherwise returns null.
|javax.swing.table.JTableHeader.getDraggedDistance()|Returns the column's horizontal distance from its original  position, if and only if, a drag is in process.
|javax.swing.table.JTableHeader.getHeaderRect(int)|Returns the rectangle containing the header tile at column.
|javax.swing.table.JTableHeader.getReorderingAllowed()|Returns true if the user is allowed to rearrange columns by  dragging their headers, false otherwise.
|javax.swing.table.JTableHeader.getResizingAllowed()|Returns true if the user is allowed to resize columns by dragging  between their headers, false otherwise.
|javax.swing.table.JTableHeader.getResizingColumn()|Returns the resizing column.
|javax.swing.table.JTableHeader.getTable()|Returns the table associated with this header.
|javax.swing.table.JTableHeader.getToolTipText(MouseEvent)|Allows the renderer's tips to be used if there is text set.
|javax.swing.table.JTableHeader.getUI()|Returns the look and feel (Lobject that renders this component.
|javax.swing.table.JTableHeader.getUIClassID()|Returns the suffix used to construct the name of the look and feel  (Lclass used to render this component.
|javax.swing.table.JTableHeader.getUpdateTableInRealTime()|Obsolete as of Java 2 platform v1.3.
|javax.swing.table.JTableHeader.initializeLocalVars()|Initializes the local variables and properties with default values.
|javax.swing.table.JTableHeader.paramString()|Returns a string representation of this JTableHeader.
|javax.swing.table.JTableHeader.resizeAndRepaint()|Sizes the header and marks it as needing display.
|javax.swing.table.JTableHeader.setColumnModel(TableColumnModel)|Sets the column model for this table to newModel and registers   for listener notifications from the new column mo
|javax.swing.table.JTableHeader.setDefaultRenderer(TableCellRenderer)|Sets the default renderer to be used when no headerRenderer  is defined by a TableColumn.
|javax.swing.table.JTableHeader.setDraggedColumn(TableColumn)|Sets the header's draggedColumn to aColumn.
|javax.swing.table.JTableHeader.setDraggedDistance(int)|Sets the header's draggedDistance to distance.
|javax.swing.table.JTableHeader.setReorderingAllowed(boolean)|Sets whether the user can drag column headers to reorder columns.
|javax.swing.table.JTableHeader.setResizingAllowed(boolean)|Sets whether the user can resize columns by dragging between headers.
|javax.swing.table.JTableHeader.setResizingColumn(TableColumn)|Sets the header's resizingColumn to aColumn.
|javax.swing.table.JTableHeader.setTable(JTable)|Sets the table associated with this header.
|javax.swing.table.JTableHeader.setUI(TableHeaderUI)|Sets the look and feel (Lobject that renders this component.
|javax.swing.table.JTableHeader.setUpdateTableInRealTime(boolean)|Obsolete as of Java 2 platform v1.3.
|javax.swing.table.JTableHeader.updateUI()|Notification from the UIManager that the look and feel  (Lhas changed.

*javax.swing.table.JTableHeader_Description*

This is the object which manages the header of the JTable. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*javax.swing.table.TableColumnModel_javax.swing.table.JTableHeader.columnModel*

The TableColumnModel of the table header. 


*javax.swing.table.TableColumn_javax.swing.table.JTableHeader.draggedColumn*

The index of the column being dragged. null if not dragging. 


*int_javax.swing.table.JTableHeader.draggedDistance*

The distance from its original position the column has been dragged. 


*boolean_javax.swing.table.JTableHeader.reorderingAllowed*

If true, reordering of columns are allowed by the user; the default is true. 


*boolean_javax.swing.table.JTableHeader.resizingAllowed*

If true, resizing of columns are allowed by the user; the default is true. 


*javax.swing.table.TableColumn_javax.swing.table.JTableHeader.resizingColumn*

The index of the column being resized. null if not resizing. 


*javax.swing.JTable_javax.swing.table.JTableHeader.table*

The table for which this object is the header; the default is null. 


*boolean_javax.swing.table.JTableHeader.updateTableInRealTime*

Obsolete as of Java 2 platform v1.3. Real time repaints, in response to column dragging or resizing, are now unconditional. 



*javax.swing.table.JTableHeader()*

public JTableHeader()

Constructs a JTableHeader with a default TableColumnModel. 


*javax.swing.table.JTableHeader(TableColumnModel)*

public JTableHeader(javax.swing.table.TableColumnModel cm)

Constructs a JTableHeader which is initialized with cm as the column model. If cm is null this method will initialize the table header with a default TableColumnModel. 

    cm - the column model for the table 

*javax.swing.table.JTableHeader.columnAdded(TableColumnModelEvent)*

public void columnAdded(javax.swing.event.TableColumnModelEvent e)

Invoked when a column is added to the table column model. 

Application code will not use these methods explicitly, they are used internally by JTable. 


    e - the event received 

*javax.swing.table.JTableHeader.columnAtPoint(Point)*

public int columnAtPoint(java.awt.Point point)

Returns the index of the column that point lies in, or -1 if it lies out of bounds. 



    Returns: the index of the column that point lies in, or -1 if it lies out of bounds 

*javax.swing.table.JTableHeader.columnMarginChanged(ChangeEvent)*

public void columnMarginChanged(javax.swing.event.ChangeEvent e)

Invoked when a column is moved due to a margin change. 

Application code will not use these methods explicitly, they are used internally by JTable. 


    e - the event received 

*javax.swing.table.JTableHeader.columnMoved(TableColumnModelEvent)*

public void columnMoved(javax.swing.event.TableColumnModelEvent e)

Invoked when a column is repositioned. 

Application code will not use these methods explicitly, they are used internally by JTable. 


    e - the event received 

*javax.swing.table.JTableHeader.columnRemoved(TableColumnModelEvent)*

public void columnRemoved(javax.swing.event.TableColumnModelEvent e)

Invoked when a column is removed from the table column model. 

Application code will not use these methods explicitly, they are used internally by JTable. 


    e - the event received 

*javax.swing.table.JTableHeader.columnSelectionChanged(ListSelectionEvent)*

public void columnSelectionChanged(javax.swing.event.ListSelectionEvent e)

Invoked when the selection model of the TableColumnModel is changed. This method currently has no effect (the header is not redrawn). 

Application code will not use these methods explicitly, they are used internally by JTable. 


    e - the event received 

*javax.swing.table.JTableHeader.createDefaultColumnModel()*

protected |javax.swing.table.TableColumnModel| createDefaultColumnModel()

Returns the default column model object which is a DefaultTableColumnModel. A subclass can override this method to return a different column model object 



    Returns: the default column model object 

*javax.swing.table.JTableHeader.createDefaultRenderer()*

protected |javax.swing.table.TableCellRenderer| createDefaultRenderer()

Returns a default renderer to be used when no header renderer is defined by a TableColumn. 



    Returns: the default table column renderer 

*javax.swing.table.JTableHeader.getAccessibleContext()*

public |javax.accessibility.AccessibleContext| getAccessibleContext()

Gets the AccessibleContext associated with this JTableHeader. For JTableHeaders, the AccessibleContext takes the form of an AccessibleJTableHeader. A new AccessibleJTableHeader 
instance is created if necessary. 



    Returns: an AccessibleJTableHeader that serves as the AccessibleContext of this JTableHeader 

*javax.swing.table.JTableHeader.getColumnModel()*

public |javax.swing.table.TableColumnModel| getColumnModel()

Returns the TableColumnModel that contains all column information of this table header. 



    Returns: the columnModel property 

*javax.swing.table.JTableHeader.getDefaultRenderer()*

public |javax.swing.table.TableCellRenderer| getDefaultRenderer()

Returns the default renderer used when no headerRenderer is defined by a TableColumn. 



    Returns: the default renderer 

*javax.swing.table.JTableHeader.getDraggedColumn()*

public |javax.swing.table.TableColumn| getDraggedColumn()

Returns the the dragged column, if and only if, a drag is in process, otherwise returns null. 



    Returns: the dragged column, if a drag is in process, otherwise returns null 

*javax.swing.table.JTableHeader.getDraggedDistance()*

public int getDraggedDistance()

Returns the column's horizontal distance from its original position, if and only if, a drag is in process. Otherwise, the the return value is meaningless. 



    Returns: the column's horizontal distance from its original position, if a drag is in process, otherwise the return value is meaningless 

*javax.swing.table.JTableHeader.getHeaderRect(int)*

public |java.awt.Rectangle| getHeaderRect(int column)

Returns the rectangle containing the header tile at column. When the column parameter is out of bounds this method uses the same conventions as the JTable method getCellRect. 



    Returns: the rectangle containing the header tile at column 

*javax.swing.table.JTableHeader.getReorderingAllowed()*

public boolean getReorderingAllowed()

Returns true if the user is allowed to rearrange columns by dragging their headers, false otherwise. The default is true. You can rearrange columns programmatically regardless of 
this setting. 



    Returns: the reorderingAllowed property 

*javax.swing.table.JTableHeader.getResizingAllowed()*

public boolean getResizingAllowed()

Returns true if the user is allowed to resize columns by dragging between their headers, false otherwise. The default is true. You can resize columns programmatically regardless 
of this setting. 



    Returns: the resizingAllowed property 

*javax.swing.table.JTableHeader.getResizingColumn()*

public |javax.swing.table.TableColumn| getResizingColumn()

Returns the resizing column. If no column is being resized this method returns null. 



    Returns: the resizing column, if a resize is in process, otherwise returns null 

*javax.swing.table.JTableHeader.getTable()*

public |javax.swing.JTable| getTable()

Returns the table associated with this header. 



    Returns: the table property 

*javax.swing.table.JTableHeader.getToolTipText(MouseEvent)*

public |java.lang.String| getToolTipText(java.awt.event.MouseEvent event)

Allows the renderer's tips to be used if there is text set. 


    event - the location of the event identifies the proper renderer and, therefore, the proper tip 

    Returns: the tool tip for this component 

*javax.swing.table.JTableHeader.getUI()*

public |javax.swing.plaf.TableHeaderUI| getUI()

Returns the look and feel (Lobject that renders this component. 



    Returns: the TableHeaderUI object that renders this component 

*javax.swing.table.JTableHeader.getUIClassID()*

public |java.lang.String| getUIClassID()

Returns the suffix used to construct the name of the look and feel (Lclass used to render this component. 



    Returns: the string "TableHeaderUI" 
    Returns: "TableHeaderUI" 

*javax.swing.table.JTableHeader.getUpdateTableInRealTime()*

public boolean getUpdateTableInRealTime()

Obsolete as of Java 2 platform v1.3. Real time repaints, in response to column dragging or resizing, are now unconditional. 



*javax.swing.table.JTableHeader.initializeLocalVars()*

protected void initializeLocalVars()

Initializes the local variables and properties with default values. Used by the constructor methods. 



*javax.swing.table.JTableHeader.paramString()*

protected |java.lang.String| paramString()

Returns a string representation of this JTableHeader. This method is intended to be used only for debugging purposes, and the content and format of the returned string may vary 
between implementations. The returned string may be empty but may not be null. 

Overriding paramString to provide information about the specific new aspects of the JFC components. 



    Returns: a string representation of this JTableHeader 

*javax.swing.table.JTableHeader.resizeAndRepaint()*

public void resizeAndRepaint()

Sizes the header and marks it as needing display. Equivalent to revalidate followed by repaint. 



*javax.swing.table.JTableHeader.setColumnModel(TableColumnModel)*

public void setColumnModel(javax.swing.table.TableColumnModel columnModel)

Sets the column model for this table to newModel and registers for listener notifications from the new column model. 


    columnModel - the new data source for this table 

*javax.swing.table.JTableHeader.setDefaultRenderer(TableCellRenderer)*

public void setDefaultRenderer(javax.swing.table.TableCellRenderer defaultRenderer)

Sets the default renderer to be used when no headerRenderer is defined by a TableColumn. 


    defaultRenderer - the default renderer 

*javax.swing.table.JTableHeader.setDraggedColumn(TableColumn)*

public void setDraggedColumn(javax.swing.table.TableColumn aColumn)

Sets the header's draggedColumn to aColumn. 

Application code will not use this method explicitly, it is used internally by the column dragging mechanism. 


    aColumn - the column being dragged, or null if no column is being dragged 

*javax.swing.table.JTableHeader.setDraggedDistance(int)*

public void setDraggedDistance(int distance)

Sets the header's draggedDistance to distance. 


    distance - the distance dragged 

*javax.swing.table.JTableHeader.setReorderingAllowed(boolean)*

public void setReorderingAllowed(boolean reorderingAllowed)

Sets whether the user can drag column headers to reorder columns. 


    reorderingAllowed - true if the table view should allow reordering; otherwise false 

*javax.swing.table.JTableHeader.setResizingAllowed(boolean)*

public void setResizingAllowed(boolean resizingAllowed)

Sets whether the user can resize columns by dragging between headers. 


    resizingAllowed - true if table view should allow resizing 

*javax.swing.table.JTableHeader.setResizingColumn(TableColumn)*

public void setResizingColumn(javax.swing.table.TableColumn aColumn)

Sets the header's resizingColumn to aColumn. 

Application code will not use this method explicitly, it is used internally by the column sizing mechanism. 


    aColumn - the column being resized, or null if no column is being resized 

*javax.swing.table.JTableHeader.setTable(JTable)*

public void setTable(javax.swing.JTable table)

Sets the table associated with this header. 


    table - the new table 

*javax.swing.table.JTableHeader.setUI(TableHeaderUI)*

public void setUI(javax.swing.plaf.TableHeaderUI ui)

Sets the look and feel (Lobject that renders this component. 


    ui - the TableHeaderUI Lobject 

*javax.swing.table.JTableHeader.setUpdateTableInRealTime(boolean)*

public void setUpdateTableInRealTime(boolean flag)

Obsolete as of Java 2 platform v1.3. Real time repaints, in response to column dragging or resizing, are now unconditional. 



*javax.swing.table.JTableHeader.updateUI()*

public void updateUI()

Notification from the UIManager that the look and feel (Lhas changed. Replaces the current UI object with the latest version from the UIManager. 




