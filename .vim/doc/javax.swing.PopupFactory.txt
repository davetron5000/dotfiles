*javax.swing.PopupFactory* *PopupFactory* PopupFactory, as the name implies, is used to obtain
 instances of Popups.

public class PopupFactory
  extends    |java.lang.Object|

|javax.swing.PopupFactory_Description|
|javax.swing.PopupFactory_Fields|
|javax.swing.PopupFactory_Constructors|
|javax.swing.PopupFactory_Methods|

====================================================================================================================================================================================

*javax.swing.PopupFactory_Constructors*
|javax.swing.PopupFactory()|

*javax.swing.PopupFactory_Methods*
|javax.swing.PopupFactory.getPopup(Component,Component,int,int)|Creates a Popup for the Component owner  containing the Component contents.
|javax.swing.PopupFactory.getSharedInstance()|Returns the shared PopupFactory which can be used  to obtain Popups.
|javax.swing.PopupFactory.setSharedInstance(PopupFactory)|Sets the PopupFactory that will be used to obtain  Popups.

*javax.swing.PopupFactory_Description*

PopupFactory, as the name implies, is used to obtain instances of Popups. Popups are used to display a Component above all other Components in a particular containment hierarchy. 
The general contract is that once you have obtained a Popup from a PopupFactory, you must invoke hide on the Popup. The typical usage is: 

PopupFactory factory = PopupFactory.getSharedInstance(); Popup popup = factory.getPopup(owner, contents, x, y); popup.show(); ... popup.hide(); 



*javax.swing.PopupFactory()*

public PopupFactory()




*javax.swing.PopupFactory.getPopup(Component,Component,int,int)*

public |javax.swing.Popup| getPopup(
  java.awt.Component owner,
  java.awt.Component contents,
  int x,
  int y)
  throws |java.lang.IllegalArgumentException|
         
Creates a Popup for the Component owner containing the Component contents. owner is used to determine which Window the new Popup will parent the Component the Popup creates to. A 
null owner implies there is no valid parent. x and y specify the preferred initial location to place the Popup at. Based on screen size, or other paramaters, the Popup may not 
display at x and y. 


    owner - Component mouse coordinates are relative to, may be null 
    contents - Contents of the Popup 
    x - Initial x screen coordinate 
    y - Initial y screen coordinate 

    Returns: Popup containing Contents 

*javax.swing.PopupFactory.getSharedInstance()*

public static |javax.swing.PopupFactory| getSharedInstance()

Returns the shared PopupFactory which can be used to obtain Popups. 



    Returns: Shared PopupFactory 

*javax.swing.PopupFactory.setSharedInstance(PopupFactory)*

public static void setSharedInstance(javax.swing.PopupFactory factory)

Sets the PopupFactory that will be used to obtain Popups. This will throw an IllegalArgumentException if factory is null. 


    factory - Shared PopupFactory 


