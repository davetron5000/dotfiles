*java.util.Stack* *Stack* The Stack class represents a last-in-first-out 
 (LIFO

public class Stack
  extends    |java.util.Vector|

|java.util.Stack_Description|
|java.util.Stack_Fields|
|java.util.Stack_Constructors|
|java.util.Stack_Methods|

================================================================================

*java.util.Stack_Constructors*
|java.util.Stack()|Creates an empty Stack.

*java.util.Stack_Methods*
|java.util.Stack.empty()|Tests if this stack is empty.
|java.util.Stack.peek()|Looks at the object at the top of this stack without re
|java.util.Stack.pop()|Removes the object at the top of this stack and returns 
|java.util.Stack.push(E)|Pushes an item onto the top of this stack.
|java.util.Stack.search(Object)|Returns the 1-based position where an object is

*java.util.Stack_Description*

The Stack class represents a last-in-first-out (LIFO) stack of objects. It 
extends class Vector with five operations that allow a vector to be treated as 
a stack. The usual push and pop operations are provided, as well as a method to 
peek at the top item on the stack, a method to test for whether the stack is 
empty, and a method to search the stack for an item and discover how far it is 
from the top. 

When a stack is first created, it contains no items. 


*java.util.Stack()*

public Stack()

Creates an empty Stack. 


*java.util.Stack.empty()*

public boolean empty()

Tests if this stack is empty. 


    Returns: true if and only if this stack contains no items; false otherwise. 
*java.util.Stack.peek()*

public synchronized |java.lang.Object| peek()

Looks at the object at the top of this stack without removing it from the 
stack. 


    Returns: the object at the top of this stack (the last item of the Vector object). 
*java.util.Stack.pop()*

public synchronized |java.lang.Object| pop()

Removes the object at the top of this stack and returns that object as the 
value of this function. 


    Returns: The object at the top of this stack (the last item of the Vector object). 
*java.util.Stack.push(E)*

public |java.lang.Object| push(java.lang.Object item)

Pushes an item onto the top of this stack. This has exactly the same effect as: 

addElement(item) 

    item - the item to be pushed onto this stack. 

    Returns: the item argument. 
*java.util.Stack.search(Object)*

public synchronized int search(java.lang.Object o)

Returns the 1-based position where an object is on this stack. If the object o 
occurs as an item in this stack, this method returns the distance from the top 
of the stack of the occurrence nearest the top of the stack; the topmost item 
on the stack is considered to be at distance 1. The equals method is used to 
compare o to the items in this stack. 

    o - the desired object. 

    Returns: the 1-based position from the top of the stack where the object is located; the 
             return value -1 indicates that the object is not on the stack. 

