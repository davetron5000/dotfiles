*java.awt.image.ColorConvertOp* *ColorConvertOp* This class performs a pixel-by-pixel color conversion of the data in
 the source image.

public class ColorConvertOp
  extends    |java.lang.Object|
  implements |java.awt.image.BufferedImageOp|
             |java.awt.image.RasterOp|

|java.awt.image.ColorConvertOp_Description|
|java.awt.image.ColorConvertOp_Fields|
|java.awt.image.ColorConvertOp_Constructors|
|java.awt.image.ColorConvertOp_Methods|

====================================================================================================================================================================================

*java.awt.image.ColorConvertOp_Constructors*
|java.awt.image.ColorConvertOp(ColorSpace,ColorSpace,RenderingHints)|Constructs a new ColorConvertOp from two ColorSpace objects.
|java.awt.image.ColorConvertOp(ColorSpace,RenderingHints)|Constructs a new ColorConvertOp from a ColorSpace object.
|java.awt.image.ColorConvertOp(ICC_Profile[],RenderingHints)|Constructs a new ColorConvertOp from an array of ICC_Profiles.
|java.awt.image.ColorConvertOp(RenderingHints)|Constructs a new ColorConvertOp which will convert  from a source color space to a destination color space.

*java.awt.image.ColorConvertOp_Methods*
|java.awt.image.ColorConvertOp.createCompatibleDestImage(BufferedImage,ColorModel)|Creates a zeroed destination image with the correct size and number of  bands, given this source
|java.awt.image.ColorConvertOp.createCompatibleDestRaster(Raster)|Creates a zeroed destination Raster with the correct size and number of  bands, given this source.
|java.awt.image.ColorConvertOp.filter(BufferedImage,BufferedImage)|ColorConverts the source BufferedImage.
|java.awt.image.ColorConvertOp.filter(Raster,WritableRaster)|ColorConverts the image data in the source Raster.
|java.awt.image.ColorConvertOp.getBounds2D(BufferedImage)|Returns the bounding box of the destination, given this source.
|java.awt.image.ColorConvertOp.getBounds2D(Raster)|Returns the bounding box of the destination, given this source.
|java.awt.image.ColorConvertOp.getICC_Profiles()|Returns the array of ICC_Profiles used to construct this ColorConvertOp.
|java.awt.image.ColorConvertOp.getPoint2D(Point2D,Point2D)|Returns the location of the destination point given a  point in the source.
|java.awt.image.ColorConvertOp.getRenderingHints()|Returns the rendering hints used by this op.

*java.awt.image.ColorConvertOp_Description*

This class performs a pixel-by-pixel color conversion of the data in the source image. The resulting color values are scaled to the precision of the destination image. Color 
conversion can be specified via an array of ColorSpace objects or an array of ICC_Profile objects. 

If the source is a BufferedImage with premultiplied alpha, the color components are divided by the alpha component before color conversion. If the destination is a BufferedImage 
with premultiplied alpha, the color components are multiplied by the alpha component after conversion. Rasters are treated as having no alpha channel, i.e. all bands are color 
bands. 

If a RenderingHints object is specified in the constructor, the color rendering hint and the dithering hint may be used to control color conversion. 

Note that Source and Destination may be the same object. 



*java.awt.image.ColorConvertOp(ColorSpace,ColorSpace,RenderingHints)*

public ColorConvertOp(
  java.awt.color.ColorSpace srcCspace,
  java.awt.color.ColorSpace dstCspace,
  java.awt.RenderingHints hints)

Constructs a new ColorConvertOp from two ColorSpace objects. The RenderingHints argument may be null. This Op is primarily useful for calling the filter method on Rasters, in 
which case the two ColorSpaces define the operation to be performed on the Rasters. In that case, the number of bands in the source Raster must match the number of components in 
srcCspace, and the number of bands in the destination Raster must match the number of components in dstCspace. For BufferedImages, the two ColorSpaces define intermediate spaces 
through which the source is converted before being converted to the destination space. 

    srcCspace - the source ColorSpace 
    dstCspace - the destination ColorSpace 
    hints - the RenderingHints object used to control the color conversion, or null 

*java.awt.image.ColorConvertOp(ColorSpace,RenderingHints)*

public ColorConvertOp(
  java.awt.color.ColorSpace cspace,
  java.awt.RenderingHints hints)

Constructs a new ColorConvertOp from a ColorSpace object. The RenderingHints argument may be null. This Op can be used only with BufferedImages, and is primarily useful when the 
filter(|java.awt.image.ColorConvertOp|) method is invoked with a destination argument of null. In that case, the ColorSpace defines the destination color space for the destination 
created by the filter method. Otherwise, the ColorSpace defines an intermediate space to which the source is converted before being converted to the destination space. 

    cspace - defines the destination ColorSpace or an intermediate ColorSpace 
    hints - the RenderingHints object used to control the color conversion, or null 

*java.awt.image.ColorConvertOp(ICC_Profile[],RenderingHints)*

public ColorConvertOp(
  java.awt.color.ICC_Profile[] profiles,
  java.awt.RenderingHints hints)

Constructs a new ColorConvertOp from an array of ICC_Profiles. The RenderingHints argument may be null. The sequence of profiles may include profiles that represent color spaces, 
profiles that represent effects, etc. If the whole sequence does not represent a well-defined color conversion, an exception is thrown. For BufferedImages, if the ColorSpace of 
the source BufferedImage does not match the requirements of the first profile in the array, the first conversion is to an appropriate ColorSpace. If the requirements of the last 
profile in the array are not met by the ColorSpace of the destination BufferedImage, the last conversion is to the destination's ColorSpace. For Rasters, the number of bands in 
the source Raster must match the requirements of the first profile in the array, and the number of bands in the destination Raster must match the requirements of the last profile 
in the array. The array must have at least two elements or calling the filter method for Rasters will throw an IllegalArgumentException. 

    profiles - the array of ICC_Profile objects 
    hints - the RenderingHints object used to control the color conversion, or null 

*java.awt.image.ColorConvertOp(RenderingHints)*

public ColorConvertOp(java.awt.RenderingHints hints)

Constructs a new ColorConvertOp which will convert from a source color space to a destination color space. The RenderingHints argument may be null. This Op can be used only with 
BufferedImages, and will convert directly from the ColorSpace of the source image to that of the destination. The destination argument of the filter method cannot be specified as 
null. 

    hints - the RenderingHints object used to control the color conversion, or null 

*java.awt.image.ColorConvertOp.createCompatibleDestImage(BufferedImage,ColorModel)*

public |java.awt.image.BufferedImage| createCompatibleDestImage(
  java.awt.image.BufferedImage src,
  java.awt.image.ColorModel destCM)

Creates a zeroed destination image with the correct size and number of bands, given this source. 


    src - Source image for the filter operation. 
    destCM - ColorModel of the destination. If null, an appropriate ColorModel will be used. 

    Returns: a BufferedImage with the correct size and number of bands from the specified src. 

*java.awt.image.ColorConvertOp.createCompatibleDestRaster(Raster)*

public |java.awt.image.WritableRaster| createCompatibleDestRaster(java.awt.image.Raster src)

Creates a zeroed destination Raster with the correct size and number of bands, given this source. 


    src - the specified Raster 

    Returns: a WritableRaster with the correct size and number of bands from the specified src 

*java.awt.image.ColorConvertOp.filter(BufferedImage,BufferedImage)*

public final |java.awt.image.BufferedImage| filter(
  java.awt.image.BufferedImage src,
  java.awt.image.BufferedImage dest)

ColorConverts the source BufferedImage. If the destination image is null, a BufferedImage will be created with an appropriate ColorModel. 


    src - the source BufferedImage to be converted 
    dest - the destination BufferedImage, or null 

    Returns: dest color converted from src or a new, converted BufferedImage if dest is null 

*java.awt.image.ColorConvertOp.filter(Raster,WritableRaster)*

public final |java.awt.image.WritableRaster| filter(
  java.awt.image.Raster src,
  java.awt.image.WritableRaster dest)

ColorConverts the image data in the source Raster. If the destination Raster is null, a new Raster will be created. The number of bands in the source and destination Rasters must 
meet the requirements explained above. The constructor used to create this ColorConvertOp must have provided enough information to define both source and destination color spaces. 
See above. Otherwise, an exception is thrown. 


    src - the source Raster to be converted 
    dest - the destination WritableRaster, or null 

    Returns: dest color converted from src or a new, converted WritableRaster if dest is null 

*java.awt.image.ColorConvertOp.getBounds2D(BufferedImage)*

public final |java.awt.geom.Rectangle2D| getBounds2D(java.awt.image.BufferedImage src)

Returns the bounding box of the destination, given this source. Note that this will be the same as the the bounding box of the source. 


    src - the source BufferedImage 

    Returns: a Rectangle2D that is the bounding box of the destination, given the specified src 

*java.awt.image.ColorConvertOp.getBounds2D(Raster)*

public final |java.awt.geom.Rectangle2D| getBounds2D(java.awt.image.Raster src)

Returns the bounding box of the destination, given this source. Note that this will be the same as the the bounding box of the source. 


    src - the source Raster 

    Returns: a Rectangle2D that is the bounding box of the destination, given the specified src 

*java.awt.image.ColorConvertOp.getICC_Profiles()*

public final |java.awt.color.ICC_Profile|[] getICC_Profiles()

Returns the array of ICC_Profiles used to construct this ColorConvertOp. Returns null if the ColorConvertOp was not constructed from such an array. 



    Returns: the array of ICC_Profile objects of this ColorConvertOp, or null if this ColorConvertOp was not constructed with an array of ICC_Profile objects. 

*java.awt.image.ColorConvertOp.getPoint2D(Point2D,Point2D)*

public final |java.awt.geom.Point2D| getPoint2D(
  java.awt.geom.Point2D srcPt,
  java.awt.geom.Point2D dstPt)

Returns the location of the destination point given a point in the source. If dstPt is non-null, it will be used to hold the return value. Note that for this class, the 
destination point will be the same as the source point. 


    srcPt - the specified source Point2D 
    dstPt - the destination Point2D 

    Returns: dstPt after setting its location to be the same as srcPt 

*java.awt.image.ColorConvertOp.getRenderingHints()*

public final |java.awt.RenderingHints| getRenderingHints()

Returns the rendering hints used by this op. 



    Returns: the RenderingHints object of this ColorConvertOp 


