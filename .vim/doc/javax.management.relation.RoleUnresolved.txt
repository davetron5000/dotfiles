*javax.management.relation.RoleUnresolved* *RoleUnresolved* Represents an unreso

public class RoleUnresolved
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|javax.management.relation.RoleUnresolved_Description|
|javax.management.relation.RoleUnresolved_Fields|
|javax.management.relation.RoleUnresolved_Constructors|
|javax.management.relation.RoleUnresolved_Methods|

================================================================================

*javax.management.relation.RoleUnresolved_Constructors*
|javax.management.relation.RoleUnresolved(String,List,int)|Constructor.

*javax.management.relation.RoleUnresolved_Methods*
|javax.management.relation.RoleUnresolved.clone()|Clone this object.
|javax.management.relation.RoleUnresolved.getProblemType()|Retrieves problem ty
|javax.management.relation.RoleUnresolved.getRoleName()|Retrieves role name.
|javax.management.relation.RoleUnresolved.getRoleValue()|Retrieves role value.
|javax.management.relation.RoleUnresolved.setProblemType(int)|Sets problem type
|javax.management.relation.RoleUnresolved.setRoleName(String)|Sets role name.
|javax.management.relation.RoleUnresolved.setRoleValue(List)|Sets role value.
|javax.management.relation.RoleUnresolved.toString()|Return a string describing

*javax.management.relation.RoleUnresolved_Description*

Represents an unresolved role: a role not retrieved from a relation due to a 
problem. It provides the role name, value (if problem when trying to set the 
role) and an integer defining the problem (constants defined in RoleStatus). 


*javax.management.relation.RoleUnresolved(String,List,int)*

public RoleUnresolved(
  java.lang.String theRoleName,
  java.util.List theRoleValue,
  int thePbType)
  throws |java.lang.IllegalArgumentException|
         
Constructor. 

    theRoleName - name of the role 
    theRoleValue - value of the role (if problem when setting the role) 
    thePbType - type of problem (according to known problem types, listed as static final 
       members). 

*javax.management.relation.RoleUnresolved.clone()*

public |java.lang.Object| clone()

Clone this object. 


    Returns: an independent clone. 
*javax.management.relation.RoleUnresolved.getProblemType()*

public int getProblemType()

Retrieves problem type. 


    Returns: an integer corresponding to a problem, those being described as static final 
             members of current class. 
*javax.management.relation.RoleUnresolved.getRoleName()*

public |java.lang.String| getRoleName()

Retrieves role name. 


    Returns: the role name. 
*javax.management.relation.RoleUnresolved.getRoleValue()*

public |java.util.List| getRoleValue()

Retrieves role value. 


    Returns: an ArrayList of ObjectName objects, the one provided to be set in given role. 
             Null if the unresolved role is returned for a read access. 
*javax.management.relation.RoleUnresolved.setProblemType(int)*

public void setProblemType(int thePbType)
  throws |java.lang.IllegalArgumentException|
         
Sets problem type. 

    thePbType - integer corresponding to a problem. Must be one of those described as static 
       final members of current class. 

*javax.management.relation.RoleUnresolved.setRoleName(String)*

public void setRoleName(java.lang.String theRoleName)
  throws |java.lang.IllegalArgumentException|
         
Sets role name. 

    theRoleName - the new role name. 

*javax.management.relation.RoleUnresolved.setRoleValue(List)*

public void setRoleValue(java.util.List theRoleValue)

Sets role value. 

    theRoleValue - List of ObjectName objects for referenced MBeans not set in role. 

*javax.management.relation.RoleUnresolved.toString()*

public |java.lang.String| toString()

Return a string describing this object. 


    Returns: a description of this RoleUnresolved object. 

