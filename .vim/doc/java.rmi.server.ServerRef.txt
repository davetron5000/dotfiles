*java.rmi.server.ServerRef* *ServerRef* A ServerRef represents the server-side handle for a remote object
 implementation.

public interface interface ServerRef

  implements |java.rmi.server.RemoteRef|

|java.rmi.server.ServerRef_Description|
|java.rmi.server.ServerRef_Fields|
|java.rmi.server.ServerRef_Constructors|
|java.rmi.server.ServerRef_Methods|

====================================================================================================================================================================================

*java.rmi.server.ServerRef_Fields*
|long_java.rmi.server.ServerRef.serialVersionUID|

*java.rmi.server.ServerRef_Methods*
|java.rmi.server.ServerRef.exportObject(Remote,Object)|Creates a client stub object for the supplied Remote object.
|java.rmi.server.ServerRef.getClientHost()|Returns the hostname of the current client.

*java.rmi.server.ServerRef_Description*

A ServerRef represents the server-side handle for a remote object implementation. 



*long_java.rmi.server.ServerRef.serialVersionUID*

indicate compatibility with JDK 1.1.x version of class. 



*java.rmi.server.ServerRef.exportObject(Remote,Object)*

public |java.rmi.server.RemoteStub| exportObject(
  java.rmi.Remote obj,
  java.lang.Object data)
  throws |java.rmi.RemoteException|
         
Creates a client stub object for the supplied Remote object. If the call completes successfully, the remote object should be able to accept incoming calls from clients. 


    obj - the remote object implementation 
    data - information necessary to export the object 

    Returns: the stub for the remote object 

*java.rmi.server.ServerRef.getClientHost()*

public |java.lang.String| getClientHost()
  throws |java.rmi.server.ServerNotActiveException|
         
Returns the hostname of the current client. When called from a thread actively handling a remote method invocation the hostname of the client is returned. 



    Returns: the client's host name 


