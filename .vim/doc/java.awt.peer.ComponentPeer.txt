*java.awt.peer.ComponentPeer* *ComponentPeer* The peer interfaces are intended o

public interface interface ComponentPeer


|java.awt.peer.ComponentPeer_Description|
|java.awt.peer.ComponentPeer_Fields|
|java.awt.peer.ComponentPeer_Constructors|
|java.awt.peer.ComponentPeer_Methods|

================================================================================

*java.awt.peer.ComponentPeer_Fields*
|int_java.awt.peer.ComponentPeer.DEFAULT_OPERATION|
|int_java.awt.peer.ComponentPeer.NO_EMBEDDED_CHECK|
|int_java.awt.peer.ComponentPeer.RESET_OPERATION|
|int_java.awt.peer.ComponentPeer.SET_BOUNDS|
|int_java.awt.peer.ComponentPeer.SET_CLIENT_SIZE|
|int_java.awt.peer.ComponentPeer.SET_LOCATION|
|int_java.awt.peer.ComponentPeer.SET_SIZE|

*java.awt.peer.ComponentPeer_Methods*
|java.awt.peer.ComponentPeer.canDetermineObscurity()|
|java.awt.peer.ComponentPeer.checkImage(Image,int,int,ImageObserver)|
|java.awt.peer.ComponentPeer.coalescePaintEvent(PaintEvent)|
|java.awt.peer.ComponentPeer.createBuffers(int,BufferCapabilities)|
|java.awt.peer.ComponentPeer.createImage(ImageProducer)|
|java.awt.peer.ComponentPeer.createImage(int,int)|
|java.awt.peer.ComponentPeer.createVolatileImage(int,int)|
|java.awt.peer.ComponentPeer.destroyBuffers()|
|java.awt.peer.ComponentPeer.disable()|DEPRECATED:  Replaced by setEnabled(bool
|java.awt.peer.ComponentPeer.dispose()|
|java.awt.peer.ComponentPeer.enable()|DEPRECATED:  Replaced by setEnabled(boole
|java.awt.peer.ComponentPeer.flip(BufferCapabilities.FlipContents)|
|java.awt.peer.ComponentPeer.getBackBuffer()|
|java.awt.peer.ComponentPeer.getBounds()|
|java.awt.peer.ComponentPeer.getColorModel()|
|java.awt.peer.ComponentPeer.getFontMetrics(Font)|
|java.awt.peer.ComponentPeer.getGraphics()|
|java.awt.peer.ComponentPeer.getGraphicsConfiguration()|
|java.awt.peer.ComponentPeer.getLocationOnScreen()|
|java.awt.peer.ComponentPeer.getMinimumSize()|
|java.awt.peer.ComponentPeer.getPreferredSize()|
|java.awt.peer.ComponentPeer.getToolkit()|
|java.awt.peer.ComponentPeer.handleEvent(AWTEvent)|
|java.awt.peer.ComponentPeer.handlesWheelScrolling()|
|java.awt.peer.ComponentPeer.hide()|DEPRECATED:  Replaced by setVisible(boolean
|java.awt.peer.ComponentPeer.isFocusable()|
|java.awt.peer.ComponentPeer.isObscured()|
|java.awt.peer.ComponentPeer.isReparentSupported()|Returns whether this peer su
|java.awt.peer.ComponentPeer.layout()|Used by lightweight implementations to te
|java.awt.peer.ComponentPeer.minimumSize()|DEPRECATED:  Replaced by getMinimumS
|java.awt.peer.ComponentPeer.paint(Graphics)|
|java.awt.peer.ComponentPeer.preferredSize()|DEPRECATED:  Replaced by getPrefer
|java.awt.peer.ComponentPeer.prepareImage(Image,int,int,ImageObserver)|
|java.awt.peer.ComponentPeer.print(Graphics)|
|java.awt.peer.ComponentPeer.repaint(long,int,int,int,int)|
|java.awt.peer.ComponentPeer.reparent(ContainerPeer)|Reparents this peer to the
|java.awt.peer.ComponentPeer.requestFocus(Component,boolean,boolean,long)|
|java.awt.peer.ComponentPeer.reshape(int,int,int,int)|DEPRECATED:  Replaced by 
|java.awt.peer.ComponentPeer.setBackground(Color)|
|java.awt.peer.ComponentPeer.setBounds(int,int,int,int,int)|
|java.awt.peer.ComponentPeer.setEnabled(boolean)|
|java.awt.peer.ComponentPeer.setFont(Font)|
|java.awt.peer.ComponentPeer.setForeground(Color)|
|java.awt.peer.ComponentPeer.setVisible(boolean)|
|java.awt.peer.ComponentPeer.show()|DEPRECATED:  Replaced by setVisible(boolean
|java.awt.peer.ComponentPeer.updateCursorImmediately()|

*java.awt.peer.ComponentPeer_Description*

The peer interfaces are intended only for use in porting the AWT. They are not 
intended for use by application developers, and developers should not implement 
peers nor invoke any of the peer methods directly on the peer instances. 


*int_java.awt.peer.ComponentPeer.DEFAULT_OPERATION*

The peer interfaces are intended only for use in porting the AWT. They are not 
intended for use by application developers, and developers should not implement 
peers nor invoke any of the peer methods directly on the peer instances. 


*int_java.awt.peer.ComponentPeer.NO_EMBEDDED_CHECK*

The peer interfaces are intended only for use in porting the AWT. They are not 
intended for use by application developers, and developers should not implement 
peers nor invoke any of the peer methods directly on the peer instances. 


*int_java.awt.peer.ComponentPeer.RESET_OPERATION*

The peer interfaces are intended only for use in porting the AWT. They are not 
intended for use by application developers, and developers should not implement 
peers nor invoke any of the peer methods directly on the peer instances. 


*int_java.awt.peer.ComponentPeer.SET_BOUNDS*

The peer interfaces are intended only for use in porting the AWT. They are not 
intended for use by application developers, and developers should not implement 
peers nor invoke any of the peer methods directly on the peer instances. 


*int_java.awt.peer.ComponentPeer.SET_CLIENT_SIZE*

The peer interfaces are intended only for use in porting the AWT. They are not 
intended for use by application developers, and developers should not implement 
peers nor invoke any of the peer methods directly on the peer instances. 


*int_java.awt.peer.ComponentPeer.SET_LOCATION*

The peer interfaces are intended only for use in porting the AWT. They are not 
intended for use by application developers, and developers should not implement 
peers nor invoke any of the peer methods directly on the peer instances. 


*int_java.awt.peer.ComponentPeer.SET_SIZE*

The peer interfaces are intended only for use in porting the AWT. They are not 
intended for use by application developers, and developers should not implement 
peers nor invoke any of the peer methods directly on the peer instances. 



*java.awt.peer.ComponentPeer.canDetermineObscurity()*

public boolean canDetermineObscurity()




*java.awt.peer.ComponentPeer.checkImage(Image,int,int,ImageObserver)*

public int checkImage(
  java.awt.Image img,
  int w,
  int h,
  java.awt.image.ImageObserver o)




*java.awt.peer.ComponentPeer.coalescePaintEvent(PaintEvent)*

public void coalescePaintEvent(java.awt.event.PaintEvent e)




*java.awt.peer.ComponentPeer.createBuffers(int,BufferCapabilities)*

public void createBuffers(
  int numBuffers,
  java.awt.BufferCapabilities caps)
  throws |java.awt.AWTException|
         



*java.awt.peer.ComponentPeer.createImage(ImageProducer)*

public |java.awt.Image| createImage(java.awt.image.ImageProducer producer)




*java.awt.peer.ComponentPeer.createImage(int,int)*

public |java.awt.Image| createImage(
  int width,
  int height)




*java.awt.peer.ComponentPeer.createVolatileImage(int,int)*

public |java.awt.image.VolatileImage| createVolatileImage(
  int width,
  int height)




*java.awt.peer.ComponentPeer.destroyBuffers()*

public void destroyBuffers()




*java.awt.peer.ComponentPeer.disable()*

public void disable()

DEPRECATED: Replaced by setEnabled(boolean). 


*java.awt.peer.ComponentPeer.dispose()*

public void dispose()




*java.awt.peer.ComponentPeer.enable()*

public void enable()

DEPRECATED: Replaced by setEnabled(boolean). 


*java.awt.peer.ComponentPeer.flip(BufferCapabilities.FlipContents)*

public void flip(java.awt.BufferCapabilities.FlipContents flipAction)




*java.awt.peer.ComponentPeer.getBackBuffer()*

public |java.awt.Image| getBackBuffer()




*java.awt.peer.ComponentPeer.getBounds()*

public |java.awt.Rectangle| getBounds()




*java.awt.peer.ComponentPeer.getColorModel()*

public |java.awt.image.ColorModel| getColorModel()




*java.awt.peer.ComponentPeer.getFontMetrics(Font)*

public |java.awt.FontMetrics| getFontMetrics(java.awt.Font font)




*java.awt.peer.ComponentPeer.getGraphics()*

public |java.awt.Graphics| getGraphics()




*java.awt.peer.ComponentPeer.getGraphicsConfiguration()*

public |java.awt.GraphicsConfiguration| getGraphicsConfiguration()




*java.awt.peer.ComponentPeer.getLocationOnScreen()*

public |java.awt.Point| getLocationOnScreen()




*java.awt.peer.ComponentPeer.getMinimumSize()*

public |java.awt.Dimension| getMinimumSize()




*java.awt.peer.ComponentPeer.getPreferredSize()*

public |java.awt.Dimension| getPreferredSize()




*java.awt.peer.ComponentPeer.getToolkit()*

public |java.awt.Toolkit| getToolkit()




*java.awt.peer.ComponentPeer.handleEvent(AWTEvent)*

public void handleEvent(java.awt.AWTEvent e)




*java.awt.peer.ComponentPeer.handlesWheelScrolling()*

public boolean handlesWheelScrolling()




*java.awt.peer.ComponentPeer.hide()*

public void hide()

DEPRECATED: Replaced by setVisible(boolean). 


*java.awt.peer.ComponentPeer.isFocusable()*

public boolean isFocusable()




*java.awt.peer.ComponentPeer.isObscured()*

public boolean isObscured()




*java.awt.peer.ComponentPeer.isReparentSupported()*

public boolean isReparentSupported()

Returns whether this peer supports reparenting to another parent withour 
destroying the peer 


    Returns: true if appropriate reparent is supported, false otherwise 
*java.awt.peer.ComponentPeer.layout()*

public void layout()

Used by lightweight implementations to tell a ComponentPeer to layout its 
sub-elements. For instance, a lightweight Checkbox needs to layout the box, as 
well as the text label. 


*java.awt.peer.ComponentPeer.minimumSize()*

public |java.awt.Dimension| minimumSize()

DEPRECATED: Replaced by getMinimumSize(). 


*java.awt.peer.ComponentPeer.paint(Graphics)*

public void paint(java.awt.Graphics g)




*java.awt.peer.ComponentPeer.preferredSize()*

public |java.awt.Dimension| preferredSize()

DEPRECATED: Replaced by getPreferredSize(). 


*java.awt.peer.ComponentPeer.prepareImage(Image,int,int,ImageObserver)*

public boolean prepareImage(
  java.awt.Image img,
  int w,
  int h,
  java.awt.image.ImageObserver o)




*java.awt.peer.ComponentPeer.print(Graphics)*

public void print(java.awt.Graphics g)




*java.awt.peer.ComponentPeer.repaint(long,int,int,int,int)*

public void repaint(
  long tm,
  int x,
  int y,
  int width,
  int height)




*java.awt.peer.ComponentPeer.reparent(ContainerPeer)*

public void reparent(java.awt.peer.ContainerPeer newContainer)

Reparents this peer to the new parent referenced by newContainer peer 
Implementation depends on toolkit and container. 

    newContainer - peer of the new parent container 

*java.awt.peer.ComponentPeer.requestFocus(Component,boolean,boolean,long)*

public boolean requestFocus(
  java.awt.Component lightweightChild,
  boolean temporary,
  boolean focusedWindowChangeAllowed,
  long time)




*java.awt.peer.ComponentPeer.reshape(int,int,int,int)*

public void reshape(
  int x,
  int y,
  int width,
  int height)

DEPRECATED: Replaced by setBounds(int, int, int, int). 


*java.awt.peer.ComponentPeer.setBackground(Color)*

public void setBackground(java.awt.Color c)




*java.awt.peer.ComponentPeer.setBounds(int,int,int,int,int)*

public void setBounds(
  int x,
  int y,
  int width,
  int height,
  int op)




*java.awt.peer.ComponentPeer.setEnabled(boolean)*

public void setEnabled(boolean b)




*java.awt.peer.ComponentPeer.setFont(Font)*

public void setFont(java.awt.Font f)




*java.awt.peer.ComponentPeer.setForeground(Color)*

public void setForeground(java.awt.Color c)




*java.awt.peer.ComponentPeer.setVisible(boolean)*

public void setVisible(boolean b)




*java.awt.peer.ComponentPeer.show()*

public void show()

DEPRECATED: Replaced by setVisible(boolean). 


*java.awt.peer.ComponentPeer.updateCursorImmediately()*

public void updateCursorImmediately()





