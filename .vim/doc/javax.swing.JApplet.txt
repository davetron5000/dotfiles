*javax.swing.JApplet* *JApplet* An extended version of java.applet.Applet that adds support for 
 the JFC/Swing component architecture.

public class JApplet
  extends    |java.applet.Applet|
  implements |javax.accessibility.Accessible|
             |javax.swing.RootPaneContainer|

|javax.swing.JApplet_Description|
|javax.swing.JApplet_Fields|
|javax.swing.JApplet_Constructors|
|javax.swing.JApplet_Methods|

====================================================================================================================================================================================

*javax.swing.JApplet_Fields*
|javax.accessibility.AccessibleContext_javax.swing.JApplet.accessibleContext|
|javax.swing.JRootPane_javax.swing.JApplet.rootPane|
|boolean_javax.swing.JApplet.rootPaneCheckingEnabled|

*javax.swing.JApplet_Constructors*
|javax.swing.JApplet()|Creates a swing applet instance.

*javax.swing.JApplet_Methods*
|javax.swing.JApplet.addImpl(Component,Object,int)|Adds the specified child Component.
|javax.swing.JApplet.createRootPane()|Called by the constructor methods to create the default rootPane.
|javax.swing.JApplet.getAccessibleContext()|Gets the AccessibleContext associated with this JApplet.
|javax.swing.JApplet.getContentPane()|Returns the contentPane object for this applet.
|javax.swing.JApplet.getGlassPane()|Returns the glassPane object for this applet.
|javax.swing.JApplet.getJMenuBar()|Returns the menubar set on this applet.
|javax.swing.JApplet.getLayeredPane()|Returns the layeredPane object for this applet.
|javax.swing.JApplet.getRootPane()|Returns the rootPane object for this applet.
|javax.swing.JApplet.isRootPaneCheckingEnabled()|Returns whether calls to add and   setLayout are forwarded to the contentPane.
|javax.swing.JApplet.paramString()|Returns a string representation of this JApplet.
|javax.swing.JApplet.remove(Component)|Removes the specified component from the container.
|javax.swing.JApplet.setContentPane(Container)|Sets the contentPane property.
|javax.swing.JApplet.setGlassPane(Component)|Sets the glassPane property.
|javax.swing.JApplet.setJMenuBar(JMenuBar)|Sets the menubar for this applet.
|javax.swing.JApplet.setLayeredPane(JLayeredPane)|Sets the layeredPane property.
|javax.swing.JApplet.setLayout(LayoutManager)|Sets the LayoutManager.
|javax.swing.JApplet.setRootPane(JRootPane)|Sets the rootPane property.
|javax.swing.JApplet.setRootPaneCheckingEnabled(boolean)|Sets whether calls to add and   setLayout are forwarded to the contentPane.
|javax.swing.JApplet.update(Graphics)|Just calls paint(g).

*javax.swing.JApplet_Description*

An extended version of java.applet.Applet that adds support for the JFC/Swing component architecture. You can find task-oriented documentation about using JApplet in The Java 
Tutorial, in the section How to Make Applets. 

The JApplet class is slightly incompatible with java.applet.Applet. JApplet contains a JRootPane as its only child. The contentPane should be the parent of any children of the 
JApplet. As a convenience add and its variants, remove and setLayout have been overridden to forward to the contentPane as necessary. This means you can write: 

applet.add(child); 

And the child will be added to the contentPane. The contentPane will always be non-null. Attempting to set it to null will cause the JApplet to throw an exception. The default 
contentPane will have a BorderLayout manager set on it. Refer to (|javax.swing.RootPaneContainer|) for details on adding, removing and setting the LayoutManager of a JApplet. 

Please see the JRootPane documentation for a complete description of the contentPane, glassPane, and layeredPane properties. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*javax.accessibility.AccessibleContext_javax.swing.JApplet.accessibleContext*




*javax.swing.JRootPane_javax.swing.JApplet.rootPane*




*boolean_javax.swing.JApplet.rootPaneCheckingEnabled*

If true then calls to add and setLayout will be forwarded to the contentPane. This is initially false, but is set to true when the JApplet is constructed. 



*javax.swing.JApplet()*

public JApplet()
  throws |java.awt.HeadlessException|
         
Creates a swing applet instance. 

This constructor sets the component's locale property to the value returned by JComponent.getDefaultLocale. 


*javax.swing.JApplet.addImpl(Component,Object,int)*

protected void addImpl(
  java.awt.Component comp,
  java.lang.Object constraints,
  int index)

Adds the specified child Component. This method is overridden to conditionally forwad calls to the contentPane. By default, children are added to the contentPane instead of the 
frame, refer to (|javax.swing.RootPaneContainer|) for details. 


    comp - the component to be enhanced 
    constraints - the constraints to be respected 
    index - the index 

*javax.swing.JApplet.createRootPane()*

protected |javax.swing.JRootPane| createRootPane()

Called by the constructor methods to create the default rootPane. 



*javax.swing.JApplet.getAccessibleContext()*

public |javax.accessibility.AccessibleContext| getAccessibleContext()

Gets the AccessibleContext associated with this JApplet. For JApplets, the AccessibleContext takes the form of an AccessibleJApplet. A new AccessibleJApplet instance is created if 
necessary. 



    Returns: an AccessibleJApplet that serves as the AccessibleContext of this JApplet 

*javax.swing.JApplet.getContentPane()*

public |java.awt.Container| getContentPane()

Returns the contentPane object for this applet. 



*javax.swing.JApplet.getGlassPane()*

public |java.awt.Component| getGlassPane()

Returns the glassPane object for this applet. 



*javax.swing.JApplet.getJMenuBar()*

public |javax.swing.JMenuBar| getJMenuBar()

Returns the menubar set on this applet. 



*javax.swing.JApplet.getLayeredPane()*

public |javax.swing.JLayeredPane| getLayeredPane()

Returns the layeredPane object for this applet. 



*javax.swing.JApplet.getRootPane()*

public |javax.swing.JRootPane| getRootPane()

Returns the rootPane object for this applet. 



*javax.swing.JApplet.isRootPaneCheckingEnabled()*

protected boolean isRootPaneCheckingEnabled()

Returns whether calls to add and setLayout are forwarded to the contentPane. 



    Returns: true if add and setLayout are fowarded; false otherwise 

*javax.swing.JApplet.paramString()*

protected |java.lang.String| paramString()

Returns a string representation of this JApplet. This method is intended to be used only for debugging purposes, and the content and format of the returned string may vary between 
implementations. The returned string may be empty but may not be null. 



    Returns: a string representation of this JApplet. 

*javax.swing.JApplet.remove(Component)*

public void remove(java.awt.Component comp)

Removes the specified component from the container. If comp is not the rootPane, this will forward the call to the contentPane. This will do nothing if comp is not a child of the 
JFrame or contentPane. 


    comp - the component to be removed 

*javax.swing.JApplet.setContentPane(Container)*

public void setContentPane(java.awt.Container contentPane)

Sets the contentPane property. This method is called by the constructor. 


    contentPane - the contentPane object for this applet 

*javax.swing.JApplet.setGlassPane(Component)*

public void setGlassPane(java.awt.Component glassPane)

Sets the glassPane property. This method is called by the constructor. 


    glassPane - the glassPane object for this applet 

*javax.swing.JApplet.setJMenuBar(JMenuBar)*

public void setJMenuBar(javax.swing.JMenuBar menuBar)

Sets the menubar for this applet. 


    menuBar - the menubar being placed in the applet 

*javax.swing.JApplet.setLayeredPane(JLayeredPane)*

public void setLayeredPane(javax.swing.JLayeredPane layeredPane)

Sets the layeredPane property. This method is called by the constructor. 


    layeredPane - the layeredPane object for this applet 

*javax.swing.JApplet.setLayout(LayoutManager)*

public void setLayout(java.awt.LayoutManager manager)

Sets the LayoutManager. Overridden to conditionally forward the call to the contentPane. Refer to (|javax.swing.RootPaneContainer|) for more information. 


    manager - the LayoutManager 

*javax.swing.JApplet.setRootPane(JRootPane)*

protected void setRootPane(javax.swing.JRootPane root)

Sets the rootPane property. This method is called by the constructor. 


    root - the rootPane object for this applet 

*javax.swing.JApplet.setRootPaneCheckingEnabled(boolean)*

protected void setRootPaneCheckingEnabled(boolean enabled)

Sets whether calls to add and setLayout are forwarded to the contentPane. 


    enabled - true if add and setLayout are forwarded, false if they should operate directly on the JApplet. 

*javax.swing.JApplet.update(Graphics)*

public void update(java.awt.Graphics g)

Just calls paint(g). This method was overridden to prevent an unnecessary call to clear the background. 




