*javax.swing.text.html.HTML* *HTML* Constants used in the HTMLDocument.

public class HTML
  extends    |java.lang.Object|

|javax.swing.text.html.HTML_Description|
|javax.swing.text.html.HTML_Fields|
|javax.swing.text.html.HTML_Constructors|
|javax.swing.text.html.HTML_Methods|

====================================================================================================================================================================================

*javax.swing.text.html.HTML_Fields*
|java.lang.String_javax.swing.text.html.HTML.NULL_ATTRIBUTE_VALUE|

*javax.swing.text.html.HTML_Constructors*
|javax.swing.text.html.HTML()|

*javax.swing.text.html.HTML_Methods*
|javax.swing.text.html.HTML.getAllAttributeKeys()|Returns the set of HTML attributes recognized.
|javax.swing.text.html.HTML.getAllTags()|Returns the set of actual HTML tags that  are recognized by the default HTML reader.
|javax.swing.text.html.HTML.getAttributeKey(String)|Fetches an attribute constant for a well-known attribute name  (i.e.
|javax.swing.text.html.HTML.getIntegerAttributeValue(AttributeSet,HTML.Attribute,int)|Fetches an integer attribute value.
|javax.swing.text.html.HTML.getTag(String)|Fetches a tag constant for a well-known tag name (i.e.

*javax.swing.text.html.HTML_Description*

Constants used in the HTMLDocument. These are basically tag and attribute definitions. 



*java.lang.String_javax.swing.text.html.HTML.NULL_ATTRIBUTE_VALUE*





*javax.swing.text.html.HTML()*

public HTML()




*javax.swing.text.html.HTML.getAllAttributeKeys()*

public static |javax.swing.text.html.HTML.Attribute|[] getAllAttributeKeys()

Returns the set of HTML attributes recognized. 



    Returns: the set of HTML attributes recognized 

*javax.swing.text.html.HTML.getAllTags()*

public static |javax.swing.text.html.HTML.Tag|[] getAllTags()

Returns the set of actual HTML tags that are recognized by the default HTML reader. This set does not include tags that are manufactured by the reader. 



*javax.swing.text.html.HTML.getAttributeKey(String)*

public static |javax.swing.text.html.HTML.Attribute| getAttributeKey(java.lang.String attName)

Fetches an attribute constant for a well-known attribute name (i.e. one of the attributes in the set {FACE, COMMENT, SIZE, COLOR, CLEAR, BACKGROUND, BGCOLOR, TEXT, LINK, VLINK, 
ALINK, WIDTH, HEIGHT, ALIGN, NAME, HREF, REL, REV, TITLE, TARGET, SHAPE, COORDS, ISMAP, NOHREF, ALT, ID, SRC, HSPACE, VSPACE, USEMAP, LOWSRC, CODEBASE, CODE, ARCHIVE, VALUE, 
VALUETYPE, TYPE, CLASS, STYLE, LANG, DIR, DECLARE, CLASSID, DATA, CODETYPE, STANDBY, BORDER, SHAPES, NOSHADE, COMPACT, START, ACTION, METHOD, ENCTYPE, CHECKED, MAXLENGTH, 
MULTIPLE, SELECTED, ROWS, COLS, DUMMY, CELLSPACING, CELLPADDING, VALIGN, HALIGN, NOWRAP, ROWSPAN, COLSPAN, PROMPT, HTTPEQUIV, CONTENT, LANGUAGE, VERSION, N, FRAMEBORDER, 
MARGINWIDTH, MARGINHEIGHT, SCROLLING, NORESIZE, MEDIA, ENDTAG}). If the given name does not represent one of the well-known attributes, then null will be returned. 


    attName - the String requested 

    Returns: the Attribute corresponding to attName 

*javax.swing.text.html.HTML.getIntegerAttributeValue(AttributeSet,HTML.Attribute,int)*

public static int getIntegerAttributeValue(
  javax.swing.text.AttributeSet attr,
  javax.swing.text.html.HTML.Attribute key,
  int def)

Fetches an integer attribute value. Attribute values are stored as a string, and this is a convenience method to convert to an actual integer. 


    attr - the set of attributes to use to try to fetch a value 
    key - the key to use to fetch the value 
    def - the default value to use if the attribute isn't defined or there is an error converting to an integer 

*javax.swing.text.html.HTML.getTag(String)*

public static |javax.swing.text.html.HTML.Tag| getTag(java.lang.String tagName)

Fetches a tag constant for a well-known tag name (i.e. one of the tags in the set {A, ADDRESS, APPLET, AREA, B, BASE, BASEFONT, BIG, BLOCKQUOTE, BODY, BR, CAPTION, CENTER, CITE, 
CODE, DD, DFN, DIR, DIV, DL, DT, EM, FONT, FORM, FRAME, FRAMESET, H1, H2, H3, H4, H5, H6, HEAD, HR, HTML, I, IMG, INPUT, ISINDEX, KBD, LI, LINK, MAP, MENU, META, NOBR, NOFRAMES, 
OBJECT, OL, OPTION, P, PARAM, PRE, SAMP, SCRIPT, SELECT, SMALL, SPAN, STRIKE, S, STRONG, STYLE, SUB, SUP, TABLE, TD, TEXTAREA, TH, TITLE, TR, TT, U, UL, VAR}. If the given name 
does not represent one of the well-known tags, then null will be returned. 


    tagName - the String name requested 

    Returns: a tag constant corresponding to the tagName, or null if not found 


