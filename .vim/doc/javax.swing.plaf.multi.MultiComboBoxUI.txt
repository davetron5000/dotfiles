*javax.swing.plaf.multi.MultiComboBoxUI* *MultiComboBoxUI* A multiplexing UI use

public class MultiComboBoxUI
  extends    |javax.swing.plaf.ComboBoxUI|

|javax.swing.plaf.multi.MultiComboBoxUI_Description|
|javax.swing.plaf.multi.MultiComboBoxUI_Fields|
|javax.swing.plaf.multi.MultiComboBoxUI_Constructors|
|javax.swing.plaf.multi.MultiComboBoxUI_Methods|

================================================================================

*javax.swing.plaf.multi.MultiComboBoxUI_Fields*
|java.util.Vector_javax.swing.plaf.multi.MultiComboBoxUI.uis|

*javax.swing.plaf.multi.MultiComboBoxUI_Constructors*
|javax.swing.plaf.multi.MultiComboBoxUI()|

*javax.swing.plaf.multi.MultiComboBoxUI_Methods*
|javax.swing.plaf.multi.MultiComboBoxUI.contains(JComponent,int,int)|Invokes th
|javax.swing.plaf.multi.MultiComboBoxUI.createUI(JComponent)|Returns a multiple
|javax.swing.plaf.multi.MultiComboBoxUI.getAccessibleChild(JComponent,int)|Invo
|javax.swing.plaf.multi.MultiComboBoxUI.getAccessibleChildrenCount(JComponent)|
|javax.swing.plaf.multi.MultiComboBoxUI.getMaximumSize(JComponent)|Invokes the 
|javax.swing.plaf.multi.MultiComboBoxUI.getMinimumSize(JComponent)|Invokes the 
|javax.swing.plaf.multi.MultiComboBoxUI.getPreferredSize(JComponent)|Invokes th
|javax.swing.plaf.multi.MultiComboBoxUI.getUIs()|Returns the list of UIs associ
|javax.swing.plaf.multi.MultiComboBoxUI.installUI(JComponent)|Invokes the insta
|javax.swing.plaf.multi.MultiComboBoxUI.isFocusTraversable(JComboBox)|Invokes t
|javax.swing.plaf.multi.MultiComboBoxUI.isPopupVisible(JComboBox)|Invokes the i
|javax.swing.plaf.multi.MultiComboBoxUI.paint(Graphics,JComponent)|Invokes the 
|javax.swing.plaf.multi.MultiComboBoxUI.setPopupVisible(JComboBox,boolean)|Invo
|javax.swing.plaf.multi.MultiComboBoxUI.uninstallUI(JComponent)|Invokes the uni
|javax.swing.plaf.multi.MultiComboBoxUI.update(Graphics,JComponent)|Invokes the

*javax.swing.plaf.multi.MultiComboBoxUI_Description*

A multiplexing UI used to combine ComboBoxUIs. 

This file was automatically generated by AutoMulti. 


*java.util.Vector_javax.swing.plaf.multi.MultiComboBoxUI.uis*

A multiplexing UI used to combine ComboBoxUIs. 

This file was automatically generated by AutoMulti. 



*javax.swing.plaf.multi.MultiComboBoxUI()*

public MultiComboBoxUI()




*javax.swing.plaf.multi.MultiComboBoxUI.contains(JComponent,int,int)*

public boolean contains(
  javax.swing.JComponent a,
  int b,
  int c)

Invokes the contains method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiComboBoxUI.createUI(JComponent)*

public static |javax.swing.plaf.ComponentUI| createUI(javax.swing.JComponent a)

Returns a multiplexing UI instance if any of the auxiliary LookAndFeels 
supports this UI. Otherwise, just returns the UI object obtained from the 
default LookAndFeel. 


*javax.swing.plaf.multi.MultiComboBoxUI.getAccessibleChild(JComponent,int)*

public |javax.accessibility.Accessible| getAccessibleChild(
  javax.swing.JComponent a,
  int b)

Invokes the getAccessibleChild method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiComboBoxUI.getAccessibleChildrenCount(JComponent)*

public int getAccessibleChildrenCount(javax.swing.JComponent a)

Invokes the getAccessibleChildrenCount method on each UI handled by this 
object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiComboBoxUI.getMaximumSize(JComponent)*

public |java.awt.Dimension| getMaximumSize(javax.swing.JComponent a)

Invokes the getMaximumSize method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiComboBoxUI.getMinimumSize(JComponent)*

public |java.awt.Dimension| getMinimumSize(javax.swing.JComponent a)

Invokes the getMinimumSize method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiComboBoxUI.getPreferredSize(JComponent)*

public |java.awt.Dimension| getPreferredSize(javax.swing.JComponent a)

Invokes the getPreferredSize method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiComboBoxUI.getUIs()*

public |javax.swing.plaf.ComponentUI| getUIs()

Returns the list of UIs associated with this multiplexing UI. This allows 
processing of the UIs by an application aware of multiplexing UIs on 
components. 


*javax.swing.plaf.multi.MultiComboBoxUI.installUI(JComponent)*

public void installUI(javax.swing.JComponent a)

Invokes the installUI method on each UI handled by this object. 


*javax.swing.plaf.multi.MultiComboBoxUI.isFocusTraversable(JComboBox)*

public boolean isFocusTraversable(javax.swing.JComboBox a)

Invokes the isFocusTraversable method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiComboBoxUI.isPopupVisible(JComboBox)*

public boolean isPopupVisible(javax.swing.JComboBox a)

Invokes the isPopupVisible method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiComboBoxUI.paint(Graphics,JComponent)*

public void paint(
  java.awt.Graphics a,
  javax.swing.JComponent b)

Invokes the paint method on each UI handled by this object. 


*javax.swing.plaf.multi.MultiComboBoxUI.setPopupVisible(JComboBox,boolean)*

public void setPopupVisible(
  javax.swing.JComboBox a,
  boolean b)

Invokes the setPopupVisible method on each UI handled by this object. 


*javax.swing.plaf.multi.MultiComboBoxUI.uninstallUI(JComponent)*

public void uninstallUI(javax.swing.JComponent a)

Invokes the uninstallUI method on each UI handled by this object. 


*javax.swing.plaf.multi.MultiComboBoxUI.update(Graphics,JComponent)*

public void update(
  java.awt.Graphics a,
  javax.swing.JComponent b)

Invokes the update method on each UI handled by this object. 



