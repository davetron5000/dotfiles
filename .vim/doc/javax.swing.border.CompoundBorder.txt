*javax.swing.border.CompoundBorder* *CompoundBorder* A composite Border class used to compose two Border objects
 into a single border by nesting an inside Border object within 
 t

public class CompoundBorder
  extends    |javax.swing.border.AbstractBorder|

|javax.swing.border.CompoundBorder_Description|
|javax.swing.border.CompoundBorder_Fields|
|javax.swing.border.CompoundBorder_Constructors|
|javax.swing.border.CompoundBorder_Methods|

====================================================================================================================================================================================

*javax.swing.border.CompoundBorder_Fields*
|javax.swing.border.Border_javax.swing.border.CompoundBorder.insideBorder|
|javax.swing.border.Border_javax.swing.border.CompoundBorder.outsideBorder|

*javax.swing.border.CompoundBorder_Constructors*
|javax.swing.border.CompoundBorder()|Creates a compound border with null outside and inside borders.
|javax.swing.border.CompoundBorder(Border,Border)|Creates a compound border with the specified outside and   inside borders.

*javax.swing.border.CompoundBorder_Methods*
|javax.swing.border.CompoundBorder.getBorderInsets(Component)|Returns the insets of the composite border by adding  the insets of the outside border to the insets of the  inside b
|javax.swing.border.CompoundBorder.getBorderInsets(Component,Insets)|Reinitialize the insets parameter with this Border's current Insets.
|javax.swing.border.CompoundBorder.getInsideBorder()|Returns the inside border object.
|javax.swing.border.CompoundBorder.getOutsideBorder()|Returns the outside border object.
|javax.swing.border.CompoundBorder.isBorderOpaque()|Returns whether or not this compound border is opaque.
|javax.swing.border.CompoundBorder.paintBorder(Component,Graphics,int,int,int,int)|Paints the compound border by painting the outside border  with the specified position and size 

*javax.swing.border.CompoundBorder_Description*

A composite Border class used to compose two Border objects into a single border by nesting an inside Border object within the insets of an outside Border object. 

For example, this class may be used to add blank margin space to a component with an existing decorative border: 



Border border = comp.getBorder(); Border margin = new EmptyBorder(10,10,10,10); comp.setBorder(new CompoundBorder(border, margin)); 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*javax.swing.border.Border_javax.swing.border.CompoundBorder.insideBorder*




*javax.swing.border.Border_javax.swing.border.CompoundBorder.outsideBorder*





*javax.swing.border.CompoundBorder()*

public CompoundBorder()

Creates a compound border with null outside and inside borders. 


*javax.swing.border.CompoundBorder(Border,Border)*

public CompoundBorder(
  javax.swing.border.Border outsideBorder,
  javax.swing.border.Border insideBorder)

Creates a compound border with the specified outside and inside borders. Either border may be null. 

    outsideBorder - the outside border 
    insideBorder - the inside border to be nested 

*javax.swing.border.CompoundBorder.getBorderInsets(Component)*

public |java.awt.Insets| getBorderInsets(java.awt.Component c)

Returns the insets of the composite border by adding the insets of the outside border to the insets of the inside border. 


    c - the component for which this border insets value applies 

*javax.swing.border.CompoundBorder.getBorderInsets(Component,Insets)*

public |java.awt.Insets| getBorderInsets(
  java.awt.Component c,
  java.awt.Insets insets)

Reinitialize the insets parameter with this Border's current Insets. 


    c - the component for which this border insets value applies 
    insets - the object to be reinitialized 

*javax.swing.border.CompoundBorder.getInsideBorder()*

public |javax.swing.border.Border| getInsideBorder()

Returns the inside border object. 



*javax.swing.border.CompoundBorder.getOutsideBorder()*

public |javax.swing.border.Border| getOutsideBorder()

Returns the outside border object. 



*javax.swing.border.CompoundBorder.isBorderOpaque()*

public boolean isBorderOpaque()

Returns whether or not this compound border is opaque. Returns true if both the inside and outside borders are non-null and opaque; returns false otherwise. 



*javax.swing.border.CompoundBorder.paintBorder(Component,Graphics,int,int,int,int)*

public void paintBorder(
  java.awt.Component c,
  java.awt.Graphics g,
  int x,
  int y,
  int width,
  int height)

Paints the compound border by painting the outside border with the specified position and size and then painting the inside border at the specified position and size offset by the 
insets of the outside border. 


    c - the component for which this border is being painted 
    g - the paint graphics 
    x - the x position of the painted border 
    y - the y position of the painted border 
    width - the width of the painted border 
    height - the height of the painted border 


