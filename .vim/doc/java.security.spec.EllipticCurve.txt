*java.security.spec.EllipticCurve* *EllipticCurve* This immutable class holds th

public class EllipticCurve
  extends    |java.lang.Object|

|java.security.spec.EllipticCurve_Description|
|java.security.spec.EllipticCurve_Fields|
|java.security.spec.EllipticCurve_Constructors|
|java.security.spec.EllipticCurve_Methods|

================================================================================

*java.security.spec.EllipticCurve_Constructors*
|java.security.spec.EllipticCurve(ECField,BigInteger,BigInteger)|Creates an ell
|java.security.spec.EllipticCurve(ECField,BigInteger,BigInteger,byte[])|Creates

*java.security.spec.EllipticCurve_Methods*
|java.security.spec.EllipticCurve.equals(Object)|Compares this elliptic curve f
|java.security.spec.EllipticCurve.getA()|Returns the first coefficient a of the
|java.security.spec.EllipticCurve.getB()|Returns the second coefficient b of th
|java.security.spec.EllipticCurve.getField()|Returns the finite field field tha
|java.security.spec.EllipticCurve.getSeed()|Returns the seeding bytes seed used
|java.security.spec.EllipticCurve.hashCode()|Returns a hash code value for this

*java.security.spec.EllipticCurve_Description*

This immutable class holds the necessary values needed to represent an elliptic 
curve. 


*java.security.spec.EllipticCurve(ECField,BigInteger,BigInteger)*

public EllipticCurve(
  java.security.spec.ECField field,
  java.math.BigInteger a,
  java.math.BigInteger b)

Creates an elliptic curve with the specified elliptic field field and the 
coefficients a and b. 

    field - the finite field that this elliptic curve is over. 
    a - the first coefficient of this elliptic curve. 
    b - the second coefficient of this elliptic curve. 

*java.security.spec.EllipticCurve(ECField,BigInteger,BigInteger,byte[])*

public EllipticCurve(
  java.security.spec.ECField field,
  java.math.BigInteger a,
  java.math.BigInteger b,
  byte[] seed)

Creates an elliptic curve with the specified elliptic field field, the 
coefficients a and b, and the seed used for curve generation. 

    field - the finite field that this elliptic curve is over. 
    a - the first coefficient of this elliptic curve. 
    b - the second coefficient of this elliptic curve. 
    seed - the bytes used during curve generation for later validation. Contents of this 
       array are copied to protect against subsequent modification. 

*java.security.spec.EllipticCurve.equals(Object)*

public boolean equals(java.lang.Object obj)

Compares this elliptic curve for equality with the specified object. 

    obj - the object to be compared. 

    Returns: true if obj is an instance of EllipticCurve and the field, A, B, and seeding 
             bytes match, false otherwise. 
*java.security.spec.EllipticCurve.getA()*

public |java.math.BigInteger| getA()

Returns the first coefficient a of the elliptic curve. 


    Returns: the first coefficient a. 
*java.security.spec.EllipticCurve.getB()*

public |java.math.BigInteger| getB()

Returns the second coefficient b of the elliptic curve. 


    Returns: the second coefficient b. 
*java.security.spec.EllipticCurve.getField()*

public |java.security.spec.ECField| getField()

Returns the finite field field that this elliptic curve is over. 


    Returns: the field field that this curve is over. 
*java.security.spec.EllipticCurve.getSeed()*

public byte getSeed()

Returns the seeding bytes seed used during curve generation. May be null if not 
specified. 


    Returns: the seeding bytes seed. A new array is returned each time this method is 
             called. 
*java.security.spec.EllipticCurve.hashCode()*

public int hashCode()

Returns a hash code value for this elliptic curve. 


    Returns: a hash code value. 

