*javax.swing.ViewportLayout* *ViewportLayout* The default layout manager for JViewport.

public class ViewportLayout
  extends    |java.lang.Object|
  implements |java.awt.LayoutManager|
             |java.io.Serializable|

|javax.swing.ViewportLayout_Description|
|javax.swing.ViewportLayout_Fields|
|javax.swing.ViewportLayout_Constructors|
|javax.swing.ViewportLayout_Methods|

====================================================================================================================================================================================

*javax.swing.ViewportLayout_Constructors*
|javax.swing.ViewportLayout()|

*javax.swing.ViewportLayout_Methods*
|javax.swing.ViewportLayout.addLayoutComponent(String,Component)|Adds the specified component to the layout.
|javax.swing.ViewportLayout.layoutContainer(Container)|Called by the AWT when the specified container needs to be laid out.
|javax.swing.ViewportLayout.minimumLayoutSize(Container)|Returns the minimum dimensions needed to layout the components  contained in the specified target container.
|javax.swing.ViewportLayout.preferredLayoutSize(Container)|Returns the preferred dimensions for this layout given the components  in the specified target container.
|javax.swing.ViewportLayout.removeLayoutComponent(Component)|Removes the specified component from the layout.

*javax.swing.ViewportLayout_Description*

The default layout manager for JViewport. ViewportLayout defines a policy for layout that should be useful for most applications. The viewport makes its view the same size as the 
viewport, however it will not make the view smaller than its minimum size. As the viewport grows the view is kept bottom justified until the entire view is visible, subsequently 
the view is kept top justified. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*javax.swing.ViewportLayout()*

public ViewportLayout()




*javax.swing.ViewportLayout.addLayoutComponent(String,Component)*

public void addLayoutComponent(
  java.lang.String name,
  java.awt.Component c)

Adds the specified component to the layout. Not used by this class. 


    name - the name of the component 
    c - the the component to be added 

*javax.swing.ViewportLayout.layoutContainer(Container)*

public void layoutContainer(java.awt.Container parent)

Called by the AWT when the specified container needs to be laid out. 


    parent - the container to lay out 

*javax.swing.ViewportLayout.minimumLayoutSize(Container)*

public |java.awt.Dimension| minimumLayoutSize(java.awt.Container parent)

Returns the minimum dimensions needed to layout the components contained in the specified target container. 


    parent - the component which needs to be laid out 

    Returns: a Dimension object containing the minimum dimensions 

*javax.swing.ViewportLayout.preferredLayoutSize(Container)*

public |java.awt.Dimension| preferredLayoutSize(java.awt.Container parent)

Returns the preferred dimensions for this layout given the components in the specified target container. 


    parent - the component which needs to be laid out 

    Returns: a Dimension object containing the preferred dimensions 

*javax.swing.ViewportLayout.removeLayoutComponent(Component)*

public void removeLayoutComponent(java.awt.Component c)

Removes the specified component from the layout. Not used by this class. 


    c - the component to remove 


