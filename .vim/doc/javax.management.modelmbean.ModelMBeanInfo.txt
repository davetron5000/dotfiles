*javax.management.modelmbean.ModelMBeanInfo* *ModelMBeanInfo* This interface is 

public interface interface ModelMBeanInfo


|javax.management.modelmbean.ModelMBeanInfo_Description|
|javax.management.modelmbean.ModelMBeanInfo_Fields|
|javax.management.modelmbean.ModelMBeanInfo_Constructors|
|javax.management.modelmbean.ModelMBeanInfo_Methods|

================================================================================

*javax.management.modelmbean.ModelMBeanInfo_Methods*
|javax.management.modelmbean.ModelMBeanInfo.clone()|Creates and returns a copy 
|javax.management.modelmbean.ModelMBeanInfo.getAttribute(String)|Returns a Mode
|javax.management.modelmbean.ModelMBeanInfo.getAttributes()|Returns the list of
|javax.management.modelmbean.ModelMBeanInfo.getClassName()|Returns the name of 
|javax.management.modelmbean.ModelMBeanInfo.getConstructors()|Returns the list 
|javax.management.modelmbean.ModelMBeanInfo.getDescription()|Returns a human re
|javax.management.modelmbean.ModelMBeanInfo.getDescriptor(String,String)|Return
|javax.management.modelmbean.ModelMBeanInfo.getDescriptors(String)|Returns a De
|javax.management.modelmbean.ModelMBeanInfo.getMBeanDescriptor()|Returns the Mo
|javax.management.modelmbean.ModelMBeanInfo.getNotification(String)|Returns a M
|javax.management.modelmbean.ModelMBeanInfo.getNotifications()|Returns the list
|javax.management.modelmbean.ModelMBeanInfo.getOperation(String)|Returns a Mode
|javax.management.modelmbean.ModelMBeanInfo.getOperations()|Returns the list of
|javax.management.modelmbean.ModelMBeanInfo.setDescriptor(Descriptor,String)|Se
|javax.management.modelmbean.ModelMBeanInfo.setDescriptors(Descriptor[])|Adds o
|javax.management.modelmbean.ModelMBeanInfo.setMBeanDescriptor(Descriptor)|Sets

*javax.management.modelmbean.ModelMBeanInfo_Description*

This interface is implemented by the ModelMBeanInfo for every ModelMBean. An 
implementation of this interface must be shipped with every JMX Agent. 

Java resources wishing to be manageable instantiate the ModelMBean using the 
MBeanServer's createMBean method. The resource then sets the ModelMBeanInfo and 
Descriptors for the ModelMBean instance. The attributes, operations, and 
notifications exposed via the ModelMBeanInfo for the ModelMBean comprise the 
management interface and are accessible from MBeans, connectors/adaptors like 
other MBeans. Through the Descriptors, values and methods in the managed 
application can be defined and mapped to attributes and operations of the 
ModelMBean. This mapping can be defined during development in a file or 
dynamically and programmatically at runtime. 

Every ModelMBean which is instantiated in the MBeanServer becomes manageable: 
its attributes, operations, and notifications become remotely accessible 
through the connectors/adaptors connected to that MBeanServer. A Java object 
cannot be registered in the MBeanServer unless it is a JMX compliant MBean. By 
instantiating a ModelMBean, resources are guaranteed that the MBean is valid. 

MBeanException and RuntimeOperationsException must be thrown on every public 
method. This allows for wrapping exceptions from distributed communications 
(RMI, EJB, etc.) 


*javax.management.modelmbean.ModelMBeanInfo.clone()*

public |java.lang.Object| clone()

Creates and returns a copy of this object. 


*javax.management.modelmbean.ModelMBeanInfo.getAttribute(String)*

public |javax.management.modelmbean.ModelMBeanAttributeInfo| getAttribute(java.lang.String inName)
  throws |javax.management.MBeanException|
         |javax.management.RuntimeOperationsException|
         
Returns a ModelMBeanAttributeInfo requested by name. 

    inName - The name of the ModelMBeanAttributeInfo to get. If no ModelMBeanAttributeInfo 
       exists for this name null is returned. 

    Returns: the attribute info for the named attribute, or null if there is none. 
*javax.management.modelmbean.ModelMBeanInfo.getAttributes()*

public |javax.management.MBeanAttributeInfo| getAttributes()

Returns the list of attributes exposed for management. Each attribute is 
described by an MBeanAttributeInfo object. 


    Returns: An array of MBeanAttributeInfo objects. 
*javax.management.modelmbean.ModelMBeanInfo.getClassName()*

public |java.lang.String| getClassName()

Returns the name of the Java class of the MBean described by this MBeanInfo. 


    Returns: the Java class name. 
*javax.management.modelmbean.ModelMBeanInfo.getConstructors()*

public |javax.management.MBeanConstructorInfo| getConstructors()

Returns the list of the public constructors of the MBean. Each constructor is 
described by an MBeanConstructorInfo object. 


    Returns: An array of MBeanConstructorInfo objects. 
*javax.management.modelmbean.ModelMBeanInfo.getDescription()*

public |java.lang.String| getDescription()

Returns a human readable description of the MBean. 


    Returns: the description. 
*javax.management.modelmbean.ModelMBeanInfo.getDescriptor(String,String)*

public |javax.management.Descriptor| getDescriptor(
  java.lang.String inDescriptorName,
  java.lang.String inDescriptorType)
  throws |javax.management.MBeanException|
         |javax.management.RuntimeOperationsException|
         
Returns a Descriptor requested by name and descriptorType. 

    inDescriptorName - The name of the descriptor. 
    inDescriptorType - The type of the descriptor being requested. If this is null or empty then all 
       types are searched. Valid types are 'mbean', 'attribute', 'constructor' 
       'operation', and 'notification'. This value will be equal to the 
       'descriptorType' field in the descriptor that is returned. 

    Returns: Descriptor containing the descriptor for the ModelMBean with the same name and 
             descriptorType. If no descriptor is found, null is returned. 
*javax.management.modelmbean.ModelMBeanInfo.getDescriptors(String)*

public |javax.management.Descriptor| getDescriptors(java.lang.String inDescriptorType)
  throws |javax.management.MBeanException|
         |javax.management.RuntimeOperationsException|
         
Returns a Descriptor array consisting of all Descriptors for the ModelMBeanInfo 
of type inDescriptorType. 

    inDescriptorType - value of descriptorType field that must be set for the descriptor to be 
       returned. Must be "mbean", "attribute", "operation", "constructor" or 
       "notification". If it is null or empty then all types will be returned. 

    Returns: Descriptor array containing all descriptors for the ModelMBean if type 
             inDescriptorType. 
*javax.management.modelmbean.ModelMBeanInfo.getMBeanDescriptor()*

public |javax.management.Descriptor| getMBeanDescriptor()
  throws |javax.management.MBeanException|
         |javax.management.RuntimeOperationsException|
         
Returns the ModelMBean's descriptor which contains MBean wide policies. This 
descriptor contains metadata about the MBean and default policies for 
persistence and caching. 

The fields in the descriptor are defined, but not limited to, the following: 

name : MBean name descriptorType : must be "mbean" displayName : name of 
attribute to be used in displays persistPolicy : 
OnUpdate|OnTimer|NoMoreOftenThan|Always|Never persistLocation : The fully 
qualified directory name where the MBean should be persisted (if appropriate) 
persistFile : File name into which the MBean should be persisted persistPeriod 
: seconds - frequency of persist cycle for OnTime and NoMoreOftenThan 
PersistPolicy currencyTimeLimit : how long value is valid, <0 never, =0 always, 
>0 seconds log : where t: log all notifications f: log no notifications logfile 
: fully qualified filename to log events to visibility : 1-4 where 1: always 
visible 4: rarely visible export : name to be used to export/expose this MBean 
so that it is findable by other JMX Agents. presentationString : xml formatted 
string to allow presentation of data to be associated with the MBean. 

The default descriptor is: name=mbeanName,descriptorType=mbean, 
displayName=this.getClassName(), 
persistPolicy=never,log=F,export=F,visibility=1 If the descriptor does not 
contain all these fields, they will be added with these default values. 

Note: because of inconsistencies in previous versions of this specification, it 
is recommended not to use negative or zero values for currencyTimeLimit. To 
indicate that a cached value is never valid, omit the currencyTimeLimit field. 
To indicate that it is always valid, use a very large number for this field. 


    Returns: the MBean descriptor. 
*javax.management.modelmbean.ModelMBeanInfo.getNotification(String)*

public |javax.management.modelmbean.ModelMBeanNotificationInfo| getNotification(java.lang.String inName)
  throws |javax.management.MBeanException|
         |javax.management.RuntimeOperationsException|
         
Returns a ModelMBeanNotificationInfo requested by name. 

    inName - The name of the ModelMBeanNotificationInfo to get. If no 
       ModelMBeanNotificationInfo exists for this name null is returned. 

    Returns: the info for the named notification, or null if there is none. 
*javax.management.modelmbean.ModelMBeanInfo.getNotifications()*

public |javax.management.MBeanNotificationInfo| getNotifications()

Returns the list of the notifications emitted by the MBean. Each notification 
is described by an MBeanNotificationInfo object. 

In addition to any notification specified by the application, a ModelMBean may 
always send also two additional notifications: 

One with descriptor name "GENERIC" and displayName "jmx.modelmbean.generic" 
Second is a standard attribute change notification with descriptor name 
"ATTRIBUTE_CHANGE" and displayName "jmx.attribute.change" 

Thus any implementation of ModelMBeanInfo should always add those two 
notifications in addition to those specified by the application. 


    Returns: An array of MBeanNotificationInfo objects. 
*javax.management.modelmbean.ModelMBeanInfo.getOperation(String)*

public |javax.management.modelmbean.ModelMBeanOperationInfo| getOperation(java.lang.String inName)
  throws |javax.management.MBeanException|
         |javax.management.RuntimeOperationsException|
         
Returns a ModelMBeanOperationInfo requested by name. 

    inName - The name of the ModelMBeanOperationInfo to get. If no ModelMBeanOperationInfo 
       exists for this name null is returned. 

    Returns: the operation info for the named operation, or null if there is none. 
*javax.management.modelmbean.ModelMBeanInfo.getOperations()*

public |javax.management.MBeanOperationInfo| getOperations()

Returns the list of operations of the MBean. Each operation is described by an 
MBeanOperationInfo object. 


    Returns: An array of MBeanOperationInfo objects. 
*javax.management.modelmbean.ModelMBeanInfo.setDescriptor(Descriptor,String)*

public void setDescriptor(
  javax.management.Descriptor inDescriptor,
  java.lang.String inDescriptorType)
  throws |javax.management.MBeanException|
         |javax.management.RuntimeOperationsException|
         
Sets descriptors in the info array of type inDescriptorType for the ModelMBean. 
The setDescriptor method of the corresponding ModelMBean*Info will be called to 
set the specified descriptor. 

    inDescriptor - The descriptor to be set in the ModelMBean. It must NOT be null. All 
       descriptors must have name and descriptorType fields. 
    inDescriptorType - The type of the descriptor being set. If this is null then the descriptorType 
       field in the descriptor is used. If specified this value must be set in 
       the descriptorType field in the descriptor. Must be "mbean","attribute", 
       "constructor", "operation", or "notification". 

*javax.management.modelmbean.ModelMBeanInfo.setDescriptors(Descriptor[])*

public void setDescriptors(javax.management.Descriptor[] inDescriptors)
  throws |javax.management.MBeanException|
         |javax.management.RuntimeOperationsException|
         
Adds or replaces descriptors in the ModelMBeanInfo. 

    inDescriptors - The descriptors to be set in the ModelMBeanInfo. Null elements of the list will 
       be ignored. All descriptors must have name and descriptorType fields. 

*javax.management.modelmbean.ModelMBeanInfo.setMBeanDescriptor(Descriptor)*

public void setMBeanDescriptor(javax.management.Descriptor inDescriptor)
  throws |javax.management.MBeanException|
         |javax.management.RuntimeOperationsException|
         
Sets the ModelMBean's descriptor. This descriptor contains default, MBean wide 
metadata about the MBean and default policies for persistence and caching. This 
operation does a complete replacement of the descriptor, no merging is done. If 
the descriptor to set to is null then the default descriptor will be created. 
The default descriptor is: name=mbeanName,descriptorType=mbean, 
displayName=this.getClassName(), 
persistPolicy=never,log=F,export=F,visibility=1 If the descriptor does not 
contain all these fields, they will be added with these default values. 

See getMBeanDescriptor(|javax.management.modelmbean.ModelMBeanInfo|) method 
javadoc for description of valid field names. 

    inDescriptor - the descriptor to set. 


