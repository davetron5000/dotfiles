*javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler* *BasicListUI.PropertyChangeHandler* 

public class BasicListUI.PropertyChangeHandler
  extends    |java.lang.Object|
  implements |java.beans.PropertyChangeListener|

|javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler_Description|
|javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler_Fields|
|javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler_Constructors|
|javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler_Methods|

================================================================================

*javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler_Constructors*
|javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler()|

*javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler_Methods*
|javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler.propertyChange(PropertyChangeEvent)|

*javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler_Description*

The PropertyChangeListener that's added to the JList at installUI time. When 
the value of a JList property that affects layout changes, we set a bit in 
updateLayoutStateNeeded. If the JLists model changes we additionally remove our 
listeners from the old model. Likewise for the JList selectionModel. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler()*

public BasicListUI.PropertyChangeHandler()




*javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler.propertyChange(PropertyChangeEvent)*

public void propertyChange(java.beans.PropertyChangeEvent e)





