*java.sql.Ref* *Ref* The mapping in the Java programming language of an SQL REF


public interface interface Ref


|java.sql.Ref_Description|
|java.sql.Ref_Fields|
|java.sql.Ref_Constructors|
|java.sql.Ref_Methods|

================================================================================

*java.sql.Ref_Methods*
|java.sql.Ref.getBaseTypeName()|Retrieves the fully-qualified SQL name of the S
|java.sql.Ref.getObject()|Retrieves the SQL structured type instance referenced
|java.sql.Ref.getObject(Map)|Retrieves the referenced object and maps it to a J
|java.sql.Ref.setObject(Object)|Sets the structured type value that this Ref  o

*java.sql.Ref_Description*

The mapping in the Java programming language of an SQL REF value, which is a 
reference to an SQL structured type value in the database. 

SQL REF values are stored in a table that contains instances of a referenceable 
SQL structured type, and each REF value is a unique identifier for one instance 
in that table. An SQL REF value may be used in place of the SQL structured type 
it references, either as a column value in a table or an attribute value in a 
structured type. 

Because an SQL REF value is a logical pointer to an SQL structured type, a Ref 
object is by default also a logical pointer. Thus, retrieving an SQL REF value 
as a Ref object does not materialize the attributes of the structured type on 
the client. 

A Ref object can be stored in the database using the PreparedStatement.setRef 
method. 


*java.sql.Ref.getBaseTypeName()*

public |java.lang.String| getBaseTypeName()
  throws |java.sql.SQLException|
         
Retrieves the fully-qualified SQL name of the SQL structured type that this Ref 
object references. 


    Returns: the fully-qualified SQL name of the referenced SQL structured type 
*java.sql.Ref.getObject()*

public |java.lang.Object| getObject()
  throws |java.sql.SQLException|
         
Retrieves the SQL structured type instance referenced by this Ref object. If 
the connection's type map has an entry for the structured type, the instance 
will be custom mapped to the Java class indicated in the type map. Otherwise, 
the structured type instance will be mapped to a Struct object. 


    Returns: a Java Object that is the mapping for the SQL structured type to which this Ref 
             object refers 
*java.sql.Ref.getObject(Map)*

public |java.lang.Object| getObject(java.util.Map map)
  throws |java.sql.SQLException|
         
Retrieves the referenced object and maps it to a Java type using the given type 
map. 

    map - a java.util.Map object that contains the mapping to use (the fully-qualified 
       name of the SQL structured type being referenced and the class object 
       for SQLData implementation to which the SQL structured type will be 
       mapped) 

    Returns: a Java Object that is the custom mapping for the SQL structured type to which 
             this Ref object refers 
*java.sql.Ref.setObject(Object)*

public void setObject(java.lang.Object value)
  throws |java.sql.SQLException|
         
Sets the structured type value that this Ref object references to the given 
instance of Object. The driver converts this to an SQL structured type when it 
sends it to the database. 

    value - an Object representing the SQL structured type instance that this Ref object 
       will reference 


