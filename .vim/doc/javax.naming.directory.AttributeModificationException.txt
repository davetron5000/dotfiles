*javax.naming.directory.AttributeModificationException* *AttributeModificationException* 

public class AttributeModificationException
  extends    |javax.naming.NamingException|

|javax.naming.directory.AttributeModificationException_Description|
|javax.naming.directory.AttributeModificationException_Fields|
|javax.naming.directory.AttributeModificationException_Constructors|
|javax.naming.directory.AttributeModificationException_Methods|

================================================================================

*javax.naming.directory.AttributeModificationException_Constructors*
|javax.naming.directory.AttributeModificationException()|Constructs a new insta
|javax.naming.directory.AttributeModificationException(String)|Constructs a new

*javax.naming.directory.AttributeModificationException_Methods*
|javax.naming.directory.AttributeModificationException.getUnexecutedModifications()|
|javax.naming.directory.AttributeModificationException.setUnexecutedModifications(ModificationItem[])|
|javax.naming.directory.AttributeModificationException.toString()|The string re

*javax.naming.directory.AttributeModificationException_Description*

This exception is thrown when an attempt is made to add, or remove, or modify 
an attribute, its identifier, or its values that conflicts with the attribute's 
(schema) definition or the attribute's state. It is thrown in response to 
DirContext.modifyAttributes(). It contains a list of modifications that have 
not been performed, in the order that they were supplied to modifyAttributes(). 
If the list is null, none of the modifications were performed successfully. 

An AttributeModificationException instance is not synchronized against 
concurrent multithreaded access. Multiple threads trying to access and modify a 
single AttributeModification instance should lock the object. 


*javax.naming.directory.AttributeModificationException()*

public AttributeModificationException()

Constructs a new instance of AttributeModificationException. All fields are set 
to null. 


*javax.naming.directory.AttributeModificationException(String)*

public AttributeModificationException(java.lang.String explanation)

Constructs a new instance of AttributeModificationException using an 
explanation. All other fields are set to null. 

    explanation - Possibly null additional detail about this exception. If null, this exception 
       has no detail message. 

*javax.naming.directory.AttributeModificationException.getUnexecutedModifications()*

public |javax.naming.directory.ModificationItem| getUnexecutedModifications()

Retrieves the unexecuted modification list. Items in the list appear in the 
same order in which they were originally supplied in 
DirContext.modifyAttributes(). The first item in the list is the first one that 
was not executed. If this list is null, none of the operations originally 
submitted to modifyAttributes() were executed. 


    Returns: The possibly null unexecuted modification list. 
*javax.naming.directory.AttributeModificationException.setUnexecutedModifications(ModificationItem[])*

public void setUnexecutedModifications(javax.naming.directory.ModificationItem[] e)

Sets the unexecuted modification list to be e. Items in the list must appear in 
the same order in which they were originally supplied in 
DirContext.modifyAttributes(). The first item in the list is the first one that 
was not executed. If this list is null, none of the operations originally 
submitted to modifyAttributes() were executed. 

    e - The possibly null list of unexecuted modifications. 

*javax.naming.directory.AttributeModificationException.toString()*

public |java.lang.String| toString()

The string representation of this exception consists of information about where 
the error occurred, and the first unexecuted modification. This string is meant 
for debugging and not mean to be interpreted programmatically. 


    Returns: The non-null string representation of this exception. 

