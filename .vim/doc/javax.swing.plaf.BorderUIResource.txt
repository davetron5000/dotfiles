*javax.swing.plaf.BorderUIResource* *BorderUIResource* 

public class BorderUIResource
  extends    |java.lang.Object|
  implements |javax.swing.border.Border|
             |javax.swing.plaf.UIResource|
             |java.io.Serializable|

|javax.swing.plaf.BorderUIResource_Description|
|javax.swing.plaf.BorderUIResource_Fields|
|javax.swing.plaf.BorderUIResource_Constructors|
|javax.swing.plaf.BorderUIResource_Methods|

================================================================================

*javax.swing.plaf.BorderUIResource_Constructors*
|javax.swing.plaf.BorderUIResource(Border)|Creates a UIResource border object w

*javax.swing.plaf.BorderUIResource_Methods*
|javax.swing.plaf.BorderUIResource.getBlackLineBorderUIResource()|
|javax.swing.plaf.BorderUIResource.getBorderInsets(Component)|
|javax.swing.plaf.BorderUIResource.getEtchedBorderUIResource()|
|javax.swing.plaf.BorderUIResource.getLoweredBevelBorderUIResource()|
|javax.swing.plaf.BorderUIResource.getRaisedBevelBorderUIResource()|
|javax.swing.plaf.BorderUIResource.isBorderOpaque()|
|javax.swing.plaf.BorderUIResource.paintBorder(Component,Graphics,int,int,int,int)|

*javax.swing.plaf.BorderUIResource_Description*




*javax.swing.plaf.BorderUIResource(Border)*

public BorderUIResource(javax.swing.border.Border delegate)

Creates a UIResource border object which wraps an existing Border instance. 

    delegate - the border being wrapped 

*javax.swing.plaf.BorderUIResource.getBlackLineBorderUIResource()*

public static |javax.swing.border.Border| getBlackLineBorderUIResource()




*javax.swing.plaf.BorderUIResource.getBorderInsets(Component)*

public |java.awt.Insets| getBorderInsets(java.awt.Component c)




*javax.swing.plaf.BorderUIResource.getEtchedBorderUIResource()*

public static |javax.swing.border.Border| getEtchedBorderUIResource()




*javax.swing.plaf.BorderUIResource.getLoweredBevelBorderUIResource()*

public static |javax.swing.border.Border| getLoweredBevelBorderUIResource()




*javax.swing.plaf.BorderUIResource.getRaisedBevelBorderUIResource()*

public static |javax.swing.border.Border| getRaisedBevelBorderUIResource()




*javax.swing.plaf.BorderUIResource.isBorderOpaque()*

public boolean isBorderOpaque()




*javax.swing.plaf.BorderUIResource.paintBorder(Component,Graphics,int,int,int,int)*

public void paintBorder(
  java.awt.Component c,
  java.awt.Graphics g,
  int x,
  int y,
  int width,
  int height)





