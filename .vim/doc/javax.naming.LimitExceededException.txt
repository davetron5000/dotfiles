*javax.naming.LimitExceededException* *LimitExceededException* This exception is

public class LimitExceededException
  extends    |javax.naming.NamingException|

|javax.naming.LimitExceededException_Description|
|javax.naming.LimitExceededException_Fields|
|javax.naming.LimitExceededException_Constructors|
|javax.naming.LimitExceededException_Methods|

================================================================================

*javax.naming.LimitExceededException_Constructors*
|javax.naming.LimitExceededException()|Constructs a new instance of LimitExceed
|javax.naming.LimitExceededException(String)|Constructs a new instance of Limit

*javax.naming.LimitExceededException_Description*

This exception is thrown when a method terminates abnormally due to a user or 
system specified limit. This is different from a InsufficientResourceException 
in that LimitExceededException is due to a user/system specified limit. For 
example, running out of memory to complete the request would be an insufficient 
resource. The client asking for 10 answers and getting back 11 is a size limit 
exception. 

Examples of these limits include client and server configuration limits such as 
size, time, number of hops, etc. 

Synchronization and serialization issues that apply to NamingException apply 
directly here. 


*javax.naming.LimitExceededException()*

public LimitExceededException()

Constructs a new instance of LimitExceededException with all name resolution 
fields and explanation initialized to null. 


*javax.naming.LimitExceededException(String)*

public LimitExceededException(java.lang.String explanation)

Constructs a new instance of LimitExceededException using an explanation. All 
other fields default to null. 

    explanation - Possibly null detail about this exception. 

