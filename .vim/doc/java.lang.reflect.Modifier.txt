*java.lang.reflect.Modifier* *Modifier* The Modifier class provides static metho

public class Modifier
  extends    |java.lang.Object|

|java.lang.reflect.Modifier_Description|
|java.lang.reflect.Modifier_Fields|
|java.lang.reflect.Modifier_Constructors|
|java.lang.reflect.Modifier_Methods|

================================================================================

*java.lang.reflect.Modifier_Fields*
|int_java.lang.reflect.Modifier.ABSTRACT|
|int_java.lang.reflect.Modifier.FINAL|
|int_java.lang.reflect.Modifier.INTERFACE|
|int_java.lang.reflect.Modifier.NATIVE|
|int_java.lang.reflect.Modifier.PRIVATE|
|int_java.lang.reflect.Modifier.PROTECTED|
|int_java.lang.reflect.Modifier.PUBLIC|
|int_java.lang.reflect.Modifier.STATIC|
|int_java.lang.reflect.Modifier.STRICT|
|int_java.lang.reflect.Modifier.SYNCHRONIZED|
|int_java.lang.reflect.Modifier.TRANSIENT|
|int_java.lang.reflect.Modifier.VOLATILE|

*java.lang.reflect.Modifier_Constructors*
|java.lang.reflect.Modifier()|

*java.lang.reflect.Modifier_Methods*
|java.lang.reflect.Modifier.isAbstract(int)|Return true if the integer argument
|java.lang.reflect.Modifier.isFinal(int)|Return true if the integer argument in
|java.lang.reflect.Modifier.isInterface(int)|Return true if the integer argumen
|java.lang.reflect.Modifier.isNative(int)|Return true if the integer argument i
|java.lang.reflect.Modifier.isPrivate(int)|Return true if the integer argument 
|java.lang.reflect.Modifier.isProtected(int)|Return true if the integer argumen
|java.lang.reflect.Modifier.isPublic(int)|Return true if the integer argument i
|java.lang.reflect.Modifier.isStatic(int)|Return true if the integer argument i
|java.lang.reflect.Modifier.isStrict(int)|Return true if the integer argument i
|java.lang.reflect.Modifier.isSynchronized(int)|Return true if the integer argu
|java.lang.reflect.Modifier.isTransient(int)|Return true if the integer argumen
|java.lang.reflect.Modifier.isVolatile(int)|Return true if the integer argument
|java.lang.reflect.Modifier.toString(int)|Return a string describing the access

*java.lang.reflect.Modifier_Description*

The Modifier class provides static methods and constants to decode class and 
member access modifiers. The sets of modifiers are represented as integers with 
distinct bit positions representing different modifiers. The values for the 
constants representing the modifiers are taken from The JavaTM Virtual Machine 
Specification, Second edition tables 4.1, 4.4, 4.5, and 4.7. 


*int_java.lang.reflect.Modifier.ABSTRACT*

The Modifier class provides static methods and constants to decode class and 
member access modifiers. The sets of modifiers are represented as integers with 
distinct bit positions representing different modifiers. The values for the 
constants representing the modifiers are taken from The JavaTM Virtual Machine 
Specification, Second edition tables 4.1, 4.4, 4.5, and 4.7. 


*int_java.lang.reflect.Modifier.FINAL*

The Modifier class provides static methods and constants to decode class and 
member access modifiers. The sets of modifiers are represented as integers with 
distinct bit positions representing different modifiers. The values for the 
constants representing the modifiers are taken from The JavaTM Virtual Machine 
Specification, Second edition tables 4.1, 4.4, 4.5, and 4.7. 


*int_java.lang.reflect.Modifier.INTERFACE*

The Modifier class provides static methods and constants to decode class and 
member access modifiers. The sets of modifiers are represented as integers with 
distinct bit positions representing different modifiers. The values for the 
constants representing the modifiers are taken from The JavaTM Virtual Machine 
Specification, Second edition tables 4.1, 4.4, 4.5, and 4.7. 


*int_java.lang.reflect.Modifier.NATIVE*

The Modifier class provides static methods and constants to decode class and 
member access modifiers. The sets of modifiers are represented as integers with 
distinct bit positions representing different modifiers. The values for the 
constants representing the modifiers are taken from The JavaTM Virtual Machine 
Specification, Second edition tables 4.1, 4.4, 4.5, and 4.7. 


*int_java.lang.reflect.Modifier.PRIVATE*

The Modifier class provides static methods and constants to decode class and 
member access modifiers. The sets of modifiers are represented as integers with 
distinct bit positions representing different modifiers. The values for the 
constants representing the modifiers are taken from The JavaTM Virtual Machine 
Specification, Second edition tables 4.1, 4.4, 4.5, and 4.7. 


*int_java.lang.reflect.Modifier.PROTECTED*

The Modifier class provides static methods and constants to decode class and 
member access modifiers. The sets of modifiers are represented as integers with 
distinct bit positions representing different modifiers. The values for the 
constants representing the modifiers are taken from The JavaTM Virtual Machine 
Specification, Second edition tables 4.1, 4.4, 4.5, and 4.7. 


*int_java.lang.reflect.Modifier.PUBLIC*

The Modifier class provides static methods and constants to decode class and 
member access modifiers. The sets of modifiers are represented as integers with 
distinct bit positions representing different modifiers. The values for the 
constants representing the modifiers are taken from The JavaTM Virtual Machine 
Specification, Second edition tables 4.1, 4.4, 4.5, and 4.7. 


*int_java.lang.reflect.Modifier.STATIC*

The Modifier class provides static methods and constants to decode class and 
member access modifiers. The sets of modifiers are represented as integers with 
distinct bit positions representing different modifiers. The values for the 
constants representing the modifiers are taken from The JavaTM Virtual Machine 
Specification, Second edition tables 4.1, 4.4, 4.5, and 4.7. 


*int_java.lang.reflect.Modifier.STRICT*

The Modifier class provides static methods and constants to decode class and 
member access modifiers. The sets of modifiers are represented as integers with 
distinct bit positions representing different modifiers. The values for the 
constants representing the modifiers are taken from The JavaTM Virtual Machine 
Specification, Second edition tables 4.1, 4.4, 4.5, and 4.7. 


*int_java.lang.reflect.Modifier.SYNCHRONIZED*

The Modifier class provides static methods and constants to decode class and 
member access modifiers. The sets of modifiers are represented as integers with 
distinct bit positions representing different modifiers. The values for the 
constants representing the modifiers are taken from The JavaTM Virtual Machine 
Specification, Second edition tables 4.1, 4.4, 4.5, and 4.7. 


*int_java.lang.reflect.Modifier.TRANSIENT*

The Modifier class provides static methods and constants to decode class and 
member access modifiers. The sets of modifiers are represented as integers with 
distinct bit positions representing different modifiers. The values for the 
constants representing the modifiers are taken from The JavaTM Virtual Machine 
Specification, Second edition tables 4.1, 4.4, 4.5, and 4.7. 


*int_java.lang.reflect.Modifier.VOLATILE*

The Modifier class provides static methods and constants to decode class and 
member access modifiers. The sets of modifiers are represented as integers with 
distinct bit positions representing different modifiers. The values for the 
constants representing the modifiers are taken from The JavaTM Virtual Machine 
Specification, Second edition tables 4.1, 4.4, 4.5, and 4.7. 



*java.lang.reflect.Modifier()*

public Modifier()




*java.lang.reflect.Modifier.isAbstract(int)*

public static boolean isAbstract(int mod)

Return true if the integer argument includes the abstract modifier, false 
otherwise. 

    mod - a set of modifiers 

    Returns: true if mod includes the abstract modifier; false otherwise. 
*java.lang.reflect.Modifier.isFinal(int)*

public static boolean isFinal(int mod)

Return true if the integer argument includes the final modifier, false 
otherwise. 

    mod - a set of modifiers 

    Returns: true if mod includes the final modifier; false otherwise. 
*java.lang.reflect.Modifier.isInterface(int)*

public static boolean isInterface(int mod)

Return true if the integer argument includes the interface modifier, false 
otherwise. 

    mod - a set of modifiers 

    Returns: true if mod includes the interface modifier; false otherwise. 
*java.lang.reflect.Modifier.isNative(int)*

public static boolean isNative(int mod)

Return true if the integer argument includes the native modifier, false 
otherwise. 

    mod - a set of modifiers 

    Returns: true if mod includes the native modifier; false otherwise. 
*java.lang.reflect.Modifier.isPrivate(int)*

public static boolean isPrivate(int mod)

Return true if the integer argument includes the private modifier, false 
otherwise. 

    mod - a set of modifiers 

    Returns: true if mod includes the private modifier; false otherwise. 
*java.lang.reflect.Modifier.isProtected(int)*

public static boolean isProtected(int mod)

Return true if the integer argument includes the protected modifier, false 
otherwise. 

    mod - a set of modifiers 

    Returns: true if mod includes the protected modifier; false otherwise. 
*java.lang.reflect.Modifier.isPublic(int)*

public static boolean isPublic(int mod)

Return true if the integer argument includes the public modifier, false 
otherwise. 

    mod - a set of modifiers 

    Returns: true if mod includes the public modifier; false otherwise. 
*java.lang.reflect.Modifier.isStatic(int)*

public static boolean isStatic(int mod)

Return true if the integer argument includes the static modifier, false 
otherwise. 

    mod - a set of modifiers 

    Returns: true if mod includes the static modifier; false otherwise. 
*java.lang.reflect.Modifier.isStrict(int)*

public static boolean isStrict(int mod)

Return true if the integer argument includes the strictfp modifier, false 
otherwise. 

    mod - a set of modifiers 

    Returns: true if mod includes the strictfp modifier; false otherwise. 
*java.lang.reflect.Modifier.isSynchronized(int)*

public static boolean isSynchronized(int mod)

Return true if the integer argument includes the synchronized modifier, false 
otherwise. 

    mod - a set of modifiers 

    Returns: true if mod includes the synchronized modifier; false otherwise. 
*java.lang.reflect.Modifier.isTransient(int)*

public static boolean isTransient(int mod)

Return true if the integer argument includes the transient modifier, false 
otherwise. 

    mod - a set of modifiers 

    Returns: true if mod includes the transient modifier; false otherwise. 
*java.lang.reflect.Modifier.isVolatile(int)*

public static boolean isVolatile(int mod)

Return true if the integer argument includes the volatile modifier, false 
otherwise. 

    mod - a set of modifiers 

    Returns: true if mod includes the volatile modifier; false otherwise. 
*java.lang.reflect.Modifier.toString(int)*

public static |java.lang.String| toString(int mod)

Return a string describing the access modifier flags in the specified modifier. 
For example: 

public final synchronized strictfp 

The modifier names are returned in an order consistent with the suggested 
modifier orderings given in The Java Language Specification, Second Edition 
sections 8.1.1, 8.3.1, 8.4.3, 8.8.3, and 9.1.1. The full modifier ordering used 
by this method is: 

public protected private abstract static final transient volatile synchronized 
native strictfp interface The interface modifier discussed in this class is not 
a true modifier in the Java language and it appears after all other modifiers 
listed by this method. This method may return a string of modifiers that are 
not valid modifiers of a Java entity; in other words, no checking is done on 
the possible validity of the combination of modifiers represented by the input. 

    mod - a set of modifiers 

    Returns: a string representation of the set of modifiers represented by mod 

