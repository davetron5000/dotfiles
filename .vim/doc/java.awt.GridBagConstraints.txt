*java.awt.GridBagConstraints* *GridBagConstraints* The GridBagConstraints class specifies constraints 
 for components that are laid out using the 
 GridBagLayout class.

public class GridBagConstraints
  extends    |java.lang.Object|
  implements |java.lang.Cloneable|
             |java.io.Serializable|

|java.awt.GridBagConstraints_Description|
|java.awt.GridBagConstraints_Fields|
|java.awt.GridBagConstraints_Constructors|
|java.awt.GridBagConstraints_Methods|

====================================================================================================================================================================================

*java.awt.GridBagConstraints_Fields*
|int_java.awt.GridBagConstraints.anchor|
|int_java.awt.GridBagConstraints.BOTH|
|int_java.awt.GridBagConstraints.CENTER|
|int_java.awt.GridBagConstraints.EAST|
|int_java.awt.GridBagConstraints.fill|
|int_java.awt.GridBagConstraints.FIRST_LINE_END|
|int_java.awt.GridBagConstraints.FIRST_LINE_START|
|int_java.awt.GridBagConstraints.gridheight|
|int_java.awt.GridBagConstraints.gridwidth|
|int_java.awt.GridBagConstraints.gridx|
|int_java.awt.GridBagConstraints.gridy|
|int_java.awt.GridBagConstraints.HORIZONTAL|
|java.awt.Insets_java.awt.GridBagConstraints.insets|
|int_java.awt.GridBagConstraints.ipadx|
|int_java.awt.GridBagConstraints.ipady|
|int_java.awt.GridBagConstraints.LAST_LINE_END|
|int_java.awt.GridBagConstraints.LAST_LINE_START|
|int_java.awt.GridBagConstraints.LINE_END|
|int_java.awt.GridBagConstraints.LINE_START|
|int_java.awt.GridBagConstraints.NONE|
|int_java.awt.GridBagConstraints.NORTH|
|int_java.awt.GridBagConstraints.NORTHEAST|
|int_java.awt.GridBagConstraints.NORTHWEST|
|int_java.awt.GridBagConstraints.PAGE_END|
|int_java.awt.GridBagConstraints.PAGE_START|
|int_java.awt.GridBagConstraints.RELATIVE|
|int_java.awt.GridBagConstraints.REMAINDER|
|int_java.awt.GridBagConstraints.SOUTH|
|int_java.awt.GridBagConstraints.SOUTHEAST|
|int_java.awt.GridBagConstraints.SOUTHWEST|
|int_java.awt.GridBagConstraints.VERTICAL|
|double_java.awt.GridBagConstraints.weightx|
|double_java.awt.GridBagConstraints.weighty|
|int_java.awt.GridBagConstraints.WEST|

*java.awt.GridBagConstraints_Constructors*
|java.awt.GridBagConstraints()|Creates a GridBagConstraint object with   all of its fields set to their default value.
|java.awt.GridBagConstraints(int,int,int,int,double,double,int,int,Insets,int,int)|Creates a GridBagConstraints object with  all of its fields set to the passed-in arguments.

*java.awt.GridBagConstraints_Methods*
|java.awt.GridBagConstraints.clone()|Creates a copy of this grid bag constraint.

*java.awt.GridBagConstraints_Description*

The GridBagConstraints class specifies constraints for components that are laid out using the GridBagLayout class. 



*int_java.awt.GridBagConstraints.anchor*

This field is used when the component is smaller than its display area. It determines where, within the display area, to place the component. 

There are two kinds of possible values: relative and absolute. Relative values are interpreted relative to the container's component orientation property while absolute values are 
not. The absolute values are: CENTER, NORTH, NORTHEAST, EAST, SOUTHEAST, SOUTH, SOUTHWEST, WEST, and NORTHWEST. The relative values are: PAGE_START, PAGE_END, LINE_START, 
LINE_END, FIRST_LINE_START, FIRST_LINE_END, LAST_LINE_START and LAST_LINE_END. The default value is CENTER. 


*int_java.awt.GridBagConstraints.BOTH*

Resize the component both horizontally and vertically. 


*int_java.awt.GridBagConstraints.CENTER*

Put the component in the center of its display area. 


*int_java.awt.GridBagConstraints.EAST*

Put the component on the right side of its display area, centered vertically. 


*int_java.awt.GridBagConstraints.fill*

This field is used when the component's display area is larger than the component's requested size. It determines whether to resize the component, and if so, how. 

The following values are valid for fill: 



NONE: Do not resize the component. 

HORIZONTAL: Make the component wide enough to fill its display area horizontally, but do not change its height. 

VERTICAL: Make the component tall enough to fill its display area vertically, but do not change its width. 

BOTH: Make the component fill its display area entirely. 

The default value is NONE. 


*int_java.awt.GridBagConstraints.FIRST_LINE_END*

Place the component in the corner of its display area where the first line of text on a page would normally end for the current ComponentOrienation. Equal to NORTHEAST for 
horizontal, left-to-right orientations and NORTHWEST for horizontal, right-to-left orientations. 


*int_java.awt.GridBagConstraints.FIRST_LINE_START*

Place the component in the corner of its display area where the first line of text on a page would normally begin for the current ComponentOrienation. Equal to NORTHWEST for 
horizontal, left-to-right orientations and NORTHEAST for horizontal, right-to-left orientations. 


*int_java.awt.GridBagConstraints.gridheight*

Specifies the number of cells in a column for the component's display area. 

Use REMAINDER to specify that the component's display area will be from gridy to the last cell in the column. Use RELATIVE to specify that the component's display area will be 
from gridy to the next to the last one in its column. 

gridheight should be a non-negative value and the default value is 1. 


*int_java.awt.GridBagConstraints.gridwidth*

Specifies the number of cells in a row for the component's display area. 

Use REMAINDER to specify that the component's display area will be from gridx to the last cell in the row. Use RELATIVE to specify that the component's display area will be from 
gridx to the next to the last one in its row. 

gridwidth should be non-negative and the default value is 1. 


*int_java.awt.GridBagConstraints.gridx*

Specifies the cell containing the leading edge of the component's display area, where the first cell in a row has gridx=0. The leading edge of a component's display area is its 
left edge for a horizontal, left-to-right container and its right edge for a horizontal, right-to-left container. The value RELATIVE specifies that the component be placed 
immediately following the component that was added to the container just before this component was added. 

The default value is RELATIVE. gridx should be a non-negative value. 


*int_java.awt.GridBagConstraints.gridy*

Specifies the cell at the top of the component's display area, where the topmost cell has gridy=0. The value RELATIVE specifies that the component be placed just below the 
component that was added to the container just before this component was added. 

The default value is RELATIVE. gridy should be a non-negative value. 


*int_java.awt.GridBagConstraints.HORIZONTAL*

Resize the component horizontally but not vertically. 


*java.awt.Insets_java.awt.GridBagConstraints.insets*

This field specifies the external padding of the component, the minimum amount of space between the component and the edges of its display area. 

The default value is new Insets(0, 0, 0, 0). 


*int_java.awt.GridBagConstraints.ipadx*

This field specifies the internal padding of the component, how much space to add to the minimum width of the component. The width of the component is at least its minimum width 
plus ipadx pixels. 

The default value is 0. 


*int_java.awt.GridBagConstraints.ipady*

This field specifies the internal padding, that is, how much space to add to the minimum height of the component. The height of the component is at least its minimum height plus 
ipady pixels. 

The default value is 0. 


*int_java.awt.GridBagConstraints.LAST_LINE_END*

Place the component in the corner of its display area where the last line of text on a page would normally end for the current ComponentOrienation. Equal to SOUTHEAST for 
horizontal, left-to-right orientations and SOUTHWEST for horizontal, right-to-left orientations. 


*int_java.awt.GridBagConstraints.LAST_LINE_START*

Place the component in the corner of its display area where the last line of text on a page would normally start for the current ComponentOrienation. Equal to SOUTHWEST for 
horizontal, left-to-right orientations and SOUTHEAST for horizontal, right-to-left orientations. 


*int_java.awt.GridBagConstraints.LINE_END*

Place the component centered along the edge of its display area where lines of text would normally end for the current ComponentOrienation. Equal to EAST for horizontal, 
left-to-right orientations and WEST for horizontal, right-to-left orientations. 


*int_java.awt.GridBagConstraints.LINE_START*

Place the component centered along the edge of its display area where lines of text would normally begin for the current ComponentOrienation. Equal to WEST for horizontal, 
left-to-right orientations and EAST for horizontal, right-to-left orientations. 


*int_java.awt.GridBagConstraints.NONE*

Do not resize the component. 


*int_java.awt.GridBagConstraints.NORTH*

Put the component at the top of its display area, centered horizontally. 


*int_java.awt.GridBagConstraints.NORTHEAST*

Put the component at the top-right corner of its display area. 


*int_java.awt.GridBagConstraints.NORTHWEST*

Put the component at the top-left corner of its display area. 


*int_java.awt.GridBagConstraints.PAGE_END*

Place the component centered along the edge of its display area associated with the end of a page for the current ComponentOrienation. Equal to SOUTH for horizontal orientations. 


*int_java.awt.GridBagConstraints.PAGE_START*

Place the component centered along the edge of its display area associated with the start of a page for the current ComponentOrienation. Equal to NORTH for horizontal 
orientations. 


*int_java.awt.GridBagConstraints.RELATIVE*

Specifies that this component is the next-to-last component in its column or row (gridwidth, gridheight), or that this component be placed next to the previously added component 
(gridx, gridy). 


*int_java.awt.GridBagConstraints.REMAINDER*

Specifies that this component is the last component in its column or row. 


*int_java.awt.GridBagConstraints.SOUTH*

Put the component at the bottom of its display area, centered horizontally. 


*int_java.awt.GridBagConstraints.SOUTHEAST*

Put the component at the bottom-right corner of its display area. 


*int_java.awt.GridBagConstraints.SOUTHWEST*

Put the component at the bottom-left corner of its display area. 


*int_java.awt.GridBagConstraints.VERTICAL*

Resize the component vertically but not horizontally. 


*double_java.awt.GridBagConstraints.weightx*

Specifies how to distribute extra horizontal space. 

The grid bag layout manager calculates the weight of a column to be the maximum weightx of all the components in a column. If the resulting layout is smaller horizontally than the 
area it needs to fill, the extra space is distributed to each column in proportion to its weight. A column that has a weight of zero receives no extra space. 

If all the weights are zero, all the extra space appears between the grids of the cell and the left and right edges. 

The default value of this field is 0. weightx should be a non-negative value. 


*double_java.awt.GridBagConstraints.weighty*

Specifies how to distribute extra vertical space. 

The grid bag layout manager calculates the weight of a row to be the maximum weighty of all the components in a row. If the resulting layout is smaller vertically than the area it 
needs to fill, the extra space is distributed to each row in proportion to its weight. A row that has a weight of zero receives no extra space. 

If all the weights are zero, all the extra space appears between the grids of the cell and the top and bottom edges. 

The default value of this field is 0. weighty should be a non-negative value. 


*int_java.awt.GridBagConstraints.WEST*

Put the component on the left side of its display area, centered vertically. 



*java.awt.GridBagConstraints()*

public GridBagConstraints()

Creates a GridBagConstraint object with all of its fields set to their default value. 


*java.awt.GridBagConstraints(int,int,int,int,double,double,int,int,Insets,int,int)*

public GridBagConstraints(
  int gridx,
  int gridy,
  int gridwidth,
  int gridheight,
  double weightx,
  double weighty,
  int anchor,
  int fill,
  java.awt.Insets insets,
  int ipadx,
  int ipady)

Creates a GridBagConstraints object with all of its fields set to the passed-in arguments. 

Note: Because the use of this constructor hinders readability of source code, this constructor should only be used by automatic source code generation tools. 

    gridx - The initial gridx value. 
    gridy - The initial gridy value. 
    gridwidth - The initial gridwidth value. 
    gridheight - The initial gridheight value. 
    weightx - The initial weightx value. 
    weighty - The initial weighty value. 
    anchor - The initial anchor value. 
    fill - The initial fill value. 
    insets - The initial insets value. 
    ipadx - The initial ipadx value. 
    ipady - The initial ipady value. 

*java.awt.GridBagConstraints.clone()*

public |java.lang.Object| clone()

Creates a copy of this grid bag constraint. 



    Returns: a copy of this grid bag constraint 


