*javax.swing.JList.AccessibleJList* *JList.AccessibleJList* This class implement

protected class JList.AccessibleJList
  extends    |javax.swing.JComponent.AccessibleJComponent|
  implements |javax.accessibility.AccessibleSelection|
             |java.beans.PropertyChangeListener|
             |javax.swing.event.ListSelectionListener|
             |javax.swing.event.ListDataListener|

|javax.swing.JList.AccessibleJList_Description|
|javax.swing.JList.AccessibleJList_Fields|
|javax.swing.JList.AccessibleJList_Constructors|
|javax.swing.JList.AccessibleJList_Methods|

================================================================================

*javax.swing.JList.AccessibleJList_Constructors*
|javax.swing.JList.AccessibleJList()|

*javax.swing.JList.AccessibleJList_Methods*
|javax.swing.JList.AccessibleJList.addAccessibleSelection(int)|Adds the specifi
|javax.swing.JList.AccessibleJList.clearAccessibleSelection()|Clears the select
|javax.swing.JList.AccessibleJList.contentsChanged(ListDataEvent)|List Data Lis
|javax.swing.JList.AccessibleJList.getAccessibleAt(Point)|Returns the Accessibl
|javax.swing.JList.AccessibleJList.getAccessibleChild(int)|Return the nth Acces
|javax.swing.JList.AccessibleJList.getAccessibleChildrenCount()|Returns the num
|javax.swing.JList.AccessibleJList.getAccessibleRole()|Get the role of this obj
|javax.swing.JList.AccessibleJList.getAccessibleSelection()|Get the AccessibleS
|javax.swing.JList.AccessibleJList.getAccessibleSelection(int)|Returns an Acces
|javax.swing.JList.AccessibleJList.getAccessibleSelectionCount()|Returns the nu
|javax.swing.JList.AccessibleJList.getAccessibleStateSet()|Get the state set of
|javax.swing.JList.AccessibleJList.intervalAdded(ListDataEvent)|List Data Liste
|javax.swing.JList.AccessibleJList.intervalRemoved(ListDataEvent)|List Data Lis
|javax.swing.JList.AccessibleJList.isAccessibleChildSelected(int)|Returns true 
|javax.swing.JList.AccessibleJList.propertyChange(PropertyChangeEvent)|Property
|javax.swing.JList.AccessibleJList.removeAccessibleSelection(int)|Removes the s
|javax.swing.JList.AccessibleJList.selectAllAccessibleSelection()|Causes every 
|javax.swing.JList.AccessibleJList.valueChanged(ListSelectionEvent)|List Select

*javax.swing.JList.AccessibleJList_Description*

This class implements accessibility support for the JList class. It provides an 
implementation of the Java Accessibility API appropriate to list user-interface 
elements. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.JList.AccessibleJList()*

public JList.AccessibleJList()




*javax.swing.JList.AccessibleJList.addAccessibleSelection(int)*

public void addAccessibleSelection(int i)

Adds the specified selected item in the object to the object's selection. If 
the object supports multiple selections, the specified item is added to any 
existing selection, otherwise it replaces any existing selection in the object. 
If the specified item is already selected, this method has no effect. 

    i - the zero-based index of selectable items 

*javax.swing.JList.AccessibleJList.clearAccessibleSelection()*

public void clearAccessibleSelection()

Clears the selection in the object, so that nothing in the object is selected. 


*javax.swing.JList.AccessibleJList.contentsChanged(ListDataEvent)*

public void contentsChanged(javax.swing.event.ListDataEvent e)

List Data Listener contents changed method. Used to fire the visible data 
property change 

    e - ListDataEvent 

*javax.swing.JList.AccessibleJList.getAccessibleAt(Point)*

public |javax.accessibility.Accessible| getAccessibleAt(java.awt.Point p)

Returns the Accessible child contained at the local coordinate Point, if one 
exists. Otherwise returns null. 


    Returns: the Accessible at the specified location, if it exists 
*javax.swing.JList.AccessibleJList.getAccessibleChild(int)*

public |javax.accessibility.Accessible| getAccessibleChild(int i)

Return the nth Accessible child of the object. 

    i - zero-based index of child 

    Returns: the nth Accessible child of the object 
*javax.swing.JList.AccessibleJList.getAccessibleChildrenCount()*

public int getAccessibleChildrenCount()

Returns the number of accessible children in the object. If all of the children 
of this object implement Accessible, than this method should return the number 
of children of this object. 


    Returns: the number of accessible children in the object. 
*javax.swing.JList.AccessibleJList.getAccessibleRole()*

public |javax.accessibility.AccessibleRole| getAccessibleRole()

Get the role of this object. 


    Returns: an instance of AccessibleRole describing the role of the object 
*javax.swing.JList.AccessibleJList.getAccessibleSelection()*

public |javax.accessibility.AccessibleSelection| getAccessibleSelection()

Get the AccessibleSelection associated with this object. In the implementation 
of the Java Accessibility API for this class, return this object, which is 
responsible for implementing the AccessibleSelection interface on behalf of 
itself. 


    Returns: 
*javax.swing.JList.AccessibleJList.getAccessibleSelection(int)*

public |javax.accessibility.Accessible| getAccessibleSelection(int i)

Returns an Accessible representing the specified selected item in the object. 
If there isn't a selection, or there are fewer items selected than the integer 
passed in, the return value will be null. 

    i - the zero-based index of selected items 

    Returns: an Accessible containing the selected item 
*javax.swing.JList.AccessibleJList.getAccessibleSelectionCount()*

public int getAccessibleSelectionCount()

Returns the number of items currently selected. If no items are selected, the 
return value will be 0. 


    Returns: the number of items currently selected. 
*javax.swing.JList.AccessibleJList.getAccessibleStateSet()*

public |javax.accessibility.AccessibleStateSet| getAccessibleStateSet()

Get the state set of this object. 


    Returns: an instance of AccessibleState containing the current state of the object 
*javax.swing.JList.AccessibleJList.intervalAdded(ListDataEvent)*

public void intervalAdded(javax.swing.event.ListDataEvent e)

List Data Listener interval added method. Used to fire the visible data 
property change 

    e - ListDataEvent 

*javax.swing.JList.AccessibleJList.intervalRemoved(ListDataEvent)*

public void intervalRemoved(javax.swing.event.ListDataEvent e)

List Data Listener interval removed method. Used to fire the visible data 
property change 

    e - ListDataEvent 

*javax.swing.JList.AccessibleJList.isAccessibleChildSelected(int)*

public boolean isAccessibleChildSelected(int i)

Returns true if the current child of this object is selected. 

    i - the zero-based index of the child in this Accessible object. 

*javax.swing.JList.AccessibleJList.propertyChange(PropertyChangeEvent)*

public void propertyChange(java.beans.PropertyChangeEvent e)

Property Change Listener change method. Used to track changes to the DataModel 
and ListSelectionModel, in order to re-set listeners to those for reporting 
changes there via the Accessibility PropertyChange mechanism. 

    e - PropertyChangeEvent 

*javax.swing.JList.AccessibleJList.removeAccessibleSelection(int)*

public void removeAccessibleSelection(int i)

Removes the specified selected item in the object from the object's selection. 
If the specified item isn't currently selected, this method has no effect. 

    i - the zero-based index of selectable items 

*javax.swing.JList.AccessibleJList.selectAllAccessibleSelection()*

public void selectAllAccessibleSelection()

Causes every selected item in the object to be selected if the object supports 
multiple selections. 


*javax.swing.JList.AccessibleJList.valueChanged(ListSelectionEvent)*

public void valueChanged(javax.swing.event.ListSelectionEvent e)

List Selection Listener value change method. Used to fire the property change 

    e - ListSelectionEvent 


