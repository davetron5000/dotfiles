*java.awt.CheckboxMenuItem* *CheckboxMenuItem* This class represents a check box

public class CheckboxMenuItem
  extends    |java.awt.MenuItem|
  implements |java.awt.ItemSelectable|
             |javax.accessibility.Accessible|

|java.awt.CheckboxMenuItem_Description|
|java.awt.CheckboxMenuItem_Fields|
|java.awt.CheckboxMenuItem_Constructors|
|java.awt.CheckboxMenuItem_Methods|

================================================================================

*java.awt.CheckboxMenuItem_Constructors*
|java.awt.CheckboxMenuItem()|Create a check box menu item with an empty label.
|java.awt.CheckboxMenuItem(String)|Create a check box menu item with the specif
|java.awt.CheckboxMenuItem(String,boolean)|Create a check box menu item with th

*java.awt.CheckboxMenuItem_Methods*
|java.awt.CheckboxMenuItem.addItemListener(ItemListener)|Adds the specified ite
|java.awt.CheckboxMenuItem.addNotify()|Creates the peer of the checkbox item.
|java.awt.CheckboxMenuItem.getAccessibleContext()|Gets the AccessibleContext as
|java.awt.CheckboxMenuItem.getItemListeners()|Returns an array of all the item 
|java.awt.CheckboxMenuItem.getListeners(Class)|Returns an array of all the obje
|java.awt.CheckboxMenuItem.getSelectedObjects()|Returns the an array (length 1)
|java.awt.CheckboxMenuItem.getState()|Determines whether the state of this chec
|java.awt.CheckboxMenuItem.paramString()|Returns a string representing the stat
|java.awt.CheckboxMenuItem.processEvent(AWTEvent)|Processes events on this chec
|java.awt.CheckboxMenuItem.processItemEvent(ItemEvent)|Processes item events oc
|java.awt.CheckboxMenuItem.removeItemListener(ItemListener)|Removes the specifi
|java.awt.CheckboxMenuItem.setState(boolean)|Sets this check box menu item to t

*java.awt.CheckboxMenuItem_Description*

This class represents a check box that can be included in a menu. Selecting the 
check box in the menu changes its state from "on" to "off" or from "off" to 
"on." 

The following picture depicts a menu which contains an instance of 
CheckBoxMenuItem: 



The item labeled Check shows a check box menu item in its "off" state. 

When a check box menu item is selected, AWT sends an item event to the item. 
Since the event is an instance of ItemEvent, the processEvent method examines 
the event and passes it along to processItemEvent. The latter method redirects 
the event to any ItemListener objects that have registered an interest in item 
events generated by this menu item. 


*java.awt.CheckboxMenuItem()*

public CheckboxMenuItem()
  throws |java.awt.HeadlessException|
         
Create a check box menu item with an empty label. The item's state is initially 
set to "off." 


*java.awt.CheckboxMenuItem(String)*

public CheckboxMenuItem(java.lang.String label)
  throws |java.awt.HeadlessException|
         
Create a check box menu item with the specified label. The item's state is 
initially set to "off." 

    label - a string label for the check box menu item, or null for an unlabeled menu item. 

*java.awt.CheckboxMenuItem(String,boolean)*

public CheckboxMenuItem(
  java.lang.String label,
  boolean state)
  throws |java.awt.HeadlessException|
         
Create a check box menu item with the specified label and state. 

    label - a string label for the check box menu item, or null for an unlabeled menu item. 
    state - the initial state of the menu item, where true indicates "on" and false 
       indicates "off." 

*java.awt.CheckboxMenuItem.addItemListener(ItemListener)*

public synchronized void addItemListener(java.awt.event.ItemListener l)

Adds the specified item listener to receive item events from this check box 
menu item. Item events are sent in response to user actions, but not in 
response to calls to setState(). If l is null, no exception is thrown and no 
action is performed. 

    l - the item listener 

*java.awt.CheckboxMenuItem.addNotify()*

public void addNotify()

Creates the peer of the checkbox item. This peer allows us to change the look 
of the checkbox item without changing its functionality. Most applications do 
not call this method directly. 


*java.awt.CheckboxMenuItem.getAccessibleContext()*

public |javax.accessibility.AccessibleContext| getAccessibleContext()

Gets the AccessibleContext associated with this CheckboxMenuItem. For checkbox 
menu items, the AccessibleContext takes the form of an 
AccessibleAWTCheckboxMenuItem. A new AccessibleAWTCheckboxMenuItem is created 
if necessary. 


    Returns: an AccessibleAWTCheckboxMenuItem that serves as the AccessibleContext of this 
             CheckboxMenuItem 
*java.awt.CheckboxMenuItem.getItemListeners()*

public synchronized |java.awt.event.ItemListener| getItemListeners()

Returns an array of all the item listeners registered on this checkbox 
menuitem. 


    Returns: all of this checkbox menuitem's ItemListeners or an empty array if no item 
             listeners are currently registered 
*java.awt.CheckboxMenuItem.getListeners(Class)*

public |java.util.EventListener| getListeners(java.lang.Class listenerType)

Returns an array of all the objects currently registered as FooListeners upon 
this CheckboxMenuItem. FooListeners are registered using the addFooListener 
method. 

You can specify the listenerType argument with a class literal, such as 
FooListener.class. For example, you can query a CheckboxMenuItem c for its item 
listeners with the following code: 

ItemListener[] ils = (ItemListener[])(c.getListeners(ItemListener.class)); 

If no such listeners exist, this method returns an empty array. 

    listenerType - the type of listeners requested; this parameter should specify an interface 
       that descends from java.util.EventListener 

    Returns: an array of all objects registered as FooListeners on this checkbox menuitem, 
             or an empty array if no such listeners have been added 
*java.awt.CheckboxMenuItem.getSelectedObjects()*

public synchronized |java.lang.Object| getSelectedObjects()

Returns the an array (length 1) containing the checkbox menu item label or null 
if the checkbox is not selected. 


*java.awt.CheckboxMenuItem.getState()*

public boolean getState()

Determines whether the state of this check box menu item is "on" or "off." 


    Returns: the state of this check box menu item, where true indicates "on" and false 
             indicates "off" 
*java.awt.CheckboxMenuItem.paramString()*

public |java.lang.String| paramString()

Returns a string representing the state of this CheckBoxMenuItem. This method 
is intended to be used only for debugging purposes, and the content and format 
of the returned string may vary between implementations. The returned string 
may be empty but may not be null. 


    Returns: the parameter string of this check box menu item 
*java.awt.CheckboxMenuItem.processEvent(AWTEvent)*

protected void processEvent(java.awt.AWTEvent e)

Processes events on this check box menu item. If the event is an instance of 
ItemEvent, this method invokes the processItemEvent method. If the event is not 
an item event, it invokes processEvent on the superclass. 

Check box menu items currently support only item events. Note that if the event 
parameter is null the behavior is unspecified and may result in an exception. 

    e - the event 

*java.awt.CheckboxMenuItem.processItemEvent(ItemEvent)*

protected void processItemEvent(java.awt.event.ItemEvent e)

Processes item events occurring on this check box menu item by dispatching them 
to any registered ItemListener objects. 

This method is not called unless item events are enabled for this menu item. 
Item events are enabled when one of the following occurs: 

An ItemListener object is registered via addItemListener. Item events are 
enabled via enableEvents. 

Note that if the event parameter is null the behavior is unspecified and may 
result in an exception. 

    e - the item event 

*java.awt.CheckboxMenuItem.removeItemListener(ItemListener)*

public synchronized void removeItemListener(java.awt.event.ItemListener l)

Removes the specified item listener so that it no longer receives item events 
from this check box menu item. If l is null, no exception is thrown and no 
action is performed. 

    l - the item listener 

*java.awt.CheckboxMenuItem.setState(boolean)*

public synchronized void setState(boolean b)

Sets this check box menu item to the specifed state. The boolean value true 
indicates "on" while false indicates "off." 

Note that this method should be primarily used to initialize the state of the 
check box menu item. Programmatically setting the state of the check box menu 
item will not trigger an ItemEvent. The only way to trigger an ItemEvent is by 
user interaction. 

    b - true if the check box menu item is on, otherwise false 


