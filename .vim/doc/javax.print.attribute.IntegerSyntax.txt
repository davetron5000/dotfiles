*javax.print.attribute.IntegerSyntax* *IntegerSyntax* Class IntegerSyntax is an abstract base class providing the common 
 implementation of all attributes with integer values.

public abstract class IntegerSyntax
  extends    |java.lang.Object|
  implements |java.io.Serializable|
             |java.lang.Cloneable|

|javax.print.attribute.IntegerSyntax_Description|
|javax.print.attribute.IntegerSyntax_Fields|
|javax.print.attribute.IntegerSyntax_Constructors|
|javax.print.attribute.IntegerSyntax_Methods|

====================================================================================================================================================================================

*javax.print.attribute.IntegerSyntax_Constructors*
|javax.print.attribute.IntegerSyntax(int)|Construct a new integer attribute with the given integer value.
|javax.print.attribute.IntegerSyntax(int,int,int)|Construct a new integer attribute with the given integer value, which   must lie within the given range.

*javax.print.attribute.IntegerSyntax_Methods*
|javax.print.attribute.IntegerSyntax.equals(Object)|Returns whether this integer attribute is equivalent to the passed in   object.
|javax.print.attribute.IntegerSyntax.getValue()|Returns this integer attribute's integer value.
|javax.print.attribute.IntegerSyntax.hashCode()|Returns a hash code value for this integer attribute.
|javax.print.attribute.IntegerSyntax.toString()|Returns a string value corresponding to this integer attribute.

*javax.print.attribute.IntegerSyntax_Description*

Class IntegerSyntax is an abstract base class providing the common implementation of all attributes with integer values. 

Under the hood, an integer attribute is just an integer. You can get an integer attribute's integer value by calling <CODE>getValue()</CODE>(|javax.print.attribute.IntegerSyntax|) 
. An integer attribute's integer value is established when it is constructed (see <CODE>IntegerSyntax(int)</CODE>(|javax.print.attribute.IntegerSyntax|) ). Once constructed, an 
integer attribute's value is immutable. 



*javax.print.attribute.IntegerSyntax(int)*

protected IntegerSyntax(int value)

Construct a new integer attribute with the given integer value. 

    value - Integer value. 

*javax.print.attribute.IntegerSyntax(int,int,int)*

protected IntegerSyntax(
  int value,
  int lowerBound,
  int upperBound)

Construct a new integer attribute with the given integer value, which must lie within the given range. 

    value - Integer value. 
    lowerBound - Lower bound. 
    upperBound - Upper bound. 

*javax.print.attribute.IntegerSyntax.equals(Object)*

public boolean equals(java.lang.Object object)

Returns whether this integer attribute is equivalent to the passed in object. To be equivalent, all of the following conditions must be true: 

object is not null. 

object is an instance of class IntegerSyntax. 

This integer attribute's value and object's value are equal. 


    object - Object to compare to. 

    Returns: True if object is equivalent to this integer attribute, false otherwise. 

*javax.print.attribute.IntegerSyntax.getValue()*

public int getValue()

Returns this integer attribute's integer value. 



    Returns: the integer value 

*javax.print.attribute.IntegerSyntax.hashCode()*

public int hashCode()

Returns a hash code value for this integer attribute. The hash code is just this integer attribute's integer value. 



*javax.print.attribute.IntegerSyntax.toString()*

public |java.lang.String| toString()

Returns a string value corresponding to this integer attribute. The string value is just this integer attribute's integer value converted to a string. 




