*java.util.logging.LoggingPermission* *LoggingPermission* The permission which t

public final class LoggingPermission
  extends    |java.security.BasicPermission|

|java.util.logging.LoggingPermission_Description|
|java.util.logging.LoggingPermission_Fields|
|java.util.logging.LoggingPermission_Constructors|
|java.util.logging.LoggingPermission_Methods|

================================================================================

*java.util.logging.LoggingPermission_Constructors*
|java.util.logging.LoggingPermission(String,String)|Creates a new LoggingPermis

*java.util.logging.LoggingPermission_Description*

The permission which the SecurityManager will check when code that is running 
with a SecurityManager calls one of the logging control methods (such as 
Logger.setLevel). 

Currently there is only one named LoggingPermission. This is "control" and it 
grants the ability to control the logging configuration, for example by adding 
or removing Handlers, by adding or removing Filters, or by changing logging 
levels. 

Programmers do not normally create LoggingPermission objects directly. Instead 
they are created by the security policy code based on reading the security 
policy file. 


*java.util.logging.LoggingPermission(String,String)*

public LoggingPermission(
  java.lang.String name,
  java.lang.String actions)
  throws |java.lang.IllegalArgumentException|
         
Creates a new LoggingPermission object. 

    name - Permission name. Must be "control". 
    actions - Must be either null or the empty string. 

