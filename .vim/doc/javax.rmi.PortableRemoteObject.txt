*javax.rmi.PortableRemoteObject* *PortableRemoteObject* Server implementation ob

public class PortableRemoteObject
  extends    |java.lang.Object|

|javax.rmi.PortableRemoteObject_Description|
|javax.rmi.PortableRemoteObject_Fields|
|javax.rmi.PortableRemoteObject_Constructors|
|javax.rmi.PortableRemoteObject_Methods|

================================================================================

*javax.rmi.PortableRemoteObject_Constructors*
|javax.rmi.PortableRemoteObject()|Initializes the object by calling exportObjec

*javax.rmi.PortableRemoteObject_Methods*
|javax.rmi.PortableRemoteObject.connect(Remote,Remote)|Makes a Remote object re
|javax.rmi.PortableRemoteObject.exportObject(Remote)|Makes a server object read
|javax.rmi.PortableRemoteObject.narrow(Object,Class)|Checks to ensure that an o
|javax.rmi.PortableRemoteObject.toStub(Remote)|Returns a stub for the given ser
|javax.rmi.PortableRemoteObject.unexportObject(Remote)|Deregisters a server obj

*javax.rmi.PortableRemoteObject_Description*

Server implementation objects may either inherit from 
javax.rmi.PortableRemoteObject or they may implement a remote interface and 
then use the exportObject method to register themselves as a server object. The 
toStub method takes a server implementation and returns a stub that can be used 
to access that server object. The connect method makes a Remote object ready 
for remote communication. The unexportObject method is used to deregister a 
server object, allowing it to become available for garbage collection. The 
narrow method takes an object reference or abstract interface type and attempts 
to narrow it to conform to the given interface. If the operation is successful 
the result will be an object of the specified type, otherwise an exception will 
be thrown. 


*javax.rmi.PortableRemoteObject()*

protected PortableRemoteObject()
  throws |java.rmi.RemoteException|
         
Initializes the object by calling exportObject(this). 


*javax.rmi.PortableRemoteObject.connect(Remote,Remote)*

public static void connect(
  java.rmi.Remote target,
  java.rmi.Remote source)
  throws |java.rmi.RemoteException|
         
Makes a Remote object ready for remote communication. This normally happens 
implicitly when the object is sent or received as an argument on a remote 
method call, but in some circumstances it is useful to perform this action by 
making an explicit call. See the (|Stub|) method for more information. 

    target - the object to connect. 
    source - a previously connected object. 

*javax.rmi.PortableRemoteObject.exportObject(Remote)*

public static void exportObject(java.rmi.Remote obj)
  throws |java.rmi.RemoteException|
         
Makes a server object ready to receive remote calls. Note that subclasses of 
PortableRemoteObject do not need to call this method, as it is called by the 
constructor. 

    obj - the server object to export. 

*javax.rmi.PortableRemoteObject.narrow(Object,Class)*

public static |java.lang.Object| narrow(
  java.lang.Object narrowFrom,
  java.lang.Class narrowTo)
  throws |java.lang.ClassCastException|
         
Checks to ensure that an object of a remote or abstract interface type can be 
cast to a desired type. 

    narrowFrom - the object to check. 
    narrowTo - the desired type. 

    Returns: an object which can be cast to the desired type. 
*javax.rmi.PortableRemoteObject.toStub(Remote)*

public static |java.rmi.Remote| toStub(java.rmi.Remote obj)
  throws |java.rmi.NoSuchObjectException|
         
Returns a stub for the given server object. 

    obj - the server object for which a stub is required. Must either be a subclass of 
       PortableRemoteObject or have been previously the target of a call to 
       {@link #exportObject}. 

    Returns: the most derived stub for the object. 
*javax.rmi.PortableRemoteObject.unexportObject(Remote)*

public static void unexportObject(java.rmi.Remote obj)
  throws |java.rmi.NoSuchObjectException|
         
Deregisters a server object from the runtime, allowing the object to become 
available for garbage collection. 

    obj - the object to unexport. 


