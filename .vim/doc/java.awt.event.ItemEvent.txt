*java.awt.event.ItemEvent* *ItemEvent* A semantic event which indicates that an 

public class ItemEvent
  extends    |java.awt.AWTEvent|

|java.awt.event.ItemEvent_Description|
|java.awt.event.ItemEvent_Fields|
|java.awt.event.ItemEvent_Constructors|
|java.awt.event.ItemEvent_Methods|

================================================================================

*java.awt.event.ItemEvent_Fields*
|int_java.awt.event.ItemEvent.DESELECTED|
|int_java.awt.event.ItemEvent.ITEM_FIRST|
|int_java.awt.event.ItemEvent.ITEM_LAST|
|int_java.awt.event.ItemEvent.ITEM_STATE_CHANGED|
|int_java.awt.event.ItemEvent.SELECTED|

*java.awt.event.ItemEvent_Constructors*
|java.awt.event.ItemEvent(ItemSelectable,int,Object,int)|Constructs an ItemEven

*java.awt.event.ItemEvent_Methods*
|java.awt.event.ItemEvent.getItem()|Returns the item affected by the event.
|java.awt.event.ItemEvent.getItemSelectable()|Returns the originator of the eve
|java.awt.event.ItemEvent.getStateChange()|Returns the type of state change (se
|java.awt.event.ItemEvent.paramString()|Returns a parameter string identifying 

*java.awt.event.ItemEvent_Description*

A semantic event which indicates that an item was selected or deselected. This 
high-level event is generated by an ItemSelectable object (such as a List) when 
an item is selected or deselected by the user. The event is passed to every 
ItemListener object which registered to receive such events using the 
component's addItemListener method. 

The object that implements the ItemListener interface gets this ItemEvent when 
the event occurs. The listener is spared the details of processing individual 
mouse movements and mouse clicks, and can instead process a "meaningful" 
(semantic) event like "item selected" or "item deselected". 


*int_java.awt.event.ItemEvent.DESELECTED*

A semantic event which indicates that an item was selected or deselected. This 
high-level event is generated by an ItemSelectable object (such as a List) when 
an item is selected or deselected by the user. The event is passed to every 
ItemListener object which registered to receive such events using the 
component's addItemListener method. 

The object that implements the ItemListener interface gets this ItemEvent when 
the event occurs. The listener is spared the details of processing individual 
mouse movements and mouse clicks, and can instead process a "meaningful" 
(semantic) event like "item selected" or "item deselected". 


*int_java.awt.event.ItemEvent.ITEM_FIRST*

A semantic event which indicates that an item was selected or deselected. This 
high-level event is generated by an ItemSelectable object (such as a List) when 
an item is selected or deselected by the user. The event is passed to every 
ItemListener object which registered to receive such events using the 
component's addItemListener method. 

The object that implements the ItemListener interface gets this ItemEvent when 
the event occurs. The listener is spared the details of processing individual 
mouse movements and mouse clicks, and can instead process a "meaningful" 
(semantic) event like "item selected" or "item deselected". 


*int_java.awt.event.ItemEvent.ITEM_LAST*

A semantic event which indicates that an item was selected or deselected. This 
high-level event is generated by an ItemSelectable object (such as a List) when 
an item is selected or deselected by the user. The event is passed to every 
ItemListener object which registered to receive such events using the 
component's addItemListener method. 

The object that implements the ItemListener interface gets this ItemEvent when 
the event occurs. The listener is spared the details of processing individual 
mouse movements and mouse clicks, and can instead process a "meaningful" 
(semantic) event like "item selected" or "item deselected". 


*int_java.awt.event.ItemEvent.ITEM_STATE_CHANGED*

A semantic event which indicates that an item was selected or deselected. This 
high-level event is generated by an ItemSelectable object (such as a List) when 
an item is selected or deselected by the user. The event is passed to every 
ItemListener object which registered to receive such events using the 
component's addItemListener method. 

The object that implements the ItemListener interface gets this ItemEvent when 
the event occurs. The listener is spared the details of processing individual 
mouse movements and mouse clicks, and can instead process a "meaningful" 
(semantic) event like "item selected" or "item deselected". 


*int_java.awt.event.ItemEvent.SELECTED*

A semantic event which indicates that an item was selected or deselected. This 
high-level event is generated by an ItemSelectable object (such as a List) when 
an item is selected or deselected by the user. The event is passed to every 
ItemListener object which registered to receive such events using the 
component's addItemListener method. 

The object that implements the ItemListener interface gets this ItemEvent when 
the event occurs. The listener is spared the details of processing individual 
mouse movements and mouse clicks, and can instead process a "meaningful" 
(semantic) event like "item selected" or "item deselected". 



*java.awt.event.ItemEvent(ItemSelectable,int,Object,int)*

public ItemEvent(
  java.awt.ItemSelectable source,
  int id,
  java.lang.Object item,
  int stateChange)

Constructs an ItemEvent object. Note that passing in an invalid id results in 
unspecified behavior. This method throws an IllegalArgumentException if source 
is null. 

    source - the ItemSelectable object that originated the event 
    id - an integer that identifies the event type 
    item - an object -- the item affected by the event 
    stateChange - an integer that indicates whether the item was selected or deselected 

*java.awt.event.ItemEvent.getItem()*

public |java.lang.Object| getItem()

Returns the item affected by the event. 


    Returns: the item (object) that was affected by the event 
*java.awt.event.ItemEvent.getItemSelectable()*

public |java.awt.ItemSelectable| getItemSelectable()

Returns the originator of the event. 


    Returns: the ItemSelectable object that originated the event. 
*java.awt.event.ItemEvent.getStateChange()*

public int getStateChange()

Returns the type of state change (selected or deselected). 


    Returns: an integer that indicates whether the item was selected or deselected 
*java.awt.event.ItemEvent.paramString()*

public |java.lang.String| paramString()

Returns a parameter string identifying this item event. This method is useful 
for event-logging and for debugging. 


    Returns: a string identifying the event and its attributes 

