*java.awt.image.DataBufferUShort* *DataBufferUShort* This class extends DataBuff

public final class DataBufferUShort
  extends    |java.awt.image.DataBuffer|

|java.awt.image.DataBufferUShort_Description|
|java.awt.image.DataBufferUShort_Fields|
|java.awt.image.DataBufferUShort_Constructors|
|java.awt.image.DataBufferUShort_Methods|

================================================================================

*java.awt.image.DataBufferUShort_Constructors*
|java.awt.image.DataBufferUShort(int)|Constructs an unsigned-short based DataBu
|java.awt.image.DataBufferUShort(int,int)|Constructs an unsigned-short based Da
|java.awt.image.DataBufferUShort(short[][],int)|Constructs an unsigned-short ba
|java.awt.image.DataBufferUShort(short[][],int,int[])|Constructs an unsigned-sh
|java.awt.image.DataBufferUShort(short[],int)|Constructs an unsigned-short base
|java.awt.image.DataBufferUShort(short[],int,int)|Constructs an unsigned-short 

*java.awt.image.DataBufferUShort_Methods*
|java.awt.image.DataBufferUShort.getBankData()|Returns the data arrays for all 
|java.awt.image.DataBufferUShort.getData()|Returns the default (first) unsigned
|java.awt.image.DataBufferUShort.getData(int)|Returns the data array for the sp
|java.awt.image.DataBufferUShort.getElem(int)|Returns the requested data array 
|java.awt.image.DataBufferUShort.getElem(int,int)|Returns the requested data ar
|java.awt.image.DataBufferUShort.setElem(int,int)|Sets the requested data array
|java.awt.image.DataBufferUShort.setElem(int,int,int)|Sets the requested data a

*java.awt.image.DataBufferUShort_Description*

This class extends DataBuffer and stores data internally as shorts. Values 
stored in the short array(s) of this DataBuffer are treated as unsigned values. 


*java.awt.image.DataBufferUShort(int)*

public DataBufferUShort(int size)

Constructs an unsigned-short based DataBuffer with a single bank and the 
specified size. 

    size - The size of the DataBuffer. 

*java.awt.image.DataBufferUShort(int,int)*

public DataBufferUShort(
  int size,
  int numBanks)

Constructs an unsigned-short based DataBuffer with the specified number of 
banks, all of which are the specified size. 

    size - The size of the banks in the DataBuffer. 
    numBanks - The number of banks in the aDataBuffer. 

*java.awt.image.DataBufferUShort(short[][],int)*

public DataBufferUShort(
  short[][] dataArray,
  int size)

Constructs an unsigned-short based DataBuffer with the specified arrays. The 
number of banks will be equal to dataArray.length. Only the first size elements 
of each array should be used by accessors of this DataBuffer. 

    dataArray - The unsigned-short arrays for the DataBuffer. 
    size - The size of the banks in the DataBuffer. 

*java.awt.image.DataBufferUShort(short[][],int,int[])*

public DataBufferUShort(
  short[][] dataArray,
  int size,
  int[] offsets)

Constructs an unsigned-short based DataBuffer with specified arrays, size, and 
offsets. The number of banks is equal to dataArray.length. Each array must be 
at least as large as size + the corresponding offset. There must be an entry in 
the offset array for each dataArray entry. For each bank, only elements offset 
through offset + size - 1 should be used by accessors of this DataBuffer. 

    dataArray - The unsigned-short arrays for the DataBuffer. 
    size - The size of the banks in the DataBuffer. 
    offsets - The offsets into each array. 

*java.awt.image.DataBufferUShort(short[],int)*

public DataBufferUShort(
  short[] dataArray,
  int size)

Constructs an unsigned-short based DataBuffer with a single bank using the 
specified array. Only the first size elements should be used by accessors of 
this DataBuffer. dataArray must be large enough to hold size elements. 

    dataArray - The unsigned-short array for the DataBuffer. 
    size - The size of the DataBuffer bank. 

*java.awt.image.DataBufferUShort(short[],int,int)*

public DataBufferUShort(
  short[] dataArray,
  int size,
  int offset)

Constructs an unsigned-short based DataBuffer with a single bank using the 
specified array, size, and offset. dataArray must have at least offset + size 
elements. Only elements offset through offset + size - 1 should be used by 
accessors of this DataBuffer. 

    dataArray - The unsigned-short array for the DataBuffer. 
    size - The size of the DataBuffer bank. 
    offset - The offset into the dataArray. 

*java.awt.image.DataBufferUShort.getBankData()*

public short getBankData()

Returns the data arrays for all banks. 


    Returns: All of the data arrays. 
*java.awt.image.DataBufferUShort.getData()*

public short getData()

Returns the default (first) unsigned-short data array. 


    Returns: The first unsigned-short data array. 
*java.awt.image.DataBufferUShort.getData(int)*

public short getData(int bank)

Returns the data array for the specified bank. 

    bank - The bank whose data array you want to get. 

    Returns: The data array for the specified bank. 
*java.awt.image.DataBufferUShort.getElem(int)*

public int getElem(int i)

Returns the requested data array element from the first (default) bank. 

    i - The data array element you want to get. 

    Returns: The requested data array element as an integer. 
*java.awt.image.DataBufferUShort.getElem(int,int)*

public int getElem(
  int bank,
  int i)

Returns the requested data array element from the specified bank. 

    bank - The bank from which you want to get a data array element. 
    i - The data array element you want to get. 

    Returns: The requested data array element as an integer. 
*java.awt.image.DataBufferUShort.setElem(int,int)*

public void setElem(
  int i,
  int val)

Sets the requested data array element in the first (default) bank to the 
specified value. 

    i - The data array element you want to set. 
    val - The integer value to which you want to set the data array element. 

*java.awt.image.DataBufferUShort.setElem(int,int,int)*

public void setElem(
  int bank,
  int i,
  int val)

Sets the requested data array element in the specified bank from the given 
integer. 

    bank - The bank in which you want to set the data array element. 
    i - The data array element you want to set. 
    val - The integer value to which you want to set the specified data array element. 


