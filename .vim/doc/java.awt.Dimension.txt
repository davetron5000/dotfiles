*java.awt.Dimension* *Dimension* The Dimension class encapsulates the width and 

public class Dimension
  extends    |java.awt.geom.Dimension2D|
  implements |java.io.Serializable|

|java.awt.Dimension_Description|
|java.awt.Dimension_Fields|
|java.awt.Dimension_Constructors|
|java.awt.Dimension_Methods|

================================================================================

*java.awt.Dimension_Fields*
|int_java.awt.Dimension.height|
|int_java.awt.Dimension.width|

*java.awt.Dimension_Constructors*
|java.awt.Dimension()|Creates an instance of Dimension with a width   of zero a
|java.awt.Dimension(Dimension)|Creates an instance of Dimension whose width    
|java.awt.Dimension(int,int)|Constructs a Dimension and initializes  it to the 

*java.awt.Dimension_Methods*
|java.awt.Dimension.equals(Object)|Checks whether two dimension objects have eq
|java.awt.Dimension.getHeight()|Returns the height of this dimension in double 
|java.awt.Dimension.getSize()|Gets the size of this Dimension object.
|java.awt.Dimension.getWidth()|Returns the width of this dimension in double pr
|java.awt.Dimension.hashCode()|Returns the hash code for this Dimension.
|java.awt.Dimension.setSize(Dimension)|Sets the size of this Dimension object t
|java.awt.Dimension.setSize(double,double)|Sets the size of this Dimension obje
|java.awt.Dimension.setSize(int,int)|Sets the size of this Dimension object   t
|java.awt.Dimension.toString()|Returns a string representation of the values of

*java.awt.Dimension_Description*

The Dimension class encapsulates the width and height of a component (in 
integer precision) in a single object. The class is associated with certain 
properties of components. Several methods defined by the Component class and 
the LayoutManager interface return a Dimension object. 

Normally the values of width and height are non-negative integers. The 
constructors that allow you to create a dimension do not prevent you from 
setting a negative value for these properties. If the value of width or height 
is negative, the behavior of some methods defined by other objects is 
undefined. 


*int_java.awt.Dimension.height*

The Dimension class encapsulates the width and height of a component (in 
integer precision) in a single object. The class is associated with certain 
properties of components. Several methods defined by the Component class and 
the LayoutManager interface return a Dimension object. 

Normally the values of width and height are non-negative integers. The 
constructors that allow you to create a dimension do not prevent you from 
setting a negative value for these properties. If the value of width or height 
is negative, the behavior of some methods defined by other objects is 
undefined. 


*int_java.awt.Dimension.width*

The Dimension class encapsulates the width and height of a component (in 
integer precision) in a single object. The class is associated with certain 
properties of components. Several methods defined by the Component class and 
the LayoutManager interface return a Dimension object. 

Normally the values of width and height are non-negative integers. The 
constructors that allow you to create a dimension do not prevent you from 
setting a negative value for these properties. If the value of width or height 
is negative, the behavior of some methods defined by other objects is 
undefined. 



*java.awt.Dimension()*

public Dimension()

Creates an instance of Dimension with a width of zero and a height of zero. 


*java.awt.Dimension(Dimension)*

public Dimension(java.awt.Dimension d)

Creates an instance of Dimension whose width and height are the same as for the 
specified dimension. 

    d - the specified dimension for the width and height values 

*java.awt.Dimension(int,int)*

public Dimension(
  int width,
  int height)

Constructs a Dimension and initializes it to the specified width and specified 
height. 

    width - the specified width 
    height - the specified height 

*java.awt.Dimension.equals(Object)*

public boolean equals(java.lang.Object obj)

Checks whether two dimension objects have equal values. 


*java.awt.Dimension.getHeight()*

public double getHeight()

Returns the height of this dimension in double precision. 


    Returns: the height of this dimension in double precision 
*java.awt.Dimension.getSize()*

public |java.awt.Dimension| getSize()

Gets the size of this Dimension object. This method is included for 
completeness, to parallel the getSize method defined by Component. 


    Returns: the size of this dimension, a new instance of Dimension with the same width and 
             height 
*java.awt.Dimension.getWidth()*

public double getWidth()

Returns the width of this dimension in double precision. 


    Returns: the width of this dimension in double precision 
*java.awt.Dimension.hashCode()*

public int hashCode()

Returns the hash code for this Dimension. 


    Returns: a hash code for this Dimension 
*java.awt.Dimension.setSize(Dimension)*

public void setSize(java.awt.Dimension d)

Sets the size of this Dimension object to the specified size. This method is 
included for completeness, to parallel the setSize method defined by Component. 

    d - the new size for this Dimension object 

*java.awt.Dimension.setSize(double,double)*

public void setSize(
  double width,
  double height)

Sets the size of this Dimension object to the specified width and height in 
double precision. Note that if width or height are larger than 
Integer.MAX_VALUE, they will be reset to Integer.MAX_VALUE. 

    width - the new width for the Dimension object 
    height - the new height for the Dimension object 

*java.awt.Dimension.setSize(int,int)*

public void setSize(
  int width,
  int height)

Sets the size of this Dimension object to the specified width and height. This 
method is included for completeness, to parallel the setSize method defined by 
Component. 

    width - the new width for this Dimension object 
    height - the new height for this Dimension object 

*java.awt.Dimension.toString()*

public |java.lang.String| toString()

Returns a string representation of the values of this Dimension object's height 
and width fields. This method is intended to be used only for debugging 
purposes, and the content and format of the returned string may vary between 
implementations. The returned string may be empty but may not be null. 


    Returns: a string representation of this Dimension object 

