*javax.swing.plaf.basic.BasicGraphicsUtils* *BasicGraphicsUtils* 

public class BasicGraphicsUtils
  extends    |java.lang.Object|

|javax.swing.plaf.basic.BasicGraphicsUtils_Description|
|javax.swing.plaf.basic.BasicGraphicsUtils_Fields|
|javax.swing.plaf.basic.BasicGraphicsUtils_Constructors|
|javax.swing.plaf.basic.BasicGraphicsUtils_Methods|

================================================================================

*javax.swing.plaf.basic.BasicGraphicsUtils_Constructors*
|javax.swing.plaf.basic.BasicGraphicsUtils()|

*javax.swing.plaf.basic.BasicGraphicsUtils_Methods*
|javax.swing.plaf.basic.BasicGraphicsUtils.drawBezel(Graphics,int,int,int,int,boolean,boolean,Color,Color,Color,Color)|
|javax.swing.plaf.basic.BasicGraphicsUtils.drawDashedRect(Graphics,int,int,int,int)|
|javax.swing.plaf.basic.BasicGraphicsUtils.drawEtchedRect(Graphics,int,int,int,int,Color,Color,Color,Color)|
|javax.swing.plaf.basic.BasicGraphicsUtils.drawGroove(Graphics,int,int,int,int,Color,Color)|
|javax.swing.plaf.basic.BasicGraphicsUtils.drawLoweredBezel(Graphics,int,int,int,int,Color,Color,Color,Color)|
|javax.swing.plaf.basic.BasicGraphicsUtils.drawString(Graphics,String,int,int,int)|
|javax.swing.plaf.basic.BasicGraphicsUtils.drawStringUnderlineCharAt(Graphics,String,int,int,int)|
|javax.swing.plaf.basic.BasicGraphicsUtils.getEtchedInsets()|Returns the amount
|javax.swing.plaf.basic.BasicGraphicsUtils.getGrooveInsets()|Returns the amount
|javax.swing.plaf.basic.BasicGraphicsUtils.getPreferredButtonSize(AbstractButton,int)|

*javax.swing.plaf.basic.BasicGraphicsUtils_Description*




*javax.swing.plaf.basic.BasicGraphicsUtils()*

public BasicGraphicsUtils()




*javax.swing.plaf.basic.BasicGraphicsUtils.drawBezel(Graphics,int,int,int,int,boolean,boolean,Color,Color,Color,Color)*

public static void drawBezel(
  java.awt.Graphics g,
  int x,
  int y,
  int w,
  int h,
  boolean isPressed,
  boolean isDefault,
  java.awt.Color shadow,
  java.awt.Color darkShadow,
  java.awt.Color highlight,
  java.awt.Color lightHighlight)




*javax.swing.plaf.basic.BasicGraphicsUtils.drawDashedRect(Graphics,int,int,int,int)*

public static void drawDashedRect(
  java.awt.Graphics g,
  int x,
  int y,
  int width,
  int height)




*javax.swing.plaf.basic.BasicGraphicsUtils.drawEtchedRect(Graphics,int,int,int,int,Color,Color,Color,Color)*

public static void drawEtchedRect(
  java.awt.Graphics g,
  int x,
  int y,
  int w,
  int h,
  java.awt.Color shadow,
  java.awt.Color darkShadow,
  java.awt.Color highlight,
  java.awt.Color lightHighlight)




*javax.swing.plaf.basic.BasicGraphicsUtils.drawGroove(Graphics,int,int,int,int,Color,Color)*

public static void drawGroove(
  java.awt.Graphics g,
  int x,
  int y,
  int w,
  int h,
  java.awt.Color shadow,
  java.awt.Color highlight)




*javax.swing.plaf.basic.BasicGraphicsUtils.drawLoweredBezel(Graphics,int,int,int,int,Color,Color,Color,Color)*

public static void drawLoweredBezel(
  java.awt.Graphics g,
  int x,
  int y,
  int w,
  int h,
  java.awt.Color shadow,
  java.awt.Color darkShadow,
  java.awt.Color highlight,
  java.awt.Color lightHighlight)




*javax.swing.plaf.basic.BasicGraphicsUtils.drawString(Graphics,String,int,int,int)*

public static void drawString(
  java.awt.Graphics g,
  java.lang.String text,
  int underlinedChar,
  int x,
  int y)

Draw a string with the graphics g at location (x,y) just like g.drawString 
would. The first occurrence of underlineChar in text will be underlined. The 
matching algorithm is not case sensitive. 


*javax.swing.plaf.basic.BasicGraphicsUtils.drawStringUnderlineCharAt(Graphics,String,int,int,int)*

public static void drawStringUnderlineCharAt(
  java.awt.Graphics g,
  java.lang.String text,
  int underlinedIndex,
  int x,
  int y)

Draw a string with the graphics g at location (x, y) just like g.drawString 
would. The character at index underlinedIndex in text will be underlined. If 
index is beyond the bounds of text (including < 0), nothing will be underlined. 

    g - Graphics to draw with 
    text - String to draw 
    underlinedIndex - Index of character in text to underline 
    x - x coordinate to draw at 
    y - y coordinate to draw at 

*javax.swing.plaf.basic.BasicGraphicsUtils.getEtchedInsets()*

public static |java.awt.Insets| getEtchedInsets()

Returns the amount of space taken up by a border drawn by drawEtchedRect() 


    Returns: the inset of an etched rect 
*javax.swing.plaf.basic.BasicGraphicsUtils.getGrooveInsets()*

public static |java.awt.Insets| getGrooveInsets()

Returns the amount of space taken up by a border drawn by drawGroove() 


    Returns: the inset of a groove border 
*javax.swing.plaf.basic.BasicGraphicsUtils.getPreferredButtonSize(AbstractButton,int)*

public static |java.awt.Dimension| getPreferredButtonSize(
  javax.swing.AbstractButton b,
  int textIconGap)





