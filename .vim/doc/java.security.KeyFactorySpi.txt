*java.security.KeyFactorySpi* *KeyFactorySpi* This class defines the Service Pro

public abstract class KeyFactorySpi
  extends    |java.lang.Object|

|java.security.KeyFactorySpi_Description|
|java.security.KeyFactorySpi_Fields|
|java.security.KeyFactorySpi_Constructors|
|java.security.KeyFactorySpi_Methods|

================================================================================

*java.security.KeyFactorySpi_Constructors*
|java.security.KeyFactorySpi()|

*java.security.KeyFactorySpi_Methods*
|java.security.KeyFactorySpi.engineGeneratePrivate(KeySpec)|Generates a private
|java.security.KeyFactorySpi.engineGeneratePublic(KeySpec)|Generates a public k
|java.security.KeyFactorySpi.engineGetKeySpec(Key,Class)|Returns a specificatio
|java.security.KeyFactorySpi.engineTranslateKey(Key)|Translates a key object, w

*java.security.KeyFactorySpi_Description*

This class defines the Service Provider Interface (SPI) for the KeyFactory 
class. All the abstract methods in this class must be implemented by each 
cryptographic service provider who wishes to supply the implementation of a key 
factory for a particular algorithm. 

Key factories are used to convert keys (opaque cryptographic keys of type Key) 
into key specifications (transparent representations of the underlying key 
material), and vice versa. 

Key factories are bi-directional. That is, they allow you to build an opaque 
key object from a given key specification (key material), or to retrieve the 
underlying key material of a key object in a suitable format. 

Multiple compatible key specifications may exist for the same key. For example, 
a DSA public key may be specified using DSAPublicKeySpec or X509EncodedKeySpec. 
A key factory can be used to translate between compatible key specifications. 

A provider should document all the key specifications supported by its key 
factory. 


*java.security.KeyFactorySpi()*

public KeyFactorySpi()




*java.security.KeyFactorySpi.engineGeneratePrivate(KeySpec)*

protected abstract |java.security.PrivateKey| engineGeneratePrivate(java.security.spec.KeySpec keySpec)
  throws |java.security.spec.InvalidKeySpecException|
         
Generates a private key object from the provided key specification (key 
material). 

    keySpec - the specification (key material) of the private key. 

    Returns: the private key. 
*java.security.KeyFactorySpi.engineGeneratePublic(KeySpec)*

protected abstract |java.security.PublicKey| engineGeneratePublic(java.security.spec.KeySpec keySpec)
  throws |java.security.spec.InvalidKeySpecException|
         
Generates a public key object from the provided key specification (key 
material). 

    keySpec - the specification (key material) of the public key. 

    Returns: the public key. 
*java.security.KeyFactorySpi.engineGetKeySpec(Key,Class)*

protected abstract |java.security.spec.KeySpec| engineGetKeySpec(
  java.security.Key key,
  java.lang.Class keySpec)
  throws |java.security.spec.InvalidKeySpecException|
         
Returns a specification (key material) of the given key object. keySpec 
identifies the specification class in which the key material should be 
returned. It could, for example, be DSAPublicKeySpec.class, to indicate that 
the key material should be returned in an instance of the DSAPublicKeySpec 
class. 

    key - the key. 
    keySpec - the specification class in which the key material should be returned. 

    Returns: the underlying key specification (key material) in an instance of the requested 
             specification class. 
*java.security.KeyFactorySpi.engineTranslateKey(Key)*

protected abstract |java.security.Key| engineTranslateKey(java.security.Key key)
  throws |java.security.InvalidKeyException|
         
Translates a key object, whose provider may be unknown or potentially 
untrusted, into a corresponding key object of this key factory. 

    key - the key whose provider is unknown or untrusted. 

    Returns: the translated key. 

