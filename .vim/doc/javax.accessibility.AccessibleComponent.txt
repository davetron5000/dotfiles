*javax.accessibility.AccessibleComponent* *AccessibleComponent* The AccessibleCo

public interface interface AccessibleComponent


|javax.accessibility.AccessibleComponent_Description|
|javax.accessibility.AccessibleComponent_Fields|
|javax.accessibility.AccessibleComponent_Constructors|
|javax.accessibility.AccessibleComponent_Methods|

================================================================================

*javax.accessibility.AccessibleComponent_Methods*
|javax.accessibility.AccessibleComponent.addFocusListener(FocusListener)|Adds t
|javax.accessibility.AccessibleComponent.contains(Point)|Checks whether the spe
|javax.accessibility.AccessibleComponent.getAccessibleAt(Point)|Returns the Acc
|javax.accessibility.AccessibleComponent.getBackground()|Gets the background co
|javax.accessibility.AccessibleComponent.getBounds()|Gets the bounds of this ob
|javax.accessibility.AccessibleComponent.getCursor()|Gets the Cursor of this ob
|javax.accessibility.AccessibleComponent.getFont()|Gets the Font of this object
|javax.accessibility.AccessibleComponent.getFontMetrics(Font)|Gets the FontMetr
|javax.accessibility.AccessibleComponent.getForeground()|Gets the foreground co
|javax.accessibility.AccessibleComponent.getLocation()|Gets the location of the
|javax.accessibility.AccessibleComponent.getLocationOnScreen()|Returns the loca
|javax.accessibility.AccessibleComponent.getSize()|Returns the size of this obj
|javax.accessibility.AccessibleComponent.isEnabled()|Determines if the object i
|javax.accessibility.AccessibleComponent.isFocusTraversable()|Returns whether t
|javax.accessibility.AccessibleComponent.isShowing()|Determines if the object i
|javax.accessibility.AccessibleComponent.isVisible()|Determines if the object i
|javax.accessibility.AccessibleComponent.removeFocusListener(FocusListener)|Rem
|javax.accessibility.AccessibleComponent.requestFocus()|Requests focus for this
|javax.accessibility.AccessibleComponent.setBackground(Color)|Sets the backgrou
|javax.accessibility.AccessibleComponent.setBounds(Rectangle)|Sets the bounds o
|javax.accessibility.AccessibleComponent.setCursor(Cursor)|Sets the Cursor of t
|javax.accessibility.AccessibleComponent.setEnabled(boolean)|Sets the enabled s
|javax.accessibility.AccessibleComponent.setFont(Font)|Sets the Font of this ob
|javax.accessibility.AccessibleComponent.setForeground(Color)|Sets the foregrou
|javax.accessibility.AccessibleComponent.setLocation(Point)|Sets the location o
|javax.accessibility.AccessibleComponent.setSize(Dimension)|Resizes this object
|javax.accessibility.AccessibleComponent.setVisible(boolean)|Sets the visible s

*javax.accessibility.AccessibleComponent_Description*

The AccessibleComponent interface should be supported by any object that is 
rendered on the screen. This interface provides the standard mechanism for an 
assistive technology to determine and set the graphical representation of an 
object. Applications can determine if an object supports the 
AccessibleComponent interface by first obtaining its AccessibleContext and then 
calling the (|javax.accessibility.AccessibleContext|) method. If the return 
value is not null, the object supports this interface. 


*javax.accessibility.AccessibleComponent.addFocusListener(FocusListener)*

public void addFocusListener(java.awt.event.FocusListener l)

Adds the specified focus listener to receive focus events from this component. 

    l - the focus listener 

*javax.accessibility.AccessibleComponent.contains(Point)*

public boolean contains(java.awt.Point p)

Checks whether the specified point is within this object's bounds, where the 
point's x and y coordinates are defined to be relative to the coordinate system 
of the object. 

    p - the Point relative to the coordinate system of the object 

    Returns: true if object contains Point; otherwise false 
*javax.accessibility.AccessibleComponent.getAccessibleAt(Point)*

public |javax.accessibility.Accessible| getAccessibleAt(java.awt.Point p)

Returns the Accessible child, if one exists, contained at the local coordinate 
Point. 

    p - The point relative to the coordinate system of this object. 

    Returns: the Accessible, if it exists, at the specified location; otherwise null 
*javax.accessibility.AccessibleComponent.getBackground()*

public |java.awt.Color| getBackground()

Gets the background color of this object. 


    Returns: the background color, if supported, of the object; otherwise, null 
*javax.accessibility.AccessibleComponent.getBounds()*

public |java.awt.Rectangle| getBounds()

Gets the bounds of this object in the form of a Rectangle object. The bounds 
specify this object's width, height, and location relative to its parent. 


    Returns: A rectangle indicating this component's bounds; null if this object is not on 
             the screen. 
*javax.accessibility.AccessibleComponent.getCursor()*

public |java.awt.Cursor| getCursor()

Gets the Cursor of this object. 


    Returns: the Cursor, if supported, of the object; otherwise, null 
*javax.accessibility.AccessibleComponent.getFont()*

public |java.awt.Font| getFont()

Gets the Font of this object. 


    Returns: the Font,if supported, for the object; otherwise, null 
*javax.accessibility.AccessibleComponent.getFontMetrics(Font)*

public |java.awt.FontMetrics| getFontMetrics(java.awt.Font f)

Gets the FontMetrics of this object. 

    f - the Font 

    Returns: the FontMetrics, if supported, the object; otherwise, null 
*javax.accessibility.AccessibleComponent.getForeground()*

public |java.awt.Color| getForeground()

Gets the foreground color of this object. 


    Returns: the foreground color, if supported, of the object; otherwise, null 
*javax.accessibility.AccessibleComponent.getLocation()*

public |java.awt.Point| getLocation()

Gets the location of the object relative to the parent in the form of a point 
specifying the object's top-left corner in the screen's coordinate space. 


    Returns: An instance of Point representing the top-left corner of the object's bounds in 
             the coordinate space of the screen; null if this object or its 
             parent are not on the screen 
*javax.accessibility.AccessibleComponent.getLocationOnScreen()*

public |java.awt.Point| getLocationOnScreen()

Returns the location of the object on the screen. 


    Returns: the location of the object on screen; null if this object is not on the screen 
*javax.accessibility.AccessibleComponent.getSize()*

public |java.awt.Dimension| getSize()

Returns the size of this object in the form of a Dimension object. The height 
field of the Dimension object contains this object's height, and the width 
field of the Dimension object contains this object's width. 


    Returns: A Dimension object that indicates the size of this component; null if this 
             object is not on the screen 
*javax.accessibility.AccessibleComponent.isEnabled()*

public boolean isEnabled()

Determines if the object is enabled. Objects that are enabled will also have 
the AccessibleState.ENABLED state set in their AccessibleStateSets. 


    Returns: true if object is enabled; otherwise, false 
*javax.accessibility.AccessibleComponent.isFocusTraversable()*

public boolean isFocusTraversable()

Returns whether this object can accept focus or not. Objects that can accept 
focus will also have the AccessibleState.FOCUSABLE state set in their 
AccessibleStateSets. 


    Returns: true if object can accept focus; otherwise false 
*javax.accessibility.AccessibleComponent.isShowing()*

public boolean isShowing()

Determines if the object is showing. This is determined by checking the 
visibility of the object and its ancestors. Note: this will return true even if 
the object is obscured by another (for example, it is underneath a menu that 
was pulled down). 


    Returns: true if object is showing; otherwise, false 
*javax.accessibility.AccessibleComponent.isVisible()*

public boolean isVisible()

Determines if the object is visible. Note: this means that the object intends 
to be visible; however, it may not be showing on the screen because one of the 
objects that this object is contained by is currently not visible. To determine 
if an object is showing on the screen, use isShowing(). Objects that are 
visible will also have the AccessibleState.VISIBLE state set in their 
AccessibleStateSets. 


    Returns: true if object is visible; otherwise, false 
*javax.accessibility.AccessibleComponent.removeFocusListener(FocusListener)*

public void removeFocusListener(java.awt.event.FocusListener l)

Removes the specified focus listener so it no longer receives focus events from 
this component. 

    l - the focus listener 

*javax.accessibility.AccessibleComponent.requestFocus()*

public void requestFocus()

Requests focus for this object. If this object cannot accept focus, nothing 
will happen. Otherwise, the object will attempt to take focus. 


*javax.accessibility.AccessibleComponent.setBackground(Color)*

public void setBackground(java.awt.Color c)

Sets the background color of this object. 

    c - the new Color for the background 

*javax.accessibility.AccessibleComponent.setBounds(Rectangle)*

public void setBounds(java.awt.Rectangle r)

Sets the bounds of this object in the form of a Rectangle object. The bounds 
specify this object's width, height, and location relative to its parent. 

    r - rectangle indicating this component's bounds 

*javax.accessibility.AccessibleComponent.setCursor(Cursor)*

public void setCursor(java.awt.Cursor cursor)

Sets the Cursor of this object. 

    cursor - the new Cursor for the object 

*javax.accessibility.AccessibleComponent.setEnabled(boolean)*

public void setEnabled(boolean b)

Sets the enabled state of the object. 

    b - if true, enables this object; otherwise, disables it 

*javax.accessibility.AccessibleComponent.setFont(Font)*

public void setFont(java.awt.Font f)

Sets the Font of this object. 

    f - the new Font for the object 

*javax.accessibility.AccessibleComponent.setForeground(Color)*

public void setForeground(java.awt.Color c)

Sets the foreground color of this object. 

    c - the new Color for the foreground 

*javax.accessibility.AccessibleComponent.setLocation(Point)*

public void setLocation(java.awt.Point p)

Sets the location of the object relative to the parent. 

    p - the new position for the top-left corner 

*javax.accessibility.AccessibleComponent.setSize(Dimension)*

public void setSize(java.awt.Dimension d)

Resizes this object so that it has width and height. 

    d - The dimension specifying the new size of the object. 

*javax.accessibility.AccessibleComponent.setVisible(boolean)*

public void setVisible(boolean b)

Sets the visible state of the object. 

    b - if true, shows this object; otherwise, hides it 


