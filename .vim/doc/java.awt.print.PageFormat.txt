*java.awt.print.PageFormat* *PageFormat* The PageFormat class describes the size

public class PageFormat
  extends    |java.lang.Object|
  implements |java.lang.Cloneable|

|java.awt.print.PageFormat_Description|
|java.awt.print.PageFormat_Fields|
|java.awt.print.PageFormat_Constructors|
|java.awt.print.PageFormat_Methods|

================================================================================

*java.awt.print.PageFormat_Fields*
|int_java.awt.print.PageFormat.LANDSCAPE|
|int_java.awt.print.PageFormat.PORTRAIT|
|int_java.awt.print.PageFormat.REVERSE_LANDSCAPE|

*java.awt.print.PageFormat_Constructors*
|java.awt.print.PageFormat()|Creates a default, portrait-oriented  PageFormat.

*java.awt.print.PageFormat_Methods*
|java.awt.print.PageFormat.clone()|Makes a copy of this PageFormat with the sam
|java.awt.print.PageFormat.getHeight()|Returns the height, in 1/72nds of an inc
|java.awt.print.PageFormat.getImageableHeight()|Return the height, in 1/72nds o
|java.awt.print.PageFormat.getImageableWidth()|Returns the width, in 1/72nds of
|java.awt.print.PageFormat.getImageableX()|Returns the x coordinate of the uppe
|java.awt.print.PageFormat.getImageableY()|Returns the y coordinate of the uppe
|java.awt.print.PageFormat.getMatrix()|Returns a transformation matrix that tra
|java.awt.print.PageFormat.getOrientation()|Returns the orientation of this Pag
|java.awt.print.PageFormat.getPaper()|Returns a copy of thePaperobject associat
|java.awt.print.PageFormat.getWidth()|Returns the width, in 1/72nds of an inch,
|java.awt.print.PageFormat.setOrientation(int)|Sets the page orientation.
|java.awt.print.PageFormat.setPaper(Paper)|Sets the Paper object for this   Pag

*java.awt.print.PageFormat_Description*

The PageFormat class describes the size and orientation of a page to be 
printed. 


*int_java.awt.print.PageFormat.LANDSCAPE*

The PageFormat class describes the size and orientation of a page to be 
printed. 


*int_java.awt.print.PageFormat.PORTRAIT*

The PageFormat class describes the size and orientation of a page to be 
printed. 


*int_java.awt.print.PageFormat.REVERSE_LANDSCAPE*

The PageFormat class describes the size and orientation of a page to be 
printed. 



*java.awt.print.PageFormat()*

public PageFormat()

Creates a default, portrait-oriented PageFormat. 


*java.awt.print.PageFormat.clone()*

public |java.lang.Object| clone()

Makes a copy of this PageFormat with the same contents as this PageFormat. 


    Returns: a copy of this PageFormat. 
*java.awt.print.PageFormat.getHeight()*

public double getHeight()

Returns the height, in 1/72nds of an inch, of the page. This method takes into 
account the orientation of the page when determining the height. 


    Returns: the height of the page. 
*java.awt.print.PageFormat.getImageableHeight()*

public double getImageableHeight()

Return the height, in 1/72nds of an inch, of the imageable area of the page. 
This method takes into account the orientation of the page. 


    Returns: the height of the page. 
*java.awt.print.PageFormat.getImageableWidth()*

public double getImageableWidth()

Returns the width, in 1/72nds of an inch, of the imageable area of the page. 
This method takes into account the orientation of the page. 


    Returns: the width of the page. 
*java.awt.print.PageFormat.getImageableX()*

public double getImageableX()

Returns the x coordinate of the upper left point of the imageable area of the 
Paper object associated with this PageFormat. This method takes into account 
the orientation of the page. 


    Returns: the x coordinate of the upper left point of the imageable area of the Paper 
             object associated with this PageFormat. 
*java.awt.print.PageFormat.getImageableY()*

public double getImageableY()

Returns the y coordinate of the upper left point of the imageable area of the 
Paper object associated with this PageFormat. This method takes into account 
the orientation of the page. 


    Returns: the y coordinate of the upper left point of the imageable area of the Paper 
             object associated with this PageFormat. 
*java.awt.print.PageFormat.getMatrix()*

public double getMatrix()

Returns a transformation matrix that translates user space rendering to the 
requested orientation of the page. The values are placed into the array as 
{m00,m10,m01,m11,m02,m12} in the form required by the 
(|java.awt.geom.AffineTransform|) constructor. 


    Returns: the matrix used to translate user space rendering to the orientation of the 
             page. 
*java.awt.print.PageFormat.getOrientation()*

public int getOrientation()

Returns the orientation of this PageFormat. 


    Returns: this PageFormat object's orientation. 
*java.awt.print.PageFormat.getPaper()*

public |java.awt.print.Paper| getPaper()

Returns a copy of the (|java.awt.print.Paper|) object associated with this 
PageFormat. Changes made to the Paper object returned from this method do not 
affect the Paper object of this PageFormat. To update the Paper object of this 
PageFormat, create a new Paper object and set it into this PageFormat by using 
the (|java.awt.print.PageFormat|) method. 


    Returns: a copy of the Paper object associated with this PageFormat. 
*java.awt.print.PageFormat.getWidth()*

public double getWidth()

Returns the width, in 1/72nds of an inch, of the page. This method takes into 
account the orientation of the page when determining the width. 


    Returns: the width of the page. 
*java.awt.print.PageFormat.setOrientation(int)*

public void setOrientation(int orientation)
  throws |java.lang.IllegalArgumentException|
         
Sets the page orientation. orientation must be one of the constants: PORTRAIT, 
LANDSCAPE, or REVERSE_LANDSCAPE. 

    orientation - the new orientation for the page 

*java.awt.print.PageFormat.setPaper(Paper)*

public void setPaper(java.awt.print.Paper paper)

Sets the Paper object for this PageFormat. 

    paper - the Paper object to which to set the Paper object for this PageFormat. 


