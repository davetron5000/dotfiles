*javax.xml.transform.dom.DOMSource* *DOMSource* Acts as a holder for a transform

public class DOMSource
  extends    |java.lang.Object|
  implements |javax.xml.transform.Source|

|javax.xml.transform.dom.DOMSource_Description|
|javax.xml.transform.dom.DOMSource_Fields|
|javax.xml.transform.dom.DOMSource_Constructors|
|javax.xml.transform.dom.DOMSource_Methods|

================================================================================

*javax.xml.transform.dom.DOMSource_Fields*
|java.lang.String_javax.xml.transform.dom.DOMSource.FEATURE|

*javax.xml.transform.dom.DOMSource_Constructors*
|javax.xml.transform.dom.DOMSource()|Zero-argument default constructor.
|javax.xml.transform.dom.DOMSource(Node)|Create a new input source with a DOM n
|javax.xml.transform.dom.DOMSource(Node,String)|Create a new input source with 

*javax.xml.transform.dom.DOMSource_Methods*
|javax.xml.transform.dom.DOMSource.getNode()|Get the node that represents a Sou
|javax.xml.transform.dom.DOMSource.getSystemId()|Get the base ID (URL or system
|javax.xml.transform.dom.DOMSource.setNode(Node)|Set the node that will represe
|javax.xml.transform.dom.DOMSource.setSystemId(String)|Set the base ID (URL or 

*javax.xml.transform.dom.DOMSource_Description*

Acts as a holder for a transformation Source tree in the form of a Document 
Object Model (DOM) tree. 

Note that XSLT requires namespace support. Attempting to transform a DOM that 
was not contructed with a namespace-aware parser may result in errors. Parsers 
can be made namespace aware by calling 
(|javax.xml.parsers.DocumentBuilderFactory|) . 


*java.lang.String_javax.xml.transform.dom.DOMSource.FEATURE*

Acts as a holder for a transformation Source tree in the form of a Document 
Object Model (DOM) tree. 

Note that XSLT requires namespace support. Attempting to transform a DOM that 
was not contructed with a namespace-aware parser may result in errors. Parsers 
can be made namespace aware by calling 
(|javax.xml.parsers.DocumentBuilderFactory|) . 



*javax.xml.transform.dom.DOMSource()*

public DOMSource()

Zero-argument default constructor. If this constructor is used, and no DOM 
source is set using (|javax.xml.transform.dom.DOMSource|) , then the 
Transformer will create an empty source (|org.w3c.dom.Document|) using 
(|javax.xml.parsers.DocumentBuilder|) . 


*javax.xml.transform.dom.DOMSource(Node)*

public DOMSource(org.w3c.dom.Node n)

Create a new input source with a DOM node. The operation will be applied to the 
subtree rooted at this node. In XSLT, a "/" pattern still means the root of the 
tree (not the subtree), and the evaluation of global variables and parameters 
is done from the root node also. 

    n - The DOM node that will contain the Source tree. 

*javax.xml.transform.dom.DOMSource(Node,String)*

public DOMSource(
  org.w3c.dom.Node node,
  java.lang.String systemID)

Create a new input source with a DOM node, and with the system ID also passed 
in as the base URI. 

    node - The DOM node that will contain the Source tree. 
    systemID - Specifies the base URI associated with node. 

*javax.xml.transform.dom.DOMSource.getNode()*

public |org.w3c.dom.Node| getNode()

Get the node that represents a Source DOM tree. 


    Returns: The node that is to be transformed. 
*javax.xml.transform.dom.DOMSource.getSystemId()*

public |java.lang.String| getSystemId()

Get the base ID (URL or system ID) from where URLs will be resolved. 


    Returns: Base URL for this DOM tree. 
*javax.xml.transform.dom.DOMSource.setNode(Node)*

public void setNode(org.w3c.dom.Node node)

Set the node that will represents a Source DOM tree. 

    node - The node that is to be transformed. 

*javax.xml.transform.dom.DOMSource.setSystemId(String)*

public void setSystemId(java.lang.String systemID)

Set the base ID (URL or system ID) from where URLs will be resolved. 

    systemID - Base URL for this DOM tree. 


