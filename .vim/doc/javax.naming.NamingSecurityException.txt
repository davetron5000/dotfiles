*javax.naming.NamingSecurityException* *NamingSecurityException* This is the sup

public abstract class NamingSecurityException
  extends    |javax.naming.NamingException|

|javax.naming.NamingSecurityException_Description|
|javax.naming.NamingSecurityException_Fields|
|javax.naming.NamingSecurityException_Constructors|
|javax.naming.NamingSecurityException_Methods|

================================================================================

*javax.naming.NamingSecurityException_Constructors*
|javax.naming.NamingSecurityException()|Constructs a new instance of NamingSecu
|javax.naming.NamingSecurityException(String)|Constructs a new instance of Nami

*javax.naming.NamingSecurityException_Description*

This is the superclass of security-related exceptions thrown by operations in 
the Context and DirContext interfaces. The nature of the failure is described 
by the name of the subclass. 

If the program wants to handle this exception in particular, it should catch 
NamingSecurityException explicitly before attempting to catch NamingException. 
A program might want to do this, for example, if it wants to treat 
security-related exceptions specially from other sorts of naming exception. 

Synchronization and serialization issues that apply to NamingException apply 
directly here. 


*javax.naming.NamingSecurityException()*

public NamingSecurityException()

Constructs a new instance of NamingSecurityException. All fields are 
initialized to null. 


*javax.naming.NamingSecurityException(String)*

public NamingSecurityException(java.lang.String explanation)

Constructs a new instance of NamingSecurityException using the explanation 
supplied. All other fields default to null. 

    explanation - Possibly null additional detail about this exception. 

