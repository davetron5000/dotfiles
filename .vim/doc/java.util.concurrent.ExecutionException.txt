*java.util.concurrent.ExecutionException* *ExecutionException* Exception thrown 

public class ExecutionException
  extends    |java.lang.Exception|

|java.util.concurrent.ExecutionException_Description|
|java.util.concurrent.ExecutionException_Fields|
|java.util.concurrent.ExecutionException_Constructors|
|java.util.concurrent.ExecutionException_Methods|

================================================================================

*java.util.concurrent.ExecutionException_Constructors*
|java.util.concurrent.ExecutionException()|Constructs a ExecutionException with
|java.util.concurrent.ExecutionException(String)|Constructs a ExecutionExceptio
|java.util.concurrent.ExecutionException(String,Throwable)|Constructs a Executi
|java.util.concurrent.ExecutionException(Throwable)|Constructs a ExecutionExcep

*java.util.concurrent.ExecutionException_Description*

Exception thrown when attempting to retrieve the result of a task that aborted 
by throwing an exception. This exception can be inspected using the 
(|java.util.concurrent.ExecutionException|) method. 


*java.util.concurrent.ExecutionException()*

protected ExecutionException()

Constructs a ExecutionException with no detail message. The cause is not 
initialized, and may subsequently be initialized by a call to 
initCause(|java.util.concurrent.ExecutionException|) . 


*java.util.concurrent.ExecutionException(String)*

protected ExecutionException(java.lang.String message)

Constructs a ExecutionException with the specified detail message. The cause is 
not initialized, and may subsequently be initialized by a call to 
initCause(|java.util.concurrent.ExecutionException|) . 

    message - the detail message 

*java.util.concurrent.ExecutionException(String,Throwable)*

public ExecutionException(
  java.lang.String message,
  java.lang.Throwable cause)

Constructs a ExecutionException with the specified detail message and cause. 

    message - the detail message 
    cause - the cause (which is saved for later retrieval by the {@link #getCause()} 
       method) 

*java.util.concurrent.ExecutionException(Throwable)*

public ExecutionException(java.lang.Throwable cause)

Constructs a ExecutionException with the specified cause. The detail message is 
set to: 

(cause == null ? null : cause.toString()) 

(which typically contains the class and detail message of cause). 

    cause - the cause (which is saved for later retrieval by the {@link #getCause()} 
       method) 

