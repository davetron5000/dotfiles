*javax.sql.XADataSource* *XADataSource* A factory for XAConnection objects that 

public interface interface XADataSource


|javax.sql.XADataSource_Description|
|javax.sql.XADataSource_Fields|
|javax.sql.XADataSource_Constructors|
|javax.sql.XADataSource_Methods|

================================================================================

*javax.sql.XADataSource_Methods*
|javax.sql.XADataSource.getLoginTimeout()|Retrieves the maximum time in seconds
|javax.sql.XADataSource.getLogWriter()|Retrieves the log writer for this XAData
|javax.sql.XADataSource.getXAConnection()|Attempts to establish a physical data
|javax.sql.XADataSource.getXAConnection(String,String)|Attempts to establish a 
|javax.sql.XADataSource.setLoginTimeout(int)|Sets the maximum time in seconds t
|javax.sql.XADataSource.setLogWriter(PrintWriter)|Sets the log writer for this 

*javax.sql.XADataSource_Description*

A factory for XAConnection objects that is used internally. An object that 
implements the XADataSource interface is typically registered with a naming 
service that uses the Java Naming and Directory InterfaceTM (JNDI). 


*javax.sql.XADataSource.getLoginTimeout()*

public int getLoginTimeout()
  throws |java.sql.SQLException|
         
Retrieves the maximum time in seconds that this data source can wait while 
attempting to connect to a data source. A value of zero means that the timeout 
is the default system timeout if there is one; otherwise, it means that there 
is no timeout. When a data source object is created, the login timeout is 
initially zero. 


    Returns: the number of seconds that is the login time limit for this XADataSource object 
             or zero if there is no no timeout limit or the timeout limit is 
             the default system timeout limit if there is one 
*javax.sql.XADataSource.getLogWriter()*

public |java.io.PrintWriter| getLogWriter()
  throws |java.sql.SQLException|
         
Retrieves the log writer for this XADataSource object. 


    Returns: the log writer for this data source; null if no log writer has been set, which 
             means that logging is disabled 
*javax.sql.XADataSource.getXAConnection()*

public |javax.sql.XAConnection| getXAConnection()
  throws |java.sql.SQLException|
         
Attempts to establish a physical database connection that can be used in a 
distributed transaction. 


    Returns: an XAConnection object, which represents a physical connection to a data 
             source, that can be used in a distributed transaction 
*javax.sql.XADataSource.getXAConnection(String,String)*

public |javax.sql.XAConnection| getXAConnection(
  java.lang.String user,
  java.lang.String password)
  throws |java.sql.SQLException|
         
Attempts to establish a physical database connection, using the given user name 
and password. The connection that is returned is one that can be used in a 
distributed transaction. 

    user - the database user on whose behalf the connection is being made 
    password - the user's password 

    Returns: an XAConnection object, which represents a physical connection to a data 
             source, that can be used in a distributed transaction 
*javax.sql.XADataSource.setLoginTimeout(int)*

public void setLoginTimeout(int seconds)
  throws |java.sql.SQLException|
         
Sets the maximum time in seconds that this data source will wait while 
attempting to connect to a data source. A value of zero specifies that the 
timeout is the default system timeout if there is one; otherwise, it specifies 
that there is no timeout. When a data source object is created, the login 
timeout is initially zero. 

    seconds - the data source login time limit 

*javax.sql.XADataSource.setLogWriter(PrintWriter)*

public void setLogWriter(java.io.PrintWriter out)
  throws |java.sql.SQLException|
         
Sets the log writer for this XADataSource object to the given 
java.io.PrintWriter object. 

The log writer is a character output stream to which all logging and tracing 
messages for this XADataSource object will be printed. This includes messages 
printed by the methods of this object, messages printed by methods of other 
objects manufactured by this object, and so on. Messages printed to a log 
writer that is specific to a data source are not printed to the log writer 
associated with the java.sql.DriverManager class. When a data source object is 
created, the log writer is initially null. 

    out - the new log writer; to disable logging, set to null 


