*java.awt.peer.FramePeer* *FramePeer* The peer interfaces are intended only for use in porting
 the AWT.

public interface interface FramePeer

  implements |java.awt.peer.WindowPeer|

|java.awt.peer.FramePeer_Description|
|java.awt.peer.FramePeer_Fields|
|java.awt.peer.FramePeer_Constructors|
|java.awt.peer.FramePeer_Methods|

====================================================================================================================================================================================

*java.awt.peer.FramePeer_Methods*
|java.awt.peer.FramePeer.getState()|
|java.awt.peer.FramePeer.setBoundsPrivate(int,int,int,int)|
|java.awt.peer.FramePeer.setIconImage(Image)|
|java.awt.peer.FramePeer.setMaximizedBounds(Rectangle)|
|java.awt.peer.FramePeer.setMenuBar(MenuBar)|
|java.awt.peer.FramePeer.setResizable(boolean)|
|java.awt.peer.FramePeer.setState(int)|
|java.awt.peer.FramePeer.setTitle(String)|

*java.awt.peer.FramePeer_Description*

The peer interfaces are intended only for use in porting the AWT. They are not intended for use by application developers, and developers should not implement peers nor invoke any 
of the peer methods directly on the peer instances. 



*java.awt.peer.FramePeer.getState()*

public int getState()





*java.awt.peer.FramePeer.setBoundsPrivate(int,int,int,int)*

public void setBoundsPrivate(
  int x,
  int y,
  int width,
  int height)





*java.awt.peer.FramePeer.setIconImage(Image)*

public void setIconImage(java.awt.Image im)





*java.awt.peer.FramePeer.setMaximizedBounds(Rectangle)*

public void setMaximizedBounds(java.awt.Rectangle bounds)





*java.awt.peer.FramePeer.setMenuBar(MenuBar)*

public void setMenuBar(java.awt.MenuBar mb)





*java.awt.peer.FramePeer.setResizable(boolean)*

public void setResizable(boolean resizeable)





*java.awt.peer.FramePeer.setState(int)*

public void setState(int state)





*java.awt.peer.FramePeer.setTitle(String)*

public void setTitle(java.lang.String title)






