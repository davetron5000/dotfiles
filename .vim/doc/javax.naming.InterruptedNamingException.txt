*javax.naming.InterruptedNamingException* *InterruptedNamingException* This exce

public class InterruptedNamingException
  extends    |javax.naming.NamingException|

|javax.naming.InterruptedNamingException_Description|
|javax.naming.InterruptedNamingException_Fields|
|javax.naming.InterruptedNamingException_Constructors|
|javax.naming.InterruptedNamingException_Methods|

================================================================================

*javax.naming.InterruptedNamingException_Constructors*
|javax.naming.InterruptedNamingException()|Constructs an instance of Interrupte
|javax.naming.InterruptedNamingException(String)|Constructs an instance of Inte

*javax.naming.InterruptedNamingException_Description*

This exception is thrown when the naming operation being invoked has been 
interrupted. For example, an application might interrupt a thread that is 
performing a search. If the search supports being interrupted, it will throw 
InterruptedNamingException. Whether an operation is interruptible and when 
depends on its implementation (as provided by the service providers). Different 
implementations have different ways of protecting their resources and objects 
from being damaged due to unexpected interrupts. 

Synchronization and serialization issues that apply to NamingException apply 
directly here. 


*javax.naming.InterruptedNamingException()*

public InterruptedNamingException()

Constructs an instance of InterruptedNamingException with all name resolution 
fields and explanation initialized to null. 


*javax.naming.InterruptedNamingException(String)*

public InterruptedNamingException(java.lang.String explanation)

Constructs an instance of InterruptedNamingException using an explanation of 
the problem. All name resolution-related fields are initialized to null. 

    explanation - A possibly null message explaining the problem. 

