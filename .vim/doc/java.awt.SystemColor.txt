*java.awt.SystemColor* *SystemColor* A class to encapsulate symbolic colors repr

public final class SystemColor
  extends    |java.awt.Color|
  implements |java.io.Serializable|

|java.awt.SystemColor_Description|
|java.awt.SystemColor_Fields|
|java.awt.SystemColor_Constructors|
|java.awt.SystemColor_Methods|

================================================================================

*java.awt.SystemColor_Fields*
|int_java.awt.SystemColor.ACTIVE_CAPTION|
|int_java.awt.SystemColor.ACTIVE_CAPTION_BORDER|
|int_java.awt.SystemColor.ACTIVE_CAPTION_TEXT|
|java.awt.SystemColor_java.awt.SystemColor.activeCaption|
|java.awt.SystemColor_java.awt.SystemColor.activeCaptionBorder|
|java.awt.SystemColor_java.awt.SystemColor.activeCaptionText|
|java.awt.SystemColor_java.awt.SystemColor.control|
|int_java.awt.SystemColor.CONTROL|
|int_java.awt.SystemColor.CONTROL_DK_SHADOW|
|int_java.awt.SystemColor.CONTROL_HIGHLIGHT|
|int_java.awt.SystemColor.CONTROL_LT_HIGHLIGHT|
|int_java.awt.SystemColor.CONTROL_SHADOW|
|int_java.awt.SystemColor.CONTROL_TEXT|
|java.awt.SystemColor_java.awt.SystemColor.controlDkShadow|
|java.awt.SystemColor_java.awt.SystemColor.controlHighlight|
|java.awt.SystemColor_java.awt.SystemColor.controlLtHighlight|
|java.awt.SystemColor_java.awt.SystemColor.controlShadow|
|java.awt.SystemColor_java.awt.SystemColor.controlText|
|java.awt.SystemColor_java.awt.SystemColor.desktop|
|int_java.awt.SystemColor.DESKTOP|
|int_java.awt.SystemColor.INACTIVE_CAPTION|
|int_java.awt.SystemColor.INACTIVE_CAPTION_BORDER|
|int_java.awt.SystemColor.INACTIVE_CAPTION_TEXT|
|java.awt.SystemColor_java.awt.SystemColor.inactiveCaption|
|java.awt.SystemColor_java.awt.SystemColor.inactiveCaptionBorder|
|java.awt.SystemColor_java.awt.SystemColor.inactiveCaptionText|
|java.awt.SystemColor_java.awt.SystemColor.info|
|int_java.awt.SystemColor.INFO|
|int_java.awt.SystemColor.INFO_TEXT|
|java.awt.SystemColor_java.awt.SystemColor.infoText|
|java.awt.SystemColor_java.awt.SystemColor.menu|
|int_java.awt.SystemColor.MENU|
|int_java.awt.SystemColor.MENU_TEXT|
|java.awt.SystemColor_java.awt.SystemColor.menuText|
|int_java.awt.SystemColor.NUM_COLORS|
|java.awt.SystemColor_java.awt.SystemColor.scrollbar|
|int_java.awt.SystemColor.SCROLLBAR|
|java.awt.SystemColor_java.awt.SystemColor.text|
|int_java.awt.SystemColor.TEXT|
|int_java.awt.SystemColor.TEXT_HIGHLIGHT|
|int_java.awt.SystemColor.TEXT_HIGHLIGHT_TEXT|
|int_java.awt.SystemColor.TEXT_INACTIVE_TEXT|
|int_java.awt.SystemColor.TEXT_TEXT|
|java.awt.SystemColor_java.awt.SystemColor.textHighlight|
|java.awt.SystemColor_java.awt.SystemColor.textHighlightText|
|java.awt.SystemColor_java.awt.SystemColor.textInactiveText|
|java.awt.SystemColor_java.awt.SystemColor.textText|
|java.awt.SystemColor_java.awt.SystemColor.window|
|int_java.awt.SystemColor.WINDOW|
|int_java.awt.SystemColor.WINDOW_BORDER|
|int_java.awt.SystemColor.WINDOW_TEXT|
|java.awt.SystemColor_java.awt.SystemColor.windowBorder|
|java.awt.SystemColor_java.awt.SystemColor.windowText|

*java.awt.SystemColor_Methods*
|java.awt.SystemColor.createContext(ColorModel,Rectangle,Rectangle2D,AffineTransform,RenderingHints)|
|java.awt.SystemColor.getRGB()|Gets the "current" RGB value representing the sy
|java.awt.SystemColor.toString()|Returns a string representation of this Color'

*java.awt.SystemColor_Description*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.ACTIVE_CAPTION*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.ACTIVE_CAPTION_BORDER*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.ACTIVE_CAPTION_TEXT*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.activeCaption*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.activeCaptionBorder*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.activeCaptionText*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.control*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.CONTROL*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.CONTROL_DK_SHADOW*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.CONTROL_HIGHLIGHT*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.CONTROL_LT_HIGHLIGHT*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.CONTROL_SHADOW*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.CONTROL_TEXT*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.controlDkShadow*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.controlHighlight*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.controlLtHighlight*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.controlShadow*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.controlText*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.desktop*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.DESKTOP*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.INACTIVE_CAPTION*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.INACTIVE_CAPTION_BORDER*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.INACTIVE_CAPTION_TEXT*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.inactiveCaption*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.inactiveCaptionBorder*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.inactiveCaptionText*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.info*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.INFO*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.INFO_TEXT*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.infoText*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.menu*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.MENU*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.MENU_TEXT*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.menuText*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.NUM_COLORS*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.scrollbar*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.SCROLLBAR*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.text*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.TEXT*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.TEXT_HIGHLIGHT*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.TEXT_HIGHLIGHT_TEXT*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.TEXT_INACTIVE_TEXT*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.TEXT_TEXT*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.textHighlight*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.textHighlightText*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.textInactiveText*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.textText*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.window*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.WINDOW*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.WINDOW_BORDER*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*int_java.awt.SystemColor.WINDOW_TEXT*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.windowBorder*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 


*java.awt.SystemColor_java.awt.SystemColor.windowText*

A class to encapsulate symbolic colors representing the color of native GUI 
objects on a system. For systems which support the dynamic update of the system 
colors (when the user changes the colors) the actual RGB values of these 
symbolic colors will also change dynamically. In order to compare the "current" 
RGB value of a SystemColor object with a non-symbolic Color object, getRGB 
should be used rather than equals. 

Note that the way in which these system colors are applied to GUI objects may 
vary slightly from platform to platform since GUI objects may be rendered 
differently on each platform. 

System color values may also be available through the getDesktopProperty method 
on java.awt.Toolkit. 



*java.awt.SystemColor.createContext(ColorModel,Rectangle,Rectangle2D,AffineTransform,RenderingHints)*

public |java.awt.PaintContext| createContext(
  java.awt.image.ColorModel cm,
  java.awt.Rectangle r,
  java.awt.geom.Rectangle2D r2d,
  java.awt.geom.AffineTransform xform,
  java.awt.RenderingHints hints)

Creates and returns a PaintContext used to generate a solid color pattern. This 
enables a Color object to be used as an argument to any method requiring an 
object implementing the Paint interface. 


*java.awt.SystemColor.getRGB()*

public int getRGB()

Gets the "current" RGB value representing the symbolic color. (Bits 24-31 are 
0xff, 16-23 are red, 8-15 are green, 0-7 are blue). 


*java.awt.SystemColor.toString()*

public |java.lang.String| toString()

Returns a string representation of this Color's values. This method is intended 
to be used only for debugging purposes, and the content and format of the 
returned string may vary between implementations. The returned string may be 
empty but may not be null. 


    Returns: a string representation of this Color 

