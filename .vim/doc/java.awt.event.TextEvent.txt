*java.awt.event.TextEvent* *TextEvent* A semantic event which indicates that an 

public class TextEvent
  extends    |java.awt.AWTEvent|

|java.awt.event.TextEvent_Description|
|java.awt.event.TextEvent_Fields|
|java.awt.event.TextEvent_Constructors|
|java.awt.event.TextEvent_Methods|

================================================================================

*java.awt.event.TextEvent_Fields*
|int_java.awt.event.TextEvent.TEXT_FIRST|
|int_java.awt.event.TextEvent.TEXT_LAST|
|int_java.awt.event.TextEvent.TEXT_VALUE_CHANGED|

*java.awt.event.TextEvent_Constructors*
|java.awt.event.TextEvent(Object,int)|Constructs a TextEvent object.

*java.awt.event.TextEvent_Methods*
|java.awt.event.TextEvent.paramString()|Returns a parameter string identifying 

*java.awt.event.TextEvent_Description*

A semantic event which indicates that an object's text changed. This high-level 
event is generated by an object (such as a TextComponent) when its text 
changes. The event is passed to every TextListener object which registered to 
receive such events using the component's addTextListener method. 

The object that implements the TextListener interface gets this TextEvent when 
the event occurs. The listener is spared the details of processing individual 
mouse movements and key strokes Instead, it can process a "meaningful" 
(semantic) event like "text changed". 


*int_java.awt.event.TextEvent.TEXT_FIRST*

A semantic event which indicates that an object's text changed. This high-level 
event is generated by an object (such as a TextComponent) when its text 
changes. The event is passed to every TextListener object which registered to 
receive such events using the component's addTextListener method. 

The object that implements the TextListener interface gets this TextEvent when 
the event occurs. The listener is spared the details of processing individual 
mouse movements and key strokes Instead, it can process a "meaningful" 
(semantic) event like "text changed". 


*int_java.awt.event.TextEvent.TEXT_LAST*

A semantic event which indicates that an object's text changed. This high-level 
event is generated by an object (such as a TextComponent) when its text 
changes. The event is passed to every TextListener object which registered to 
receive such events using the component's addTextListener method. 

The object that implements the TextListener interface gets this TextEvent when 
the event occurs. The listener is spared the details of processing individual 
mouse movements and key strokes Instead, it can process a "meaningful" 
(semantic) event like "text changed". 


*int_java.awt.event.TextEvent.TEXT_VALUE_CHANGED*

A semantic event which indicates that an object's text changed. This high-level 
event is generated by an object (such as a TextComponent) when its text 
changes. The event is passed to every TextListener object which registered to 
receive such events using the component's addTextListener method. 

The object that implements the TextListener interface gets this TextEvent when 
the event occurs. The listener is spared the details of processing individual 
mouse movements and key strokes Instead, it can process a "meaningful" 
(semantic) event like "text changed". 



*java.awt.event.TextEvent(Object,int)*

public TextEvent(
  java.lang.Object source,
  int id)

Constructs a TextEvent object. Note that passing in an invalid id results in 
unspecified behavior. This method throws an IllegalArgumentException if source 
is null. 

    source - the (TextComponent) object that originated the event 
    id - an integer that identifies the event type 

*java.awt.event.TextEvent.paramString()*

public |java.lang.String| paramString()

Returns a parameter string identifying this text event. This method is useful 
for event-logging and for debugging. 


    Returns: a string identifying the event and its attributes 

