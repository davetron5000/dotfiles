*java.util.jar.JarFile* *JarFile* The JarFile class is used to read the contents

public class JarFile
  extends    |java.util.zip.ZipFile|

|java.util.jar.JarFile_Description|
|java.util.jar.JarFile_Fields|
|java.util.jar.JarFile_Constructors|
|java.util.jar.JarFile_Methods|

================================================================================

*java.util.jar.JarFile_Fields*
|java.lang.String_java.util.jar.JarFile.MANIFEST_NAME|

*java.util.jar.JarFile_Constructors*
|java.util.jar.JarFile(File)|Creates a new JarFile to read from the specified  
|java.util.jar.JarFile(File,boolean)|Creates a new JarFile to read from the spe
|java.util.jar.JarFile(File,boolean,int)|Creates a new JarFile to read from the
|java.util.jar.JarFile(String)|Creates a new JarFile to read from the specified
|java.util.jar.JarFile(String,boolean)|Creates a new JarFile to read from the s

*java.util.jar.JarFile_Methods*
|java.util.jar.JarFile.entries()|Returns an enumeration of the zip file entries
|java.util.jar.JarFile.getEntry(String)|Returns the ZipEntry for the given entr
|java.util.jar.JarFile.getInputStream(ZipEntry)|Returns an input stream for rea
|java.util.jar.JarFile.getJarEntry(String)|Returns the JarEntry for the given e
|java.util.jar.JarFile.getManifest()|Returns the jar file manifest, or null if 

*java.util.jar.JarFile_Description*

The JarFile class is used to read the contents of a jar file from any file that 
can be opened with java.io.RandomAccessFile. It extends the class 
java.util.zip.ZipFile with support for reading an optional Manifest entry. The 
Manifest can be used to specify meta-information about the jar file and its 
entries. 

Unless otherwise noted, passing a null argument to a constructor or method in 
this class will cause a (|java.lang.NullPointerException|) to be thrown. 


*java.lang.String_java.util.jar.JarFile.MANIFEST_NAME*

The JarFile class is used to read the contents of a jar file from any file that 
can be opened with java.io.RandomAccessFile. It extends the class 
java.util.zip.ZipFile with support for reading an optional Manifest entry. The 
Manifest can be used to specify meta-information about the jar file and its 
entries. 

Unless otherwise noted, passing a null argument to a constructor or method in 
this class will cause a (|java.lang.NullPointerException|) to be thrown. 



*java.util.jar.JarFile(File)*

public JarFile(java.io.File file)
  throws |java.io.IOException|
         
Creates a new JarFile to read from the specified File object. The JarFile will 
be verified if it is signed. 

    file - the jar file to be opened for reading 

*java.util.jar.JarFile(File,boolean)*

public JarFile(
  java.io.File file,
  boolean verify)
  throws |java.io.IOException|
         
Creates a new JarFile to read from the specified File object. 

    file - the jar file to be opened for reading 
    verify - whether or not to verify the jar file if it is signed. 

*java.util.jar.JarFile(File,boolean,int)*

public JarFile(
  java.io.File file,
  boolean verify,
  int mode)
  throws |java.io.IOException|
         
Creates a new JarFile to read from the specified File object in the specified 
mode. The mode argument must be either OPEN_READ or OPEN_READ | OPEN_DELETE. 

    file - the jar file to be opened for reading 
    verify - whether or not to verify the jar file if it is signed. 
    mode - the mode in which the file is to be opened 

*java.util.jar.JarFile(String)*

public JarFile(java.lang.String name)
  throws |java.io.IOException|
         
Creates a new JarFile to read from the specified file name. The JarFile will be 
verified if it is signed. 

    name - the name of the jar file to be opened for reading 

*java.util.jar.JarFile(String,boolean)*

public JarFile(
  java.lang.String name,
  boolean verify)
  throws |java.io.IOException|
         
Creates a new JarFile to read from the specified file name. 

    name - the name of the jar file to be opened for reading 
    verify - whether or not to verify the jar file if it is signed. 

*java.util.jar.JarFile.entries()*

public |java.util.Enumeration| entries()

Returns an enumeration of the zip file entries. 


*java.util.jar.JarFile.getEntry(String)*

public |java.util.zip.ZipEntry| getEntry(java.lang.String name)

Returns the ZipEntry for the given entry name or null if not found. 

    name - the jar file entry name 

    Returns: the ZipEntry for the given entry name or null if not found 
*java.util.jar.JarFile.getInputStream(ZipEntry)*

public synchronized |java.io.InputStream| getInputStream(java.util.zip.ZipEntry ze)
  throws |java.io.IOException|
         
Returns an input stream for reading the contents of the specified zip file 
entry. 

    ze - the zip file entry 

    Returns: an input stream for reading the contents of the specified zip file entry 
*java.util.jar.JarFile.getJarEntry(String)*

public |java.util.jar.JarEntry| getJarEntry(java.lang.String name)

Returns the JarEntry for the given entry name or null if not found. 

    name - the jar file entry name 

    Returns: the JarEntry for the given entry name or null if not found. 
*java.util.jar.JarFile.getManifest()*

public |java.util.jar.Manifest| getManifest()
  throws |java.io.IOException|
         
Returns the jar file manifest, or null if none. 


    Returns: the jar file manifest, or null if none 

