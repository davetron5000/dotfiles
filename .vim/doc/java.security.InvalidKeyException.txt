*java.security.InvalidKeyException* *InvalidKeyException* This is the exception 

public class InvalidKeyException
  extends    |java.security.KeyException|

|java.security.InvalidKeyException_Description|
|java.security.InvalidKeyException_Fields|
|java.security.InvalidKeyException_Constructors|
|java.security.InvalidKeyException_Methods|

================================================================================

*java.security.InvalidKeyException_Constructors*
|java.security.InvalidKeyException()|Constructs an InvalidKeyException with no 
|java.security.InvalidKeyException(String)|Constructs an InvalidKeyException wi
|java.security.InvalidKeyException(String,Throwable)|Creates a InvalidKeyExcept
|java.security.InvalidKeyException(Throwable)|Creates a InvalidKeyException wit

*java.security.InvalidKeyException_Description*

This is the exception for invalid Keys (invalid encoding, wrong length, 
uninitialized, etc). 


*java.security.InvalidKeyException()*

public InvalidKeyException()

Constructs an InvalidKeyException with no detail message. A detail message is a 
String that describes this particular exception. 


*java.security.InvalidKeyException(String)*

public InvalidKeyException(java.lang.String msg)

Constructs an InvalidKeyException with the specified detail message. A detail 
message is a String that describes this particular exception. 

    msg - the detail message. 

*java.security.InvalidKeyException(String,Throwable)*

public InvalidKeyException(
  java.lang.String message,
  java.lang.Throwable cause)

Creates a InvalidKeyException with the specified detail message and cause. 

    message - the detail message (which is saved for later retrieval by the {@link 
       #getMessage()} method). 
    cause - the cause (which is saved for later retrieval by the {@link #getCause()} 
       method). (A null value is permitted, and indicates that the cause is 
       nonexistent or unknown.) 

*java.security.InvalidKeyException(Throwable)*

public InvalidKeyException(java.lang.Throwable cause)

Creates a InvalidKeyException with the specified cause and a detail message of 
(cause==null ? null : cause.toString()) (which typically contains the class and 
detail message of cause). 

    cause - the cause (which is saved for later retrieval by the {@link #getCause()} 
       method). (A null value is permitted, and indicates that the cause is 
       nonexistent or unknown.) 

