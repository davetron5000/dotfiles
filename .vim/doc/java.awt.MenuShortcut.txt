*java.awt.MenuShortcut* *MenuShortcut* The MenuShortcutclass represents a keyboa

public class MenuShortcut
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|java.awt.MenuShortcut_Description|
|java.awt.MenuShortcut_Fields|
|java.awt.MenuShortcut_Constructors|
|java.awt.MenuShortcut_Methods|

================================================================================

*java.awt.MenuShortcut_Constructors*
|java.awt.MenuShortcut(int)|Constructs a new MenuShortcut for the specified vir
|java.awt.MenuShortcut(int,boolean)|Constructs a new MenuShortcut for the speci

*java.awt.MenuShortcut_Methods*
|java.awt.MenuShortcut.equals(MenuShortcut)|Returns whether this MenuShortcut i
|java.awt.MenuShortcut.equals(Object)|Returns whether this MenuShortcut is the 
|java.awt.MenuShortcut.getKey()|Returns the raw keycode of this MenuShortcut.
|java.awt.MenuShortcut.hashCode()|Returns the hashcode for this MenuShortcut.
|java.awt.MenuShortcut.paramString()|Returns the parameter string representing 
|java.awt.MenuShortcut.toString()|Returns an internationalized description of t
|java.awt.MenuShortcut.usesShiftModifier()|Returns whether this MenuShortcut mu

*java.awt.MenuShortcut_Description*

The MenuShortcutclass represents a keyboard accelerator for a MenuItem. 

Menu shortcuts are created using virtual keycodes, not characters. For example, 
a menu shortcut for Ctrl-a (assuming that Control is the accelerator key) would 
be created with code like the following: 

MenuShortcut ms = new MenuShortcut(KeyEvent.VK_A, false); 

The accelerator key is platform-dependent and may be obtained via 
(|java.awt.Toolkit|) . 


*java.awt.MenuShortcut(int)*

public MenuShortcut(int key)

Constructs a new MenuShortcut for the specified virtual keycode. 

    key - the raw keycode for this MenuShortcut, as would be returned in the keyCode 
       field of a {@link java.awt.event.KeyEvent KeyEvent} if this key were 
       pressed. 

*java.awt.MenuShortcut(int,boolean)*

public MenuShortcut(
  int key,
  boolean useShiftModifier)

Constructs a new MenuShortcut for the specified virtual keycode. 

    key - the raw keycode for this MenuShortcut, as would be returned in the keyCode 
       field of a {@link java.awt.event.KeyEvent KeyEvent} if this key were 
       pressed. 
    useShiftModifier - indicates whether this MenuShortcut is invoked with the SHIFT key down. 

*java.awt.MenuShortcut.equals(MenuShortcut)*

public boolean equals(java.awt.MenuShortcut s)

Returns whether this MenuShortcut is the same as another: equality is defined 
to mean that both MenuShortcuts use the same key and both either use or don't 
use the SHIFT key. 

    s - the MenuShortcut to compare with this. 

    Returns: true if this MenuShortcut is the same as another, false otherwise. 
*java.awt.MenuShortcut.equals(Object)*

public boolean equals(java.lang.Object obj)

Returns whether this MenuShortcut is the same as another: equality is defined 
to mean that both MenuShortcuts use the same key and both either use or don't 
use the SHIFT key. 

    obj - the Object to compare with this. 

    Returns: true if this MenuShortcut is the same as another, false otherwise. 
*java.awt.MenuShortcut.getKey()*

public int getKey()

Returns the raw keycode of this MenuShortcut. 


    Returns: the raw keycode of this MenuShortcut. 
*java.awt.MenuShortcut.hashCode()*

public int hashCode()

Returns the hashcode for this MenuShortcut. 


    Returns: the hashcode for this MenuShortcut. 
*java.awt.MenuShortcut.paramString()*

protected |java.lang.String| paramString()

Returns the parameter string representing the state of this MenuShortcut. This 
string is useful for debugging. 


    Returns: the parameter string of this MenuShortcut. 
*java.awt.MenuShortcut.toString()*

public |java.lang.String| toString()

Returns an internationalized description of the MenuShortcut. 


    Returns: a string representation of this MenuShortcut. 
*java.awt.MenuShortcut.usesShiftModifier()*

public boolean usesShiftModifier()

Returns whether this MenuShortcut must be invoked using the SHIFT key. 


    Returns: true if this MenuShortcut must be invoked using the SHIFT key, false otherwise. 

