*javax.swing.ImageIcon* *ImageIcon* An implementation of the Icon interface that

public class ImageIcon
  extends    |java.lang.Object|
  implements |javax.swing.Icon|
             |java.io.Serializable|
             |javax.accessibility.Accessible|

|javax.swing.ImageIcon_Description|
|javax.swing.ImageIcon_Fields|
|javax.swing.ImageIcon_Constructors|
|javax.swing.ImageIcon_Methods|

================================================================================

*javax.swing.ImageIcon_Fields*
|java.awt.Component_javax.swing.ImageIcon.component|
|java.awt.MediaTracker_javax.swing.ImageIcon.tracker|

*javax.swing.ImageIcon_Constructors*
|javax.swing.ImageIcon()|Creates an uninitialized image icon.
|javax.swing.ImageIcon(byte[])|Creates an ImageIcon from an array of bytes whic
|javax.swing.ImageIcon(byte[],String)|Creates an ImageIcon from an array of byt
|javax.swing.ImageIcon(Image)|Creates an ImageIcon from an image object.
|javax.swing.ImageIcon(Image,String)|Creates an ImageIcon from the image.
|javax.swing.ImageIcon(String)|Creates an ImageIcon from the specified file.
|javax.swing.ImageIcon(String,String)|Creates an ImageIcon from the specified f
|javax.swing.ImageIcon(URL)|Creates an ImageIcon from the specified URL.
|javax.swing.ImageIcon(URL,String)|Creates an ImageIcon from the specified URL.

*javax.swing.ImageIcon_Methods*
|javax.swing.ImageIcon.getAccessibleContext()|Gets the AccessibleContext associ
|javax.swing.ImageIcon.getDescription()|Gets the description of the image.
|javax.swing.ImageIcon.getIconHeight()|Gets the height of the icon.
|javax.swing.ImageIcon.getIconWidth()|Gets the width of the icon.
|javax.swing.ImageIcon.getImage()|Returns this icon's Image.
|javax.swing.ImageIcon.getImageLoadStatus()|Returns the status of the image loa
|javax.swing.ImageIcon.getImageObserver()|Returns the image observer for the im
|javax.swing.ImageIcon.loadImage(Image)|Loads the image, returning only when th
|javax.swing.ImageIcon.paintIcon(Component,Graphics,int,int)|Paints the icon.
|javax.swing.ImageIcon.setDescription(String)|Sets the description of the image
|javax.swing.ImageIcon.setImage(Image)|Sets the image displayed by this icon.
|javax.swing.ImageIcon.setImageObserver(ImageObserver)|Sets the image observer 
|javax.swing.ImageIcon.toString()|Returns a string representation of this image

*javax.swing.ImageIcon_Description*

An implementation of the Icon interface that paints Icons from Images. Images 
that are created from a URL, filename or byte array are preloaded using 
MediaTracker to monitor the loaded state of the image. 

For further information and examples of using image icons, see How to Use Icons 
in The Java Tutorial. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*java.awt.Component_javax.swing.ImageIcon.component*

An implementation of the Icon interface that paints Icons from Images. Images 
that are created from a URL, filename or byte array are preloaded using 
MediaTracker to monitor the loaded state of the image. 

For further information and examples of using image icons, see How to Use Icons 
in The Java Tutorial. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*java.awt.MediaTracker_javax.swing.ImageIcon.tracker*

An implementation of the Icon interface that paints Icons from Images. Images 
that are created from a URL, filename or byte array are preloaded using 
MediaTracker to monitor the loaded state of the image. 

For further information and examples of using image icons, see How to Use Icons 
in The Java Tutorial. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 



*javax.swing.ImageIcon()*

public ImageIcon()

Creates an uninitialized image icon. 


*javax.swing.ImageIcon(byte[])*

public ImageIcon(byte[] imageData)

Creates an ImageIcon from an array of bytes which were read from an image file 
containing a supported image format, such as GIF, JPEG, or (as of 1.3) PNG. 
Normally this array is created by reading an image using 
Class.getResourceAsStream(), but the byte array may also be statically stored 
in a class. If the resulting image has a "comment" property that is a string, 
then the string is used as the description of this icon. 

    imageData - an array of pixels in an image format supported by the AWT Toolkit, such as 
       GIF, JPEG, or (as of 1.3) PNG 

*javax.swing.ImageIcon(byte[],String)*

public ImageIcon(
  byte[] imageData,
  java.lang.String description)

Creates an ImageIcon from an array of bytes which were read from an image file 
containing a supported image format, such as GIF, JPEG, or (as of 1.3) PNG. 
Normally this array is created by reading an image using 
Class.getResourceAsStream(), but the byte array may also be statically stored 
in a class. 

    imageData - an array of pixels in an image format supported by the AWT Toolkit, such as 
       GIF, JPEG, or (as of 1.3) PNG 
    description - a brief textual description of the image 

*javax.swing.ImageIcon(Image)*

public ImageIcon(java.awt.Image image)

Creates an ImageIcon from an image object. If the image has a "comment" 
property that is a string, then the string is used as the description of this 
icon. 

    image - the image 

*javax.swing.ImageIcon(Image,String)*

public ImageIcon(
  java.awt.Image image,
  java.lang.String description)

Creates an ImageIcon from the image. 

    image - the image 
    description - a brief textual description of the image 

*javax.swing.ImageIcon(String)*

public ImageIcon(java.lang.String filename)

Creates an ImageIcon from the specified file. The image will be preloaded by 
using MediaTracker to monitor the loading state of the image. The specified 
String can be a file name or a file path. When specifying a path, use the 
Internet-standard forward-slash ("/") as a separator. (The string is converted 
to an URL, so the forward-slash works on all systems.) For example, specify: 

new ImageIcon("images/myImage.gif") 

The description is initialized to the filename string. 

    filename - a String specifying a filename or path 

*javax.swing.ImageIcon(String,String)*

public ImageIcon(
  java.lang.String filename,
  java.lang.String description)

Creates an ImageIcon from the specified file. The image will be preloaded by 
using MediaTracker to monitor the loading state of the image. 

    filename - the name of the file containing the image 
    description - a brief textual description of the image 

*javax.swing.ImageIcon(URL)*

public ImageIcon(java.net.URL location)

Creates an ImageIcon from the specified URL. The image will be preloaded by 
using MediaTracker to monitor the loaded state of the image. The icon's 
description is initialized to be a string representation of the URL. 

    location - the URL for the image 

*javax.swing.ImageIcon(URL,String)*

public ImageIcon(
  java.net.URL location,
  java.lang.String description)

Creates an ImageIcon from the specified URL. The image will be preloaded by 
using MediaTracker to monitor the loaded state of the image. 

    location - the URL for the image 
    description - a brief textual description of the image 

*javax.swing.ImageIcon.getAccessibleContext()*

public |javax.accessibility.AccessibleContext| getAccessibleContext()

Gets the AccessibleContext associated with this ImageIcon. For image icons, the 
AccessibleContext takes the form of an AccessibleImageIcon. A new 
AccessibleImageIcon instance is created if necessary. 


    Returns: an AccessibleImageIcon that serves as the AccessibleContext of this ImageIcon 
*javax.swing.ImageIcon.getDescription()*

public |java.lang.String| getDescription()

Gets the description of the image. This is meant to be a brief textual 
description of the object. For example, it might be presented to a blind user 
to give an indication of the purpose of the image. The description may be null. 


    Returns: a brief textual description of the image 
*javax.swing.ImageIcon.getIconHeight()*

public int getIconHeight()

Gets the height of the icon. 


    Returns: the height in pixels of this icon 
*javax.swing.ImageIcon.getIconWidth()*

public int getIconWidth()

Gets the width of the icon. 


    Returns: the width in pixels of this icon 
*javax.swing.ImageIcon.getImage()*

public |java.awt.Image| getImage()

Returns this icon's Image. 


    Returns: the Image object for this ImageIcon 
*javax.swing.ImageIcon.getImageLoadStatus()*

public int getImageLoadStatus()

Returns the status of the image loading operation. 


    Returns: the loading status as defined by java.awt.MediaTracker 
*javax.swing.ImageIcon.getImageObserver()*

public |java.awt.image.ImageObserver| getImageObserver()

Returns the image observer for the image. 


    Returns: the image observer, which may be null 
*javax.swing.ImageIcon.loadImage(Image)*

protected void loadImage(java.awt.Image image)

Loads the image, returning only when the image is loaded. 

    image - the image 

*javax.swing.ImageIcon.paintIcon(Component,Graphics,int,int)*

public synchronized void paintIcon(
  java.awt.Component c,
  java.awt.Graphics g,
  int x,
  int y)

Paints the icon. The top-left corner of the icon is drawn at the point (x, y) 
in the coordinate space of the graphics context g. If this icon has no image 
observer, this method uses the c component as the observer. 

    c - the component to be used as the observer if this icon has no image observer 
    g - the graphics context 
    x - the X coordinate of the icon's top-left corner 
    y - the Y coordinate of the icon's top-left corner 

*javax.swing.ImageIcon.setDescription(String)*

public void setDescription(java.lang.String description)

Sets the description of the image. This is meant to be a brief textual 
description of the object. For example, it might be presented to a blind user 
to give an indication of the purpose of the image. 

    description - a brief textual description of the image 

*javax.swing.ImageIcon.setImage(Image)*

public void setImage(java.awt.Image image)

Sets the image displayed by this icon. 

    image - the image 

*javax.swing.ImageIcon.setImageObserver(ImageObserver)*

public void setImageObserver(java.awt.image.ImageObserver observer)

Sets the image observer for the image. Set this property if the ImageIcon 
contains an animated GIF, so the observer is notified to update its display. 
For example: 

icon = new ImageIcon(...) button.setIcon(icon); icon.setImageObserver(button); 

    observer - the image observer 

*javax.swing.ImageIcon.toString()*

public |java.lang.String| toString()

Returns a string representation of this image. 


    Returns: a string representing this image 

