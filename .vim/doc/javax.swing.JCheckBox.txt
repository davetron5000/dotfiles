*javax.swing.JCheckBox* *JCheckBox* An implementation of a check box -- an item that can be selected or
 deselected, and which displays its state to the user.

public class JCheckBox
  extends    |javax.swing.JToggleButton|
  implements |javax.accessibility.Accessible|

|javax.swing.JCheckBox_Description|
|javax.swing.JCheckBox_Fields|
|javax.swing.JCheckBox_Constructors|
|javax.swing.JCheckBox_Methods|

====================================================================================================================================================================================

*javax.swing.JCheckBox_Fields*
|java.lang.String_javax.swing.JCheckBox.BORDER_PAINTED_FLAT_CHANGED_PROPERTY|

*javax.swing.JCheckBox_Constructors*
|javax.swing.JCheckBox()|Creates an initially unselected check box button with no text, no icon.
|javax.swing.JCheckBox(Action)|Creates a check box where properties are taken from the   Action supplied.
|javax.swing.JCheckBox(Icon)|Creates an initially unselected check box with an icon.
|javax.swing.JCheckBox(Icon,boolean)|Creates a check box with an icon and specifies whether  or not it is initially selected.
|javax.swing.JCheckBox(String)|Creates an initially unselected check box with text.
|javax.swing.JCheckBox(String,boolean)|Creates a check box with text and specifies whether   or not it is initially selected.
|javax.swing.JCheckBox(String,Icon)|Creates an initially unselected check box with   the specified text and icon.
|javax.swing.JCheckBox(String,Icon,boolean)|Creates a check box with text and icon,  and specifies whether or not it is initially selected.

*javax.swing.JCheckBox_Methods*
|javax.swing.JCheckBox.configurePropertiesFromAction(Action)|Factory method which sets the ActionEvent source's  properties according to values from the Action instance.
|javax.swing.JCheckBox.createActionPropertyChangeListener(Action)|Factory method which creates the PropertyChangeListener  used to update the ActionEvent source as properties chan
|javax.swing.JCheckBox.getAccessibleContext()|Gets the AccessibleContext associated with this JCheckBox.
|javax.swing.JCheckBox.getUIClassID()|Returns a string that specifies the name of the Lclass  that renders this component.
|javax.swing.JCheckBox.isBorderPaintedFlat()|Gets the value of the borderPaintedFlat property.
|javax.swing.JCheckBox.paramString()|Returns a string representation of this JCheckBox.
|javax.swing.JCheckBox.setBorderPaintedFlat(boolean)|Sets the borderPaintedFlat property,  which gives a hint to the look and feel as to the  appearance of the check box border.
|javax.swing.JCheckBox.updateUI()|Resets the UI property to a value from the current look and feel.

*javax.swing.JCheckBox_Description*

An implementation of a check box -- an item that can be selected or deselected, and which displays its state to the user. By convention, any number of check boxes in a group can 
be selected. See How to Use Buttons, Check Boxes, and Radio Buttons in The Java Tutorial for examples and information on using check boxes. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*java.lang.String_javax.swing.JCheckBox.BORDER_PAINTED_FLAT_CHANGED_PROPERTY*

Identifies a change to the flat property. 



*javax.swing.JCheckBox()*

public JCheckBox()

Creates an initially unselected check box button with no text, no icon. 


*javax.swing.JCheckBox(Action)*

public JCheckBox(javax.swing.Action a)

Creates a check box where properties are taken from the Action supplied. 


*javax.swing.JCheckBox(Icon)*

public JCheckBox(javax.swing.Icon icon)

Creates an initially unselected check box with an icon. 

    icon - the Icon image to display 

*javax.swing.JCheckBox(Icon,boolean)*

public JCheckBox(
  javax.swing.Icon icon,
  boolean selected)

Creates a check box with an icon and specifies whether or not it is initially selected. 

    icon - the Icon image to display 
    selected - a boolean value indicating the initial selection state. If true the check box is selected 

*javax.swing.JCheckBox(String)*

public JCheckBox(java.lang.String text)

Creates an initially unselected check box with text. 

    text - the text of the check box. 

*javax.swing.JCheckBox(String,boolean)*

public JCheckBox(
  java.lang.String text,
  boolean selected)

Creates a check box with text and specifies whether or not it is initially selected. 

    text - the text of the check box. 
    selected - a boolean value indicating the initial selection state. If true the check box is selected 

*javax.swing.JCheckBox(String,Icon)*

public JCheckBox(
  java.lang.String text,
  javax.swing.Icon icon)

Creates an initially unselected check box with the specified text and icon. 

    text - the text of the check box. 
    icon - the Icon image to display 

*javax.swing.JCheckBox(String,Icon,boolean)*

public JCheckBox(
  java.lang.String text,
  javax.swing.Icon icon,
  boolean selected)

Creates a check box with text and icon, and specifies whether or not it is initially selected. 

    text - the text of the check box. 
    icon - the Icon image to display 
    selected - a boolean value indicating the initial selection state. If true the check box is selected 

*javax.swing.JCheckBox.configurePropertiesFromAction(Action)*

protected void configurePropertiesFromAction(javax.swing.Action a)

Factory method which sets the ActionEvent source's properties according to values from the Action instance. The properties which are set may differ for subclasses. By default, the 
properties which get set are Text, Mnemonic, Enabled, ActionCommand, and ToolTipText. 


    a - the Action from which to get the properties, or null 

*javax.swing.JCheckBox.createActionPropertyChangeListener(Action)*

protected |java.beans.PropertyChangeListener| createActionPropertyChangeListener(javax.swing.Action a)

Factory method which creates the PropertyChangeListener used to update the ActionEvent source as properties change on its Action instance. Subclasses may override this in order to 
provide their own PropertyChangeListener if the set of properties which should be kept up to date differs from the default properties (Text, Icon, Enabled, ToolTipText). 

Note that PropertyChangeListeners should avoid holding strong references to the ActionEvent source, as this may hinder garbage collection of the ActionEvent source and all 
components in its containment hierarchy. 



*javax.swing.JCheckBox.getAccessibleContext()*

public |javax.accessibility.AccessibleContext| getAccessibleContext()

Gets the AccessibleContext associated with this JCheckBox. For JCheckBoxes, the AccessibleContext takes the form of an AccessibleJCheckBox. A new AccessibleJCheckBox instance is 
created if necessary. 



    Returns: an AccessibleJCheckBox that serves as the AccessibleContext of this JCheckBox 

*javax.swing.JCheckBox.getUIClassID()*

public |java.lang.String| getUIClassID()

Returns a string that specifies the name of the Lclass that renders this component. 



    Returns: the string "CheckBoxUI" 

*javax.swing.JCheckBox.isBorderPaintedFlat()*

public boolean isBorderPaintedFlat()

Gets the value of the borderPaintedFlat property. 



    Returns: the value of the borderPaintedFlat property 

*javax.swing.JCheckBox.paramString()*

protected |java.lang.String| paramString()

Returns a string representation of this JCheckBox. This method is intended to be used only for debugging purposes, and the content and format of the returned string may vary 
between implementations. The returned string may be empty but may not be null. specific new aspects of the JFC components. 



    Returns: a string representation of this JCheckBox. 

*javax.swing.JCheckBox.setBorderPaintedFlat(boolean)*

public void setBorderPaintedFlat(boolean b)

Sets the borderPaintedFlat property, which gives a hint to the look and feel as to the appearance of the check box border. This is usually set to true when a JCheckBox instance is 
used as a renderer in a component such as a JTable or JTree. The default value for the borderPaintedFlat property is false. This method fires a property changed event. Some look 
and feels might not implement flat borders; they will ignore this property. 


    b - true requests that the border be painted flat; false requests normal borders 

*javax.swing.JCheckBox.updateUI()*

public void updateUI()

Resets the UI property to a value from the current look and feel. 




