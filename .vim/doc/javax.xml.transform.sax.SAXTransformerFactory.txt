*javax.xml.transform.sax.SAXTransformerFactory* *SAXTransformerFactory* This cla

public abstract class SAXTransformerFactory
  extends    |javax.xml.transform.TransformerFactory|

|javax.xml.transform.sax.SAXTransformerFactory_Description|
|javax.xml.transform.sax.SAXTransformerFactory_Fields|
|javax.xml.transform.sax.SAXTransformerFactory_Constructors|
|javax.xml.transform.sax.SAXTransformerFactory_Methods|

================================================================================

*javax.xml.transform.sax.SAXTransformerFactory_Fields*
|java.lang.String_javax.xml.transform.sax.SAXTransformerFactory.FEATURE|
|java.lang.String_javax.xml.transform.sax.SAXTransformerFactory.FEATURE_XMLFILTER|

*javax.xml.transform.sax.SAXTransformerFactory_Constructors*
|javax.xml.transform.sax.SAXTransformerFactory()|The default constructor is pro

*javax.xml.transform.sax.SAXTransformerFactory_Methods*
|javax.xml.transform.sax.SAXTransformerFactory.newTemplatesHandler()|Get a Temp
|javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler()|Get a Tr
|javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler(Source)|Ge
|javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler(Templates)|
|javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter(Source)|Create an X
|javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter(Templates)|Create a

*javax.xml.transform.sax.SAXTransformerFactory_Description*

This class extends TransformerFactory to provide SAX-specific factory methods. 
It provides two types of ContentHandlers, one for creating Transformers, the 
other for creating Templates objects. 

If an application wants to set the ErrorHandler or EntityResolver for an 
XMLReader used during a transformation, it should use a URIResolver to return 
the SAXSource which provides (with getXMLReader) a reference to the XMLReader. 


*java.lang.String_javax.xml.transform.sax.SAXTransformerFactory.FEATURE*

This class extends TransformerFactory to provide SAX-specific factory methods. 
It provides two types of ContentHandlers, one for creating Transformers, the 
other for creating Templates objects. 

If an application wants to set the ErrorHandler or EntityResolver for an 
XMLReader used during a transformation, it should use a URIResolver to return 
the SAXSource which provides (with getXMLReader) a reference to the XMLReader. 


*java.lang.String_javax.xml.transform.sax.SAXTransformerFactory.FEATURE_XMLFILTER*

This class extends TransformerFactory to provide SAX-specific factory methods. 
It provides two types of ContentHandlers, one for creating Transformers, the 
other for creating Templates objects. 

If an application wants to set the ErrorHandler or EntityResolver for an 
XMLReader used during a transformation, it should use a URIResolver to return 
the SAXSource which provides (with getXMLReader) a reference to the XMLReader. 



*javax.xml.transform.sax.SAXTransformerFactory()*

protected SAXTransformerFactory()

The default constructor is protected on purpose. 


*javax.xml.transform.sax.SAXTransformerFactory.newTemplatesHandler()*

public abstract |javax.xml.transform.sax.TemplatesHandler| newTemplatesHandler()
  throws |javax.xml.transform.TransformerConfigurationException|
         
Get a TemplatesHandler object that can process SAX ContentHandler events into a 
Templates object. 


    Returns: A non-null reference to a TransformerHandler, that may be used as a 
             ContentHandler for SAX parse events. 
*javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler()*

public abstract |javax.xml.transform.sax.TransformerHandler| newTransformerHandler()
  throws |javax.xml.transform.TransformerConfigurationException|
         
Get a TransformerHandler object that can process SAX ContentHandler events into 
a Result. The transformation is defined as an identity (or copy) 
transformation, for example to copy a series of SAX parse events into a DOM 
tree. 


    Returns: A non-null reference to a TransformerHandler, that may be used as a 
             ContentHandler for SAX parse events. 
*javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler(Source)*

public abstract |javax.xml.transform.sax.TransformerHandler| newTransformerHandler(javax.xml.transform.Source src)
  throws |javax.xml.transform.TransformerConfigurationException|
         
Get a TransformerHandler object that can process SAX ContentHandler events into 
a Result, based on the transformation instructions specified by the argument. 

    src - The Source of the transformation instructions. 

    Returns: TransformerHandler ready to transform SAX events. 
*javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler(Templates)*

public abstract |javax.xml.transform.sax.TransformerHandler| newTransformerHandler(javax.xml.transform.Templates templates)
  throws |javax.xml.transform.TransformerConfigurationException|
         
Get a TransformerHandler object that can process SAX ContentHandler events into 
a Result, based on the Templates argument. 

    templates - The compiled transformation instructions. 

    Returns: TransformerHandler ready to transform SAX events. 
*javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter(Source)*

public abstract |org.xml.sax.XMLFilter| newXMLFilter(javax.xml.transform.Source src)
  throws |javax.xml.transform.TransformerConfigurationException|
         
Create an XMLFilter that uses the given Source as the transformation 
instructions. 

    src - The Source of the transformation instructions. 

    Returns: An XMLFilter object, or null if this feature is not supported. 
*javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter(Templates)*

public abstract |org.xml.sax.XMLFilter| newXMLFilter(javax.xml.transform.Templates templates)
  throws |javax.xml.transform.TransformerConfigurationException|
         
Create an XMLFilter, based on the Templates argument.. 

    templates - The compiled transformation instructions. 

    Returns: An XMLFilter object, or null if this feature is not supported. 

