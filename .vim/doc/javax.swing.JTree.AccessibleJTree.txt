*javax.swing.JTree.AccessibleJTree* *JTree.AccessibleJTree* This class implements accessibility support for the 
 JTree class.

protected class JTree.AccessibleJTree
  extends    |javax.swing.JComponent.AccessibleJComponent|
  implements |javax.accessibility.AccessibleSelection|
             |javax.swing.event.TreeSelectionListener|
             |javax.swing.event.TreeModelListener|
             |javax.swing.event.TreeExpansionListener|

|javax.swing.JTree.AccessibleJTree_Description|
|javax.swing.JTree.AccessibleJTree_Fields|
|javax.swing.JTree.AccessibleJTree_Constructors|
|javax.swing.JTree.AccessibleJTree_Methods|

====================================================================================================================================================================================

*javax.swing.JTree.AccessibleJTree_Constructors*
|javax.swing.JTree.AccessibleJTree()|

*javax.swing.JTree.AccessibleJTree_Methods*
|javax.swing.JTree.AccessibleJTree.addAccessibleSelection(int)|Adds the specified selected item in the object to the object's  selection.
|javax.swing.JTree.AccessibleJTree.clearAccessibleSelection()|Clears the selection in the object, so that nothing in the  object is selected.
|javax.swing.JTree.AccessibleJTree.fireVisibleDataPropertyChange()|Fire a visible data property change notification.
|javax.swing.JTree.AccessibleJTree.getAccessibleAt(Point)|Returns the Accessible child, if one exists,  contained at the local coordinate Point.
|javax.swing.JTree.AccessibleJTree.getAccessibleChild(int)|Return the nth Accessible child of the object.
|javax.swing.JTree.AccessibleJTree.getAccessibleChildrenCount()|Returns the number of top-level children nodes of this   JTree.
|javax.swing.JTree.AccessibleJTree.getAccessibleIndexInParent()|Get the index of this object in its accessible parent.
|javax.swing.JTree.AccessibleJTree.getAccessibleRole()|Get the role of this object.
|javax.swing.JTree.AccessibleJTree.getAccessibleSelection()|Get the AccessibleSelection associated with this object.
|javax.swing.JTree.AccessibleJTree.getAccessibleSelection(int)|Returns an Accessible representing the specified selected item  in the object.
|javax.swing.JTree.AccessibleJTree.getAccessibleSelectionCount()|Returns the number of items currently selected.
|javax.swing.JTree.AccessibleJTree.isAccessibleChildSelected(int)|Returns true if the current child of this object is selected.
|javax.swing.JTree.AccessibleJTree.removeAccessibleSelection(int)|Removes the specified selected item in the object from the object's  selection.
|javax.swing.JTree.AccessibleJTree.selectAllAccessibleSelection()|Causes every selected item in the object to be selected  if the object supports multiple selections.
|javax.swing.JTree.AccessibleJTree.treeCollapsed(TreeExpansionEvent)|Tree Collapsed notification.
|javax.swing.JTree.AccessibleJTree.treeExpanded(TreeExpansionEvent)|Tree Model Expansion notification.
|javax.swing.JTree.AccessibleJTree.treeNodesChanged(TreeModelEvent)|Tree Model Node change notification.
|javax.swing.JTree.AccessibleJTree.treeNodesInserted(TreeModelEvent)|Tree Model Node change notification.
|javax.swing.JTree.AccessibleJTree.treeNodesRemoved(TreeModelEvent)|Tree Model Node change notification.
|javax.swing.JTree.AccessibleJTree.treeStructureChanged(TreeModelEvent)|Tree Model structure change change notification.
|javax.swing.JTree.AccessibleJTree.valueChanged(TreeSelectionEvent)|Tree Selection Listener value change method.

*javax.swing.JTree.AccessibleJTree_Description*

This class implements accessibility support for the JTree class. It provides an implementation of the Java Accessibility API appropriate to tree user-interface elements. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*javax.swing.JTree.AccessibleJTree()*

public JTree.AccessibleJTree()




*javax.swing.JTree.AccessibleJTree.addAccessibleSelection(int)*

public void addAccessibleSelection(int i)

Adds the specified selected item in the object to the object's selection. If the object supports multiple selections, the specified item is added to any existing selection, 
otherwise it replaces any existing selection in the object. If the specified item is already selected, this method has no effect. 


    i - the zero-based index of selectable items 

*javax.swing.JTree.AccessibleJTree.clearAccessibleSelection()*

public void clearAccessibleSelection()

Clears the selection in the object, so that nothing in the object is selected. 



*javax.swing.JTree.AccessibleJTree.fireVisibleDataPropertyChange()*

public void fireVisibleDataPropertyChange()

Fire a visible data property change notification. A 'visible' data property is one that represents something about the way the component appears on the display, where that 
appearance isn't bound to any other property. It notifies screen readers that the visual appearance of the component has changed, so they can notify the user. 



*javax.swing.JTree.AccessibleJTree.getAccessibleAt(Point)*

public |javax.accessibility.Accessible| getAccessibleAt(java.awt.Point p)

Returns the Accessible child, if one exists, contained at the local coordinate Point. Otherwise returns null. 


    p - point in local coordinates of this Accessible 

    Returns: the Accessible, if it exists, at the specified location; else null 

*javax.swing.JTree.AccessibleJTree.getAccessibleChild(int)*

public |javax.accessibility.Accessible| getAccessibleChild(int i)

Return the nth Accessible child of the object. 


    i - zero-based index of child 

    Returns: the nth Accessible child of the object 

*javax.swing.JTree.AccessibleJTree.getAccessibleChildrenCount()*

public int getAccessibleChildrenCount()

Returns the number of top-level children nodes of this JTree. Each of these nodes may in turn have children nodes. 



    Returns: the number of accessible children nodes in the tree. 

*javax.swing.JTree.AccessibleJTree.getAccessibleIndexInParent()*

public int getAccessibleIndexInParent()

Get the index of this object in its accessible parent. 



    Returns: the index of this object in its parent. Since a JTree top-level object does not have an accessible parent. 

*javax.swing.JTree.AccessibleJTree.getAccessibleRole()*

public |javax.accessibility.AccessibleRole| getAccessibleRole()

Get the role of this object. 



    Returns: an instance of AccessibleRole describing the role of the object 

*javax.swing.JTree.AccessibleJTree.getAccessibleSelection()*

public |javax.accessibility.AccessibleSelection| getAccessibleSelection()

Get the AccessibleSelection associated with this object. In the implementation of the Java Accessibility API for this class, return this object, which is responsible for 
implementing the AccessibleSelection interface on behalf of itself. 



    Returns: 

*javax.swing.JTree.AccessibleJTree.getAccessibleSelection(int)*

public |javax.accessibility.Accessible| getAccessibleSelection(int i)

Returns an Accessible representing the specified selected item in the object. If there isn't a selection, or there are fewer items selected than the integer passed in, the return 
value will be null. 


    i - the zero-based index of selected items 

    Returns: an Accessible containing the selected item 

*javax.swing.JTree.AccessibleJTree.getAccessibleSelectionCount()*

public int getAccessibleSelectionCount()

Returns the number of items currently selected. If no items are selected, the return value will be 0. 



    Returns: the number of items currently selected. 

*javax.swing.JTree.AccessibleJTree.isAccessibleChildSelected(int)*

public boolean isAccessibleChildSelected(int i)

Returns true if the current child of this object is selected. 


    i - the zero-based index of the child in this Accessible object. 

*javax.swing.JTree.AccessibleJTree.removeAccessibleSelection(int)*

public void removeAccessibleSelection(int i)

Removes the specified selected item in the object from the object's selection. If the specified item isn't currently selected, this method has no effect. 


    i - the zero-based index of selectable items 

*javax.swing.JTree.AccessibleJTree.selectAllAccessibleSelection()*

public void selectAllAccessibleSelection()

Causes every selected item in the object to be selected if the object supports multiple selections. 



*javax.swing.JTree.AccessibleJTree.treeCollapsed(TreeExpansionEvent)*

public void treeCollapsed(javax.swing.event.TreeExpansionEvent e)

Tree Collapsed notification. 


    e - a TreeExpansionEvent 

*javax.swing.JTree.AccessibleJTree.treeExpanded(TreeExpansionEvent)*

public void treeExpanded(javax.swing.event.TreeExpansionEvent e)

Tree Model Expansion notification. 


    e - a Tree node insertion event 

*javax.swing.JTree.AccessibleJTree.treeNodesChanged(TreeModelEvent)*

public void treeNodesChanged(javax.swing.event.TreeModelEvent e)

Tree Model Node change notification. 


    e - a Tree Model event 

*javax.swing.JTree.AccessibleJTree.treeNodesInserted(TreeModelEvent)*

public void treeNodesInserted(javax.swing.event.TreeModelEvent e)

Tree Model Node change notification. 


    e - a Tree node insertion event 

*javax.swing.JTree.AccessibleJTree.treeNodesRemoved(TreeModelEvent)*

public void treeNodesRemoved(javax.swing.event.TreeModelEvent e)

Tree Model Node change notification. 


    e - a Tree node(s) removal event 

*javax.swing.JTree.AccessibleJTree.treeStructureChanged(TreeModelEvent)*

public void treeStructureChanged(javax.swing.event.TreeModelEvent e)

Tree Model structure change change notification. 


    e - a Tree Model event 

*javax.swing.JTree.AccessibleJTree.valueChanged(TreeSelectionEvent)*

public void valueChanged(javax.swing.event.TreeSelectionEvent e)

Tree Selection Listener value change method. Used to fire the property change 


    e - ListSelectionEvent 


