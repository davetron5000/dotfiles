*javax.naming.RefAddr* *RefAddr* This class represents the address of a communications end-point.

public abstract class RefAddr
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|javax.naming.RefAddr_Description|
|javax.naming.RefAddr_Fields|
|javax.naming.RefAddr_Constructors|
|javax.naming.RefAddr_Methods|

====================================================================================================================================================================================

*javax.naming.RefAddr_Fields*
|java.lang.String_javax.naming.RefAddr.addrType|

*javax.naming.RefAddr_Constructors*
|javax.naming.RefAddr(String)|Constructs a new instance of RefAddr using its address type.

*javax.naming.RefAddr_Methods*
|javax.naming.RefAddr.equals(Object)|Determines whether obj is equal to this RefAddr.
|javax.naming.RefAddr.getContent()|Retrieves the contents of this address.
|javax.naming.RefAddr.getType()|Retrieves the address type of this address.
|javax.naming.RefAddr.hashCode()|Computes the hash code of this address using its address type and contents.
|javax.naming.RefAddr.toString()|Generates the string representation of this address.

*javax.naming.RefAddr_Description*

This class represents the address of a communications end-point. It consists of a type that describes the communication mechanism and an address contents determined by an RefAddr 
subclass. 

For example, an address type could be "BSD Printer Address", which specifies that it is an address to be used with the BSD printing protocol. Its contents could be the machine 
name identifying the location of the printer server that understands this protocol. 

A RefAddr is contained within a Reference. 

RefAddr is an abstract class. Concrete implementations of it determine its synchronization properties. 



*java.lang.String_javax.naming.RefAddr.addrType*

Contains the type of this address. 



*javax.naming.RefAddr(String)*

protected RefAddr(java.lang.String addrType)

Constructs a new instance of RefAddr using its address type. 

    addrType - A non-null string describing the type of the address. 

*javax.naming.RefAddr.equals(Object)*

public boolean equals(java.lang.Object obj)

Determines whether obj is equal to this RefAddr. 

obj is equal to this RefAddr all of these conditions are true non-null instance of RefAddr obj has the same address type as this RefAddr (using String.compareTo()) both obj and 
this RefAddr's contents are null or they are equal (using the equals() test). 


    obj - possibly null obj to check. 

    Returns: true if obj is equal to this refaddr; false otherwise. 

*javax.naming.RefAddr.getContent()*

public abstract |java.lang.Object| getContent()

Retrieves the contents of this address. 



    Returns: The possibly null address contents. 

*javax.naming.RefAddr.getType()*

public |java.lang.String| getType()

Retrieves the address type of this address. 



    Returns: The non-null address type of this address. 

*javax.naming.RefAddr.hashCode()*

public int hashCode()

Computes the hash code of this address using its address type and contents. The hash code is the sum of the hash code of the address type and the hash code of the address 
contents. 



    Returns: The hash code of this address as an int. 

*javax.naming.RefAddr.toString()*

public |java.lang.String| toString()

Generates the string representation of this address. The string consists of the address's type and contents with labels. This representation is intended for display only and not 
to be parsed. 



    Returns: The non-null string representation of this address. 


