*java.beans.DesignMode* *DesignMode* 
 This interface is intended to be implemented by, or delegated from, instances
 of java.beans.beancontext.BeanContext, in order to propagate t

public interface interface DesignMode


|java.beans.DesignMode_Description|
|java.beans.DesignMode_Fields|
|java.beans.DesignMode_Constructors|
|java.beans.DesignMode_Methods|

====================================================================================================================================================================================

*java.beans.DesignMode_Fields*
|java.lang.String_java.beans.DesignMode.PROPERTYNAME|

*java.beans.DesignMode_Methods*
|java.beans.DesignMode.isDesignTime()|A value of true denotes that JavaBeans should behave in design time  mode, a value of false denotes runtime behavior.
|java.beans.DesignMode.setDesignTime(boolean)|Sets the "value" of the "designTime" property.

*java.beans.DesignMode_Description*

This interface is intended to be implemented by, or delegated from, instances of java.beans.beancontext.BeanContext, in order to propagate to its nested hierarchy of 
java.beans.beancontext.BeanContextChild instances, the current "designTime" property. 

The JavaBeans specification defines the notion of design time as is a mode in which JavaBeans instances should function during their composition and customization in a interactive 
design, composition or construction tool, as opposed to runtime when the JavaBean is part of an applet, application, or other live Java executable abstraction. 



*java.lang.String_java.beans.DesignMode.PROPERTYNAME*

The standard value of the propertyName as fired from a BeanContext or other source of PropertyChangeEvents. 



*java.beans.DesignMode.isDesignTime()*

public boolean isDesignTime()

A value of true denotes that JavaBeans should behave in design time mode, a value of false denotes runtime behavior. 



    Returns: the current "value" of the "designTime" property. 

*java.beans.DesignMode.setDesignTime(boolean)*

public void setDesignTime(boolean designTime)

Sets the "value" of the "designTime" property. 

If the implementing object is an instance of java.beans.beancontext.BeanContext, or a subinterface thereof, then that BeanContext should fire a PropertyChangeEvent, to its 
registered BeanContextMembershipListeners, with parameters: 

propertyName - java.beans.DesignMode.PROPERTYNAME oldValue - previous value of "designTime" newValue - current value of "designTime" 

Note it is illegal for a BeanContextChild to invoke this method associated with a BeanContext that it is nested within. 


    designTime - the current "value" of the "designTime" property 


