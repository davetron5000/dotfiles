*javax.swing.border.EtchedBorder* *EtchedBorder* A class which implements a simple etched border which can 
 either be etched-in or etched-out.

public class EtchedBorder
  extends    |javax.swing.border.AbstractBorder|

|javax.swing.border.EtchedBorder_Description|
|javax.swing.border.EtchedBorder_Fields|
|javax.swing.border.EtchedBorder_Constructors|
|javax.swing.border.EtchedBorder_Methods|

====================================================================================================================================================================================

*javax.swing.border.EtchedBorder_Fields*
|int_javax.swing.border.EtchedBorder.etchType|
|java.awt.Color_javax.swing.border.EtchedBorder.highlight|
|int_javax.swing.border.EtchedBorder.LOWERED|
|int_javax.swing.border.EtchedBorder.RAISED|
|java.awt.Color_javax.swing.border.EtchedBorder.shadow|

*javax.swing.border.EtchedBorder_Constructors*
|javax.swing.border.EtchedBorder()|Creates a lowered etched border whose colors will be derived  from the background color of the component passed into   the paintBorder method.
|javax.swing.border.EtchedBorder(Color,Color)|Creates a lowered etched border with the specified highlight and  shadow colors.
|javax.swing.border.EtchedBorder(int)|Creates an etched border with the specified etch-type  whose colors will be derived  from the background color of the component passed into  
|javax.swing.border.EtchedBorder(int,Color,Color)|Creates an etched border with the specified etch-type,  highlight and shadow colors.

*javax.swing.border.EtchedBorder_Methods*
|javax.swing.border.EtchedBorder.getBorderInsets(Component)|Returns the insets of the border.
|javax.swing.border.EtchedBorder.getBorderInsets(Component,Insets)|Reinitialize the insets parameter with this Border's current Insets.
|javax.swing.border.EtchedBorder.getEtchType()|Returns which etch-type is set on the etched border.
|javax.swing.border.EtchedBorder.getHighlightColor()|Returns the highlight color of the etched border.
|javax.swing.border.EtchedBorder.getHighlightColor(Component)|Returns the highlight color of the etched border  when rendered on the specified component.
|javax.swing.border.EtchedBorder.getShadowColor()|Returns the shadow color of the etched border.
|javax.swing.border.EtchedBorder.getShadowColor(Component)|Returns the shadow color of the etched border  when rendered on the specified component.
|javax.swing.border.EtchedBorder.isBorderOpaque()|Returns whether or not the border is opaque.
|javax.swing.border.EtchedBorder.paintBorder(Component,Graphics,int,int,int,int)|Paints the border for the specified component with the   specified position and size.

*javax.swing.border.EtchedBorder_Description*

A class which implements a simple etched border which can either be etched-in or etched-out. If no highlight/shadow colors are initialized when the border is created, then these 
colors will be dynamically derived from the background color of the component argument passed into the paintBorder() method. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*int_javax.swing.border.EtchedBorder.etchType*




*java.awt.Color_javax.swing.border.EtchedBorder.highlight*




*int_javax.swing.border.EtchedBorder.LOWERED*

Lowered etched type. 


*int_javax.swing.border.EtchedBorder.RAISED*

Raised etched type. 


*java.awt.Color_javax.swing.border.EtchedBorder.shadow*





*javax.swing.border.EtchedBorder()*

public EtchedBorder()

Creates a lowered etched border whose colors will be derived from the background color of the component passed into the paintBorder method. 


*javax.swing.border.EtchedBorder(Color,Color)*

public EtchedBorder(
  java.awt.Color highlight,
  java.awt.Color shadow)

Creates a lowered etched border with the specified highlight and shadow colors. 

    highlight - the color to use for the etched highlight 
    shadow - the color to use for the etched shadow 

*javax.swing.border.EtchedBorder(int)*

public EtchedBorder(int etchType)

Creates an etched border with the specified etch-type whose colors will be derived from the background color of the component passed into the paintBorder method. 

    etchType - the type of etch to be drawn by the border 

*javax.swing.border.EtchedBorder(int,Color,Color)*

public EtchedBorder(
  int etchType,
  java.awt.Color highlight,
  java.awt.Color shadow)

Creates an etched border with the specified etch-type, highlight and shadow colors. 

    etchType - the type of etch to be drawn by the border 
    highlight - the color to use for the etched highlight 
    shadow - the color to use for the etched shadow 

*javax.swing.border.EtchedBorder.getBorderInsets(Component)*

public |java.awt.Insets| getBorderInsets(java.awt.Component c)

Returns the insets of the border. 


    c - the component for which this border insets value applies 

*javax.swing.border.EtchedBorder.getBorderInsets(Component,Insets)*

public |java.awt.Insets| getBorderInsets(
  java.awt.Component c,
  java.awt.Insets insets)

Reinitialize the insets parameter with this Border's current Insets. 


    c - the component for which this border insets value applies 
    insets - the object to be reinitialized 

*javax.swing.border.EtchedBorder.getEtchType()*

public int getEtchType()

Returns which etch-type is set on the etched border. 



*javax.swing.border.EtchedBorder.getHighlightColor()*

public |java.awt.Color| getHighlightColor()

Returns the highlight color of the etched border. Will return null if no highlight color was specified at instantiation. 



*javax.swing.border.EtchedBorder.getHighlightColor(Component)*

public |java.awt.Color| getHighlightColor(java.awt.Component c)

Returns the highlight color of the etched border when rendered on the specified component. If no highlight color was specified at instantiation, the highlight color is derived 
from the specified component's background color. 


    c - the component for which the highlight may be derived 

*javax.swing.border.EtchedBorder.getShadowColor()*

public |java.awt.Color| getShadowColor()

Returns the shadow color of the etched border. Will return null if no shadow color was specified at instantiation. 



*javax.swing.border.EtchedBorder.getShadowColor(Component)*

public |java.awt.Color| getShadowColor(java.awt.Component c)

Returns the shadow color of the etched border when rendered on the specified component. If no shadow color was specified at instantiation, the shadow color is derived from the 
specified component's background color. 


    c - the component for which the shadow may be derived 

*javax.swing.border.EtchedBorder.isBorderOpaque()*

public boolean isBorderOpaque()

Returns whether or not the border is opaque. 



*javax.swing.border.EtchedBorder.paintBorder(Component,Graphics,int,int,int,int)*

public void paintBorder(
  java.awt.Component c,
  java.awt.Graphics g,
  int x,
  int y,
  int width,
  int height)

Paints the border for the specified component with the specified position and size. 


    c - the component for which this border is being painted 
    g - the paint graphics 
    x - the x position of the painted border 
    y - the y position of the painted border 
    width - the width of the painted border 
    height - the height of the painted border 


