*javax.imageio.stream.IIOByteBuffer* *IIOByteBuffer* A class representing a muta

public class IIOByteBuffer
  extends    |java.lang.Object|

|javax.imageio.stream.IIOByteBuffer_Description|
|javax.imageio.stream.IIOByteBuffer_Fields|
|javax.imageio.stream.IIOByteBuffer_Constructors|
|javax.imageio.stream.IIOByteBuffer_Methods|

================================================================================

*javax.imageio.stream.IIOByteBuffer_Constructors*
|javax.imageio.stream.IIOByteBuffer(byte[],int,int)|Constructs an IIOByteBuffer

*javax.imageio.stream.IIOByteBuffer_Methods*
|javax.imageio.stream.IIOByteBuffer.getData()|Returns a reference to the byte a
|javax.imageio.stream.IIOByteBuffer.getLength()|Returns the length of the data 
|javax.imageio.stream.IIOByteBuffer.getOffset()|Returns the offset within the b
|javax.imageio.stream.IIOByteBuffer.setData(byte[])|Updates the array reference
|javax.imageio.stream.IIOByteBuffer.setLength(int)|Updates the value that will 
|javax.imageio.stream.IIOByteBuffer.setOffset(int)|Updates the value that will 

*javax.imageio.stream.IIOByteBuffer_Description*

A class representing a mutable reference to an array of bytes and an offset and 
length within that array. IIOByteBuffer is used by ImageInputStream to supply a 
sequence of bytes to the caller, possibly with fewer copies than using the 
conventional read methods that take a user-supplied byte array. 

The byte array referenced by an IIOByteBuffer will generally be part of an 
internal data structure belonging to an ImageReader implementation; its 
contents should be considered read-only and must not be modified. 


*javax.imageio.stream.IIOByteBuffer(byte[],int,int)*

public IIOByteBuffer(
  byte[] data,
  int offset,
  int length)

Constructs an IIOByteBuffer that references a given byte array, offset, and 
length. 

    data - a byte array. 
    offset - an int offset within the array. 
    length - an int specifying the length of the data of interest within byte array, in 
       bytes. 

*javax.imageio.stream.IIOByteBuffer.getData()*

public byte getData()

Returns a reference to the byte array. The returned value should be treated as 
read-only, and only the portion specified by the values of getOffset and 
getLength should be used. 


    Returns: a byte array reference. 
*javax.imageio.stream.IIOByteBuffer.getLength()*

public int getLength()

Returns the length of the data of interest within the byte array returned by 
getData. 


    Returns: an int length. 
*javax.imageio.stream.IIOByteBuffer.getOffset()*

public int getOffset()

Returns the offset within the byte array returned by getData at which the data 
of interest start. 


    Returns: an int offset. 
*javax.imageio.stream.IIOByteBuffer.setData(byte[])*

public void setData(byte[] data)

Updates the array reference that will be returned by subsequent calls to the 
getData method. 

    data - a byte array reference containing the new data value. 

*javax.imageio.stream.IIOByteBuffer.setLength(int)*

public void setLength(int length)

Updates the value that will be returned by subsequent calls to the getLength 
method. 

    length - an int containing the new length value. 

*javax.imageio.stream.IIOByteBuffer.setOffset(int)*

public void setOffset(int offset)

Updates the value that will be returned by subsequent calls to the getOffset 
method. 

    offset - an int containing the new offset value. 


