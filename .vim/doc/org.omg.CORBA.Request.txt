*org.omg.CORBA.Request* *Request* An object containing the information necessary

public abstract class Request
  extends    |java.lang.Object|

|org.omg.CORBA.Request_Description|
|org.omg.CORBA.Request_Fields|
|org.omg.CORBA.Request_Constructors|
|org.omg.CORBA.Request_Methods|

================================================================================

*org.omg.CORBA.Request_Constructors*
|org.omg.CORBA.Request()|

*org.omg.CORBA.Request_Methods*
|org.omg.CORBA.Request.add_in_arg()|Creates an input argument and adds it to th
|org.omg.CORBA.Request.add_inout_arg()|Adds an input/output argument to this Re
|org.omg.CORBA.Request.add_named_in_arg(String)|Creates an input argument with 
|org.omg.CORBA.Request.add_named_inout_arg(String)|Adds an input/output argumen
|org.omg.CORBA.Request.add_named_out_arg(String)|Adds an output argument with t
|org.omg.CORBA.Request.add_out_arg()|Adds an output argument to this Request ob
|org.omg.CORBA.Request.arguments()|Retrieves the NVList object containing the a
|org.omg.CORBA.Request.contexts()|Retrieves the ContextList object for this req
|org.omg.CORBA.Request.ctx()|Retrieves the Context object for this request.
|org.omg.CORBA.Request.ctx(Context)|Sets this request's Context object to the o
|org.omg.CORBA.Request.env()|Retrieves the Environment object for this request.
|org.omg.CORBA.Request.exceptions()|Retrieves the ExceptionList object for this
|org.omg.CORBA.Request.get_response()|Allows the user to access the  response f
|org.omg.CORBA.Request.invoke()|Makes a synchronous invocation using the  infor
|org.omg.CORBA.Request.operation()|Retrieves the name of the method to be invok
|org.omg.CORBA.Request.poll_response()|Allows the user to determine  whether a 
|org.omg.CORBA.Request.result()|Retrieves the NamedValue object containing the 
|org.omg.CORBA.Request.return_value()|Returns the Any object that contains the 
|org.omg.CORBA.Request.send_deferred()|Makes an asynchronous invocation on  the
|org.omg.CORBA.Request.send_oneway()|Makes a oneway invocation on the  request.
|org.omg.CORBA.Request.set_return_type(TypeCode)|Sets the typecode for the retu
|org.omg.CORBA.Request.target()|Retrieves the the target object reference.

*org.omg.CORBA.Request_Description*

An object containing the information necessary for invoking a method. This 
class is the cornerstone of the ORB Dynamic Invocation Interface (DII), which 
allows dynamic creation and invocation of requests. A server cannot tell the 
difference between a client invocation using a client stub and a request using 
the DII. 

A Request object consists of: 

the name of the operation to be invoked an NVList containing arguments for the 
operation. Each item in the list is a NamedValue object, which has three parts: 

the name of the argument the value of the argument (as an Any object) the 
argument mode flag indicating whether the argument is for input, output, or 
both 



Request objects may also contain additional information, depending on how an 
operation was defined in the original IDL interface definition. For example, 
where appropriate, they may contain a NamedValue object to hold the return 
value or exception, a context, a list of possible exceptions, and a list of 
context strings that need to be resolved. 

New Request objects are created using one of the create_request methods in the 
Object class. In other words, a create_request method is performed on the 
object which is to be invoked. 


*org.omg.CORBA.Request()*

public Request()




*org.omg.CORBA.Request.add_in_arg()*

public abstract |org.omg.CORBA.Any| add_in_arg()

Creates an input argument and adds it to this Request object. 


    Returns: an Any object that contains the value and typecode for the input argument added 
*org.omg.CORBA.Request.add_inout_arg()*

public abstract |org.omg.CORBA.Any| add_inout_arg()

Adds an input/output argument to this Request object. 


    Returns: an Any object that contains the value and typecode for the input/output 
             argument added 
*org.omg.CORBA.Request.add_named_in_arg(String)*

public abstract |org.omg.CORBA.Any| add_named_in_arg(java.lang.String name)

Creates an input argument with the given name and adds it to this Request 
object. 

    name - the name of the argument being added 

    Returns: an Any object that contains the value and typecode for the input argument added 
*org.omg.CORBA.Request.add_named_inout_arg(String)*

public abstract |org.omg.CORBA.Any| add_named_inout_arg(java.lang.String name)

Adds an input/output argument with the given name to this Request object. 

    name - the name of the argument being added 

    Returns: an Any object that contains the value and typecode for the input/output 
             argument added 
*org.omg.CORBA.Request.add_named_out_arg(String)*

public abstract |org.omg.CORBA.Any| add_named_out_arg(java.lang.String name)

Adds an output argument with the given name to this Request object. 

    name - the name of the argument being added 

    Returns: an Any object that contains the value and typecode for the output argument 
             added 
*org.omg.CORBA.Request.add_out_arg()*

public abstract |org.omg.CORBA.Any| add_out_arg()

Adds an output argument to this Request object. 


    Returns: an Any object that contains the value and typecode for the output argument 
             added 
*org.omg.CORBA.Request.arguments()*

public abstract |org.omg.CORBA.NVList| arguments()

Retrieves the NVList object containing the arguments to the method being 
invoked. The elements in the list are NamedValue objects, with each one 
describing an argument to the method. 


    Returns: the NVList object containing the arguments for the method 
*org.omg.CORBA.Request.contexts()*

public abstract |org.omg.CORBA.ContextList| contexts()

Retrieves the ContextList object for this request. This list contains context 
Strings that need to be resolved and sent with the invocation. 


    Returns: the list of context strings whose values need to be resolved and sent with the 
             invocation. 
*org.omg.CORBA.Request.ctx()*

public abstract |org.omg.CORBA.Context| ctx()

Retrieves the Context object for this request. This is a list of properties 
giving information about the client, the environment, or the circumstances of 
this request. 


    Returns: the Context object that is to be used to resolve any context strings whose 
             values need to be sent with the invocation 
*org.omg.CORBA.Request.ctx(Context)*

public abstract void ctx(org.omg.CORBA.Context c)

Sets this request's Context object to the one given. 

    c - the new Context object to be used for resolving context strings 

*org.omg.CORBA.Request.env()*

public abstract |org.omg.CORBA.Environment| env()

Retrieves the Environment object for this request. It contains the exception 
that the method being invoked has thrown (after the invocation returns). 


    Returns: the Environment object for this request 
*org.omg.CORBA.Request.exceptions()*

public abstract |org.omg.CORBA.ExceptionList| exceptions()

Retrieves the ExceptionList object for this request. This list contains 
TypeCode objects describing the exceptions that may be thrown by the method 
being invoked. 


    Returns: the ExceptionList object describing the exceptions that may be thrown by the 
             method being invoked 
*org.omg.CORBA.Request.get_response()*

public abstract void get_response()
  throws |org.omg.CORBA.WrongTransaction|
         
Allows the user to access the response for the invocation triggered earlier 
with the send_deferred method. 


*org.omg.CORBA.Request.invoke()*

public abstract void invoke()

Makes a synchronous invocation using the information in the Request object. 
Exception information is placed into the Request object's environment object. 


*org.omg.CORBA.Request.operation()*

public abstract |java.lang.String| operation()

Retrieves the name of the method to be invoked. 


    Returns: the name of the method to be invoked 
*org.omg.CORBA.Request.poll_response()*

public abstract boolean poll_response()

Allows the user to determine whether a response has been received for the 
invocation triggered earlier with the send_deferred method. 


    Returns: true if the method response has been received; false otherwise 
*org.omg.CORBA.Request.result()*

public abstract |org.omg.CORBA.NamedValue| result()

Retrieves the NamedValue object containing the return value for the method. 


    Returns: the NamedValue object containing the result of the method 
*org.omg.CORBA.Request.return_value()*

public abstract |org.omg.CORBA.Any| return_value()

Returns the Any object that contains the value for the result of the method. 


    Returns: an Any object containing the value and typecode for the return value 
*org.omg.CORBA.Request.send_deferred()*

public abstract void send_deferred()

Makes an asynchronous invocation on the request. In other words, it does not 
wait for a response before it returns to the user. The user can then later use 
the methods poll_response and get_response to get the result or exception 
information for the invocation. 


*org.omg.CORBA.Request.send_oneway()*

public abstract void send_oneway()

Makes a oneway invocation on the request. In other words, it does not expect or 
wait for a response. Note that this can be used even if the operation was not 
declared as oneway in the IDL declaration. No response or exception information 
is returned. 


*org.omg.CORBA.Request.set_return_type(TypeCode)*

public abstract void set_return_type(org.omg.CORBA.TypeCode tc)

Sets the typecode for the return value of the method. 

    tc - the TypeCode object containing type information for the return value 

*org.omg.CORBA.Request.target()*

public abstract |org.omg.CORBA.Object| target()

Retrieves the the target object reference. 


    Returns: the object reference that points to the object implementation for the method to 
             be invoked 

