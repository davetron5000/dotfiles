*java.net.ContentHandler* *ContentHandler* The abstract class ContentHandler is 

public abstract class ContentHandler
  extends    |java.lang.Object|

|java.net.ContentHandler_Description|
|java.net.ContentHandler_Fields|
|java.net.ContentHandler_Constructors|
|java.net.ContentHandler_Methods|

================================================================================

*java.net.ContentHandler_Constructors*
|java.net.ContentHandler()|

*java.net.ContentHandler_Methods*
|java.net.ContentHandler.getContent(URLConnection)|Given a URL connect stream p
|java.net.ContentHandler.getContent(URLConnection,Class[])|Given a URL connect 

*java.net.ContentHandler_Description*

The abstract class ContentHandler is the superclass of all classes that read an 
Object from a URLConnection. 

An application does not generally call the getContent method in this class 
directly. Instead, an application calls the getContent method in class URL or 
in URLConnection. The application's content handler factory (an instance of a 
class that implements the interface ContentHandlerFactory set up by a call to 
setContentHandler) is called with a String giving the MIME type of the object 
being received on the socket. The factory returns an instance of a subclass of 
ContentHandler, and its getContent method is called to create the object. 

If no content handler could be found, URLConnection will look for a content 
handler in a user-defineable set of places. By default it looks in 
sun.net.www.content, but users can define a vertical-bar delimited set of class 
prefixes to search through in addition by defining the 
java.content.handler.pkgs property. The class name must be of the form: 

{package-prefix}.{major}.{minor} e.g. YoyoDyne.experimental.text.plain 

If the loading of the content handler class would be performed by a classloader 
that is outside of the the delegation chain of the caller, the JVM will need 
the RuntimePermission "getClassLoader". 


*java.net.ContentHandler()*

public ContentHandler()




*java.net.ContentHandler.getContent(URLConnection)*

public abstract |java.lang.Object| getContent(java.net.URLConnection urlc)
  throws |java.io.IOException|
         
Given a URL connect stream positioned at the beginning of the representation of 
an object, this method reads that stream and creates an object from it. 

    urlc - a URL connection. 

    Returns: the object read by the ContentHandler. 
*java.net.ContentHandler.getContent(URLConnection,Class[])*

public |java.lang.Object| getContent(
  java.net.URLConnection urlc,
  java.lang.Class[] classes)
  throws |java.io.IOException|
         
Given a URL connect stream positioned at the beginning of the representation of 
an object, this method reads that stream and creates an object that matches one 
of the types specified. 

The default implementation of this method should call getContent() and screen 
the return type for a match of the suggested types. 

    urlc - a URL connection. 
    classes - an array of types requested 

    Returns: the object read by the ContentHandler that is the first match of the suggested 
             types. null if none of the requested are supported. 

