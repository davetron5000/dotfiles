*java.util.Dictionary* *Dictionary* The Dictionary class is the abstract parent 

public abstract class Dictionary
  extends    |java.lang.Object|

|java.util.Dictionary_Description|
|java.util.Dictionary_Fields|
|java.util.Dictionary_Constructors|
|java.util.Dictionary_Methods|

================================================================================

*java.util.Dictionary_Constructors*
|java.util.Dictionary()|Sole constructor.

*java.util.Dictionary_Methods*
|java.util.Dictionary.elements()|Returns an enumeration of the values in this d
|java.util.Dictionary.get(Object)|Returns the value to which the key is mapped 
|java.util.Dictionary.isEmpty()|Tests if this dictionary maps no keys to value.
|java.util.Dictionary.keys()|Returns an enumeration of the keys in this diction
|java.util.Dictionary.put(K,V)|Maps the specified key to the specified   value 
|java.util.Dictionary.remove(Object)|Removes the key (and its corresponding   v
|java.util.Dictionary.size()|Returns the number of entries (distinct keys) in t

*java.util.Dictionary_Description*

The Dictionary class is the abstract parent of any class, such as Hashtable, 
which maps keys to values. Every key and every value is an object. In any one 
Dictionary object, every key is associated with at most one value. Given a 
Dictionary and a key, the associated element can be looked up. Any non-null 
object can be used as a key and as a value. 

As a rule, the equals method should be used by implementations of this class to 
decide if two keys are the same. 

NOTE: This class is obsolete. New implementations should implement the Map 
interface, rather than extending this class. 


*java.util.Dictionary()*

public Dictionary()

Sole constructor. (For invocation by subclass constructors, typically 
implicit.) 


*java.util.Dictionary.elements()*

public abstract |java.util.Enumeration| elements()

Returns an enumeration of the values in this dictionary. The general contract 
for the elements method is that an Enumeration is returned that will generate 
all the elements contained in entries in this dictionary. 


    Returns: an enumeration of the values in this dictionary. 
*java.util.Dictionary.get(Object)*

public abstract |java.lang.Object| get(java.lang.Object key)

Returns the value to which the key is mapped in this dictionary. The general 
contract for the isEmpty method is that if this dictionary contains an entry 
for the specified key, the associated value is returned; otherwise, null is 
returned. 

    key - a key in this dictionary. null if the key is not mapped to any value in this 
       dictionary. 

    Returns: the value to which the key is mapped in this dictionary; 
*java.util.Dictionary.isEmpty()*

public abstract boolean isEmpty()

Tests if this dictionary maps no keys to value. The general contract for the 
isEmpty method is that the result is true if and only if this dictionary 
contains no entries. 


    Returns: true if this dictionary maps no keys to values; false otherwise. 
*java.util.Dictionary.keys()*

public abstract |java.util.Enumeration| keys()

Returns an enumeration of the keys in this dictionary. The general contract for 
the keys method is that an Enumeration object is returned that will generate 
all the keys for which this dictionary contains entries. 


    Returns: an enumeration of the keys in this dictionary. 
*java.util.Dictionary.put(K,V)*

public abstract |java.lang.Object| put(
  java.lang.Object key,
  java.lang.Object value)

Maps the specified key to the specified value in this dictionary. Neither the 
key nor the value can be null. 

If this dictionary already contains an entry for the specified key, the value 
already in this dictionary for that key is returned, after modifying the entry 
to contain the new element. If this dictionary does not already have an entry 
for the specified key, an entry is created for the specified key and value, and 
null is returned. 

The value can be retrieved by calling the get method with a key that is equal 
to the original key. 

    key - the hashtable key. 
    value - the value. 

    Returns: the previous value to which the key was mapped in this dictionary, or null if 
             the key did not have a previous mapping. 
*java.util.Dictionary.remove(Object)*

public abstract |java.lang.Object| remove(java.lang.Object key)

Removes the key (and its corresponding value) from this dictionary. This method 
does nothing if the key is not in this dictionary. 

    key - the key that needs to be removed. 

    Returns: the value to which the key had been mapped in this dictionary, or null if the 
             key did not have a mapping. 
*java.util.Dictionary.size()*

public abstract int size()

Returns the number of entries (distinct keys) in this dictionary. 


    Returns: the number of keys in this dictionary. 

