*java.awt.color.ICC_Profile* *ICC_Profile* A representation of color profile data for device independent and
 device dependent color spaces based on the International Color
 Consor

public class ICC_Profile
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|java.awt.color.ICC_Profile_Description|
|java.awt.color.ICC_Profile_Fields|
|java.awt.color.ICC_Profile_Constructors|
|java.awt.color.ICC_Profile_Methods|

====================================================================================================================================================================================

*java.awt.color.ICC_Profile_Fields*
|int_java.awt.color.ICC_Profile.CLASS_ABSTRACT|
|int_java.awt.color.ICC_Profile.CLASS_COLORSPACECONVERSION|
|int_java.awt.color.ICC_Profile.CLASS_DEVICELINK|
|int_java.awt.color.ICC_Profile.CLASS_DISPLAY|
|int_java.awt.color.ICC_Profile.CLASS_INPUT|
|int_java.awt.color.ICC_Profile.CLASS_NAMEDCOLOR|
|int_java.awt.color.ICC_Profile.CLASS_OUTPUT|
|int_java.awt.color.ICC_Profile.icAbsoluteColorimetric|
|int_java.awt.color.ICC_Profile.icCurveCount|
|int_java.awt.color.ICC_Profile.icCurveData|
|int_java.awt.color.ICC_Profile.icHdrAttributes|
|int_java.awt.color.ICC_Profile.icHdrCmmId|
|int_java.awt.color.ICC_Profile.icHdrColorSpace|
|int_java.awt.color.ICC_Profile.icHdrCreator|
|int_java.awt.color.ICC_Profile.icHdrDate|
|int_java.awt.color.ICC_Profile.icHdrDeviceClass|
|int_java.awt.color.ICC_Profile.icHdrFlags|
|int_java.awt.color.ICC_Profile.icHdrIlluminant|
|int_java.awt.color.ICC_Profile.icHdrMagic|
|int_java.awt.color.ICC_Profile.icHdrManufacturer|
|int_java.awt.color.ICC_Profile.icHdrModel|
|int_java.awt.color.ICC_Profile.icHdrPcs|
|int_java.awt.color.ICC_Profile.icHdrPlatform|
|int_java.awt.color.ICC_Profile.icHdrProfileID|
|int_java.awt.color.ICC_Profile.icHdrRenderingIntent|
|int_java.awt.color.ICC_Profile.icHdrSize|
|int_java.awt.color.ICC_Profile.icHdrVersion|
|int_java.awt.color.ICC_Profile.icICCAbsoluteColorimetric|
|int_java.awt.color.ICC_Profile.icMediaRelativeColorimetric|
|int_java.awt.color.ICC_Profile.icPerceptual|
|int_java.awt.color.ICC_Profile.icRelativeColorimetric|
|int_java.awt.color.ICC_Profile.icSaturation|
|int_java.awt.color.ICC_Profile.icSigAbstractClass|
|int_java.awt.color.ICC_Profile.icSigAToB0Tag|
|int_java.awt.color.ICC_Profile.icSigAToB1Tag|
|int_java.awt.color.ICC_Profile.icSigAToB2Tag|
|int_java.awt.color.ICC_Profile.icSigBlueColorantTag|
|int_java.awt.color.ICC_Profile.icSigBlueMatrixColumnTag|
|int_java.awt.color.ICC_Profile.icSigBlueTRCTag|
|int_java.awt.color.ICC_Profile.icSigBToA0Tag|
|int_java.awt.color.ICC_Profile.icSigBToA1Tag|
|int_java.awt.color.ICC_Profile.icSigBToA2Tag|
|int_java.awt.color.ICC_Profile.icSigCalibrationDateTimeTag|
|int_java.awt.color.ICC_Profile.icSigCharTargetTag|
|int_java.awt.color.ICC_Profile.icSigChromaticAdaptationTag|
|int_java.awt.color.ICC_Profile.icSigChromaticityTag|
|int_java.awt.color.ICC_Profile.icSigCmyData|
|int_java.awt.color.ICC_Profile.icSigCmykData|
|int_java.awt.color.ICC_Profile.icSigColorantOrderTag|
|int_java.awt.color.ICC_Profile.icSigColorantTableTag|
|int_java.awt.color.ICC_Profile.icSigColorSpaceClass|
|int_java.awt.color.ICC_Profile.icSigCopyrightTag|
|int_java.awt.color.ICC_Profile.icSigCrdInfoTag|
|int_java.awt.color.ICC_Profile.icSigDeviceMfgDescTag|
|int_java.awt.color.ICC_Profile.icSigDeviceModelDescTag|
|int_java.awt.color.ICC_Profile.icSigDeviceSettingsTag|
|int_java.awt.color.ICC_Profile.icSigDisplayClass|
|int_java.awt.color.ICC_Profile.icSigGamutTag|
|int_java.awt.color.ICC_Profile.icSigGrayData|
|int_java.awt.color.ICC_Profile.icSigGrayTRCTag|
|int_java.awt.color.ICC_Profile.icSigGreenColorantTag|
|int_java.awt.color.ICC_Profile.icSigGreenMatrixColumnTag|
|int_java.awt.color.ICC_Profile.icSigGreenTRCTag|
|int_java.awt.color.ICC_Profile.icSigHead|
|int_java.awt.color.ICC_Profile.icSigHlsData|
|int_java.awt.color.ICC_Profile.icSigHsvData|
|int_java.awt.color.ICC_Profile.icSigInputClass|
|int_java.awt.color.ICC_Profile.icSigLabData|
|int_java.awt.color.ICC_Profile.icSigLinkClass|
|int_java.awt.color.ICC_Profile.icSigLuminanceTag|
|int_java.awt.color.ICC_Profile.icSigLuvData|
|int_java.awt.color.ICC_Profile.icSigMeasurementTag|
|int_java.awt.color.ICC_Profile.icSigMediaBlackPointTag|
|int_java.awt.color.ICC_Profile.icSigMediaWhitePointTag|
|int_java.awt.color.ICC_Profile.icSigNamedColor2Tag|
|int_java.awt.color.ICC_Profile.icSigNamedColorClass|
|int_java.awt.color.ICC_Profile.icSigOutputClass|
|int_java.awt.color.ICC_Profile.icSigOutputResponseTag|
|int_java.awt.color.ICC_Profile.icSigPreview0Tag|
|int_java.awt.color.ICC_Profile.icSigPreview1Tag|
|int_java.awt.color.ICC_Profile.icSigPreview2Tag|
|int_java.awt.color.ICC_Profile.icSigProfileDescriptionTag|
|int_java.awt.color.ICC_Profile.icSigProfileSequenceDescTag|
|int_java.awt.color.ICC_Profile.icSigPs2CRD0Tag|
|int_java.awt.color.ICC_Profile.icSigPs2CRD1Tag|
|int_java.awt.color.ICC_Profile.icSigPs2CRD2Tag|
|int_java.awt.color.ICC_Profile.icSigPs2CRD3Tag|
|int_java.awt.color.ICC_Profile.icSigPs2CSATag|
|int_java.awt.color.ICC_Profile.icSigPs2RenderingIntentTag|
|int_java.awt.color.ICC_Profile.icSigRedColorantTag|
|int_java.awt.color.ICC_Profile.icSigRedMatrixColumnTag|
|int_java.awt.color.ICC_Profile.icSigRedTRCTag|
|int_java.awt.color.ICC_Profile.icSigRgbData|
|int_java.awt.color.ICC_Profile.icSigScreeningDescTag|
|int_java.awt.color.ICC_Profile.icSigScreeningTag|
|int_java.awt.color.ICC_Profile.icSigSpace2CLR|
|int_java.awt.color.ICC_Profile.icSigSpace3CLR|
|int_java.awt.color.ICC_Profile.icSigSpace4CLR|
|int_java.awt.color.ICC_Profile.icSigSpace5CLR|
|int_java.awt.color.ICC_Profile.icSigSpace6CLR|
|int_java.awt.color.ICC_Profile.icSigSpace7CLR|
|int_java.awt.color.ICC_Profile.icSigSpace8CLR|
|int_java.awt.color.ICC_Profile.icSigSpace9CLR|
|int_java.awt.color.ICC_Profile.icSigSpaceACLR|
|int_java.awt.color.ICC_Profile.icSigSpaceBCLR|
|int_java.awt.color.ICC_Profile.icSigSpaceCCLR|
|int_java.awt.color.ICC_Profile.icSigSpaceDCLR|
|int_java.awt.color.ICC_Profile.icSigSpaceECLR|
|int_java.awt.color.ICC_Profile.icSigSpaceFCLR|
|int_java.awt.color.ICC_Profile.icSigTechnologyTag|
|int_java.awt.color.ICC_Profile.icSigUcrBgTag|
|int_java.awt.color.ICC_Profile.icSigViewingCondDescTag|
|int_java.awt.color.ICC_Profile.icSigViewingConditionsTag|
|int_java.awt.color.ICC_Profile.icSigXYZData|
|int_java.awt.color.ICC_Profile.icSigYCbCrData|
|int_java.awt.color.ICC_Profile.icSigYxyData|
|int_java.awt.color.ICC_Profile.icTagReserved|
|int_java.awt.color.ICC_Profile.icTagType|
|int_java.awt.color.ICC_Profile.icXYZNumberX|

*java.awt.color.ICC_Profile_Methods*
|java.awt.color.ICC_Profile.finalize()|Frees the resources associated with an ICC_Profile object.
|java.awt.color.ICC_Profile.getColorSpaceType()|Returns the color space type.
|java.awt.color.ICC_Profile.getData()|Returns a byte array corresponding to the data of this ICC_Profile.
|java.awt.color.ICC_Profile.getData(int)|Returns a particular tagged data element from the profile as  a byte array.
|java.awt.color.ICC_Profile.getInstance(byte[])|Constructs an ICC_Profile object corresponding to the data in  a byte array.
|java.awt.color.ICC_Profile.getInstance(InputStream)|Constructs an ICC_Profile corresponding to the data in an InputStream.
|java.awt.color.ICC_Profile.getInstance(int)|Constructs an ICC_Profile corresponding to one of the specific color  spaces defined by the ColorSpace class (for example CS_sRGB).
|java.awt.color.ICC_Profile.getInstance(String)|Constructs an ICC_Profile corresponding to the data in a file.
|java.awt.color.ICC_Profile.getMajorVersion()|Returns profile major version.
|java.awt.color.ICC_Profile.getMinorVersion()|Returns profile minor version.
|java.awt.color.ICC_Profile.getNumComponents()|Returns the number of color components in the "input" color  space of this profile.
|java.awt.color.ICC_Profile.getPCSType()|Returns the color space type of the Profile Connection Space (PCS).
|java.awt.color.ICC_Profile.getProfileClass()|Returns the profile class.
|java.awt.color.ICC_Profile.readResolve()|Resolves instances being deserialized into instances registered  with CMM.
|java.awt.color.ICC_Profile.setData(int,byte[])|Sets a particular tagged data element in the profile from  a byte array.
|java.awt.color.ICC_Profile.write(OutputStream)|Write this ICC_Profile to an OutputStream.
|java.awt.color.ICC_Profile.write(String)|Write this ICC_Profile to a file.

*java.awt.color.ICC_Profile_Description*

A representation of color profile data for device independent and device dependent color spaces based on the International Color Consortium Specification ICC.1:2001-12, File 
Format for Color Profiles, (see http://www.color.org). 

An ICC_ColorSpace object can be constructed from an appropriate ICC_Profile. Typically, an ICC_ColorSpace would be associated with an ICC Profile which is either an input, 
display, or output profile (see the ICC specification). There are also device link, abstract, color space conversion, and named color profiles. These are less useful for tagging a 
color or image, but are useful for other purposes (in particular device link profiles can provide improved performance for converting from one device's color space to another's). 

ICC Profiles represent transformations from the color space of the profile (e.g. a monitor) to a Profile Connection Space (PCS). Profiles of interest for tagging images or colors 
have a PCS which is one of the two specific device independent spaces (one CIEXYZ space and one CIELab space) defined in the ICC Profile Format Specification. Most profiles of 
interest either have invertible transformations or explicitly specify transformations going both directions. 



*int_java.awt.color.ICC_Profile.CLASS_ABSTRACT*

Profile class is abstract. 


*int_java.awt.color.ICC_Profile.CLASS_COLORSPACECONVERSION*

Profile class is color space conversion. 


*int_java.awt.color.ICC_Profile.CLASS_DEVICELINK*

Profile class is device link. 


*int_java.awt.color.ICC_Profile.CLASS_DISPLAY*

Profile class is display. 


*int_java.awt.color.ICC_Profile.CLASS_INPUT*

Profile class is input. 


*int_java.awt.color.ICC_Profile.CLASS_NAMEDCOLOR*

Profile class is named color. 


*int_java.awt.color.ICC_Profile.CLASS_OUTPUT*

Profile class is output. 


*int_java.awt.color.ICC_Profile.icAbsoluteColorimetric*

ICC Profile Rendering Intent: AbsoluteColorimetric. 


*int_java.awt.color.ICC_Profile.icCurveCount*

ICC Profile Constant: curveType count. 


*int_java.awt.color.ICC_Profile.icCurveData*

ICC Profile Constant: curveType data. 


*int_java.awt.color.ICC_Profile.icHdrAttributes*

ICC Profile Header Location: device attributes. 


*int_java.awt.color.ICC_Profile.icHdrCmmId*

ICC Profile Header Location: CMM for this profile. 


*int_java.awt.color.ICC_Profile.icHdrColorSpace*

ICC Profile Header Location: color space of data. 


*int_java.awt.color.ICC_Profile.icHdrCreator*

ICC Profile Header Location: profile creator. 


*int_java.awt.color.ICC_Profile.icHdrDate*

ICC Profile Header Location: date profile was created. 


*int_java.awt.color.ICC_Profile.icHdrDeviceClass*

ICC Profile Header Location: type of profile. 


*int_java.awt.color.ICC_Profile.icHdrFlags*

ICC Profile Header Location: various bit settings. 


*int_java.awt.color.ICC_Profile.icHdrIlluminant*

ICC Profile Header Location: profile illuminant. 


*int_java.awt.color.ICC_Profile.icHdrMagic*

ICC Profile Header Location: icMagicNumber. 


*int_java.awt.color.ICC_Profile.icHdrManufacturer*

ICC Profile Header Location: device manufacturer. 


*int_java.awt.color.ICC_Profile.icHdrModel*

ICC Profile Header Location: device model number. 


*int_java.awt.color.ICC_Profile.icHdrPcs*

ICC Profile Header Location: PCS - XYZ or Lab only. 


*int_java.awt.color.ICC_Profile.icHdrPlatform*

ICC Profile Header Location: primary platform. 


*int_java.awt.color.ICC_Profile.icHdrProfileID*

ICC Profile Header Location: profile's ID. 


*int_java.awt.color.ICC_Profile.icHdrRenderingIntent*

ICC Profile Header Location: rendering intent. 


*int_java.awt.color.ICC_Profile.icHdrSize*

ICC Profile Header Location: profile size in bytes. 


*int_java.awt.color.ICC_Profile.icHdrVersion*

ICC Profile Header Location: format version number. 


*int_java.awt.color.ICC_Profile.icICCAbsoluteColorimetric*

ICC Profile Rendering Intent: ICC-AbsoluteColorimetric. 


*int_java.awt.color.ICC_Profile.icMediaRelativeColorimetric*

ICC Profile Rendering Intent: Media-RelativeColorimetric. 


*int_java.awt.color.ICC_Profile.icPerceptual*

ICC Profile Rendering Intent: Perceptual. 


*int_java.awt.color.ICC_Profile.icRelativeColorimetric*

ICC Profile Rendering Intent: RelativeColorimetric. 


*int_java.awt.color.ICC_Profile.icSaturation*

ICC Profile Rendering Intent: Saturation. 


*int_java.awt.color.ICC_Profile.icSigAbstractClass*

ICC Profile Class Signature: 'abst'. 


*int_java.awt.color.ICC_Profile.icSigAToB0Tag*

ICC Profile Tag Signature: 'A2B0'. 


*int_java.awt.color.ICC_Profile.icSigAToB1Tag*

ICC Profile Tag Signature: 'A2B1'. 


*int_java.awt.color.ICC_Profile.icSigAToB2Tag*

ICC Profile Tag Signature: 'A2B2'. 


*int_java.awt.color.ICC_Profile.icSigBlueColorantTag*

ICC Profile Tag Signature: 'bXYZ'. 


*int_java.awt.color.ICC_Profile.icSigBlueMatrixColumnTag*

ICC Profile Tag Signature: 'bXYZ'. 


*int_java.awt.color.ICC_Profile.icSigBlueTRCTag*

ICC Profile Tag Signature: 'bTRC'. 


*int_java.awt.color.ICC_Profile.icSigBToA0Tag*

ICC Profile Tag Signature: 'B2A0'. 


*int_java.awt.color.ICC_Profile.icSigBToA1Tag*

ICC Profile Tag Signature: 'B2A1'. 


*int_java.awt.color.ICC_Profile.icSigBToA2Tag*

ICC Profile Tag Signature: 'B2A2'. 


*int_java.awt.color.ICC_Profile.icSigCalibrationDateTimeTag*

ICC Profile Tag Signature: 'calt'. 


*int_java.awt.color.ICC_Profile.icSigCharTargetTag*

ICC Profile Tag Signature: 'targ'. 


*int_java.awt.color.ICC_Profile.icSigChromaticAdaptationTag*

ICC Profile Tag Signature: 'chad'. 


*int_java.awt.color.ICC_Profile.icSigChromaticityTag*

ICC Profile Tag Signature: 'chrm'. 


*int_java.awt.color.ICC_Profile.icSigCmyData*

ICC Profile Color Space Type Signature: 'CMY '. 


*int_java.awt.color.ICC_Profile.icSigCmykData*

ICC Profile Color Space Type Signature: 'CMYK'. 


*int_java.awt.color.ICC_Profile.icSigColorantOrderTag*

ICC Profile Tag Signature: 'clro'. 


*int_java.awt.color.ICC_Profile.icSigColorantTableTag*

ICC Profile Tag Signature: 'clrt'. 


*int_java.awt.color.ICC_Profile.icSigColorSpaceClass*

ICC Profile Class Signature: 'spac'. 


*int_java.awt.color.ICC_Profile.icSigCopyrightTag*

ICC Profile Tag Signature: 'cprt'. 


*int_java.awt.color.ICC_Profile.icSigCrdInfoTag*

ICC Profile Tag Signature: 'crdi'. 


*int_java.awt.color.ICC_Profile.icSigDeviceMfgDescTag*

ICC Profile Tag Signature: 'dmnd'. 


*int_java.awt.color.ICC_Profile.icSigDeviceModelDescTag*

ICC Profile Tag Signature: 'dmdd'. 


*int_java.awt.color.ICC_Profile.icSigDeviceSettingsTag*

ICC Profile Tag Signature: 'devs'. 


*int_java.awt.color.ICC_Profile.icSigDisplayClass*

ICC Profile Class Signature: 'mntr'. 


*int_java.awt.color.ICC_Profile.icSigGamutTag*

ICC Profile Tag Signature: 'gamt'. 


*int_java.awt.color.ICC_Profile.icSigGrayData*

ICC Profile Color Space Type Signature: 'GRAY'. 


*int_java.awt.color.ICC_Profile.icSigGrayTRCTag*

ICC Profile Tag Signature: 'kTRC'. 


*int_java.awt.color.ICC_Profile.icSigGreenColorantTag*

ICC Profile Tag Signature: 'gXYZ'. 


*int_java.awt.color.ICC_Profile.icSigGreenMatrixColumnTag*

ICC Profile Tag Signature: 'gXYZ'. 


*int_java.awt.color.ICC_Profile.icSigGreenTRCTag*

ICC Profile Tag Signature: 'gTRC'. 


*int_java.awt.color.ICC_Profile.icSigHead*

ICC Profile Tag Signature: 'head' - special. 


*int_java.awt.color.ICC_Profile.icSigHlsData*

ICC Profile Color Space Type Signature: 'HLS'. 


*int_java.awt.color.ICC_Profile.icSigHsvData*

ICC Profile Color Space Type Signature: 'HSV'. 


*int_java.awt.color.ICC_Profile.icSigInputClass*

ICC Profile Class Signature: 'scnr'. 


*int_java.awt.color.ICC_Profile.icSigLabData*

ICC Profile Color Space Type Signature: 'Lab '. 


*int_java.awt.color.ICC_Profile.icSigLinkClass*

ICC Profile Class Signature: 'link'. 


*int_java.awt.color.ICC_Profile.icSigLuminanceTag*

ICC Profile Tag Signature: 'lumi'. 


*int_java.awt.color.ICC_Profile.icSigLuvData*

ICC Profile Color Space Type Signature: 'Luv '. 


*int_java.awt.color.ICC_Profile.icSigMeasurementTag*

ICC Profile Tag Signature: 'meas'. 


*int_java.awt.color.ICC_Profile.icSigMediaBlackPointTag*

ICC Profile Tag Signature: 'bkpt'. 


*int_java.awt.color.ICC_Profile.icSigMediaWhitePointTag*

ICC Profile Tag Signature: 'wtpt'. 


*int_java.awt.color.ICC_Profile.icSigNamedColor2Tag*

ICC Profile Tag Signature: 'ncl2'. 


*int_java.awt.color.ICC_Profile.icSigNamedColorClass*

ICC Profile Class Signature: 'nmcl'. 


*int_java.awt.color.ICC_Profile.icSigOutputClass*

ICC Profile Class Signature: 'prtr'. 


*int_java.awt.color.ICC_Profile.icSigOutputResponseTag*

ICC Profile Tag Signature: 'resp'. 


*int_java.awt.color.ICC_Profile.icSigPreview0Tag*

ICC Profile Tag Signature: 'pre0'. 


*int_java.awt.color.ICC_Profile.icSigPreview1Tag*

ICC Profile Tag Signature: 'pre1'. 


*int_java.awt.color.ICC_Profile.icSigPreview2Tag*

ICC Profile Tag Signature: 'pre2'. 


*int_java.awt.color.ICC_Profile.icSigProfileDescriptionTag*

ICC Profile Tag Signature: 'desc'. 


*int_java.awt.color.ICC_Profile.icSigProfileSequenceDescTag*

ICC Profile Tag Signature: 'pseq'. 


*int_java.awt.color.ICC_Profile.icSigPs2CRD0Tag*

ICC Profile Tag Signature: 'psd0'. 


*int_java.awt.color.ICC_Profile.icSigPs2CRD1Tag*

ICC Profile Tag Signature: 'psd1'. 


*int_java.awt.color.ICC_Profile.icSigPs2CRD2Tag*

ICC Profile Tag Signature: 'psd2'. 


*int_java.awt.color.ICC_Profile.icSigPs2CRD3Tag*

ICC Profile Tag Signature: 'psd3'. 


*int_java.awt.color.ICC_Profile.icSigPs2CSATag*

ICC Profile Tag Signature: 'ps2s'. 


*int_java.awt.color.ICC_Profile.icSigPs2RenderingIntentTag*

ICC Profile Tag Signature: 'ps2i'. 


*int_java.awt.color.ICC_Profile.icSigRedColorantTag*

ICC Profile Tag Signature: 'rXYZ'. 


*int_java.awt.color.ICC_Profile.icSigRedMatrixColumnTag*

ICC Profile Tag Signature: 'rXYZ'. 


*int_java.awt.color.ICC_Profile.icSigRedTRCTag*

ICC Profile Tag Signature: 'rTRC'. 


*int_java.awt.color.ICC_Profile.icSigRgbData*

ICC Profile Color Space Type Signature: 'RGB '. 


*int_java.awt.color.ICC_Profile.icSigScreeningDescTag*

ICC Profile Tag Signature: 'scrd'. 


*int_java.awt.color.ICC_Profile.icSigScreeningTag*

ICC Profile Tag Signature: 'scrn'. 


*int_java.awt.color.ICC_Profile.icSigSpace2CLR*

ICC Profile Color Space Type Signature: '2CLR'. 


*int_java.awt.color.ICC_Profile.icSigSpace3CLR*

ICC Profile Color Space Type Signature: '3CLR'. 


*int_java.awt.color.ICC_Profile.icSigSpace4CLR*

ICC Profile Color Space Type Signature: '4CLR'. 


*int_java.awt.color.ICC_Profile.icSigSpace5CLR*

ICC Profile Color Space Type Signature: '5CLR'. 


*int_java.awt.color.ICC_Profile.icSigSpace6CLR*

ICC Profile Color Space Type Signature: '6CLR'. 


*int_java.awt.color.ICC_Profile.icSigSpace7CLR*

ICC Profile Color Space Type Signature: '7CLR'. 


*int_java.awt.color.ICC_Profile.icSigSpace8CLR*

ICC Profile Color Space Type Signature: '8CLR'. 


*int_java.awt.color.ICC_Profile.icSigSpace9CLR*

ICC Profile Color Space Type Signature: '9CLR'. 


*int_java.awt.color.ICC_Profile.icSigSpaceACLR*

ICC Profile Color Space Type Signature: 'ACLR'. 


*int_java.awt.color.ICC_Profile.icSigSpaceBCLR*

ICC Profile Color Space Type Signature: 'BCLR'. 


*int_java.awt.color.ICC_Profile.icSigSpaceCCLR*

ICC Profile Color Space Type Signature: 'CCLR'. 


*int_java.awt.color.ICC_Profile.icSigSpaceDCLR*

ICC Profile Color Space Type Signature: 'DCLR'. 


*int_java.awt.color.ICC_Profile.icSigSpaceECLR*

ICC Profile Color Space Type Signature: 'ECLR'. 


*int_java.awt.color.ICC_Profile.icSigSpaceFCLR*

ICC Profile Color Space Type Signature: 'FCLR'. 


*int_java.awt.color.ICC_Profile.icSigTechnologyTag*

ICC Profile Tag Signature: 'tech'. 


*int_java.awt.color.ICC_Profile.icSigUcrBgTag*

ICC Profile Tag Signature: 'bfd '. 


*int_java.awt.color.ICC_Profile.icSigViewingCondDescTag*

ICC Profile Tag Signature: 'vued'. 


*int_java.awt.color.ICC_Profile.icSigViewingConditionsTag*

ICC Profile Tag Signature: 'view'. 


*int_java.awt.color.ICC_Profile.icSigXYZData*

ICC Profile Color Space Type Signature: 'XYZ '. 


*int_java.awt.color.ICC_Profile.icSigYCbCrData*

ICC Profile Color Space Type Signature: 'YCbr'. 


*int_java.awt.color.ICC_Profile.icSigYxyData*

ICC Profile Color Space Type Signature: 'Yxy '. 


*int_java.awt.color.ICC_Profile.icTagReserved*

ICC Profile Constant: reserved. 


*int_java.awt.color.ICC_Profile.icTagType*

ICC Profile Constant: tag type signaturE. 


*int_java.awt.color.ICC_Profile.icXYZNumberX*

ICC Profile Constant: XYZNumber X. 



*java.awt.color.ICC_Profile.finalize()*

protected void finalize()

Frees the resources associated with an ICC_Profile object. 



*java.awt.color.ICC_Profile.getColorSpaceType()*

public int getColorSpaceType()

Returns the color space type. Returns one of the color space type constants defined by the ColorSpace class. This is the "input" color space of the profile. The type defines the 
number of components of the color space and the interpretation, e.g. TYPE_RGB identifies a color space with three components - red, green, and blue. It does not define the 
particular color characteristics of the space, e.g. the chromaticities of the primaries. 



    Returns: One of the color space type constants defined in the ColorSpace class. 

*java.awt.color.ICC_Profile.getData()*

public byte[] getData()

Returns a byte array corresponding to the data of this ICC_Profile. 



    Returns: A byte array that contains the profile data. 

*java.awt.color.ICC_Profile.getData(int)*

public byte[] getData(int tagSignature)

Returns a particular tagged data element from the profile as a byte array. Elements are identified by signatures as defined in the ICC specification. The signature icSigHead can 
be used to get the header. This method is useful for advanced applets or applications which need to access profile data directly. 


    tagSignature - The ICC tag signature for the data element you want to get. 

    Returns: A byte array that contains the tagged data element. Returns null if the specified tag doesn't exist. 

*java.awt.color.ICC_Profile.getInstance(byte[])*

public static |java.awt.color.ICC_Profile| getInstance(byte[] data)

Constructs an ICC_Profile object corresponding to the data in a byte array. Throws an IllegalArgumentException if the data does not correspond to a valid ICC Profile. 


    data - the specified ICC Profile data 

    Returns: an ICC_Profile object corresponding to the data in the specified data array. 

*java.awt.color.ICC_Profile.getInstance(InputStream)*

public static |java.awt.color.ICC_Profile| getInstance(java.io.InputStream s)
  throws |java.io.IOException|
         
Constructs an ICC_Profile corresponding to the data in an InputStream. This method throws an IllegalArgumentException if the stream does not contain valid ICC Profile data. It 
throws an IOException if an I/O error occurs while reading the stream. 


    s - The input stream from which to read the profile data. 

    Returns: an ICC_Profile object corresponding to the data in the specified InputStream. 

*java.awt.color.ICC_Profile.getInstance(int)*

public static |java.awt.color.ICC_Profile| getInstance(int cspace)

Constructs an ICC_Profile corresponding to one of the specific color spaces defined by the ColorSpace class (for example CS_sRGB). Throws an IllegalArgumentException if cspace is 
not one of the defined color spaces. 


    cspace - the type of color space to create a profile for. The specified type is one of the color space constants defined in the ColorSpace class. 

    Returns: an ICC_Profile object corresponding to the specified ColorSpace type. 

*java.awt.color.ICC_Profile.getInstance(String)*

public static |java.awt.color.ICC_Profile| getInstance(java.lang.String fileName)
  throws |java.io.IOException|
         
Constructs an ICC_Profile corresponding to the data in a file. fileName may be an absolute or a relative file specification. Relative file names are looked for in several places: 
first, relative to any directories specified by the java.iccprofile.path property; second, relative to any directories specified by the java.class.path property; finally, in a 
directory used to store profiles always available, such as the profile for sRGB. Built-in profiles use .pf as the file name extension for profiles, e.g. sRGB.pf. This method 
throws an IOException if the specified file cannot be opened or if an I/O error occurs while reading the file. It throws an IllegalArgumentException if the file does not contain 
valid ICC Profile data. 


    fileName - The file that contains the data for the profile. 

    Returns: an ICC_Profile object corresponding to the data in the specified file. 

*java.awt.color.ICC_Profile.getMajorVersion()*

public int getMajorVersion()

Returns profile major version. 



    Returns: The major version of the profile. 

*java.awt.color.ICC_Profile.getMinorVersion()*

public int getMinorVersion()

Returns profile minor version. 



    Returns: The minor version of the profile. 

*java.awt.color.ICC_Profile.getNumComponents()*

public int getNumComponents()

Returns the number of color components in the "input" color space of this profile. For example if the color space type of this profile is TYPE_RGB, then this method will return 3. 



    Returns: The number of color components in the profile's input color space. 

*java.awt.color.ICC_Profile.getPCSType()*

public int getPCSType()

Returns the color space type of the Profile Connection Space (PCS). Returns one of the color space type constants defined by the ColorSpace class. This is the "output" color space 
of the profile. For an input, display, or output profile useful for tagging colors or images, this will be either TYPE_XYZ or TYPE_Lab and should be interpreted as the 
corresponding specific color space defined in the ICC specification. For a device link profile, this could be any of the color space type constants. 



    Returns: One of the color space type constants defined in the ColorSpace class. 

*java.awt.color.ICC_Profile.getProfileClass()*

public int getProfileClass()

Returns the profile class. 



    Returns: One of the predefined profile class constants. 

*java.awt.color.ICC_Profile.readResolve()*

protected |java.lang.Object| readResolve()
  throws |java.io.ObjectStreamException|
         
Resolves instances being deserialized into instances registered with CMM. 



    Returns: ICC_Profile object for profile registered with CMM. 

*java.awt.color.ICC_Profile.setData(int,byte[])*

public void setData(
  int tagSignature,
  byte[] tagData)

Sets a particular tagged data element in the profile from a byte array. This method is useful for advanced applets or applications which need to access profile data directly. 


    tagSignature - The ICC tag signature for the data element you want to set. 
    tagData - the data to set for the specified tag signature 

*java.awt.color.ICC_Profile.write(OutputStream)*

public void write(java.io.OutputStream s)
  throws |java.io.IOException|
         
Write this ICC_Profile to an OutputStream. 


    s - The stream to write the profile data to. 

*java.awt.color.ICC_Profile.write(String)*

public void write(java.lang.String fileName)
  throws |java.io.IOException|
         
Write this ICC_Profile to a file. 


    fileName - The file to write the profile data to. 


