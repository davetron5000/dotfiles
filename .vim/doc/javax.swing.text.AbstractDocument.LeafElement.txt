*javax.swing.text.AbstractDocument.LeafElement* *AbstractDocument.LeafElement* I

public class AbstractDocument.LeafElement
  extends    |javax.swing.text.AbstractDocument.AbstractElement|

|javax.swing.text.AbstractDocument.LeafElement_Description|
|javax.swing.text.AbstractDocument.LeafElement_Fields|
|javax.swing.text.AbstractDocument.LeafElement_Constructors|
|javax.swing.text.AbstractDocument.LeafElement_Methods|

================================================================================

*javax.swing.text.AbstractDocument.LeafElement_Constructors*
|javax.swing.text.AbstractDocument.LeafElement(Element,AttributeSet,int,int)|Co

*javax.swing.text.AbstractDocument.LeafElement_Methods*
|javax.swing.text.AbstractDocument.LeafElement.children()|Returns the children 
|javax.swing.text.AbstractDocument.LeafElement.getAllowsChildren()|Returns true
|javax.swing.text.AbstractDocument.LeafElement.getElement(int)|Gets a child ele
|javax.swing.text.AbstractDocument.LeafElement.getElementCount()|Returns the nu
|javax.swing.text.AbstractDocument.LeafElement.getElementIndex(int)|Gets the ch
|javax.swing.text.AbstractDocument.LeafElement.getEndOffset()|Gets the ending o
|javax.swing.text.AbstractDocument.LeafElement.getName()|Gets the element name.
|javax.swing.text.AbstractDocument.LeafElement.getStartOffset()|Gets the starti
|javax.swing.text.AbstractDocument.LeafElement.isLeaf()|Checks whether the elem
|javax.swing.text.AbstractDocument.LeafElement.toString()|Converts the element 

*javax.swing.text.AbstractDocument.LeafElement_Description*

Implements an element that directly represents content of some kind. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.text.AbstractDocument.LeafElement(Element,AttributeSet,int,int)*

public AbstractDocument.LeafElement(
  javax.swing.text.Element parent,
  javax.swing.text.AttributeSet a,
  int offs0,
  int offs1)

Constructs an element that represents content within the document (has no 
children). 

    parent - The parent element 
    a - The element attributes 
    offs0 - The start offset >= 0 
    offs1 - The end offset >= offs0 

*javax.swing.text.AbstractDocument.LeafElement.children()*

public |java.util.Enumeration| children()

Returns the children of the receiver as an Enumeration. 


    Returns: the children of the receiver 
*javax.swing.text.AbstractDocument.LeafElement.getAllowsChildren()*

public boolean getAllowsChildren()

Returns true if the receiver allows children. 


    Returns: true if the receiver allows children, otherwise false 
*javax.swing.text.AbstractDocument.LeafElement.getElement(int)*

public |javax.swing.text.Element| getElement(int index)

Gets a child element. 

    index - the child index, >= 0 < getElementCount() 

    Returns: the child element 
*javax.swing.text.AbstractDocument.LeafElement.getElementCount()*

public int getElementCount()

Returns the number of child elements. 


    Returns: the number of children >= 0 
*javax.swing.text.AbstractDocument.LeafElement.getElementIndex(int)*

public int getElementIndex(int pos)

Gets the child element index closest to the given model offset. 

    pos - the offset >= 0 

    Returns: the element index >= 0 
*javax.swing.text.AbstractDocument.LeafElement.getEndOffset()*

public int getEndOffset()

Gets the ending offset in the model for the element. 


    Returns: the offset >= 0 
*javax.swing.text.AbstractDocument.LeafElement.getName()*

public |java.lang.String| getName()

Gets the element name. 


    Returns: 
*javax.swing.text.AbstractDocument.LeafElement.getStartOffset()*

public int getStartOffset()

Gets the starting offset in the model for the element. 


    Returns: the offset >= 0 
*javax.swing.text.AbstractDocument.LeafElement.isLeaf()*

public boolean isLeaf()

Checks whether the element is a leaf. 


    Returns: true if a leaf 
*javax.swing.text.AbstractDocument.LeafElement.toString()*

public |java.lang.String| toString()

Converts the element to a string. 


    Returns: 

