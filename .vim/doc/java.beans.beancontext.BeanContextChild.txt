*java.beans.beancontext.BeanContextChild* *BeanContextChild* 
 JavaBeans wishing

public interface interface BeanContextChild


|java.beans.beancontext.BeanContextChild_Description|
|java.beans.beancontext.BeanContextChild_Fields|
|java.beans.beancontext.BeanContextChild_Constructors|
|java.beans.beancontext.BeanContextChild_Methods|

================================================================================

*java.beans.beancontext.BeanContextChild_Methods*
|java.beans.beancontext.BeanContextChild.addPropertyChangeListener(String,PropertyChangeListener)|
|java.beans.beancontext.BeanContextChild.addVetoableChangeListener(String,VetoableChangeListener)|
|java.beans.beancontext.BeanContextChild.getBeanContext()|Gets the BeanContext 
|java.beans.beancontext.BeanContextChild.removePropertyChangeListener(String,PropertyChangeListener)|
|java.beans.beancontext.BeanContextChild.removeVetoableChangeListener(String,VetoableChangeListener)|
|java.beans.beancontext.BeanContextChild.setBeanContext(BeanContext)|Objects th

*java.beans.beancontext.BeanContextChild_Description*

JavaBeans wishing to be nested within, and obtain a reference to their 
execution environment, or context, as defined by the BeanContext sub-interface 
shall implement this interface. 

Conformant BeanContexts shall as a side effect of adding a BeanContextChild 
object shall pass a reference to itself via the setBeanContext() method of this 
interface. 

Note that a BeanContextChild may refuse a change in state by throwing 
PropertyVetoedException in response. 

In order for persistence mechanisms to function properly on BeanContextChild 
instances across a broad variety of scenarios, implementing classes of this 
interface are required to define as transient, any or all fields, or instance 
variables, that may contain, or represent, references to the nesting 
BeanContext instance or other resources obtained from the BeanContext via any 
unspecified mechanisms. 


*java.beans.beancontext.BeanContextChild.addPropertyChangeListener(String,PropertyChangeListener)*

public void addPropertyChangeListener(
  java.lang.String name,
  java.beans.PropertyChangeListener pcl)

Adds a PropertyChangeListener to this BeanContextChild in order to receive a 
PropertyChangeEvent whenever the specified property has changed. 

    name - the name of the property to listen on 
    pcl - the PropertyChangeListener to add 

*java.beans.beancontext.BeanContextChild.addVetoableChangeListener(String,VetoableChangeListener)*

public void addVetoableChangeListener(
  java.lang.String name,
  java.beans.VetoableChangeListener vcl)

Adds a VetoableChangeListener to this BeanContextChild to receive events 
whenever the specified property changes. 

    name - the name of the property to listen on 
    vcl - the VetoableChangeListener to add 

*java.beans.beancontext.BeanContextChild.getBeanContext()*

public |java.beans.beancontext.BeanContext| getBeanContext()

Gets the BeanContext associated with this BeanContextChild. 


    Returns: the BeanContext associated with this BeanContextChild. 
*java.beans.beancontext.BeanContextChild.removePropertyChangeListener(String,PropertyChangeListener)*

public void removePropertyChangeListener(
  java.lang.String name,
  java.beans.PropertyChangeListener pcl)

Removes a PropertyChangeListener from this BeanContextChild so that it no 
longer receives PropertyChangeEvents when the specified property is changed. 

    name - the name of the property that was listened on 
    pcl - the PropertyChangeListener to remove 

*java.beans.beancontext.BeanContextChild.removeVetoableChangeListener(String,VetoableChangeListener)*

public void removeVetoableChangeListener(
  java.lang.String name,
  java.beans.VetoableChangeListener vcl)

Removes a VetoableChangeListener from this BeanContextChild so that it no 
longer receives events when the specified property changes. 

    name - the name of the property that was listened on. 
    vcl - the VetoableChangeListener to remove. 

*java.beans.beancontext.BeanContextChild.setBeanContext(BeanContext)*

public void setBeanContext(java.beans.beancontext.BeanContext bc)
  throws |java.beans.PropertyVetoException|
         
Objects that implement this interface, shall fire a 
java.beans.PropertyChangeEvent, with parameters: 

propertyName "beanContext", oldValue (the previous nesting BeanContext 
instance, or null), newValue (the current nesting BeanContext instance, or 
null). 

A change in the value of the nesting BeanContext property of this 
BeanContextChild may be vetoed by throwing the appropriate exception. 

    bc - The BeanContext with which to associate this BeanContextChild. 


