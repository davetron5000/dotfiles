*java.text.ParsePosition* *ParsePosition* ParsePosition is a simple class used b

public class ParsePosition
  extends    |java.lang.Object|

|java.text.ParsePosition_Description|
|java.text.ParsePosition_Fields|
|java.text.ParsePosition_Constructors|
|java.text.ParsePosition_Methods|

================================================================================

*java.text.ParsePosition_Constructors*
|java.text.ParsePosition(int)|Create a new ParsePosition with the given initial

*java.text.ParsePosition_Methods*
|java.text.ParsePosition.equals(Object)|Overrides equals
|java.text.ParsePosition.getErrorIndex()|Retrieve the index at which an error o
|java.text.ParsePosition.getIndex()|Retrieve the current parse position.
|java.text.ParsePosition.hashCode()|Returns a hash code for this ParsePosition.
|java.text.ParsePosition.setErrorIndex(int)|Set the index at which a parse erro
|java.text.ParsePosition.setIndex(int)|Set the current parse position.
|java.text.ParsePosition.toString()|Return a string representation of this Pars

*java.text.ParsePosition_Description*

ParsePosition is a simple class used by Format and its subclasses to keep track 
of the current position during parsing. The parseObject method in the various 
Format classes requires a ParsePosition object as an argument. 

By design, as you parse through a string with different formats, you can use 
the same ParsePosition, since the index parameter records the current position. 


*java.text.ParsePosition(int)*

public ParsePosition(int index)

Create a new ParsePosition with the given initial index. 


*java.text.ParsePosition.equals(Object)*

public boolean equals(java.lang.Object obj)

Overrides equals 


*java.text.ParsePosition.getErrorIndex()*

public int getErrorIndex()

Retrieve the index at which an error occurred, or -1 if the error index has not 
been set. 


*java.text.ParsePosition.getIndex()*

public int getIndex()

Retrieve the current parse position. On input to a parse method, this is the 
index of the character at which parsing will begin; on output, it is the index 
of the character following the last character parsed. 


*java.text.ParsePosition.hashCode()*

public int hashCode()

Returns a hash code for this ParsePosition. 


    Returns: a hash code value for this object 
*java.text.ParsePosition.setErrorIndex(int)*

public void setErrorIndex(int ei)

Set the index at which a parse error occurred. Formatters should set this 
before returning an error code from their parseObject method. The default value 
is -1 if this is not set. 


*java.text.ParsePosition.setIndex(int)*

public void setIndex(int index)

Set the current parse position. 


*java.text.ParsePosition.toString()*

public |java.lang.String| toString()

Return a string representation of this ParsePosition. 


    Returns: a string representation of this object 

