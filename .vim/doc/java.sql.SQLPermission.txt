*java.sql.SQLPermission* *SQLPermission* The permission for which the SecurityManager will check
 when code that is running in an applet calls the 
 DriverManager.setLogWriter meth

public final class SQLPermission
  extends    |java.security.BasicPermission|

|java.sql.SQLPermission_Description|
|java.sql.SQLPermission_Fields|
|java.sql.SQLPermission_Constructors|
|java.sql.SQLPermission_Methods|

====================================================================================================================================================================================

*java.sql.SQLPermission_Constructors*
|java.sql.SQLPermission(String)|Creates a new SQLPermission object with the specified name.
|java.sql.SQLPermission(String,String)|Creates a new SQLPermission object with the specified name.

*java.sql.SQLPermission_Description*

The permission for which the SecurityManager will check when code that is running in an applet calls the DriverManager.setLogWriter method or the DriverManager.setLogStream 
(deprecated) method. If there is no SQLPermission object, these methods throw a java.lang.SecurityException as a runtime exception. 

A SQLPermission object contains a name (also referred to as a "target name") but no actions list; there is either a named permission or there is not. The target name is the name 
of the permission (see below). The naming convention follows the hierarchical property naming convention. In addition, an asterisk may appear at the end of the name, following a 
".", or by itself, to signify a wildcard match. For example: loadLibrary.* or * is valid, but *loadLibrary or a*b is not valid. 

The following table lists all the possible SQLPermission target names. Currently, the only name allowed is setLog. The table gives a description of what the permission allows and 
a discussion of the risks of granting code the permission. 



Permission Target Name What the Permission Allows Risks of Allowing this Permission 

setLog Setting of the logging stream This is a dangerous permission to grant. The contents of the log may contain usernames and passwords, SQL statements, and SQL data. 



The person running an applet decides what permissions to allow and will run the Policy Tool to create an SQLPermission in a policy file. A programmer does not use a constructor 
directly to create an instance of SQLPermission but rather uses a tool. 



*java.sql.SQLPermission(String)*

public SQLPermission(java.lang.String name)

Creates a new SQLPermission object with the specified name. The name is the symbolic name of the SQLPermission; currently, the only name allowed is "setLog". 

    name - the name of this SQLPermission object, which must be setLog 

*java.sql.SQLPermission(String,String)*

public SQLPermission(
  java.lang.String name,
  java.lang.String actions)

Creates a new SQLPermission object with the specified name. The name is the symbolic name of the SQLPermission; the actions String is currently unused and should be null. 

    name - the name of this SQLPermission object, which must be setLog 
    actions - should be null 

