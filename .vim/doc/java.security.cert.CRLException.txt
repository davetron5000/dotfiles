*java.security.cert.CRLException* *CRLException* CRL (Certificate Revocation Lis

public class CRLException
  extends    |java.security.GeneralSecurityException|

|java.security.cert.CRLException_Description|
|java.security.cert.CRLException_Fields|
|java.security.cert.CRLException_Constructors|
|java.security.cert.CRLException_Methods|

================================================================================

*java.security.cert.CRLException_Constructors*
|java.security.cert.CRLException()|Constructs a CRLException with no detail mes
|java.security.cert.CRLException(String)|Constructs a CRLException with the spe
|java.security.cert.CRLException(String,Throwable)|Creates a CRLException with 
|java.security.cert.CRLException(Throwable)|Creates a CRLException with the spe

*java.security.cert.CRLException_Description*

CRL (Certificate Revocation List) Exception. 


*java.security.cert.CRLException()*

public CRLException()

Constructs a CRLException with no detail message. A detail message is a String 
that describes this particular exception. 


*java.security.cert.CRLException(String)*

public CRLException(java.lang.String message)

Constructs a CRLException with the specified detail message. A detail message 
is a String that describes this particular exception. 

    message - the detail message. 

*java.security.cert.CRLException(String,Throwable)*

public CRLException(
  java.lang.String message,
  java.lang.Throwable cause)

Creates a CRLException with the specified detail message and cause. 

    message - the detail message (which is saved for later retrieval by the {@link 
       #getMessage()} method). 
    cause - the cause (which is saved for later retrieval by the {@link #getCause()} 
       method). (A null value is permitted, and indicates that the cause is 
       nonexistent or unknown.) 

*java.security.cert.CRLException(Throwable)*

public CRLException(java.lang.Throwable cause)

Creates a CRLException with the specified cause and a detail message of 
(cause==null ? null : cause.toString()) (which typically contains the class and 
detail message of cause). 

    cause - the cause (which is saved for later retrieval by the {@link #getCause()} 
       method). (A null value is permitted, and indicates that the cause is 
       nonexistent or unknown.) 

