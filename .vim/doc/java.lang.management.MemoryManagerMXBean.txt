*java.lang.management.MemoryManagerMXBean* *MemoryManagerMXBean* The management 

public interface interface MemoryManagerMXBean


|java.lang.management.MemoryManagerMXBean_Description|
|java.lang.management.MemoryManagerMXBean_Fields|
|java.lang.management.MemoryManagerMXBean_Constructors|
|java.lang.management.MemoryManagerMXBean_Methods|

================================================================================

*java.lang.management.MemoryManagerMXBean_Methods*
|java.lang.management.MemoryManagerMXBean.getMemoryPoolNames()|Returns the name
|java.lang.management.MemoryManagerMXBean.getName()|Returns the name representi
|java.lang.management.MemoryManagerMXBean.isValid()|Tests if this memory manage

*java.lang.management.MemoryManagerMXBean_Description*

The management interface for a memory manager. A memory manager manages one or 
more memory pools of the Java virtual machine. 

A Java virtual machine has one or more memory managers. An instance 
implementing this interface is an MXBean that can be obtained by calling the 
(|java.lang.management.ManagementFactory|) method or from the platform 
<tt>MBeanServer</tt>(|java.lang.management.ManagementFactory|) method. 

The ObjectName for uniquely identifying the MXBean for a memory manager within 
an MBeanServer is: 
<tt>java.lang:type=MemoryManager</tt>(|java.lang.management.ManagementFactory|) 
,name=manager's name 


*java.lang.management.MemoryManagerMXBean.getMemoryPoolNames()*

public |java.lang.String| getMemoryPoolNames()

Returns the name of memory pools that this memory manager manages. 


    Returns: an array of String objects, each is the name of a memory pool that this memory 
             manager manages. 
*java.lang.management.MemoryManagerMXBean.getName()*

public |java.lang.String| getName()

Returns the name representing this memory manager. 


    Returns: the name of this memory manager. 
*java.lang.management.MemoryManagerMXBean.isValid()*

public boolean isValid()

Tests if this memory manager is valid in the Java virtual machine. A memory 
manager becomes invalid once the Java virtual machine removes it from the 
memory system. 


    Returns: true if the memory manager is valid in the Java virtual machine; false 
             otherwise. 

