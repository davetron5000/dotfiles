*java.lang.reflect.WildcardType* *WildcardType* WildcardType represents a wildca

public interface interface WildcardType

  implements |java.lang.reflect.Type|

|java.lang.reflect.WildcardType_Description|
|java.lang.reflect.WildcardType_Fields|
|java.lang.reflect.WildcardType_Constructors|
|java.lang.reflect.WildcardType_Methods|

================================================================================

*java.lang.reflect.WildcardType_Methods*
|java.lang.reflect.WildcardType.getLowerBounds()|Returns an array of Type objec
|java.lang.reflect.WildcardType.getUpperBounds()|Returns an array of Type objec

*java.lang.reflect.WildcardType_Description*

WildcardType represents a wildcard type expression, such as ?, ? extends 
Number, or ? super Integer. 


*java.lang.reflect.WildcardType.getLowerBounds()*

public |java.lang.reflect.Type| getLowerBounds()

Returns an array of Type objects representing the lower bound(s) of this type 
variable. Note that if no lower bound is explicitly declared, the lower bound 
is the type of null. In this case, a zero length array is returned. 

For each lower bound B : 

if B is a parameterized type or a type variable, it is created, (see 
ParameterizedType(|java.lang.reflect.ParameterizedType|) for the details of the 
creation process for parameterized types). Otherwise, B is resolved. 


    Returns: an array of Types representing the lower bound(s) of this type variable 
*java.lang.reflect.WildcardType.getUpperBounds()*

public |java.lang.reflect.Type| getUpperBounds()

Returns an array of Type objects representing the upper bound(s) of this type 
variable. Note that if no upper bound is explicitly declared, the upper bound 
is Object. 

For each upper bound B : 

if B is a parameterized type or a type variable, it is created, (see 
ParameterizedType(|java.lang.reflect.ParameterizedType|) for the details of the 
creation process for parameterized types). Otherwise, B is resolved. 


    Returns: an array of Types representing the upper bound(s) of this type variable 

