*javax.swing.plaf.metal.MetalTabbedPaneUI* *MetalTabbedPaneUI* The Metal subclas

public class MetalTabbedPaneUI
  extends    |javax.swing.plaf.basic.BasicTabbedPaneUI|

|javax.swing.plaf.metal.MetalTabbedPaneUI_Description|
|javax.swing.plaf.metal.MetalTabbedPaneUI_Fields|
|javax.swing.plaf.metal.MetalTabbedPaneUI_Constructors|
|javax.swing.plaf.metal.MetalTabbedPaneUI_Methods|

================================================================================

*javax.swing.plaf.metal.MetalTabbedPaneUI_Fields*
|int_javax.swing.plaf.metal.MetalTabbedPaneUI.minTabWidth|
|java.awt.Color_javax.swing.plaf.metal.MetalTabbedPaneUI.selectColor|
|java.awt.Color_javax.swing.plaf.metal.MetalTabbedPaneUI.selectHighlight|
|java.awt.Color_javax.swing.plaf.metal.MetalTabbedPaneUI.tabAreaBackground|

*javax.swing.plaf.metal.MetalTabbedPaneUI_Constructors*
|javax.swing.plaf.metal.MetalTabbedPaneUI()|

*javax.swing.plaf.metal.MetalTabbedPaneUI_Methods*
|javax.swing.plaf.metal.MetalTabbedPaneUI.calculateMaxTabHeight(int)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.createLayoutManager()|
|javax.swing.plaf.metal.MetalTabbedPaneUI.createUI(JComponent)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.getColorForGap(int,int,int)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.getTabLabelShiftX(int,int,boolean)|Ov
|javax.swing.plaf.metal.MetalTabbedPaneUI.getTabLabelShiftY(int,int,boolean)|Ov
|javax.swing.plaf.metal.MetalTabbedPaneUI.getTabRunOverlay(int)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.installDefaults()|
|javax.swing.plaf.metal.MetalTabbedPaneUI.paint(Graphics,JComponent)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.paintBottomTabBorder(int,Graphics,int,int,int,int,int,int,boolean)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.paintContentBorderBottomEdge(Graphics,int,int,int,int,int,int)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.paintContentBorderLeftEdge(Graphics,int,int,int,int,int,int)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.paintContentBorderRightEdge(Graphics,int,int,int,int,int,int)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.paintContentBorderTopEdge(Graphics,int,int,int,int,int,int)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.paintFocusIndicator(Graphics,int,Rectangle[],int,Rectangle,Rectangle,boolean)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.paintHighlightBelowTab()|
|javax.swing.plaf.metal.MetalTabbedPaneUI.paintLeftTabBorder(int,Graphics,int,int,int,int,int,int,boolean)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.paintRightTabBorder(int,Graphics,int,int,int,int,int,int,boolean)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.paintTabBackground(Graphics,int,int,int,int,int,int,boolean)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.paintTabBorder(Graphics,int,int,int,int,int,int,boolean)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.paintTopTabBorder(int,Graphics,int,int,int,int,int,int,boolean)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.shouldFillGap(int,int,int,int)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.shouldPadTabRun(int,int)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.shouldRotateTabRuns(int,int)|
|javax.swing.plaf.metal.MetalTabbedPaneUI.update(Graphics,JComponent)|

*javax.swing.plaf.metal.MetalTabbedPaneUI_Description*

The Metal subclass of BasicTabbedPaneUI. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*int_javax.swing.plaf.metal.MetalTabbedPaneUI.minTabWidth*

The Metal subclass of BasicTabbedPaneUI. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*java.awt.Color_javax.swing.plaf.metal.MetalTabbedPaneUI.selectColor*

The Metal subclass of BasicTabbedPaneUI. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*java.awt.Color_javax.swing.plaf.metal.MetalTabbedPaneUI.selectHighlight*

The Metal subclass of BasicTabbedPaneUI. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*java.awt.Color_javax.swing.plaf.metal.MetalTabbedPaneUI.tabAreaBackground*

The Metal subclass of BasicTabbedPaneUI. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 



*javax.swing.plaf.metal.MetalTabbedPaneUI()*

public MetalTabbedPaneUI()




*javax.swing.plaf.metal.MetalTabbedPaneUI.calculateMaxTabHeight(int)*

protected int calculateMaxTabHeight(int tabPlacement)




*javax.swing.plaf.metal.MetalTabbedPaneUI.createLayoutManager()*

protected |java.awt.LayoutManager| createLayoutManager()




*javax.swing.plaf.metal.MetalTabbedPaneUI.createUI(JComponent)*

public static |javax.swing.plaf.ComponentUI| createUI(javax.swing.JComponent x)




*javax.swing.plaf.metal.MetalTabbedPaneUI.getColorForGap(int,int,int)*

protected |java.awt.Color| getColorForGap(
  int currentRun,
  int x,
  int y)




*javax.swing.plaf.metal.MetalTabbedPaneUI.getTabLabelShiftX(int,int,boolean)*

protected int getTabLabelShiftX(
  int tabPlacement,
  int tabIndex,
  boolean isSelected)

Overridden to do nothing for the Java L&F. 


*javax.swing.plaf.metal.MetalTabbedPaneUI.getTabLabelShiftY(int,int,boolean)*

protected int getTabLabelShiftY(
  int tabPlacement,
  int tabIndex,
  boolean isSelected)

Overridden to do nothing for the Java L&F. 


*javax.swing.plaf.metal.MetalTabbedPaneUI.getTabRunOverlay(int)*

protected int getTabRunOverlay(int tabPlacement)




*javax.swing.plaf.metal.MetalTabbedPaneUI.installDefaults()*

protected void installDefaults()




*javax.swing.plaf.metal.MetalTabbedPaneUI.paint(Graphics,JComponent)*

public void paint(
  java.awt.Graphics g,
  javax.swing.JComponent c)




*javax.swing.plaf.metal.MetalTabbedPaneUI.paintBottomTabBorder(int,Graphics,int,int,int,int,int,int,boolean)*

protected void paintBottomTabBorder(
  int tabIndex,
  java.awt.Graphics g,
  int x,
  int y,
  int w,
  int h,
  int btm,
  int rght,
  boolean isSelected)




*javax.swing.plaf.metal.MetalTabbedPaneUI.paintContentBorderBottomEdge(Graphics,int,int,int,int,int,int)*

protected void paintContentBorderBottomEdge(
  java.awt.Graphics g,
  int tabPlacement,
  int selectedIndex,
  int x,
  int y,
  int w,
  int h)




*javax.swing.plaf.metal.MetalTabbedPaneUI.paintContentBorderLeftEdge(Graphics,int,int,int,int,int,int)*

protected void paintContentBorderLeftEdge(
  java.awt.Graphics g,
  int tabPlacement,
  int selectedIndex,
  int x,
  int y,
  int w,
  int h)




*javax.swing.plaf.metal.MetalTabbedPaneUI.paintContentBorderRightEdge(Graphics,int,int,int,int,int,int)*

protected void paintContentBorderRightEdge(
  java.awt.Graphics g,
  int tabPlacement,
  int selectedIndex,
  int x,
  int y,
  int w,
  int h)




*javax.swing.plaf.metal.MetalTabbedPaneUI.paintContentBorderTopEdge(Graphics,int,int,int,int,int,int)*

protected void paintContentBorderTopEdge(
  java.awt.Graphics g,
  int tabPlacement,
  int selectedIndex,
  int x,
  int y,
  int w,
  int h)




*javax.swing.plaf.metal.MetalTabbedPaneUI.paintFocusIndicator(Graphics,int,Rectangle[],int,Rectangle,Rectangle,boolean)*

protected void paintFocusIndicator(
  java.awt.Graphics g,
  int tabPlacement,
  java.awt.Rectangle[] rects,
  int tabIndex,
  java.awt.Rectangle iconRect,
  java.awt.Rectangle textRect,
  boolean isSelected)




*javax.swing.plaf.metal.MetalTabbedPaneUI.paintHighlightBelowTab()*

protected void paintHighlightBelowTab()




*javax.swing.plaf.metal.MetalTabbedPaneUI.paintLeftTabBorder(int,Graphics,int,int,int,int,int,int,boolean)*

protected void paintLeftTabBorder(
  int tabIndex,
  java.awt.Graphics g,
  int x,
  int y,
  int w,
  int h,
  int btm,
  int rght,
  boolean isSelected)




*javax.swing.plaf.metal.MetalTabbedPaneUI.paintRightTabBorder(int,Graphics,int,int,int,int,int,int,boolean)*

protected void paintRightTabBorder(
  int tabIndex,
  java.awt.Graphics g,
  int x,
  int y,
  int w,
  int h,
  int btm,
  int rght,
  boolean isSelected)




*javax.swing.plaf.metal.MetalTabbedPaneUI.paintTabBackground(Graphics,int,int,int,int,int,int,boolean)*

protected void paintTabBackground(
  java.awt.Graphics g,
  int tabPlacement,
  int tabIndex,
  int x,
  int y,
  int w,
  int h,
  boolean isSelected)




*javax.swing.plaf.metal.MetalTabbedPaneUI.paintTabBorder(Graphics,int,int,int,int,int,int,boolean)*

protected void paintTabBorder(
  java.awt.Graphics g,
  int tabPlacement,
  int tabIndex,
  int x,
  int y,
  int w,
  int h,
  boolean isSelected)




*javax.swing.plaf.metal.MetalTabbedPaneUI.paintTopTabBorder(int,Graphics,int,int,int,int,int,int,boolean)*

protected void paintTopTabBorder(
  int tabIndex,
  java.awt.Graphics g,
  int x,
  int y,
  int w,
  int h,
  int btm,
  int rght,
  boolean isSelected)




*javax.swing.plaf.metal.MetalTabbedPaneUI.shouldFillGap(int,int,int,int)*

protected boolean shouldFillGap(
  int currentRun,
  int tabIndex,
  int x,
  int y)




*javax.swing.plaf.metal.MetalTabbedPaneUI.shouldPadTabRun(int,int)*

protected boolean shouldPadTabRun(
  int tabPlacement,
  int run)




*javax.swing.plaf.metal.MetalTabbedPaneUI.shouldRotateTabRuns(int,int)*

protected boolean shouldRotateTabRuns(
  int tabPlacement,
  int selectedRun)




*javax.swing.plaf.metal.MetalTabbedPaneUI.update(Graphics,JComponent)*

public void update(
  java.awt.Graphics g,
  javax.swing.JComponent c)





