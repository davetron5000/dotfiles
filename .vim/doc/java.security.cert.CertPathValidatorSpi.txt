*java.security.cert.CertPathValidatorSpi* *CertPathValidatorSpi* The Service Provider Interface (SPI) 
 for theCertPathValidator CertPathValidatorclass.

public abstract class CertPathValidatorSpi
  extends    |java.lang.Object|

|java.security.cert.CertPathValidatorSpi_Description|
|java.security.cert.CertPathValidatorSpi_Fields|
|java.security.cert.CertPathValidatorSpi_Constructors|
|java.security.cert.CertPathValidatorSpi_Methods|

====================================================================================================================================================================================

*java.security.cert.CertPathValidatorSpi_Constructors*
|java.security.cert.CertPathValidatorSpi()|The default constructor.

*java.security.cert.CertPathValidatorSpi_Methods*
|java.security.cert.CertPathValidatorSpi.engineValidate(CertPath,CertPathParameters)|Validates the specified certification path using the specified   algorithm parameter set.

*java.security.cert.CertPathValidatorSpi_Description*

The Service Provider Interface (SPI) for the CertPathValidator(|java.security.cert.CertPathValidator|) class. All CertPathValidator implementations must include a class (the SPI 
class) that extends this class (CertPathValidatorSpi) and implements all of its methods. In general, instances of this class should only be accessed through the CertPathValidator 
class. For details, see the Java Cryptography Architecture. 

Concurrent Access 

Instances of this class need not be protected against concurrent access from multiple threads. Threads that need to access a single CertPathValidatorSpi instance concurrently 
should synchronize amongst themselves and provide the necessary locking before calling the wrapping CertPathValidator object. 

However, implementations of CertPathValidatorSpi may still encounter concurrency issues, since multiple threads each manipulating a different CertPathValidatorSpi instance need 
not synchronize. 



*java.security.cert.CertPathValidatorSpi()*

public CertPathValidatorSpi()

The default constructor. 


*java.security.cert.CertPathValidatorSpi.engineValidate(CertPath,CertPathParameters)*

public abstract |java.security.cert.CertPathValidatorResult| engineValidate(
  java.security.cert.CertPath certPath,
  java.security.cert.CertPathParameters params)
  throws |java.security.cert.CertPathValidatorException|
         |java.security.InvalidAlgorithmParameterException|
         
Validates the specified certification path using the specified algorithm parameter set. 

The CertPath specified must be of a type that is supported by the validation algorithm, otherwise an InvalidAlgorithmParameterException will be thrown. For example, a 
CertPathValidator that implements the PKIX algorithm validates CertPath objects of type X.509. 


    certPath - the CertPath to be validated 
    params - the algorithm parameters 

    Returns: the result of the validation algorithm 


