*javax.imageio.stream.FileImageOutputStream* *FileImageOutputStream* An implemen

public class FileImageOutputStream
  extends    |javax.imageio.stream.ImageOutputStreamImpl|

|javax.imageio.stream.FileImageOutputStream_Description|
|javax.imageio.stream.FileImageOutputStream_Fields|
|javax.imageio.stream.FileImageOutputStream_Constructors|
|javax.imageio.stream.FileImageOutputStream_Methods|

================================================================================

*javax.imageio.stream.FileImageOutputStream_Constructors*
|javax.imageio.stream.FileImageOutputStream(File)|Constructs a FileImageOutputS
|javax.imageio.stream.FileImageOutputStream(RandomAccessFile)|Constructs a File

*javax.imageio.stream.FileImageOutputStream_Methods*
|javax.imageio.stream.FileImageOutputStream.close()|
|javax.imageio.stream.FileImageOutputStream.length()|
|javax.imageio.stream.FileImageOutputStream.read()|
|javax.imageio.stream.FileImageOutputStream.read(byte[],int,int)|
|javax.imageio.stream.FileImageOutputStream.seek(long)|Sets the current stream 
|javax.imageio.stream.FileImageOutputStream.write(byte[],int,int)|
|javax.imageio.stream.FileImageOutputStream.write(int)|

*javax.imageio.stream.FileImageOutputStream_Description*

An implementation of ImageOutputStream that writes its output directly to a 
File or RandomAccessFile. 


*javax.imageio.stream.FileImageOutputStream(File)*

public FileImageOutputStream(java.io.File f)
  throws |java.io.FileNotFoundException|
         |java.io.IOException|
         
Constructs a FileImageOutputStream that will write to a given File. 

    f - a File to write to. 

*javax.imageio.stream.FileImageOutputStream(RandomAccessFile)*

public FileImageOutputStream(java.io.RandomAccessFile raf)

Constructs a FileImageOutputStream that will write to a given RandomAccessFile. 

    raf - a RandomAccessFile to write to. 

*javax.imageio.stream.FileImageOutputStream.close()*

public void close()
  throws |java.io.IOException|
         



*javax.imageio.stream.FileImageOutputStream.length()*

public long length()




*javax.imageio.stream.FileImageOutputStream.read()*

public int read()
  throws |java.io.IOException|
         



*javax.imageio.stream.FileImageOutputStream.read(byte[],int,int)*

public int read(
  byte[] b,
  int off,
  int len)
  throws |java.io.IOException|
         



*javax.imageio.stream.FileImageOutputStream.seek(long)*

public void seek(long pos)
  throws |java.io.IOException|
         
Sets the current stream position and resets the bit offset to 0. It is legal to 
seeking past the end of the file; an EOFException will be thrown only if a read 
is performed. The file length will not be increased until a write is performed. 


*javax.imageio.stream.FileImageOutputStream.write(byte[],int,int)*

public void write(
  byte[] b,
  int off,
  int len)
  throws |java.io.IOException|
         



*javax.imageio.stream.FileImageOutputStream.write(int)*

public void write(int b)
  throws |java.io.IOException|
         




