*org.w3c.dom.UserDataHandler* *UserDataHandler* When associating an object to a 

public interface interface UserDataHandler


|org.w3c.dom.UserDataHandler_Description|
|org.w3c.dom.UserDataHandler_Fields|
|org.w3c.dom.UserDataHandler_Constructors|
|org.w3c.dom.UserDataHandler_Methods|

================================================================================

*org.w3c.dom.UserDataHandler_Fields*
|short_org.w3c.dom.UserDataHandler.NODE_ADOPTED|
|short_org.w3c.dom.UserDataHandler.NODE_CLONED|
|short_org.w3c.dom.UserDataHandler.NODE_DELETED|
|short_org.w3c.dom.UserDataHandler.NODE_IMPORTED|
|short_org.w3c.dom.UserDataHandler.NODE_RENAMED|

*org.w3c.dom.UserDataHandler_Methods*
|org.w3c.dom.UserDataHandler.handle(short,String,Object,Node,Node)|This method 

*org.w3c.dom.UserDataHandler_Description*

When associating an object to a key on a node using Node.setUserData() the 
application can provide a handler that gets called when the node the object is 
associated to is being cloned, imported, or renamed. This can be used by the 
application to implement various behaviors regarding the data it associates to 
the DOM nodes. This interface defines that handler. See also the Document 
Object Model (DOM) Level 3 Core Specification. 


*short_org.w3c.dom.UserDataHandler.NODE_ADOPTED*

When associating an object to a key on a node using Node.setUserData() the 
application can provide a handler that gets called when the node the object is 
associated to is being cloned, imported, or renamed. This can be used by the 
application to implement various behaviors regarding the data it associates to 
the DOM nodes. This interface defines that handler. See also the Document 
Object Model (DOM) Level 3 Core Specification. 


*short_org.w3c.dom.UserDataHandler.NODE_CLONED*

When associating an object to a key on a node using Node.setUserData() the 
application can provide a handler that gets called when the node the object is 
associated to is being cloned, imported, or renamed. This can be used by the 
application to implement various behaviors regarding the data it associates to 
the DOM nodes. This interface defines that handler. See also the Document 
Object Model (DOM) Level 3 Core Specification. 


*short_org.w3c.dom.UserDataHandler.NODE_DELETED*

When associating an object to a key on a node using Node.setUserData() the 
application can provide a handler that gets called when the node the object is 
associated to is being cloned, imported, or renamed. This can be used by the 
application to implement various behaviors regarding the data it associates to 
the DOM nodes. This interface defines that handler. See also the Document 
Object Model (DOM) Level 3 Core Specification. 


*short_org.w3c.dom.UserDataHandler.NODE_IMPORTED*

When associating an object to a key on a node using Node.setUserData() the 
application can provide a handler that gets called when the node the object is 
associated to is being cloned, imported, or renamed. This can be used by the 
application to implement various behaviors regarding the data it associates to 
the DOM nodes. This interface defines that handler. See also the Document 
Object Model (DOM) Level 3 Core Specification. 


*short_org.w3c.dom.UserDataHandler.NODE_RENAMED*

When associating an object to a key on a node using Node.setUserData() the 
application can provide a handler that gets called when the node the object is 
associated to is being cloned, imported, or renamed. This can be used by the 
application to implement various behaviors regarding the data it associates to 
the DOM nodes. This interface defines that handler. See also the Document 
Object Model (DOM) Level 3 Core Specification. 



*org.w3c.dom.UserDataHandler.handle(short,String,Object,Node,Node)*

public void handle(
  short operation,
  java.lang.String key,
  java.lang.Object data,
  org.w3c.dom.Node src,
  org.w3c.dom.Node dst)

This method is called whenever the node for which this handler is registered is 
imported or cloned. DOM applications must not raise exceptions in a 
UserDataHandler. The effect of throwing exceptions from the handler is DOM 
implementation dependent. 

    operation - Specifies the type of operation that is being performed on the node. 
    key - Specifies the key for which this handler is being called. 
    data - Specifies the data for which this handler is being called. 
    src - Specifies the node being cloned, adopted, imported, or renamed. This is null 
       when the node is being deleted. 
    dst - Specifies the node newly created if any, or null. 


