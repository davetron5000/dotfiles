*java.rmi.UnmarshalException* *UnmarshalException* An UnmarshalException can be 

public class UnmarshalException
  extends    |java.rmi.RemoteException|

|java.rmi.UnmarshalException_Description|
|java.rmi.UnmarshalException_Fields|
|java.rmi.UnmarshalException_Constructors|
|java.rmi.UnmarshalException_Methods|

================================================================================

*java.rmi.UnmarshalException_Constructors*
|java.rmi.UnmarshalException(String)|Constructs an UnmarshalException with the 
|java.rmi.UnmarshalException(String,Exception)|Constructs an UnmarshalException

*java.rmi.UnmarshalException_Description*

An UnmarshalException can be thrown while unmarshalling the parameters or 
results of a remote method call if any of the following conditions occur: 

if an exception occurs while unmarshalling the call header if the protocol for 
the return value is invalid if a java.io.IOException occurs unmarshalling 
parameters (on the server side) or the return value (on the client side). if a 
java.lang.ClassNotFoundException occurs during unmarshalling parameters or 
return values if no skeleton can be loaded on the server-side; note that 
skeletons are required in the 1.1 stub protocol, but not in the 1.2 stub 
protocol. if the method hash is invalid (i.e., missing method). if there is a 
failure to create a remote reference object for a remote object's stub when it 
is unmarshalled. 


*java.rmi.UnmarshalException(String)*

public UnmarshalException(java.lang.String s)

Constructs an UnmarshalException with the specified detail message. 

    s - the detail message 

*java.rmi.UnmarshalException(String,Exception)*

public UnmarshalException(
  java.lang.String s,
  java.lang.Exception ex)

Constructs an UnmarshalException with the specified detail message and nested 
exception. 

    s - the detail message 
    ex - the nested exception 

