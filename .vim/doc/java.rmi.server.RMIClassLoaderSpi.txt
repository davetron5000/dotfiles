*java.rmi.server.RMIClassLoaderSpi* *RMIClassLoaderSpi* RMIClassLoaderSpi is the service provider interface for
 RMIClassLoader.

public abstract class RMIClassLoaderSpi
  extends    |java.lang.Object|

|java.rmi.server.RMIClassLoaderSpi_Description|
|java.rmi.server.RMIClassLoaderSpi_Fields|
|java.rmi.server.RMIClassLoaderSpi_Constructors|
|java.rmi.server.RMIClassLoaderSpi_Methods|

====================================================================================================================================================================================

*java.rmi.server.RMIClassLoaderSpi_Constructors*
|java.rmi.server.RMIClassLoaderSpi()|

*java.rmi.server.RMIClassLoaderSpi_Methods*
|java.rmi.server.RMIClassLoaderSpi.getClassAnnotation(Class<?>)|Provides the implementation forRMIClassLoader#getClassAnnotation(Class).
|java.rmi.server.RMIClassLoaderSpi.getClassLoader(String)|Provides the implementation forRMIClassLoader#getClassLoader(String).
|java.rmi.server.RMIClassLoaderSpi.loadClass(String,String,ClassLoader)|Provides the implementation forRMIClassLoader#loadClass(URL,String),RMIClassLoader#loadClass(String,String)
|java.rmi.server.RMIClassLoaderSpi.loadProxyClass(String,String[],ClassLoader)|Provides the implementation forRMIClassLoader#loadProxyClass(String,String[],ClassLoader).

*java.rmi.server.RMIClassLoaderSpi_Description*

RMIClassLoaderSpi is the service provider interface for RMIClassLoader. 

In particular, an RMIClassLoaderSpi instance provides an implementation of the following static methods of RMIClassLoader: 



(|java.rmi.server.RMIClassLoader|) (|java.rmi.server.RMIClassLoader|) (|java.rmi.server.RMIClassLoader|) (|java.rmi.server.RMIClassLoader|) (|java.rmi.server.RMIClassLoader|) 
(|java.rmi.server.RMIClassLoader|) 

When one of those methods is invoked, its behavior is to delegate to a corresponding method on an instance of this class. The details of how each method delegates to the provider 
instance is described in the documentation for each particular method. See the documentation for (|java.rmi.server.RMIClassLoader|) for a description of how a provider instance is 
chosen. 



*java.rmi.server.RMIClassLoaderSpi()*

public RMIClassLoaderSpi()




*java.rmi.server.RMIClassLoaderSpi.getClassAnnotation(Class<?>)*

public abstract |java.lang.String| getClassAnnotation(java.lang.Class<?> cl)

Provides the implementation for (|java.rmi.server.RMIClassLoader|) . 

Returns the annotation string (representing a location for the class definition) that RMI will use to annotate the class descriptor when marshalling objects of the given class. 


    cl - the class to obtain the annotation for 

    Returns: a string to be used to annotate the given class when it gets marshalled, or null 

*java.rmi.server.RMIClassLoaderSpi.getClassLoader(String)*

public abstract |java.lang.ClassLoader| getClassLoader(java.lang.String codebase)
  throws |java.net.MalformedURLException|
         
Provides the implementation for (|java.rmi.server.RMIClassLoader|) . 

Returns a class loader that loads classes from the given codebase URL path. 

If there is a security manger, its checkPermission method will be invoked with a RuntimePermission("getClassLoader") permission; this could result in a SecurityException. The 
implementation of this method may also perform further security checks to verify that the calling context has permission to connect to all of the URLs in the codebase URL path. 


    codebase - the list of URLs (space-separated) from which the returned class loader will load classes from, or null 

    Returns: a class loader that loads classes from the given codebase URL path 

*java.rmi.server.RMIClassLoaderSpi.loadClass(String,String,ClassLoader)*

public abstract |java.lang.Class|<?> loadClass(
  java.lang.String codebase,
  java.lang.String name,
  java.lang.ClassLoader defaultLoader)
  throws |java.lang.ClassNotFoundException|
         |java.net.MalformedURLException|
         
Provides the implementation for (|java.rmi.server.RMIClassLoader|) , (|java.rmi.server.RMIClassLoader|) , and (|java.rmi.server.RMIClassLoader|) . 

Loads a class from a codebase URL path, optionally using the supplied loader. 

Typically, a provider implementation will attempt to resolve the named class using the given defaultLoader, if specified, before attempting to resolve the class from the codebase 
URL path. 

An implementation of this method must either return a class with the given name or throw an exception. 


    codebase - the list of URLs (separated by spaces) to load the class from, or null 
    name - the name of the class to load 
    defaultLoader - additional contextual class loader to use, or null 

    Returns: the Class object representing the loaded class 

*java.rmi.server.RMIClassLoaderSpi.loadProxyClass(String,String[],ClassLoader)*

public abstract |java.lang.Class|<?> loadProxyClass(
  java.lang.String codebase,
  java.lang.String[] interfaces,
  java.lang.ClassLoader defaultLoader)
  throws |java.lang.ClassNotFoundException|
         |java.net.MalformedURLException|
         
Provides the implementation for (|java.rmi.server.RMIClassLoader|) . 

Loads a dynamic proxy class (see (|java.lang.reflect.Proxy|) that implements a set of interfaces with the given names from a codebase URL path, optionally using the supplied 
loader. 

An implementation of this method must either return a proxy class that implements the named interfaces or throw an exception. 


    codebase - the list of URLs (space-separated) to load classes from, or null 
    interfaces - the names of the interfaces for the proxy class to implement 
    defaultLoader - additional contextual class loader to use, or null 

    Returns: a dynamic proxy class that implements the named interfaces 


