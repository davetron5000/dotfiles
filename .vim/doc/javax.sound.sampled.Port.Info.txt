*javax.sound.sampled.Port.Info* *Port.Info* The Port.Info class extends Line.Inf

public static class Port.Info
  extends    |javax.sound.sampled.Line.Info|

|javax.sound.sampled.Port.Info_Description|
|javax.sound.sampled.Port.Info_Fields|
|javax.sound.sampled.Port.Info_Constructors|
|javax.sound.sampled.Port.Info_Methods|

================================================================================

*javax.sound.sampled.Port.Info_Fields*
|javax.sound.sampled.Port.Info_javax.sound.sampled.Port.Info.COMPACT_DISC|
|javax.sound.sampled.Port.Info_javax.sound.sampled.Port.Info.HEADPHONE|
|javax.sound.sampled.Port.Info_javax.sound.sampled.Port.Info.LINE_IN|
|javax.sound.sampled.Port.Info_javax.sound.sampled.Port.Info.LINE_OUT|
|javax.sound.sampled.Port.Info_javax.sound.sampled.Port.Info.MICROPHONE|
|javax.sound.sampled.Port.Info_javax.sound.sampled.Port.Info.SPEAKER|

*javax.sound.sampled.Port.Info_Constructors*
|javax.sound.sampled.Port.Info(Class,String,boolean)|Constructs a port's info o

*javax.sound.sampled.Port.Info_Methods*
|javax.sound.sampled.Port.Info.equals(Object)|Finalizes the equals method
|javax.sound.sampled.Port.Info.getName()|Obtains the name of the port.
|javax.sound.sampled.Port.Info.hashCode()|Finalizes the hashCode method
|javax.sound.sampled.Port.Info.isSource()|Indicates whether the port is a sourc
|javax.sound.sampled.Port.Info.matches(Line.Info)|Indicates whether this info o
|javax.sound.sampled.Port.Info.toString()|Provides a String representation   of

*javax.sound.sampled.Port.Info_Description*

The Port.Info class extends (|javax.sound.sampled.Line.Info|) with additional 
information specific to ports, including the port's name and whether it is a 
source or a target for its mixer. By definition, a port acts as either a source 
or a target to its mixer, but not both. (Audio input ports are sources; audio 
output ports are targets.) 

To learn what ports are available, you can retrieve port info objects through 
the getSourceLineInfo(|javax.sound.sampled.Mixer|) and 
getTargetLineInfo(|javax.sound.sampled.Mixer|) methods of the Mixer interface. 
Instances of the Port.Info class may also be constructed and used to obtain 
lines matching the parameters specified in the Port.Info object. 


*javax.sound.sampled.Port.Info_javax.sound.sampled.Port.Info.COMPACT_DISC*

The Port.Info class extends (|javax.sound.sampled.Line.Info|) with additional 
information specific to ports, including the port's name and whether it is a 
source or a target for its mixer. By definition, a port acts as either a source 
or a target to its mixer, but not both. (Audio input ports are sources; audio 
output ports are targets.) 

To learn what ports are available, you can retrieve port info objects through 
the getSourceLineInfo(|javax.sound.sampled.Mixer|) and 
getTargetLineInfo(|javax.sound.sampled.Mixer|) methods of the Mixer interface. 
Instances of the Port.Info class may also be constructed and used to obtain 
lines matching the parameters specified in the Port.Info object. 


*javax.sound.sampled.Port.Info_javax.sound.sampled.Port.Info.HEADPHONE*

The Port.Info class extends (|javax.sound.sampled.Line.Info|) with additional 
information specific to ports, including the port's name and whether it is a 
source or a target for its mixer. By definition, a port acts as either a source 
or a target to its mixer, but not both. (Audio input ports are sources; audio 
output ports are targets.) 

To learn what ports are available, you can retrieve port info objects through 
the getSourceLineInfo(|javax.sound.sampled.Mixer|) and 
getTargetLineInfo(|javax.sound.sampled.Mixer|) methods of the Mixer interface. 
Instances of the Port.Info class may also be constructed and used to obtain 
lines matching the parameters specified in the Port.Info object. 


*javax.sound.sampled.Port.Info_javax.sound.sampled.Port.Info.LINE_IN*

The Port.Info class extends (|javax.sound.sampled.Line.Info|) with additional 
information specific to ports, including the port's name and whether it is a 
source or a target for its mixer. By definition, a port acts as either a source 
or a target to its mixer, but not both. (Audio input ports are sources; audio 
output ports are targets.) 

To learn what ports are available, you can retrieve port info objects through 
the getSourceLineInfo(|javax.sound.sampled.Mixer|) and 
getTargetLineInfo(|javax.sound.sampled.Mixer|) methods of the Mixer interface. 
Instances of the Port.Info class may also be constructed and used to obtain 
lines matching the parameters specified in the Port.Info object. 


*javax.sound.sampled.Port.Info_javax.sound.sampled.Port.Info.LINE_OUT*

The Port.Info class extends (|javax.sound.sampled.Line.Info|) with additional 
information specific to ports, including the port's name and whether it is a 
source or a target for its mixer. By definition, a port acts as either a source 
or a target to its mixer, but not both. (Audio input ports are sources; audio 
output ports are targets.) 

To learn what ports are available, you can retrieve port info objects through 
the getSourceLineInfo(|javax.sound.sampled.Mixer|) and 
getTargetLineInfo(|javax.sound.sampled.Mixer|) methods of the Mixer interface. 
Instances of the Port.Info class may also be constructed and used to obtain 
lines matching the parameters specified in the Port.Info object. 


*javax.sound.sampled.Port.Info_javax.sound.sampled.Port.Info.MICROPHONE*

The Port.Info class extends (|javax.sound.sampled.Line.Info|) with additional 
information specific to ports, including the port's name and whether it is a 
source or a target for its mixer. By definition, a port acts as either a source 
or a target to its mixer, but not both. (Audio input ports are sources; audio 
output ports are targets.) 

To learn what ports are available, you can retrieve port info objects through 
the getSourceLineInfo(|javax.sound.sampled.Mixer|) and 
getTargetLineInfo(|javax.sound.sampled.Mixer|) methods of the Mixer interface. 
Instances of the Port.Info class may also be constructed and used to obtain 
lines matching the parameters specified in the Port.Info object. 


*javax.sound.sampled.Port.Info_javax.sound.sampled.Port.Info.SPEAKER*

The Port.Info class extends (|javax.sound.sampled.Line.Info|) with additional 
information specific to ports, including the port's name and whether it is a 
source or a target for its mixer. By definition, a port acts as either a source 
or a target to its mixer, but not both. (Audio input ports are sources; audio 
output ports are targets.) 

To learn what ports are available, you can retrieve port info objects through 
the getSourceLineInfo(|javax.sound.sampled.Mixer|) and 
getTargetLineInfo(|javax.sound.sampled.Mixer|) methods of the Mixer interface. 
Instances of the Port.Info class may also be constructed and used to obtain 
lines matching the parameters specified in the Port.Info object. 



*javax.sound.sampled.Port.Info(Class,String,boolean)*

public Port.Info(
  java.lang.Class lineClass,
  java.lang.String name,
  boolean isSource)

Constructs a port's info object from the information given. This constructor is 
typically used by an implementation of Java Sound to describe a supported line. 

    lineClass - the class of the port described by the info object. 
    name - the string that names the port 
    isSource - true if the port is a source port (such as a microphone), false if the port is 
       a target port (such as a speaker). 

*javax.sound.sampled.Port.Info.equals(Object)*

public final boolean equals(java.lang.Object obj)

Finalizes the equals method 


*javax.sound.sampled.Port.Info.getName()*

public |java.lang.String| getName()

Obtains the name of the port. 


    Returns: the string that names the port 
*javax.sound.sampled.Port.Info.hashCode()*

public final int hashCode()

Finalizes the hashCode method 


*javax.sound.sampled.Port.Info.isSource()*

public boolean isSource()

Indicates whether the port is a source or a target for its mixer. 


    Returns: true if the port is a source port (such as a microphone), false if the port is 
             a target port (such as a speaker). 
*javax.sound.sampled.Port.Info.matches(Line.Info)*

public boolean matches(javax.sound.sampled.Line.Info info)

Indicates whether this info object specified matches this one. To match, the 
match requirements of the superclass must be met and the types must be equal. 

    info - the info object for which the match is queried 

*javax.sound.sampled.Port.Info.toString()*

public final |java.lang.String| toString()

Provides a String representation of the port. 


    Returns: a string that describes the port 

