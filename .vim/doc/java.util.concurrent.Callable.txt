*java.util.concurrent.Callable* *Callable* A task that returns a result and may 

public interface interface Callable


|java.util.concurrent.Callable_Description|
|java.util.concurrent.Callable_Fields|
|java.util.concurrent.Callable_Constructors|
|java.util.concurrent.Callable_Methods|

================================================================================

*java.util.concurrent.Callable_Methods*
|java.util.concurrent.Callable.call()|Computes a result, or throws an exception

*java.util.concurrent.Callable_Description*

A task that returns a result and may throw an exception. Implementors define a 
single method with no arguments called call. 

The Callable interface is similar to (|java.lang.Runnable|) , in that both are 
designed for classes whose instances are potentially executed by another 
thread. A Runnable, however, does not return a result and cannot throw a 
checked exception. 

The (|java.util.concurrent.Executors|) class contains utility methods to 
convert from other common forms to Callable classes. 


*java.util.concurrent.Callable.call()*

public |java.lang.Object| call()
  throws |java.lang.Exception|
         
Computes a result, or throws an exception if unable to do so. 


    Returns: computed result 

