*javax.swing.event.InternalFrameAdapter* *InternalFrameAdapter* An abstract adap

public abstract class InternalFrameAdapter
  extends    |java.lang.Object|
  implements |javax.swing.event.InternalFrameListener|

|javax.swing.event.InternalFrameAdapter_Description|
|javax.swing.event.InternalFrameAdapter_Fields|
|javax.swing.event.InternalFrameAdapter_Constructors|
|javax.swing.event.InternalFrameAdapter_Methods|

================================================================================

*javax.swing.event.InternalFrameAdapter_Constructors*
|javax.swing.event.InternalFrameAdapter()|

*javax.swing.event.InternalFrameAdapter_Methods*
|javax.swing.event.InternalFrameAdapter.internalFrameActivated(InternalFrameEvent)|
|javax.swing.event.InternalFrameAdapter.internalFrameClosed(InternalFrameEvent)|
|javax.swing.event.InternalFrameAdapter.internalFrameClosing(InternalFrameEvent)|
|javax.swing.event.InternalFrameAdapter.internalFrameDeactivated(InternalFrameEvent)|
|javax.swing.event.InternalFrameAdapter.internalFrameDeiconified(InternalFrameEvent)|
|javax.swing.event.InternalFrameAdapter.internalFrameIconified(InternalFrameEvent)|
|javax.swing.event.InternalFrameAdapter.internalFrameOpened(InternalFrameEvent)|

*javax.swing.event.InternalFrameAdapter_Description*

An abstract adapter class for receiving internal frame events. The methods in 
this class are empty. This class exists as convenience for creating listener 
objects, and is functionally equivalent to the WindowAdapter class in the AWT. 

See How to Write an Internal Frame Listener in The Java Tutorial and The Java 
Class Libraries (update) 


*javax.swing.event.InternalFrameAdapter()*

public InternalFrameAdapter()




*javax.swing.event.InternalFrameAdapter.internalFrameActivated(InternalFrameEvent)*

public void internalFrameActivated(javax.swing.event.InternalFrameEvent e)

Invoked when an internal frame is activated. 


*javax.swing.event.InternalFrameAdapter.internalFrameClosed(InternalFrameEvent)*

public void internalFrameClosed(javax.swing.event.InternalFrameEvent e)

Invoked when an internal frame has been closed. 


*javax.swing.event.InternalFrameAdapter.internalFrameClosing(InternalFrameEvent)*

public void internalFrameClosing(javax.swing.event.InternalFrameEvent e)

Invoked when an internal frame is in the process of being closed. The close 
operation can be overridden at this point. 


*javax.swing.event.InternalFrameAdapter.internalFrameDeactivated(InternalFrameEvent)*

public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent e)

Invoked when an internal frame is de-activated. 


*javax.swing.event.InternalFrameAdapter.internalFrameDeiconified(InternalFrameEvent)*

public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent e)

Invoked when an internal frame is de-iconified. 


*javax.swing.event.InternalFrameAdapter.internalFrameIconified(InternalFrameEvent)*

public void internalFrameIconified(javax.swing.event.InternalFrameEvent e)

Invoked when an internal frame is iconified. 


*javax.swing.event.InternalFrameAdapter.internalFrameOpened(InternalFrameEvent)*

public void internalFrameOpened(javax.swing.event.InternalFrameEvent e)

Invoked when an internal frame has been opened. 



