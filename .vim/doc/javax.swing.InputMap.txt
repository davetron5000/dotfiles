*javax.swing.InputMap* *InputMap* InputMap provides a binding between an input e

public class InputMap
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|javax.swing.InputMap_Description|
|javax.swing.InputMap_Fields|
|javax.swing.InputMap_Constructors|
|javax.swing.InputMap_Methods|

================================================================================

*javax.swing.InputMap_Constructors*
|javax.swing.InputMap()|Creates an InputMap with no parent and no mappings.

*javax.swing.InputMap_Methods*
|javax.swing.InputMap.allKeys()|Returns an array of the KeyStrokes defined in t
|javax.swing.InputMap.clear()|Removes all the mappings from this InputMap.
|javax.swing.InputMap.get(KeyStroke)|Returns the binding for keyStroke, messagi
|javax.swing.InputMap.getParent()|Gets this InputMap's parent.
|javax.swing.InputMap.keys()|Returns the KeyStrokes that are bound in this Inpu
|javax.swing.InputMap.put(KeyStroke,Object)|Adds a binding for keyStroke to act
|javax.swing.InputMap.remove(KeyStroke)|Removes the binding for key from this  
|javax.swing.InputMap.setParent(InputMap)|Sets this InputMap's parent.
|javax.swing.InputMap.size()|Returns the number of KeyStroke bindings.

*javax.swing.InputMap_Description*

InputMap provides a binding between an input event (currently only KeyStrokes 
are used) and an Object. InputMaps are usually used with an ActionMap, to 
determine an Action to perform when a key is pressed. An InputMap can have a 
parent that is searched for bindings not defined in the InputMap. As with 
ActionMap if you create a cycle, eg: 

InputMap am = new InputMap(); InputMap bm = new InputMap(): am.setParent(bm); 
bm.setParent(am); 

some of the methods will cause a StackOverflowError to be thrown. 


*javax.swing.InputMap()*

public InputMap()

Creates an InputMap with no parent and no mappings. 


*javax.swing.InputMap.allKeys()*

public |javax.swing.KeyStroke| allKeys()

Returns an array of the KeyStrokes defined in this InputMap and its parent. 
This differs from keys() in that this method includes the keys defined in the 
parent. 


*javax.swing.InputMap.clear()*

public void clear()

Removes all the mappings from this InputMap. 


*javax.swing.InputMap.get(KeyStroke)*

public |java.lang.Object| get(javax.swing.KeyStroke keyStroke)

Returns the binding for keyStroke, messaging the parent InputMap if the binding 
is not locally defined. 


*javax.swing.InputMap.getParent()*

public |javax.swing.InputMap| getParent()

Gets this InputMap's parent. 


    Returns: map the InputMap that is the parent of this one, or null if this InputMap has 
             no parent 
*javax.swing.InputMap.keys()*

public |javax.swing.KeyStroke| keys()

Returns the KeyStrokes that are bound in this InputMap. 


*javax.swing.InputMap.put(KeyStroke,Object)*

public void put(
  javax.swing.KeyStroke keyStroke,
  java.lang.Object actionMapKey)

Adds a binding for keyStroke to actionMapKey. If actionMapKey is null, this 
removes the current binding for keyStroke. 


*javax.swing.InputMap.remove(KeyStroke)*

public void remove(javax.swing.KeyStroke key)

Removes the binding for key from this InputMap. 


*javax.swing.InputMap.setParent(InputMap)*

public void setParent(javax.swing.InputMap map)

Sets this InputMap's parent. 

    map - the InputMap that is the parent of this one 

*javax.swing.InputMap.size()*

public int size()

Returns the number of KeyStroke bindings. 



