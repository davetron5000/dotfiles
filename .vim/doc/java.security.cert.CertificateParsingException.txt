*java.security.cert.CertificateParsingException* *CertificateParsingException* C

public class CertificateParsingException
  extends    |java.security.cert.CertificateException|

|java.security.cert.CertificateParsingException_Description|
|java.security.cert.CertificateParsingException_Fields|
|java.security.cert.CertificateParsingException_Constructors|
|java.security.cert.CertificateParsingException_Methods|

================================================================================

*java.security.cert.CertificateParsingException_Constructors*
|java.security.cert.CertificateParsingException()|Constructs a CertificateParsi
|java.security.cert.CertificateParsingException(String)|Constructs a Certificat
|java.security.cert.CertificateParsingException(String,Throwable)|Creates a Cer
|java.security.cert.CertificateParsingException(Throwable)|Creates a Certificat

*java.security.cert.CertificateParsingException_Description*

Certificate Parsing Exception. This is thrown whenever an invalid DER-encoded 
certificate is parsed or unsupported DER features are found in the Certificate. 


*java.security.cert.CertificateParsingException()*

public CertificateParsingException()

Constructs a CertificateParsingException with no detail message. A detail 
message is a String that describes this particular exception. 


*java.security.cert.CertificateParsingException(String)*

public CertificateParsingException(java.lang.String message)

Constructs a CertificateParsingException with the specified detail message. A 
detail message is a String that describes this particular exception. 

    message - the detail message. 

*java.security.cert.CertificateParsingException(String,Throwable)*

public CertificateParsingException(
  java.lang.String message,
  java.lang.Throwable cause)

Creates a CertificateParsingException with the specified detail message and 
cause. 

    message - the detail message (which is saved for later retrieval by the {@link 
       #getMessage()} method). 
    cause - the cause (which is saved for later retrieval by the {@link #getCause()} 
       method). (A null value is permitted, and indicates that the cause is 
       nonexistent or unknown.) 

*java.security.cert.CertificateParsingException(Throwable)*

public CertificateParsingException(java.lang.Throwable cause)

Creates a CertificateParsingException with the specified cause and a detail 
message of (cause==null ? null : cause.toString()) (which typically contains 
the class and detail message of cause). 

    cause - the cause (which is saved for later retrieval by the {@link #getCause()} 
       method). (A null value is permitted, and indicates that the cause is 
       nonexistent or unknown.) 

