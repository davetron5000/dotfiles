*javax.swing.UIDefaults.ProxyLazyValue* *UIDefaults.ProxyLazyValue* This class p

public static class UIDefaults.ProxyLazyValue
  extends    |java.lang.Object|
  implements |javax.swing.UIDefaults.LazyValue|

|javax.swing.UIDefaults.ProxyLazyValue_Description|
|javax.swing.UIDefaults.ProxyLazyValue_Fields|
|javax.swing.UIDefaults.ProxyLazyValue_Constructors|
|javax.swing.UIDefaults.ProxyLazyValue_Methods|

================================================================================

*javax.swing.UIDefaults.ProxyLazyValue_Constructors*
|javax.swing.UIDefaults.ProxyLazyValue(String)|Creates a LazyValue which will c
|javax.swing.UIDefaults.ProxyLazyValue(String,Object[])|Creates a LazyValue whi
|javax.swing.UIDefaults.ProxyLazyValue(String,String)|Creates a LazyValue which
|javax.swing.UIDefaults.ProxyLazyValue(String,String,Object[])|Creates a LazyVa

*javax.swing.UIDefaults.ProxyLazyValue_Methods*
|javax.swing.UIDefaults.ProxyLazyValue.createValue(UIDefaults)|Creates the valu

*javax.swing.UIDefaults.ProxyLazyValue_Description*

This class provides an implementation of LazyValue which can be used to delay 
loading of the Class for the instance to be created. It also avoids creation of 
an anonymous inner class for the LazyValue subclass. Both of these improve 
performance at the time that a a Look and Feel is loaded, at the cost of a 
slight performance reduction the first time createValue is called (since 
Reflection APIs are used). 


*javax.swing.UIDefaults.ProxyLazyValue(String)*

public UIDefaults.ProxyLazyValue(java.lang.String c)

Creates a LazyValue which will construct an instance when asked. 

    c - a String specifying the classname of the instance to be created on demand 

*javax.swing.UIDefaults.ProxyLazyValue(String,Object[])*

public UIDefaults.ProxyLazyValue(
  java.lang.String c,
  java.lang.Object[] o)

Creates a LazyValue which will construct an instance when asked. 

    c - a String specifying the classname of the instance to be created on demand 
    o - an array of Objects to be passed as paramaters to the constructor in class c 

*javax.swing.UIDefaults.ProxyLazyValue(String,String)*

public UIDefaults.ProxyLazyValue(
  java.lang.String c,
  java.lang.String m)

Creates a LazyValue which will construct an instance when asked. 

    c - a String specifying the classname of the class containing a static method to be 
       called for instance creation 
    m - a String specifying the static method to be called on class c 

*javax.swing.UIDefaults.ProxyLazyValue(String,String,Object[])*

public UIDefaults.ProxyLazyValue(
  java.lang.String c,
  java.lang.String m,
  java.lang.Object[] o)

Creates a LazyValue which will construct an instance when asked. 

    c - a String specifying the classname of the class containing a static method to be 
       called for instance creation. 
    m - a String specifying the static method to be called on class c 
    o - an array of Objects to be passed as paramaters to the static method in class c 

*javax.swing.UIDefaults.ProxyLazyValue.createValue(UIDefaults)*

public |java.lang.Object| createValue(javax.swing.UIDefaults table)

Creates the value retrieved from the UIDefaults table. The object is created 
each time it is accessed. 

    table - a UIDefaults table 

    Returns: the created Object 

