*java.awt.font.GraphicAttribute* *GraphicAttribute* This class is used with the 

public abstract class GraphicAttribute
  extends    |java.lang.Object|

|java.awt.font.GraphicAttribute_Description|
|java.awt.font.GraphicAttribute_Fields|
|java.awt.font.GraphicAttribute_Constructors|
|java.awt.font.GraphicAttribute_Methods|

================================================================================

*java.awt.font.GraphicAttribute_Fields*
|int_java.awt.font.GraphicAttribute.BOTTOM_ALIGNMENT|
|int_java.awt.font.GraphicAttribute.CENTER_BASELINE|
|int_java.awt.font.GraphicAttribute.HANGING_BASELINE|
|int_java.awt.font.GraphicAttribute.ROMAN_BASELINE|
|int_java.awt.font.GraphicAttribute.TOP_ALIGNMENT|

*java.awt.font.GraphicAttribute_Constructors*
|java.awt.font.GraphicAttribute(int)|Constructs a GraphicAttribute.

*java.awt.font.GraphicAttribute_Methods*
|java.awt.font.GraphicAttribute.draw(Graphics2D,float,float)|Renders this Graph
|java.awt.font.GraphicAttribute.getAdvance()|Returns the advance of this Graphi
|java.awt.font.GraphicAttribute.getAlignment()|Returns the alignment of this Gr
|java.awt.font.GraphicAttribute.getAscent()|Returns the ascent of this GraphicA
|java.awt.font.GraphicAttribute.getBounds()|Returns aRectangle2Dthat encloses a
|java.awt.font.GraphicAttribute.getDescent()|Returns the descent of this Graphi
|java.awt.font.GraphicAttribute.getJustificationInfo()|Returns the justificatio

*java.awt.font.GraphicAttribute_Description*

This class is used with the CHAR_REPLACEMENT attribute. 

The GraphicAttribute class represents a graphic embedded in text. Clients 
subclass this class to implement their own char replacement graphics. Clients 
wishing to embed shapes and images in text need not subclass this class. 
Instead, clients can use the (|java.awt.font.ShapeGraphicAttribute|) and 
(|java.awt.font.ImageGraphicAttribute|) classes. 

Subclasses must ensure that their objects are immutable once they are 
constructed. Mutating a GraphicAttribute that is used in a 
(|java.awt.font.TextLayout|) results in undefined behavior from the TextLayout. 


*int_java.awt.font.GraphicAttribute.BOTTOM_ALIGNMENT*

This class is used with the CHAR_REPLACEMENT attribute. 

The GraphicAttribute class represents a graphic embedded in text. Clients 
subclass this class to implement their own char replacement graphics. Clients 
wishing to embed shapes and images in text need not subclass this class. 
Instead, clients can use the (|java.awt.font.ShapeGraphicAttribute|) and 
(|java.awt.font.ImageGraphicAttribute|) classes. 

Subclasses must ensure that their objects are immutable once they are 
constructed. Mutating a GraphicAttribute that is used in a 
(|java.awt.font.TextLayout|) results in undefined behavior from the TextLayout. 


*int_java.awt.font.GraphicAttribute.CENTER_BASELINE*

This class is used with the CHAR_REPLACEMENT attribute. 

The GraphicAttribute class represents a graphic embedded in text. Clients 
subclass this class to implement their own char replacement graphics. Clients 
wishing to embed shapes and images in text need not subclass this class. 
Instead, clients can use the (|java.awt.font.ShapeGraphicAttribute|) and 
(|java.awt.font.ImageGraphicAttribute|) classes. 

Subclasses must ensure that their objects are immutable once they are 
constructed. Mutating a GraphicAttribute that is used in a 
(|java.awt.font.TextLayout|) results in undefined behavior from the TextLayout. 


*int_java.awt.font.GraphicAttribute.HANGING_BASELINE*

This class is used with the CHAR_REPLACEMENT attribute. 

The GraphicAttribute class represents a graphic embedded in text. Clients 
subclass this class to implement their own char replacement graphics. Clients 
wishing to embed shapes and images in text need not subclass this class. 
Instead, clients can use the (|java.awt.font.ShapeGraphicAttribute|) and 
(|java.awt.font.ImageGraphicAttribute|) classes. 

Subclasses must ensure that their objects are immutable once they are 
constructed. Mutating a GraphicAttribute that is used in a 
(|java.awt.font.TextLayout|) results in undefined behavior from the TextLayout. 


*int_java.awt.font.GraphicAttribute.ROMAN_BASELINE*

This class is used with the CHAR_REPLACEMENT attribute. 

The GraphicAttribute class represents a graphic embedded in text. Clients 
subclass this class to implement their own char replacement graphics. Clients 
wishing to embed shapes and images in text need not subclass this class. 
Instead, clients can use the (|java.awt.font.ShapeGraphicAttribute|) and 
(|java.awt.font.ImageGraphicAttribute|) classes. 

Subclasses must ensure that their objects are immutable once they are 
constructed. Mutating a GraphicAttribute that is used in a 
(|java.awt.font.TextLayout|) results in undefined behavior from the TextLayout. 


*int_java.awt.font.GraphicAttribute.TOP_ALIGNMENT*

This class is used with the CHAR_REPLACEMENT attribute. 

The GraphicAttribute class represents a graphic embedded in text. Clients 
subclass this class to implement their own char replacement graphics. Clients 
wishing to embed shapes and images in text need not subclass this class. 
Instead, clients can use the (|java.awt.font.ShapeGraphicAttribute|) and 
(|java.awt.font.ImageGraphicAttribute|) classes. 

Subclasses must ensure that their objects are immutable once they are 
constructed. Mutating a GraphicAttribute that is used in a 
(|java.awt.font.TextLayout|) results in undefined behavior from the TextLayout. 



*java.awt.font.GraphicAttribute(int)*

protected GraphicAttribute(int alignment)

Constructs a GraphicAttribute. Subclasses use this to define the alignment of 
the graphic. 

    alignment - an int representing one of the GraphicAttribute alignment fields 

*java.awt.font.GraphicAttribute.draw(Graphics2D,float,float)*

public abstract void draw(
  java.awt.Graphics2D graphics,
  float x,
  float y)

Renders this GraphicAttribute at the specified location. 

    graphics - the {@link Graphics2D} into which to render the graphic 
    x,&nbsp;y - the user-space coordinates where the graphic is rendered 

*java.awt.font.GraphicAttribute.getAdvance()*

public abstract float getAdvance()

Returns the advance of this GraphicAttribute. The GraphicAttribute object's 
advance is the distance from the point at which the graphic is rendered and the 
point where the next character or graphic is rendered. A graphic can be 
rendered beyond its advance 


    Returns: the advance of this GraphicAttribute. 
*java.awt.font.GraphicAttribute.getAlignment()*

public final int getAlignment()

Returns the alignment of this GraphicAttribute. Alignment can be to a 
particular baseline, or to the absolute top or bottom of a line. 


    Returns: the alignment of this GraphicAttribute. 
*java.awt.font.GraphicAttribute.getAscent()*

public abstract float getAscent()

Returns the ascent of this GraphicAttribute. A graphic can be rendered above 
its ascent. 


    Returns: the ascent of this GraphicAttribute. 
*java.awt.font.GraphicAttribute.getBounds()*

public |java.awt.geom.Rectangle2D| getBounds()

Returns a (|java.awt.geom.Rectangle2D|) that encloses all of the bits drawn by 
this GraphicAttribute relative to the rendering position. A graphic may be 
rendered beyond its origin, ascent, descent, or advance; but if it is, this 
method's implementation must indicate where the graphic is rendered. Default 
bounds is the rectangle (0, -ascent, advance, ascent+descent). 


    Returns: a Rectangle2D that encloses all of the bits rendered by this GraphicAttribute. 
*java.awt.font.GraphicAttribute.getDescent()*

public abstract float getDescent()

Returns the descent of this GraphicAttribute. A graphic can be rendered below 
its descent. 


    Returns: the descent of this GraphicAttribute. 
*java.awt.font.GraphicAttribute.getJustificationInfo()*

public |java.awt.font.GlyphJustificationInfo| getJustificationInfo()

Returns the justification information for this GraphicAttribute. Subclasses can 
override this method to provide different justification information. 


    Returns: a {@link GlyphJustificationInfo} object that contains the justification 
             information for this GraphicAttribute. 

