*javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink* *JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink* 

public class JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink
  extends    |javax.accessibility.AccessibleHyperlink|

|javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink_Description|
|javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink_Fields|
|javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink_Constructors|
|javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink_Methods|

================================================================================

*javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink_Constructors*
|javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink(Element)|

*javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink_Methods*
|javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.doAccessibleAction(int)|
|javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.getAccessibleActionAnchor(int)|
|javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.getAccessibleActionCount()|
|javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.getAccessibleActionDescription(int)|
|javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.getAccessibleActionObject(int)|
|javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.getEndIndex()|
|javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.getStartIndex()|
|javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.isValid()|

*javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink_Description*




*javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink(Element)*

public JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink(javax.swing.text.Element e)




*javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.doAccessibleAction(int)*

public boolean doAccessibleAction(int i)

Perform the specified Action on the object 

    i - zero-based index of actions 

    Returns: true if the the action was performed; else false. 
*javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.getAccessibleActionAnchor(int)*

public |java.lang.Object| getAccessibleActionAnchor(int i)

Return an object that represents the link anchor, as appropriate for that link. 
E.g. from HTML: Accessibility this method would return a String containing the 
text: 'Accessibility'. 

Similarly, from this HTML: <a HREF="#top"><img src="top-hat.gif" alt="top 
hat"></a> this might return the object ImageIcon("top-hat.gif", "top hat"); 

    i - zero-based index of the actions 

    Returns: an Object representing the hypertext anchor 
*javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.getAccessibleActionCount()*

public int getAccessibleActionCount()

Returns the number of accessible actions available in this Link If there are 
more than one, the first one is NOT considered the "default" action of this 
LINK object (e.g. in an HTML imagemap). In general, links will have only one 
AccessibleAction in them. 


    Returns: the zero-based number of Actions in this object 
*javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.getAccessibleActionDescription(int)*

public |java.lang.String| getAccessibleActionDescription(int i)

Return a String description of this particular link action. The string returned 
is the text within the document associated with the element which contains this 
link. 

    i - zero-based index of the actions 

    Returns: a String description of the action 
*javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.getAccessibleActionObject(int)*

public |java.lang.Object| getAccessibleActionObject(int i)

Returns a URL object that represents the link. 

    i - zero-based index of the actions 

    Returns: an URL representing the HTML link itself 
*javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.getEndIndex()*

public int getEndIndex()

Get the index with the hypertext document at which this link ends 


    Returns: index of end of link 
*javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.getStartIndex()*

public int getStartIndex()

Get the index with the hypertext document at which this link begins 


    Returns: index of start of link 
*javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink.isValid()*

public boolean isValid()

Since the document a link is associated with may have changed, this method 
returns whether this Link is valid anymore (with respect to the document it 
references). 


    Returns: a flag indicating whether this link is still valid with respect to the 
             AccessibleHypertext it belongs to 

