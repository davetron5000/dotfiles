*javax.swing.text.html.parser.Entity* *Entity* An entity is described in a DTD u

public final class Entity
  extends    |java.lang.Object|
  implements |javax.swing.text.html.parser.DTDConstants|

|javax.swing.text.html.parser.Entity_Description|
|javax.swing.text.html.parser.Entity_Fields|
|javax.swing.text.html.parser.Entity_Constructors|
|javax.swing.text.html.parser.Entity_Methods|

================================================================================

*javax.swing.text.html.parser.Entity_Fields*
|char[]_javax.swing.text.html.parser.Entity.data|
|java.lang.String_javax.swing.text.html.parser.Entity.name|
|int_javax.swing.text.html.parser.Entity.type|

*javax.swing.text.html.parser.Entity_Constructors*
|javax.swing.text.html.parser.Entity(String,int,char[])|Creates an entity.

*javax.swing.text.html.parser.Entity_Methods*
|javax.swing.text.html.parser.Entity.getData()|Returns the data.
|javax.swing.text.html.parser.Entity.getName()|Gets the name of the entity.
|javax.swing.text.html.parser.Entity.getString()|Returns the data as a String.
|javax.swing.text.html.parser.Entity.getType()|Gets the type of the entity.
|javax.swing.text.html.parser.Entity.isGeneral()|Returns true if it is a genera
|javax.swing.text.html.parser.Entity.isParameter()|Returns true if it is a para
|javax.swing.text.html.parser.Entity.name2type(String)|Converts nm string to th

*javax.swing.text.html.parser.Entity_Description*

An entity is described in a DTD using the ENTITY construct. It defines the type 
and value of the the entity. 


*char[]_javax.swing.text.html.parser.Entity.data*

An entity is described in a DTD using the ENTITY construct. It defines the type 
and value of the the entity. 


*java.lang.String_javax.swing.text.html.parser.Entity.name*

An entity is described in a DTD using the ENTITY construct. It defines the type 
and value of the the entity. 


*int_javax.swing.text.html.parser.Entity.type*

An entity is described in a DTD using the ENTITY construct. It defines the type 
and value of the the entity. 



*javax.swing.text.html.parser.Entity(String,int,char[])*

public Entity(
  java.lang.String name,
  int type,
  char[] data)

Creates an entity. 

    name - the name of the entity 
    type - the type of the entity 
    data - the char array of data 

*javax.swing.text.html.parser.Entity.getData()*

public char getData()

Returns the data. 


    Returns: 
*javax.swing.text.html.parser.Entity.getName()*

public |java.lang.String| getName()

Gets the name of the entity. 


    Returns: the name of the entity, as a String 
*javax.swing.text.html.parser.Entity.getString()*

public |java.lang.String| getString()

Returns the data as a String. 


    Returns: the data as a String 
*javax.swing.text.html.parser.Entity.getType()*

public int getType()

Gets the type of the entity. 


    Returns: the type of the entity 
*javax.swing.text.html.parser.Entity.isGeneral()*

public boolean isGeneral()

Returns true if it is a general entity. 


    Returns: true if it is a general entity 
*javax.swing.text.html.parser.Entity.isParameter()*

public boolean isParameter()

Returns true if it is a parameter entity. 


    Returns: true if it is a parameter entity 
*javax.swing.text.html.parser.Entity.name2type(String)*

public static int name2type(java.lang.String nm)

Converts nm string to the corresponding entity type. If the string does not 
have a corresponding entity type, returns the type corresponding to "CDATA". 
Valid entity types are: "PUBLIC", "CDATA", "SDATA", "PI", "STARTTAG", "ENDTAG", 
"MS", "MD", "SYSTEM". 

    nm - the string to be converted 

    Returns: the corresponding entity type, or the type corresponding to "CDATA", if none 
             exists 

