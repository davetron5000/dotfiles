*java.util.Observer* *Observer* A class can implement the Observer interface whe

public interface interface Observer


|java.util.Observer_Description|
|java.util.Observer_Fields|
|java.util.Observer_Constructors|
|java.util.Observer_Methods|

================================================================================

*java.util.Observer_Methods*
|java.util.Observer.update(Observable,Object)|This method is called whenever th

*java.util.Observer_Description*

A class can implement the Observer interface when it wants to be informed of 
changes in observable objects. 


*java.util.Observer.update(Observable,Object)*

public void update(
  java.util.Observable o,
  java.lang.Object arg)

This method is called whenever the observed object is changed. An application 
calls an Observable object's notifyObservers method to have all the object's 
observers notified of the change. 

    o - the observable object. 
    arg - an argument passed to the notifyObservers method. 


