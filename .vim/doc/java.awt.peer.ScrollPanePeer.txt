*java.awt.peer.ScrollPanePeer* *ScrollPanePeer* The peer interfaces are intended

public interface interface ScrollPanePeer

  implements |java.awt.peer.ContainerPeer|

|java.awt.peer.ScrollPanePeer_Description|
|java.awt.peer.ScrollPanePeer_Fields|
|java.awt.peer.ScrollPanePeer_Constructors|
|java.awt.peer.ScrollPanePeer_Methods|

================================================================================

*java.awt.peer.ScrollPanePeer_Methods*
|java.awt.peer.ScrollPanePeer.childResized(int,int)|
|java.awt.peer.ScrollPanePeer.getHScrollbarHeight()|
|java.awt.peer.ScrollPanePeer.getVScrollbarWidth()|
|java.awt.peer.ScrollPanePeer.setScrollPosition(int,int)|
|java.awt.peer.ScrollPanePeer.setUnitIncrement(Adjustable,int)|
|java.awt.peer.ScrollPanePeer.setValue(Adjustable,int)|

*java.awt.peer.ScrollPanePeer_Description*

The peer interfaces are intended only for use in porting the AWT. They are not 
intended for use by application developers, and developers should not implement 
peers nor invoke any of the peer methods directly on the peer instances. 


*java.awt.peer.ScrollPanePeer.childResized(int,int)*

public void childResized(
  int w,
  int h)




*java.awt.peer.ScrollPanePeer.getHScrollbarHeight()*

public int getHScrollbarHeight()




*java.awt.peer.ScrollPanePeer.getVScrollbarWidth()*

public int getVScrollbarWidth()




*java.awt.peer.ScrollPanePeer.setScrollPosition(int,int)*

public void setScrollPosition(
  int x,
  int y)




*java.awt.peer.ScrollPanePeer.setUnitIncrement(Adjustable,int)*

public void setUnitIncrement(
  java.awt.Adjustable adj,
  int u)




*java.awt.peer.ScrollPanePeer.setValue(Adjustable,int)*

public void setValue(
  java.awt.Adjustable adj,
  int v)





