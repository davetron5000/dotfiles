*java.rmi.MarshalledObject* *MarshalledObject* A MarshalledObject contains a byte stream with the serialized
 representation of an object given to its constructor.

public final class MarshalledObject
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|java.rmi.MarshalledObject_Description|
|java.rmi.MarshalledObject_Fields|
|java.rmi.MarshalledObject_Constructors|
|java.rmi.MarshalledObject_Methods|

====================================================================================================================================================================================

*java.rmi.MarshalledObject_Constructors*
|java.rmi.MarshalledObject(Object)|Creates a new MarshalledObject that contains the  serialized representation of the current state of the supplied object.

*java.rmi.MarshalledObject_Methods*
|java.rmi.MarshalledObject.equals(Object)|Compares this MarshalledObject to another object.
|java.rmi.MarshalledObject.get()|Returns a new copy of the contained marshalledobject.
|java.rmi.MarshalledObject.hashCode()|Return a hash code for this MarshalledObject.

*java.rmi.MarshalledObject_Description*

A MarshalledObject contains a byte stream with the serialized representation of an object given to its constructor. The get method returns a new copy of the original object, as 
deserialized from the contained byte stream. The contained object is serialized and deserialized with the same serialization semantics used for marshaling and unmarshaling 
parameters and return values of RMI calls: When the serialized form is created: 

classes are annotated with a codebase URL from where the class can be loaded (if available), and any remote object in the MarshalledObject is represented by a serialized instance 
of its stub. 

When copy of the object is retrieved (via the get method), if the class is not available locally, it will be loaded from the appropriate location (specified the URL annotated with 
the class descriptor when the class was serialized. 

MarshalledObject facilitates passing objects in RMI calls that are not automatically deserialized immediately by the remote peer. 



*java.rmi.MarshalledObject(Object)*

public MarshalledObject(java.lang.Object obj)
  throws |java.io.IOException|
         
Creates a new MarshalledObject that contains the serialized representation of the current state of the supplied object. The object is serialized with the semantics used for 
marshaling parameters for RMI calls. 

    obj - the object to be serialized (must be serializable) 

*java.rmi.MarshalledObject.equals(Object)*

public boolean equals(java.lang.Object obj)

Compares this MarshalledObject to another object. Returns true if and only if the argument refers to a MarshalledObject that contains exactly the same serialized representation of 
an object as this one does. The comparison ignores any class codebase annotation, meaning that two objects are equivalent if they have the same serialized representation except 
for the codebase of each class in the serialized representation. 


    obj - the object to compare with this MarshalledObject 

    Returns: true if the argument contains an equaivalent serialized object; false otherwise 

*java.rmi.MarshalledObject.get()*

public |java.lang.Object| get()
  throws |java.lang.ClassNotFoundException|
         |java.io.IOException|
         
Returns a new copy of the contained marshalledobject. The internal representation is deserialized with the semantics used for unmarshaling paramters for RMI calls. 



    Returns: a copy of the contained object 

*java.rmi.MarshalledObject.hashCode()*

public int hashCode()

Return a hash code for this MarshalledObject. 



    Returns: 


