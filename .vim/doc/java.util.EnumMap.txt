*java.util.EnumMap* *EnumMap* A specializedMapimplementation for use with enum t

public class EnumMap
  extends    |java.util.AbstractMap|
  implements |java.io.Serializable|
             |java.lang.Cloneable|

|java.util.EnumMap_Description|
|java.util.EnumMap_Fields|
|java.util.EnumMap_Constructors|
|java.util.EnumMap_Methods|

================================================================================

*java.util.EnumMap_Constructors*
|java.util.EnumMap(Class)|Creates an empty enum map with the specified key type
|java.util.EnumMap(EnumMap)|Creates an enum map with the same key type as the s
|java.util.EnumMap(Map)|Creates an enum map initialized from the specified map.

*java.util.EnumMap_Methods*
|java.util.EnumMap.clear()|Removes all mappings from this map.
|java.util.EnumMap.clone()|Returns a shallow copy of this enum map.
|java.util.EnumMap.containsKey(Object)|Returns true if this map contains a mapp
|java.util.EnumMap.containsValue(Object)|Returns true if this map maps one or m
|java.util.EnumMap.entrySet()|Returns aSetview of the mappings contained in thi
|java.util.EnumMap.equals(Object)|Compares the specified object with this map f
|java.util.EnumMap.get(Object)|Returns the value to which this map maps the spe
|java.util.EnumMap.keySet()|Returns aSetview of the keys contained in this map.
|java.util.EnumMap.put(K,V)|Associates the specified value with the specified k
|java.util.EnumMap.putAll(Map)|Copies all of the mappings from the specified ma
|java.util.EnumMap.remove(Object)|Removes the mapping for this key from this ma
|java.util.EnumMap.size()|Returns the number of key-value mappings in this map.
|java.util.EnumMap.values()|Returns aCollectionview of the values contained in 

*java.util.EnumMap_Description*

A specialized (|java.util.Map|) implementation for use with enum type keys. All 
of the keys in an enum map must come from a single enum type that is specified, 
explicitly or implicitly, when the map is created. Enum maps are represented 
internally as arrays. This representation is extremely compact and efficient. 

Enum maps are maintained in the natural order of their keys (the order in which 
the enum constants are declared). This is reflected in the iterators returned 
by the collections views ( (|java.util.EnumMap|) , (|java.util.EnumMap|) , and 
(|java.util.EnumMap|) ). 

Iterators returned by the collection views are weakly consistent: they will 
never throw (|java.util.ConcurrentModificationException|) and they may or may 
not show the effects of any modifications to the map that occur while the 
iteration is in progress. 

Null keys are not permitted. Attempts to insert a null key will throw 
(|java.lang.NullPointerException|) . Attempts to test for the presence of a 
null key or to remove one will, however, function properly. Null values are 
permitted. 

Like most collection implementations EnumMap is not synchronized. If multiple 
threads access an enum map concurrently, and at least one of the threads 
modifies the map, it should be synchronized externally. This is typically 
accomplished by synchronizing on some object that naturally encapsulates the 
enum map. If no such object exists, the map should be "wrapped" using the 
(|java.util.Collections|) method. This is best done at creation time, to 
prevent accidental unsynchronized access: 



Map<EnumKey, V> m = Collections.synchronizedMap(new EnumMap(...)); 

Implementation note: All basic operations execute in constant time. They are 
likely (though not guaranteed) to be faster than their (|java.util.HashMap|) 
counterparts. 

This class is a member of the <a href="/../guide/collections/index.html"> Java 
Collections Framework. 


*java.util.EnumMap(Class)*

public EnumMap(java.lang.Class keyType)

Creates an empty enum map with the specified key type. 

    keyType - the class object of the key type for this enum map 

*java.util.EnumMap(EnumMap)*

public EnumMap(java.util.EnumMap m)

Creates an enum map with the same key type as the specified enum map, initially 
containing the same mappings (if any). 

    m - the enum map from which to initialize this enum map 

*java.util.EnumMap(Map)*

public EnumMap(java.util.Map m)

Creates an enum map initialized from the specified map. If the specified map is 
an EnumMap instance, this constructor behaves identically to 
(|java.util.EnumMap|) . Otherwise, the specified map must contain at least one 
mapping (in order to determine the new enum map's key type). 

    m - the map from which to initialize this enum map 

*java.util.EnumMap.clear()*

public void clear()

Removes all mappings from this map. 


*java.util.EnumMap.clone()*

public |java.util.EnumMap| clone()

Returns a shallow copy of this enum map. (The values themselves are not cloned. 


    Returns: a shallow copy of this enum map 
*java.util.EnumMap.containsKey(Object)*

public boolean containsKey(java.lang.Object key)

Returns true if this map contains a mapping for the specified key. 

    key - the key whose presence in this map is to be tested 

    Returns: true if this map contains a mapping for the specified key 
*java.util.EnumMap.containsValue(Object)*

public boolean containsValue(java.lang.Object value)

Returns true if this map maps one or more keys to the specified value. 

    value - the value whose presence in this map is to be tested 

    Returns: true if this map maps one or more keys to this value 
*java.util.EnumMap.entrySet()*

public |java.util.Set| entrySet()

Returns a (|java.util.Set|) view of the mappings contained in this map. The 
returned set obeys the general contract outlined in (|java.util.Map|) . The 
set's iterator will return the mappings in the order their keys appear in map, 
which is their natural order (the order in which the enum constants are 
declared). 


    Returns: a set view of the mappings contained in this enum map 
*java.util.EnumMap.equals(Object)*

public boolean equals(java.lang.Object o)

Compares the specified object with this map for equality. Returns true if the 
given object is also a map and the two maps represent the same mappings, as 
specified in the (|java.util.Map|) contract. 

    o - the object to be compared for equality with this map 

    Returns: true if the specified object is equal to this map 
*java.util.EnumMap.get(Object)*

public |java.lang.Object| get(java.lang.Object key)

Returns the value to which this map maps the specified key, or null if this map 
contains no mapping for the specified key. 

    key - the key whose associated value is to be returned 

    Returns: the value to which this map maps the specified key, or null if this map 
             contains no mapping for the specified key 
*java.util.EnumMap.keySet()*

public |java.util.Set| keySet()

Returns a (|java.util.Set|) view of the keys contained in this map. The 
returned set obeys the general contract outlined in (|java.util.Map|) . The 
set's iterator will return the keys in their natural order (the order in which 
the enum constants are declared). 


    Returns: a set view of the keys contained in this enum map 
*java.util.EnumMap.put(K,V)*

public |java.lang.Object| put(
  java.lang.Enum key,
  java.lang.Object value)

Associates the specified value with the specified key in this map. If the map 
previously contained a mapping for this key, the old value is replaced. 

    key - the key with which the specified value is to be associated 
    value - the value to be associated with the specified key 

    Returns: the previous value associated with specified key, or null if there was no 
             mapping for key. (A null return can also indicate that the map 
             previously associated null with the specified key.) 
*java.util.EnumMap.putAll(Map)*

public void putAll(java.util.Map m)

Copies all of the mappings from the specified map to this map. These mappings 
will replace any mappings that this map had for any of the keys currently in 
the specified map. 

    m - the mappings to be stored in this map 

*java.util.EnumMap.remove(Object)*

public |java.lang.Object| remove(java.lang.Object key)

Removes the mapping for this key from this map if present. 

    key - the key whose mapping is to be removed from the map 

    Returns: the previous value associated with specified key, or null if there was no entry 
             for key. (A null return can also indicate that the map previously 
             associated null with the specified key.) 
*java.util.EnumMap.size()*

public int size()

Returns the number of key-value mappings in this map. 


    Returns: the number of key-value mappings in this map 
*java.util.EnumMap.values()*

public |java.util.Collection| values()

Returns a (|java.util.Collection|) view of the values contained in this map. 
The returned collection obeys the general contract outlined in 
(|java.util.Map|) . The collection's iterator will return the values in the 
order their corresponding keys appear in map, which is their natural order (the 
order in which the enum constants are declared). 


    Returns: a collection view of the values contained in this map 

