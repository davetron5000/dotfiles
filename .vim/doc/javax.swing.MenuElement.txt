*javax.swing.MenuElement* *MenuElement* Any component that can be placed into a 

public interface interface MenuElement


|javax.swing.MenuElement_Description|
|javax.swing.MenuElement_Fields|
|javax.swing.MenuElement_Constructors|
|javax.swing.MenuElement_Methods|

================================================================================

*javax.swing.MenuElement_Methods*
|javax.swing.MenuElement.getComponent()|This method should return the java.awt.
|javax.swing.MenuElement.getSubElements()|This method should return an array co
|javax.swing.MenuElement.menuSelectionChanged(boolean)|Call by the MenuSelectio
|javax.swing.MenuElement.processKeyEvent(KeyEvent,MenuElement[],MenuSelectionManager)|
|javax.swing.MenuElement.processMouseEvent(MouseEvent,MenuElement[],MenuSelectionManager)|

*javax.swing.MenuElement_Description*

Any component that can be placed into a menu should implement this interface. 
This interface is used by MenuSelectionManager to handle selection and 
navigation in menu hierarchies. 


*javax.swing.MenuElement.getComponent()*

public |java.awt.Component| getComponent()

This method should return the java.awt.Component used to paint the receiving 
element. The returned component will be used to convert events and detect if an 
event is inside a MenuElement's component. 


    Returns: the Component value 
*javax.swing.MenuElement.getSubElements()*

public |javax.swing.MenuElement| getSubElements()

This method should return an array containing the sub-elements for the 
receiving menu element 


    Returns: an array of MenuElements 
*javax.swing.MenuElement.menuSelectionChanged(boolean)*

public void menuSelectionChanged(boolean isIncluded)

Call by the MenuSelectionManager when the MenuElement is added or remove from 
the menu selection. 


*javax.swing.MenuElement.processKeyEvent(KeyEvent,MenuElement[],MenuSelectionManager)*

public void processKeyEvent(
  java.awt.event.KeyEvent event,
  javax.swing.MenuElement[] path,
  javax.swing.MenuSelectionManager manager)

Process a key event. 


*javax.swing.MenuElement.processMouseEvent(MouseEvent,MenuElement[],MenuSelectionManager)*

public void processMouseEvent(
  java.awt.event.MouseEvent event,
  javax.swing.MenuElement[] path,
  javax.swing.MenuSelectionManager manager)

Processes a mouse event. event is a MouseEvent with source being the receiving 
element's component. path is the path of the receiving element in the menu 
hierarchy including the receiving element itself. manager is the 
MenuSelectionManager for the menu hierarchy. This method should process the 
MouseEvent and change the menu selection if necessary by using 
MenuSelectionManager's API Note: you do not have to forward the event to 
sub-components. This is done automatically by the MenuSelectionManager. 



