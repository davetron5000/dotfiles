*javax.naming.Binding* *Binding* This class represents a name-to-object binding found in a context.

public class Binding
  extends    |javax.naming.NameClassPair|

|javax.naming.Binding_Description|
|javax.naming.Binding_Fields|
|javax.naming.Binding_Constructors|
|javax.naming.Binding_Methods|

====================================================================================================================================================================================

*javax.naming.Binding_Constructors*
|javax.naming.Binding(String,Object)|Constructs an instance of a Binding given its name and object.
|javax.naming.Binding(String,Object,boolean)|Constructs an instance of a Binding given its name, object, and whether  the name is relative.
|javax.naming.Binding(String,String,Object)|Constructs an instance of a Binding given its name, class name, and object.
|javax.naming.Binding(String,String,Object,boolean)|Constructs an instance of a Binding given its   name, class name, object, and whether the name is relative.

*javax.naming.Binding_Methods*
|javax.naming.Binding.getClassName()|Retrieves the class name of the object bound to the name of this binding.
|javax.naming.Binding.getObject()|Retrieves the object bound to the name of this binding.
|javax.naming.Binding.setObject(Object)|Sets the object associated with this binding.
|javax.naming.Binding.toString()|Generates the string representation of this binding.

*javax.naming.Binding_Description*

This class represents a name-to-object binding found in a context. 

A context consists of name-to-object bindings. The Binding class represents such a binding. It consists of a name and an object. The Context.listBindings() method returns an 
enumeration of Binding. 

Use subclassing for naming systems that generate contents of a binding dynamically. 

A Binding instance is not synchronized against concurrent access by multiple threads. Threads that need to access a Binding concurrently should synchronize amongst themselves and 
provide the necessary locking. 



*javax.naming.Binding(String,Object)*

public Binding(
  java.lang.String name,
  java.lang.Object obj)

Constructs an instance of a Binding given its name and object. 

getClassName() will return the class name of obj (or null if obj is null) unless the class name has been explicitly set using setClassName() 

    name - The non-null name of the object. It is relative to the target context (which is named by the first parameter of the listBindings() method) 
    obj - The possibly null object bound to name. 

*javax.naming.Binding(String,Object,boolean)*

public Binding(
  java.lang.String name,
  java.lang.Object obj,
  boolean isRelative)

Constructs an instance of a Binding given its name, object, and whether the name is relative. 

getClassName() will return the class name of obj (or null if obj is null) unless the class name has been explicitly set using setClassName() 

    name - The non-null string name of the object. 
    obj - The possibly null object bound to name. 
    isRelative - true if name is a name relative to the target context (which is named by the first parameter of the listBindings() method); false if name is a URL string. 

*javax.naming.Binding(String,String,Object)*

public Binding(
  java.lang.String name,
  java.lang.String className,
  java.lang.Object obj)

Constructs an instance of a Binding given its name, class name, and object. 

    name - The non-null name of the object. It is relative to the target context (which is named by the first parameter of the listBindings() method) 
    className - The possibly null class name of the object bound to name. If null, the class name of obj is returned by getClassName(). If obj is also null, getClassName() will return null. 
    obj - The possibly null object bound to name. 

*javax.naming.Binding(String,String,Object,boolean)*

public Binding(
  java.lang.String name,
  java.lang.String className,
  java.lang.Object obj,
  boolean isRelative)

Constructs an instance of a Binding given its name, class name, object, and whether the name is relative. 

    name - The non-null string name of the object. 
    className - The possibly null class name of the object bound to name. If null, the class name of obj is returned by getClassName(). If obj is also null, getClassName() will return null. 
    obj - The possibly null object bound to name. 
    isRelative - true if name is a name relative to the target context (which is named by the first parameter of the listBindings() method); false if name is a URL string. 

*javax.naming.Binding.getClassName()*

public |java.lang.String| getClassName()

Retrieves the class name of the object bound to the name of this binding. If the class name has been set explicitly, return it. Otherwise, if this binding contains a non-null 
object, that object's class name is used. Otherwise, null is returned. 



    Returns: A possibly null string containing class name of object bound. 

*javax.naming.Binding.getObject()*

public |java.lang.Object| getObject()

Retrieves the object bound to the name of this binding. 



    Returns: The object bound; null if this binding does not contain an object. 

*javax.naming.Binding.setObject(Object)*

public void setObject(java.lang.Object obj)

Sets the object associated with this binding. 


    obj - The possibly null object to use. 

*javax.naming.Binding.toString()*

public |java.lang.String| toString()

Generates the string representation of this binding. The string representation consists of the string representation of the name/class pair and the string representation of this 
binding's object, separated by ':'. The contents of this string is useful for debugging and is not meant to be interpreted programmatically. 



    Returns: The non-null string representation of this binding. 


