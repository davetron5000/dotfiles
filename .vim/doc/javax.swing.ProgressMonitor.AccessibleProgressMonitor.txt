*javax.swing.ProgressMonitor.AccessibleProgressMonitor* *ProgressMonitor.AccessibleProgressMonitor* AccessibleProgressMonitor implements accessibility 
 support for the ProgressMon

protected class ProgressMonitor.AccessibleProgressMonitor
  extends    |javax.accessibility.AccessibleContext|
  implements |javax.accessibility.AccessibleText|
             |javax.swing.event.ChangeListener|
             |java.beans.PropertyChangeListener|

|javax.swing.ProgressMonitor.AccessibleProgressMonitor_Description|
|javax.swing.ProgressMonitor.AccessibleProgressMonitor_Fields|
|javax.swing.ProgressMonitor.AccessibleProgressMonitor_Constructors|
|javax.swing.ProgressMonitor.AccessibleProgressMonitor_Methods|

====================================================================================================================================================================================

*javax.swing.ProgressMonitor.AccessibleProgressMonitor_Constructors*
|javax.swing.ProgressMonitor.AccessibleProgressMonitor()|AccessibleProgressMonitor constructor

*javax.swing.ProgressMonitor.AccessibleProgressMonitor_Methods*
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleChild(int)|Returns the specified Accessible child of the object.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleChildrenCount()|Returns the number of accessible children of the object.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleComponent()|Gets the AccessibleComponent associated with this object that has a   graphical representation.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleDescription()|Gets the accessibleDescription property of this object.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleIndexInParent()|Gets the 0-based index of this object in its accessible parent.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleName()|Gets the accessibleName property of this object.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleParent()|Gets the Accessible parent of this object.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleRole()|Gets the role of this object.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleStateSet()|Gets the state set of this object.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleText()|Gets the AccessibleText associated with this object presenting   text on the display.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleValue()|Gets the AccessibleValue associated with this object that supports a   Numerical value.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAfterIndex(int,int)|Returns the String after a given index.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAtIndex(int,int)|Returns the String at a given index.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getBeforeIndex(int,int)|Returns the String before a given index.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getCaretPosition()|Returns the zero-based offset of the caret.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getCharacterAttribute(int)|Returns the AttributeSet for a given character at a given index
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getCharacterBounds(int)|Determines the bounding box of the character at the given   index into the string.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getCharCount()|Returns the number of characters (valid indicies)
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getIndexAtPoint(Point)|Given a point in local coordinates, return the zero-based index  of the character under that Point.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getLocale()|Gets the locale of the component.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getSelectedText()|Returns the portion of the text that is selected.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getSelectionEnd()|Returns the end offset within the selected text.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.getSelectionStart()|Returns the start offset within the selected text.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.propertyChange(PropertyChangeEvent)|This method gets called when a bound property is changed.
|javax.swing.ProgressMonitor.AccessibleProgressMonitor.stateChanged(ChangeEvent)|Invoked when the target of the listener has changed its state.

*javax.swing.ProgressMonitor.AccessibleProgressMonitor_Description*

AccessibleProgressMonitor implements accessibility support for the ProgressMonitor class. 



*javax.swing.ProgressMonitor.AccessibleProgressMonitor()*

protected ProgressMonitor.AccessibleProgressMonitor()

AccessibleProgressMonitor constructor 


*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleChild(int)*

public |javax.accessibility.Accessible| getAccessibleChild(int i)

Returns the specified Accessible child of the object. The Accessible children of an Accessible object are zero-based, so the first child of an Accessible child is at index 0, the 
second child is at index 1, and so on. 


    i - zero-based index of child 

    Returns: the Accessible child of the object 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleChildrenCount()*

public int getAccessibleChildrenCount()

Returns the number of accessible children of the object. 



    Returns: the number of accessible children of the object. 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleComponent()*

public |javax.accessibility.AccessibleComponent| getAccessibleComponent()

Gets the AccessibleComponent associated with this object that has a graphical representation. 



    Returns: AccessibleComponent if supported by object; else return null 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleDescription()*

public |java.lang.String| getAccessibleDescription()

Gets the accessibleDescription property of this object. The accessibleDescription property of this object is a short localized phrase describing the purpose of the object. For 
example, in the case of a 'Cancel' button, the accessibleDescription could be 'Ignore changes and close dialog box.' 



    Returns: the localized description of the object; null if this object does not have a description 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleIndexInParent()*

public int getAccessibleIndexInParent()

Gets the 0-based index of this object in its accessible parent. 



    Returns: the 0-based index of this object in its parent; -1 if this object does not have an accessible parent. 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleName()*

public |java.lang.String| getAccessibleName()

Gets the accessibleName property of this object. The accessibleName property of an object is a localized String that designates the purpose of the object. For example, the 
accessibleName property of a label or button might be the text of the label or button itself. In the case of an object that doesn't display its name, the accessibleName should 
still be set. For example, in the case of a text field used to enter the name of a city, the accessibleName for the en_US locale could be 'city.' 



    Returns: the localized name of the object; null if this object does not have a name 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleParent()*

public |javax.accessibility.Accessible| getAccessibleParent()

Gets the Accessible parent of this object. 



    Returns: the Accessible parent of this object; null if this object does not have an Accessible parent 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleRole()*

public |javax.accessibility.AccessibleRole| getAccessibleRole()

Gets the role of this object. The role of the object is the generic purpose or use of the class of this object. For example, the role of a push button is 
AccessibleRole.PUSH_BUTTON. The roles in AccessibleRole are provided so component developers can pick from a set of predefined roles. This enables assistive technologies to 
provide a consistent interface to various tweaked subclasses of components (e.g., use AccessibleRole.PUSH_BUTTON for all components that act like a push button) as well as 
distinguish between sublasses that behave differently (e.g., AccessibleRole.CHECK_BOX for check boxes and AccessibleRole.RADIO_BUTTON for radio buttons). Note that the 
AccessibleRole class is also extensible, so custom component developers can define their own AccessibleRole's if the set of predefined roles is inadequate. 



    Returns: an instance of AccessibleRole describing the role of the object 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleStateSet()*

public |javax.accessibility.AccessibleStateSet| getAccessibleStateSet()

Gets the state set of this object. The AccessibleStateSet of an object is composed of a set of unique AccessibleStates. A change in the AccessibleStateSet of an object will cause 
a PropertyChangeEvent to be fired for the ACCESSIBLE_STATE_PROPERTY property. 



    Returns: an instance of AccessibleStateSet containing the current state set of the object 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleText()*

public |javax.accessibility.AccessibleText| getAccessibleText()

Gets the AccessibleText associated with this object presenting text on the display. 



    Returns: AccessibleText if supported by object; else return null 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAccessibleValue()*

public |javax.accessibility.AccessibleValue| getAccessibleValue()

Gets the AccessibleValue associated with this object that supports a Numerical value. 



    Returns: AccessibleValue if supported by object; else return null 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAfterIndex(int,int)*

public |java.lang.String| getAfterIndex(
  int part,
  int index)

Returns the String after a given index. 


    part - the CHARACTER, WORD, or SENTENCE to retrieve 
    index - an index within the text 

    Returns: the letter, word, or sentence 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getAtIndex(int,int)*

public |java.lang.String| getAtIndex(
  int part,
  int index)

Returns the String at a given index. 


    part - the CHARACTER, WORD, or SENTENCE to retrieve 
    index - an index within the text 

    Returns: the letter, word, or sentence 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getBeforeIndex(int,int)*

public |java.lang.String| getBeforeIndex(
  int part,
  int index)

Returns the String before a given index. 


    part - the CHARACTER, WORD, or SENTENCE to retrieve 
    index - an index within the text 

    Returns: the letter, word, or sentence 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getCaretPosition()*

public int getCaretPosition()

Returns the zero-based offset of the caret. 

Note: That to the right of the caret will have the same index value as the offset (the caret is between two characters). 



    Returns: the zero-based offset of the caret. 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getCharacterAttribute(int)*

public |javax.swing.text.AttributeSet| getCharacterAttribute(int i)

Returns the AttributeSet for a given character at a given index 


    i - the zero-based index into the text 

    Returns: the AttributeSet of the character 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getCharacterBounds(int)*

public |java.awt.Rectangle| getCharacterBounds(int i)

Determines the bounding box of the character at the given index into the string. The bounds are returned in local coordinates. If the index is invalid an empty rectangle is 
returned. 


    i - the index into the String 

    Returns: the screen coordinates of the character's bounding box, if index is invalid return an empty rectangle. 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getCharCount()*

public int getCharCount()

Returns the number of characters (valid indicies) 



    Returns: the number of characters 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getIndexAtPoint(Point)*

public int getIndexAtPoint(java.awt.Point p)

Given a point in local coordinates, return the zero-based index of the character under that Point. If the point is invalid, this method returns -1. 


    p - the Point in local coordinates 

    Returns: the zero-based index of the character under Point p; if Point is invalid return -1. 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getLocale()*

public |java.util.Locale| getLocale()
  throws |java.awt.IllegalComponentStateException|
         
Gets the locale of the component. If the component does not have a locale, then the locale of its parent is returned. 



    Returns: this component's locale. If this component does not have a locale, the locale of its parent is returned. 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getSelectedText()*

public |java.lang.String| getSelectedText()

Returns the portion of the text that is selected. 



    Returns: the String portion of the text that is selected 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getSelectionEnd()*

public int getSelectionEnd()

Returns the end offset within the selected text. If there is no selection, but there is a caret, the start and end offsets will be the same. 



    Returns: the index into teh text of the end of the selection 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.getSelectionStart()*

public int getSelectionStart()

Returns the start offset within the selected text. If there is no selection, but there is a caret, the start and end offsets will be the same. 



    Returns: the index into the text of the start of the selection 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.propertyChange(PropertyChangeEvent)*

public void propertyChange(java.beans.PropertyChangeEvent e)

This method gets called when a bound property is changed. 


    e - A PropertyChangeEvent object describing the event source and the property that has changed. Must not be null. 

*javax.swing.ProgressMonitor.AccessibleProgressMonitor.stateChanged(ChangeEvent)*

public void stateChanged(javax.swing.event.ChangeEvent e)

Invoked when the target of the listener has changed its state. 


    e - a ChangeEvent object. Must not be null. 


