*javax.swing.plaf.multi.MultiTreeUI* *MultiTreeUI* A multiplexing UI used to com

public class MultiTreeUI
  extends    |javax.swing.plaf.TreeUI|

|javax.swing.plaf.multi.MultiTreeUI_Description|
|javax.swing.plaf.multi.MultiTreeUI_Fields|
|javax.swing.plaf.multi.MultiTreeUI_Constructors|
|javax.swing.plaf.multi.MultiTreeUI_Methods|

================================================================================

*javax.swing.plaf.multi.MultiTreeUI_Fields*
|java.util.Vector_javax.swing.plaf.multi.MultiTreeUI.uis|

*javax.swing.plaf.multi.MultiTreeUI_Constructors*
|javax.swing.plaf.multi.MultiTreeUI()|

*javax.swing.plaf.multi.MultiTreeUI_Methods*
|javax.swing.plaf.multi.MultiTreeUI.cancelEditing(JTree)|Invokes the cancelEdit
|javax.swing.plaf.multi.MultiTreeUI.contains(JComponent,int,int)|Invokes the co
|javax.swing.plaf.multi.MultiTreeUI.createUI(JComponent)|Returns a multiplexing
|javax.swing.plaf.multi.MultiTreeUI.getAccessibleChild(JComponent,int)|Invokes 
|javax.swing.plaf.multi.MultiTreeUI.getAccessibleChildrenCount(JComponent)|Invo
|javax.swing.plaf.multi.MultiTreeUI.getClosestPathForLocation(JTree,int,int)|In
|javax.swing.plaf.multi.MultiTreeUI.getEditingPath(JTree)|Invokes the getEditin
|javax.swing.plaf.multi.MultiTreeUI.getMaximumSize(JComponent)|Invokes the getM
|javax.swing.plaf.multi.MultiTreeUI.getMinimumSize(JComponent)|Invokes the getM
|javax.swing.plaf.multi.MultiTreeUI.getPathBounds(JTree,TreePath)|Invokes the g
|javax.swing.plaf.multi.MultiTreeUI.getPathForRow(JTree,int)|Invokes the getPat
|javax.swing.plaf.multi.MultiTreeUI.getPreferredSize(JComponent)|Invokes the ge
|javax.swing.plaf.multi.MultiTreeUI.getRowCount(JTree)|Invokes the getRowCount 
|javax.swing.plaf.multi.MultiTreeUI.getRowForPath(JTree,TreePath)|Invokes the g
|javax.swing.plaf.multi.MultiTreeUI.getUIs()|Returns the list of UIs associated
|javax.swing.plaf.multi.MultiTreeUI.installUI(JComponent)|Invokes the installUI
|javax.swing.plaf.multi.MultiTreeUI.isEditing(JTree)|Invokes the isEditing meth
|javax.swing.plaf.multi.MultiTreeUI.paint(Graphics,JComponent)|Invokes the pain
|javax.swing.plaf.multi.MultiTreeUI.startEditingAtPath(JTree,TreePath)|Invokes 
|javax.swing.plaf.multi.MultiTreeUI.stopEditing(JTree)|Invokes the stopEditing 
|javax.swing.plaf.multi.MultiTreeUI.uninstallUI(JComponent)|Invokes the uninsta
|javax.swing.plaf.multi.MultiTreeUI.update(Graphics,JComponent)|Invokes the upd

*javax.swing.plaf.multi.MultiTreeUI_Description*

A multiplexing UI used to combine TreeUIs. 

This file was automatically generated by AutoMulti. 


*java.util.Vector_javax.swing.plaf.multi.MultiTreeUI.uis*

A multiplexing UI used to combine TreeUIs. 

This file was automatically generated by AutoMulti. 



*javax.swing.plaf.multi.MultiTreeUI()*

public MultiTreeUI()




*javax.swing.plaf.multi.MultiTreeUI.cancelEditing(JTree)*

public void cancelEditing(javax.swing.JTree a)

Invokes the cancelEditing method on each UI handled by this object. 


*javax.swing.plaf.multi.MultiTreeUI.contains(JComponent,int,int)*

public boolean contains(
  javax.swing.JComponent a,
  int b,
  int c)

Invokes the contains method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiTreeUI.createUI(JComponent)*

public static |javax.swing.plaf.ComponentUI| createUI(javax.swing.JComponent a)

Returns a multiplexing UI instance if any of the auxiliary LookAndFeels 
supports this UI. Otherwise, just returns the UI object obtained from the 
default LookAndFeel. 


*javax.swing.plaf.multi.MultiTreeUI.getAccessibleChild(JComponent,int)*

public |javax.accessibility.Accessible| getAccessibleChild(
  javax.swing.JComponent a,
  int b)

Invokes the getAccessibleChild method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiTreeUI.getAccessibleChildrenCount(JComponent)*

public int getAccessibleChildrenCount(javax.swing.JComponent a)

Invokes the getAccessibleChildrenCount method on each UI handled by this 
object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiTreeUI.getClosestPathForLocation(JTree,int,int)*

public |javax.swing.tree.TreePath| getClosestPathForLocation(
  javax.swing.JTree a,
  int b,
  int c)

Invokes the getClosestPathForLocation method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiTreeUI.getEditingPath(JTree)*

public |javax.swing.tree.TreePath| getEditingPath(javax.swing.JTree a)

Invokes the getEditingPath method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiTreeUI.getMaximumSize(JComponent)*

public |java.awt.Dimension| getMaximumSize(javax.swing.JComponent a)

Invokes the getMaximumSize method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiTreeUI.getMinimumSize(JComponent)*

public |java.awt.Dimension| getMinimumSize(javax.swing.JComponent a)

Invokes the getMinimumSize method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiTreeUI.getPathBounds(JTree,TreePath)*

public |java.awt.Rectangle| getPathBounds(
  javax.swing.JTree a,
  javax.swing.tree.TreePath b)

Invokes the getPathBounds method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiTreeUI.getPathForRow(JTree,int)*

public |javax.swing.tree.TreePath| getPathForRow(
  javax.swing.JTree a,
  int b)

Invokes the getPathForRow method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiTreeUI.getPreferredSize(JComponent)*

public |java.awt.Dimension| getPreferredSize(javax.swing.JComponent a)

Invokes the getPreferredSize method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiTreeUI.getRowCount(JTree)*

public int getRowCount(javax.swing.JTree a)

Invokes the getRowCount method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiTreeUI.getRowForPath(JTree,TreePath)*

public int getRowForPath(
  javax.swing.JTree a,
  javax.swing.tree.TreePath b)

Invokes the getRowForPath method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiTreeUI.getUIs()*

public |javax.swing.plaf.ComponentUI| getUIs()

Returns the list of UIs associated with this multiplexing UI. This allows 
processing of the UIs by an application aware of multiplexing UIs on 
components. 


*javax.swing.plaf.multi.MultiTreeUI.installUI(JComponent)*

public void installUI(javax.swing.JComponent a)

Invokes the installUI method on each UI handled by this object. 


*javax.swing.plaf.multi.MultiTreeUI.isEditing(JTree)*

public boolean isEditing(javax.swing.JTree a)

Invokes the isEditing method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiTreeUI.paint(Graphics,JComponent)*

public void paint(
  java.awt.Graphics a,
  javax.swing.JComponent b)

Invokes the paint method on each UI handled by this object. 


*javax.swing.plaf.multi.MultiTreeUI.startEditingAtPath(JTree,TreePath)*

public void startEditingAtPath(
  javax.swing.JTree a,
  javax.swing.tree.TreePath b)

Invokes the startEditingAtPath method on each UI handled by this object. 


*javax.swing.plaf.multi.MultiTreeUI.stopEditing(JTree)*

public boolean stopEditing(javax.swing.JTree a)

Invokes the stopEditing method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiTreeUI.uninstallUI(JComponent)*

public void uninstallUI(javax.swing.JComponent a)

Invokes the uninstallUI method on each UI handled by this object. 


*javax.swing.plaf.multi.MultiTreeUI.update(Graphics,JComponent)*

public void update(
  java.awt.Graphics a,
  javax.swing.JComponent b)

Invokes the update method on each UI handled by this object. 



