*java.util.Map.Entry* *Map.Entry* A map entry (key-value pair).

public static interface interface Map.Entry


|java.util.Map.Entry_Description|
|java.util.Map.Entry_Fields|
|java.util.Map.Entry_Constructors|
|java.util.Map.Entry_Methods|

================================================================================

*java.util.Map.Entry_Methods*
|java.util.Map.Entry.equals(Object)|Compares the specified object with this ent
|java.util.Map.Entry.getKey()|Returns the key corresponding to this entry.
|java.util.Map.Entry.getValue()|Returns the value corresponding to this entry.
|java.util.Map.Entry.hashCode()|Returns the hash code value for this map entry.
|java.util.Map.Entry.setValue(V)|Replaces the value corresponding to this entry

*java.util.Map.Entry_Description*

A map entry (key-value pair). The Map.entrySet method returns a collection-view 
of the map, whose elements are of this class. The only way to obtain a 
reference to a map entry is from the iterator of this collection-view. These 
Map.Entry objects are valid only for the duration of the iteration; more 
formally, the behavior of a map entry is undefined if the backing map has been 
modified after the entry was returned by the iterator, except through the 
setValue operation on the map entry. 


*java.util.Map.Entry.equals(Object)*

public boolean equals(java.lang.Object o)

Compares the specified object with this entry for equality. Returns true if the 
given object is also a map entry and the two entries represent the same 
mapping. More formally, two entries e1 and e2 represent the same mapping if 

(e1.getKey()==null ? e2.getKey()==null : e1.getKey().equals(e2.getKey())) 
(e1.getValue()==null ? e2.getValue()==null : 
e1.getValue().equals(e2.getValue())) 

This ensures that the equals method works properly across different 
implementations of the Map.Entry interface. 

    o - object to be compared for equality with this map entry. 

    Returns: true if the specified object is equal to this map entry. 
*java.util.Map.Entry.getKey()*

public |java.lang.Object| getKey()

Returns the key corresponding to this entry. 


    Returns: the key corresponding to this entry. 
*java.util.Map.Entry.getValue()*

public |java.lang.Object| getValue()

Returns the value corresponding to this entry. If the mapping has been removed 
from the backing map (by the iterator's remove operation), the results of this 
call are undefined. 


    Returns: the value corresponding to this entry. 
*java.util.Map.Entry.hashCode()*

public int hashCode()

Returns the hash code value for this map entry. The hash code of a map entry e 
is defined to be: 

(e.getKey()==null ? 0 : e.getKey().hashCode()) ^ (e.getValue()==null ? 0 : 
e.getValue().hashCode()) 

This ensures that e1.equals(e2) implies that e1.hashCode()==e2.hashCode() for 
any two Entries e1 and e2, as required by the general contract of 
Object.hashCode. 


    Returns: the hash code value for this map entry. 
*java.util.Map.Entry.setValue(V)*

public |java.lang.Object| setValue(java.lang.Object value)

Replaces the value corresponding to this entry with the specified value 
(optional operation). (Writes through to the map.) The behavior of this call is 
undefined if the mapping has already been removed from the map (by the 
iterator's remove operation). 

    value - new value to be stored in this entry. 

    Returns: old value corresponding to the entry. 

