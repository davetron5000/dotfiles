*javax.swing.plaf.basic.BasicSplitPaneDivider* *BasicSplitPaneDivider* Divider u

public class BasicSplitPaneDivider
  extends    |java.awt.Container|
  implements |java.beans.PropertyChangeListener|

|javax.swing.plaf.basic.BasicSplitPaneDivider_Description|
|javax.swing.plaf.basic.BasicSplitPaneDivider_Fields|
|javax.swing.plaf.basic.BasicSplitPaneDivider_Constructors|
|javax.swing.plaf.basic.BasicSplitPaneDivider_Methods|

================================================================================

*javax.swing.plaf.basic.BasicSplitPaneDivider_Fields*
|int_javax.swing.plaf.basic.BasicSplitPaneDivider.dividerSize|
|javax.swing.plaf.basic.BasicSplitPaneDivider.DragController_javax.swing.plaf.basic.BasicSplitPaneDivider.dragger|
|java.awt.Component_javax.swing.plaf.basic.BasicSplitPaneDivider.hiddenDivider|
|javax.swing.JButton_javax.swing.plaf.basic.BasicSplitPaneDivider.leftButton|
|javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler_javax.swing.plaf.basic.BasicSplitPaneDivider.mouseHandler|
|int_javax.swing.plaf.basic.BasicSplitPaneDivider.ONE_TOUCH_OFFSET|
|int_javax.swing.plaf.basic.BasicSplitPaneDivider.ONE_TOUCH_SIZE|
|int_javax.swing.plaf.basic.BasicSplitPaneDivider.orientation|
|javax.swing.JButton_javax.swing.plaf.basic.BasicSplitPaneDivider.rightButton|
|javax.swing.JSplitPane_javax.swing.plaf.basic.BasicSplitPaneDivider.splitPane|
|javax.swing.plaf.basic.BasicSplitPaneUI_javax.swing.plaf.basic.BasicSplitPaneDivider.splitPaneUI|

*javax.swing.plaf.basic.BasicSplitPaneDivider_Constructors*
|javax.swing.plaf.basic.BasicSplitPaneDivider(BasicSplitPaneUI)|Creates an inst

*javax.swing.plaf.basic.BasicSplitPaneDivider_Methods*
|javax.swing.plaf.basic.BasicSplitPaneDivider.createLeftOneTouchButton()|Create
|javax.swing.plaf.basic.BasicSplitPaneDivider.createRightOneTouchButton()|Creat
|javax.swing.plaf.basic.BasicSplitPaneDivider.dragDividerTo(int)|Messages the B
|javax.swing.plaf.basic.BasicSplitPaneDivider.finishDraggingTo(int)|Messages th
|javax.swing.plaf.basic.BasicSplitPaneDivider.getBasicSplitPaneUI()|Returns the
|javax.swing.plaf.basic.BasicSplitPaneDivider.getBorder()|Returns the border of
|javax.swing.plaf.basic.BasicSplitPaneDivider.getDividerSize()|Returns the size
|javax.swing.plaf.basic.BasicSplitPaneDivider.getInsets()|If a border has been 
|javax.swing.plaf.basic.BasicSplitPaneDivider.getMinimumSize()|Returns dividerS
|javax.swing.plaf.basic.BasicSplitPaneDivider.getPreferredSize()|Returns divide
|javax.swing.plaf.basic.BasicSplitPaneDivider.isMouseOver()|Returns whether or 
|javax.swing.plaf.basic.BasicSplitPaneDivider.oneTouchExpandableChanged()|Messa
|javax.swing.plaf.basic.BasicSplitPaneDivider.paint(Graphics)|Paints the divide
|javax.swing.plaf.basic.BasicSplitPaneDivider.prepareForDragging()|Message to p
|javax.swing.plaf.basic.BasicSplitPaneDivider.propertyChange(PropertyChangeEvent)|
|javax.swing.plaf.basic.BasicSplitPaneDivider.setBasicSplitPaneUI(BasicSplitPaneUI)|
|javax.swing.plaf.basic.BasicSplitPaneDivider.setBorder(Border)|Sets the border
|javax.swing.plaf.basic.BasicSplitPaneDivider.setDividerSize(int)|Sets the size
|javax.swing.plaf.basic.BasicSplitPaneDivider.setMouseOver(boolean)|Sets whethe

*javax.swing.plaf.basic.BasicSplitPaneDivider_Description*

Divider used by BasicSplitPaneUI. Subclassers may wish to override paint to do 
something more interesting. The border effect is drawn in BasicSplitPaneUI, so 
if you don't like that border, reset it there. To conditionally drag from 
certain areas subclass mousePressed and call super when you wish the dragging 
to begin. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*int_javax.swing.plaf.basic.BasicSplitPaneDivider.dividerSize*

Divider used by BasicSplitPaneUI. Subclassers may wish to override paint to do 
something more interesting. The border effect is drawn in BasicSplitPaneUI, so 
if you don't like that border, reset it there. To conditionally drag from 
certain areas subclass mousePressed and call super when you wish the dragging 
to begin. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.plaf.basic.BasicSplitPaneDivider.DragController_javax.swing.plaf.basic.BasicSplitPaneDivider.dragger*

Divider used by BasicSplitPaneUI. Subclassers may wish to override paint to do 
something more interesting. The border effect is drawn in BasicSplitPaneUI, so 
if you don't like that border, reset it there. To conditionally drag from 
certain areas subclass mousePressed and call super when you wish the dragging 
to begin. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*java.awt.Component_javax.swing.plaf.basic.BasicSplitPaneDivider.hiddenDivider*

Divider used by BasicSplitPaneUI. Subclassers may wish to override paint to do 
something more interesting. The border effect is drawn in BasicSplitPaneUI, so 
if you don't like that border, reset it there. To conditionally drag from 
certain areas subclass mousePressed and call super when you wish the dragging 
to begin. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.JButton_javax.swing.plaf.basic.BasicSplitPaneDivider.leftButton*

Divider used by BasicSplitPaneUI. Subclassers may wish to override paint to do 
something more interesting. The border effect is drawn in BasicSplitPaneUI, so 
if you don't like that border, reset it there. To conditionally drag from 
certain areas subclass mousePressed and call super when you wish the dragging 
to begin. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler_javax.swing.plaf.basic.BasicSplitPaneDivider.mouseHandler*

Divider used by BasicSplitPaneUI. Subclassers may wish to override paint to do 
something more interesting. The border effect is drawn in BasicSplitPaneUI, so 
if you don't like that border, reset it there. To conditionally drag from 
certain areas subclass mousePressed and call super when you wish the dragging 
to begin. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*int_javax.swing.plaf.basic.BasicSplitPaneDivider.ONE_TOUCH_OFFSET*

Divider used by BasicSplitPaneUI. Subclassers may wish to override paint to do 
something more interesting. The border effect is drawn in BasicSplitPaneUI, so 
if you don't like that border, reset it there. To conditionally drag from 
certain areas subclass mousePressed and call super when you wish the dragging 
to begin. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*int_javax.swing.plaf.basic.BasicSplitPaneDivider.ONE_TOUCH_SIZE*

Divider used by BasicSplitPaneUI. Subclassers may wish to override paint to do 
something more interesting. The border effect is drawn in BasicSplitPaneUI, so 
if you don't like that border, reset it there. To conditionally drag from 
certain areas subclass mousePressed and call super when you wish the dragging 
to begin. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*int_javax.swing.plaf.basic.BasicSplitPaneDivider.orientation*

Divider used by BasicSplitPaneUI. Subclassers may wish to override paint to do 
something more interesting. The border effect is drawn in BasicSplitPaneUI, so 
if you don't like that border, reset it there. To conditionally drag from 
certain areas subclass mousePressed and call super when you wish the dragging 
to begin. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.JButton_javax.swing.plaf.basic.BasicSplitPaneDivider.rightButton*

Divider used by BasicSplitPaneUI. Subclassers may wish to override paint to do 
something more interesting. The border effect is drawn in BasicSplitPaneUI, so 
if you don't like that border, reset it there. To conditionally drag from 
certain areas subclass mousePressed and call super when you wish the dragging 
to begin. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.JSplitPane_javax.swing.plaf.basic.BasicSplitPaneDivider.splitPane*

Divider used by BasicSplitPaneUI. Subclassers may wish to override paint to do 
something more interesting. The border effect is drawn in BasicSplitPaneUI, so 
if you don't like that border, reset it there. To conditionally drag from 
certain areas subclass mousePressed and call super when you wish the dragging 
to begin. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.plaf.basic.BasicSplitPaneUI_javax.swing.plaf.basic.BasicSplitPaneDivider.splitPaneUI*

Divider used by BasicSplitPaneUI. Subclassers may wish to override paint to do 
something more interesting. The border effect is drawn in BasicSplitPaneUI, so 
if you don't like that border, reset it there. To conditionally drag from 
certain areas subclass mousePressed and call super when you wish the dragging 
to begin. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 



*javax.swing.plaf.basic.BasicSplitPaneDivider(BasicSplitPaneUI)*

public BasicSplitPaneDivider(javax.swing.plaf.basic.BasicSplitPaneUI ui)

Creates an instance of BasicSplitPaneDivider. Registers this instance for mouse 
events and mouse dragged events. 


*javax.swing.plaf.basic.BasicSplitPaneDivider.createLeftOneTouchButton()*

protected |javax.swing.JButton| createLeftOneTouchButton()

Creates and return an instance of JButton that can be used to collapse the left 
component in the split pane. 


*javax.swing.plaf.basic.BasicSplitPaneDivider.createRightOneTouchButton()*

protected |javax.swing.JButton| createRightOneTouchButton()

Creates and return an instance of JButton that can be used to collapse the 
right component in the split pane. 


*javax.swing.plaf.basic.BasicSplitPaneDivider.dragDividerTo(int)*

protected void dragDividerTo(int location)

Messages the BasicSplitPaneUI with dragDividerTo that this instance is 
contained in. 


*javax.swing.plaf.basic.BasicSplitPaneDivider.finishDraggingTo(int)*

protected void finishDraggingTo(int location)

Messages the BasicSplitPaneUI with finishDraggingTo that this instance is 
contained in. 


*javax.swing.plaf.basic.BasicSplitPaneDivider.getBasicSplitPaneUI()*

public |javax.swing.plaf.basic.BasicSplitPaneUI| getBasicSplitPaneUI()

Returns the SplitPaneUI the receiver is currently in. 


*javax.swing.plaf.basic.BasicSplitPaneDivider.getBorder()*

public |javax.swing.border.Border| getBorder()

Returns the border of this component or null if no border is currently set. 


    Returns: the border object for this component 
*javax.swing.plaf.basic.BasicSplitPaneDivider.getDividerSize()*

public int getDividerSize()

Returns the size of the divider, that is the width if the splitpane is 
HORIZONTAL_SPLIT, or the height of VERTICAL_SPLIT. 


*javax.swing.plaf.basic.BasicSplitPaneDivider.getInsets()*

public |java.awt.Insets| getInsets()

If a border has been set on this component, returns the border's insets, else 
calls super.getInsets. 


    Returns: the value of the insets property. 
*javax.swing.plaf.basic.BasicSplitPaneDivider.getMinimumSize()*

public |java.awt.Dimension| getMinimumSize()

Returns dividerSize x dividerSize 


*javax.swing.plaf.basic.BasicSplitPaneDivider.getPreferredSize()*

public |java.awt.Dimension| getPreferredSize()

Returns dividerSize x dividerSize 


*javax.swing.plaf.basic.BasicSplitPaneDivider.isMouseOver()*

public boolean isMouseOver()

Returns whether or not the mouse is currently over the divider 

    Returns - whether or not the mouse is currently over the divider 

*javax.swing.plaf.basic.BasicSplitPaneDivider.oneTouchExpandableChanged()*

protected void oneTouchExpandableChanged()

Messaged when the oneTouchExpandable value of the JSplitPane the receiver is 
contained in changes. Will create the leftButton and rightButton if they are 
null. invalidates the receiver as well. 


*javax.swing.plaf.basic.BasicSplitPaneDivider.paint(Graphics)*

public void paint(java.awt.Graphics g)

Paints the divider. 


*javax.swing.plaf.basic.BasicSplitPaneDivider.prepareForDragging()*

protected void prepareForDragging()

Message to prepare for dragging. This messages the BasicSplitPaneUI with 
startDragging. 


*javax.swing.plaf.basic.BasicSplitPaneDivider.propertyChange(PropertyChangeEvent)*

public void propertyChange(java.beans.PropertyChangeEvent e)

Property change event, presumably from the JSplitPane, will message 
updateOrientation if necessary. 


*javax.swing.plaf.basic.BasicSplitPaneDivider.setBasicSplitPaneUI(BasicSplitPaneUI)*

public void setBasicSplitPaneUI(javax.swing.plaf.basic.BasicSplitPaneUI newUI)

Sets the SplitPaneUI that is using the receiver. 


*javax.swing.plaf.basic.BasicSplitPaneDivider.setBorder(Border)*

public void setBorder(javax.swing.border.Border border)

Sets the border of this component. 


*javax.swing.plaf.basic.BasicSplitPaneDivider.setDividerSize(int)*

public void setDividerSize(int newSize)

Sets the size of the divider to newSize. That is the width if the splitpane is 
HORIZONTAL_SPLIT, or the height of VERTICAL_SPLIT. 


*javax.swing.plaf.basic.BasicSplitPaneDivider.setMouseOver(boolean)*

protected void setMouseOver(boolean mouseOver)

Sets whether or not the mouse is currently over the divider. 

    mouseOver - whether or not the mouse is currently over the divider 


