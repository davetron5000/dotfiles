*javax.swing.event.AncestorEvent* *AncestorEvent* An event reported to a child c

public class AncestorEvent
  extends    |java.awt.AWTEvent|

|javax.swing.event.AncestorEvent_Description|
|javax.swing.event.AncestorEvent_Fields|
|javax.swing.event.AncestorEvent_Constructors|
|javax.swing.event.AncestorEvent_Methods|

================================================================================

*javax.swing.event.AncestorEvent_Fields*
|int_javax.swing.event.AncestorEvent.ANCESTOR_ADDED|
|int_javax.swing.event.AncestorEvent.ANCESTOR_MOVED|
|int_javax.swing.event.AncestorEvent.ANCESTOR_REMOVED|

*javax.swing.event.AncestorEvent_Constructors*
|javax.swing.event.AncestorEvent(JComponent,int,Container,Container)|Constructs

*javax.swing.event.AncestorEvent_Methods*
|javax.swing.event.AncestorEvent.getAncestor()|Returns the ancestor that the ev
|javax.swing.event.AncestorEvent.getAncestorParent()|Returns the parent of the 
|javax.swing.event.AncestorEvent.getComponent()|Returns the component that the 

*javax.swing.event.AncestorEvent_Description*

An event reported to a child component that originated from an ancestor in the 
component hierarchy. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*int_javax.swing.event.AncestorEvent.ANCESTOR_ADDED*

An event reported to a child component that originated from an ancestor in the 
component hierarchy. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*int_javax.swing.event.AncestorEvent.ANCESTOR_MOVED*

An event reported to a child component that originated from an ancestor in the 
component hierarchy. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*int_javax.swing.event.AncestorEvent.ANCESTOR_REMOVED*

An event reported to a child component that originated from an ancestor in the 
component hierarchy. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 



*javax.swing.event.AncestorEvent(JComponent,int,Container,Container)*

public AncestorEvent(
  javax.swing.JComponent source,
  int id,
  java.awt.Container ancestor,
  java.awt.Container ancestorParent)

Constructs an AncestorEvent object to identify a change in an 
ancestor-component's display-status. 

    source - the JComponent that originated the event (typically this) 
    id - an int specifying {@link #ANCESTOR_ADDED}, {@link #ANCESTOR_REMOVED} or {@link 
       #ANCESTOR_MOVED} 
    ancestor - a Container object specifying the ancestor-component whose display-status 
       changed 
    ancestorParent - a Container object specifying the ancestor's parent 

*javax.swing.event.AncestorEvent.getAncestor()*

public |java.awt.Container| getAncestor()

Returns the ancestor that the event actually occurred on. 


*javax.swing.event.AncestorEvent.getAncestorParent()*

public |java.awt.Container| getAncestorParent()

Returns the parent of the ancestor the event actually occurred on. This is most 
interesting in an ANCESTOR_REMOVED event, as the ancestor may no longer be in 
the component hierarchy. 


*javax.swing.event.AncestorEvent.getComponent()*

public |javax.swing.JComponent| getComponent()

Returns the component that the listener was added to. 



