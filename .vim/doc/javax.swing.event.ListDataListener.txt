*javax.swing.event.ListDataListener* *ListDataListener* ListDataListener

public interface interface ListDataListener

  implements |java.util.EventListener|

|javax.swing.event.ListDataListener_Description|
|javax.swing.event.ListDataListener_Fields|
|javax.swing.event.ListDataListener_Constructors|
|javax.swing.event.ListDataListener_Methods|

================================================================================

*javax.swing.event.ListDataListener_Methods*
|javax.swing.event.ListDataListener.contentsChanged(ListDataEvent)|Sent when th
|javax.swing.event.ListDataListener.intervalAdded(ListDataEvent)|Sent after the
|javax.swing.event.ListDataListener.intervalRemoved(ListDataEvent)|Sent after t

*javax.swing.event.ListDataListener_Description*

ListDataListener 


*javax.swing.event.ListDataListener.contentsChanged(ListDataEvent)*

public void contentsChanged(javax.swing.event.ListDataEvent e)

Sent when the contents of the list has changed in a way that's too complex to 
characterize with the previous methods. For example, this is sent when an item 
has been replaced. Index0 and index1 bracket the change. 

    e - a ListDataEvent encapsulating the event information 

*javax.swing.event.ListDataListener.intervalAdded(ListDataEvent)*

public void intervalAdded(javax.swing.event.ListDataEvent e)

Sent after the indices in the index0,index1 interval have been inserted in the 
data model. The new interval includes both index0 and index1. 

    e - a ListDataEvent encapsulating the event information 

*javax.swing.event.ListDataListener.intervalRemoved(ListDataEvent)*

public void intervalRemoved(javax.swing.event.ListDataEvent e)

Sent after the indices in the index0,index1 interval have been removed from the 
data model. The interval includes both index0 and index1. 

    e - a ListDataEvent encapsulating the event information 


