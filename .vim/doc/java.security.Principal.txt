*java.security.Principal* *Principal* This interface represents the abstract not

public interface interface Principal


|java.security.Principal_Description|
|java.security.Principal_Fields|
|java.security.Principal_Constructors|
|java.security.Principal_Methods|

================================================================================

*java.security.Principal_Methods*
|java.security.Principal.equals(Object)|Compares this principal to the specifie
|java.security.Principal.getName()|Returns the name of this principal.
|java.security.Principal.hashCode()|Returns a hashcode for this principal.
|java.security.Principal.toString()|Returns a string representation of this pri

*java.security.Principal_Description*

This interface represents the abstract notion of a principal, which can be used 
to represent any entity, such as an individual, a corporation, and a login id. 


*java.security.Principal.equals(Object)*

public boolean equals(java.lang.Object another)

Compares this principal to the specified object. Returns true if the object 
passed in matches the principal represented by the implementation of this 
interface. 

    another - principal to compare with. 

    Returns: true if the principal passed in is the same as that encapsulated by this 
             principal, and false otherwise. 
*java.security.Principal.getName()*

public |java.lang.String| getName()

Returns the name of this principal. 


    Returns: the name of this principal. 
*java.security.Principal.hashCode()*

public int hashCode()

Returns a hashcode for this principal. 


    Returns: a hashcode for this principal. 
*java.security.Principal.toString()*

public |java.lang.String| toString()

Returns a string representation of this principal. 


    Returns: a string representation of this principal. 

