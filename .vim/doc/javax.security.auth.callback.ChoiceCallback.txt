*javax.security.auth.callback.ChoiceCallback* *ChoiceCallback*  Underlying secur

public class ChoiceCallback
  extends    |java.lang.Object|
  implements |javax.security.auth.callback.Callback|
             |java.io.Serializable|

|javax.security.auth.callback.ChoiceCallback_Description|
|javax.security.auth.callback.ChoiceCallback_Fields|
|javax.security.auth.callback.ChoiceCallback_Constructors|
|javax.security.auth.callback.ChoiceCallback_Methods|

================================================================================

*javax.security.auth.callback.ChoiceCallback_Constructors*
|javax.security.auth.callback.ChoiceCallback(String,String[],int,boolean)|Const

*javax.security.auth.callback.ChoiceCallback_Methods*
|javax.security.auth.callback.ChoiceCallback.allowMultipleSelections()|Get the 
|javax.security.auth.callback.ChoiceCallback.getChoices()|Get the list of choic
|javax.security.auth.callback.ChoiceCallback.getDefaultChoice()|Get the default
|javax.security.auth.callback.ChoiceCallback.getPrompt()|Get the prompt.
|javax.security.auth.callback.ChoiceCallback.getSelectedIndexes()|Get the selec
|javax.security.auth.callback.ChoiceCallback.setSelectedIndex(int)|Set the sele
|javax.security.auth.callback.ChoiceCallback.setSelectedIndexes(int[])|Set the 

*javax.security.auth.callback.ChoiceCallback_Description*

Underlying security services instantiate and pass a ChoiceCallback to the 
handle method of a CallbackHandler to display a list of choices and to retrieve 
the selected choice(s). 


*javax.security.auth.callback.ChoiceCallback(String,String[],int,boolean)*

public ChoiceCallback(
  java.lang.String prompt,
  java.lang.String[] choices,
  int defaultChoice,
  boolean multipleSelectionsAllowed)

Construct a ChoiceCallback with a prompt, a list of choices, a default choice, 
and a boolean specifying whether or not multiple selections from the list of 
choices are allowed. 



    prompt - the prompt used to describe the list of choices. 
    choices - the list of choices. 
    defaultChoice - the choice to be used as the default choice when the list of choices are 
       displayed. This value is represented as an index into the choices array. 
    multipleSelectionsAllowed - boolean specifying whether or not multiple selections can be made from the list 
       of choices. 

*javax.security.auth.callback.ChoiceCallback.allowMultipleSelections()*

public boolean allowMultipleSelections()

Get the boolean determining whether multiple selections from the choices list 
are allowed. 




    Returns: whether multiple selections are allowed. 
*javax.security.auth.callback.ChoiceCallback.getChoices()*

public |java.lang.String| getChoices()

Get the list of choices. 




    Returns: the list of choices. 
*javax.security.auth.callback.ChoiceCallback.getDefaultChoice()*

public int getDefaultChoice()

Get the defaultChoice. 




    Returns: the defaultChoice, represented as an index into the choices list. 
*javax.security.auth.callback.ChoiceCallback.getPrompt()*

public |java.lang.String| getPrompt()

Get the prompt. 




    Returns: 
*javax.security.auth.callback.ChoiceCallback.getSelectedIndexes()*

public int getSelectedIndexes()

Get the selected choices. 




    Returns: the selected choices, represented as indexes into the choices list. 
*javax.security.auth.callback.ChoiceCallback.setSelectedIndex(int)*

public void setSelectedIndex(int selection)

Set the selected choice. 



    selection - the selection represented as an index into the choices list. 

*javax.security.auth.callback.ChoiceCallback.setSelectedIndexes(int[])*

public void setSelectedIndexes(int[] selections)

Set the selected choices. 



    selections - the selections represented as indexes into the choices list. 


