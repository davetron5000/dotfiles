*java.io.WriteAbortedException* *WriteAbortedException* Signals that one of the ObjectStreamExceptions was thrown during a
 write operation.

public class WriteAbortedException
  extends    |java.io.ObjectStreamException|

|java.io.WriteAbortedException_Description|
|java.io.WriteAbortedException_Fields|
|java.io.WriteAbortedException_Constructors|
|java.io.WriteAbortedException_Methods|

====================================================================================================================================================================================

*java.io.WriteAbortedException_Fields*
|java.lang.Exception_java.io.WriteAbortedException.detail|

*java.io.WriteAbortedException_Constructors*
|java.io.WriteAbortedException(String,Exception)|Constructs a WriteAbortedException with a string describing  the exception and the exception causing the abort.

*java.io.WriteAbortedException_Methods*
|java.io.WriteAbortedException.getCause()|Returns the exception that terminated the operation (the cause).
|java.io.WriteAbortedException.getMessage()|Produce the message and include the message from the nested  exception, if there is one.

*java.io.WriteAbortedException_Description*

Signals that one of the ObjectStreamExceptions was thrown during a write operation. Thrown during a read operation when one of the ObjectStreamExceptions was thrown during a write 
operation. The exception that terminated the write can be found in the detail field. The stream is reset to it's initial state and all references to objects already deserialized 
are discarded. 

As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The "exception causing the abort" that is provided at 
construction time and accessed via the public (|java.io.WriteAbortedException|) field is now known as the cause, and may be accessed via the (|java.lang.Throwable|) method, as 
well as the aforementioned "legacy field." 



*java.lang.Exception_java.io.WriteAbortedException.detail*

Exception that was caught while writing the ObjectStream. 

This field predates the general-purpose exception chaining facility. The (|java.lang.Throwable|) method is now the preferred means of obtaining this information. 



*java.io.WriteAbortedException(String,Exception)*

public WriteAbortedException(
  java.lang.String s,
  java.lang.Exception ex)

Constructs a WriteAbortedException with a string describing the exception and the exception causing the abort. 

    s - String describing the exception. 
    ex - Exception causing the abort. 

*java.io.WriteAbortedException.getCause()*

public |java.lang.Throwable| getCause()

Returns the exception that terminated the operation (the cause). 



    Returns: the exception that terminated the operation (the cause), which may be null. 

*java.io.WriteAbortedException.getMessage()*

public |java.lang.String| getMessage()

Produce the message and include the message from the nested exception, if there is one. 




