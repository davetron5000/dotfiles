*org.omg.CORBA.ARG_INOUT* *ARG_INOUT* Signifies an argument used for both input 

public interface interface ARG_INOUT


|org.omg.CORBA.ARG_INOUT_Description|
|org.omg.CORBA.ARG_INOUT_Fields|
|org.omg.CORBA.ARG_INOUT_Constructors|
|org.omg.CORBA.ARG_INOUT_Methods|

================================================================================

*org.omg.CORBA.ARG_INOUT_Fields*
|int_org.omg.CORBA.ARG_INOUT.value|

*org.omg.CORBA.ARG_INOUT_Description*

Signifies an argument used for both input and output in an invocation, meaning 
that the argument is being passed from the client to the server and then back 
from the server to the client. ARG_INOUT.value is one of the possible values 
used to indicate the direction in which a parameter is being passed during a 
dynamic invocation using the Dynamic Invocation Interface (DII). 

The code fragment below shows a typical usage: 

ORB orb = ORB.init(args, null); org.omg.CORBA.NamedValue nv = 
orb.create_named_value( "argumentIdentifier", myAny, 
org.omg.CORBA.ARG_INOUT.value); 


*int_org.omg.CORBA.ARG_INOUT.value*

Signifies an argument used for both input and output in an invocation, meaning 
that the argument is being passed from the client to the server and then back 
from the server to the client. ARG_INOUT.value is one of the possible values 
used to indicate the direction in which a parameter is being passed during a 
dynamic invocation using the Dynamic Invocation Interface (DII). 

The code fragment below shows a typical usage: 

ORB orb = ORB.init(args, null); org.omg.CORBA.NamedValue nv = 
orb.create_named_value( "argumentIdentifier", myAny, 
org.omg.CORBA.ARG_INOUT.value); 



