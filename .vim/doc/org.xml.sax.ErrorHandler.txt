*org.xml.sax.ErrorHandler* *ErrorHandler* Basic interface for SAX error handlers

public interface interface ErrorHandler


|org.xml.sax.ErrorHandler_Description|
|org.xml.sax.ErrorHandler_Fields|
|org.xml.sax.ErrorHandler_Constructors|
|org.xml.sax.ErrorHandler_Methods|

================================================================================

*org.xml.sax.ErrorHandler_Methods*
|org.xml.sax.ErrorHandler.error(SAXParseException)|Receive notification of a re
|org.xml.sax.ErrorHandler.fatalError(SAXParseException)|Receive notification of
|org.xml.sax.ErrorHandler.warning(SAXParseException)|Receive notification of a 

*org.xml.sax.ErrorHandler_Description*

Basic interface for SAX error handlers. 

This module, both source code and documentation, is in the Public Domain, and 
comes with NO WARRANTY. See http://www.saxproject.org for further information. 

If a SAX application needs to implement customized error handling, it must 
implement this interface and then register an instance with the XML reader 
using the setErrorHandler(|org.xml.sax.XMLReader|) method. The parser will then 
report all errors and warnings through this interface. 

WARNING: If an application does not register an ErrorHandler, XML parsing 
errors will go unreported, except that SAXParseExceptions will be thrown for 
fatal errors. In order to detect validity errors, an ErrorHandler that does 
something with error()(|org.xml.sax.ErrorHandler|) calls must be registered. 

For XML processing errors, a SAX driver must use this interface in preference 
to throwing an exception: it is up to the application to decide whether to 
throw an exception for different types of errors and warnings. Note, however, 
that there is no requirement that the parser continue to report additional 
errors after a call to fatalError(|org.xml.sax.ErrorHandler|) . In other words, 
a SAX driver class may throw an exception after reporting any fatalError. Also 
parsers may throw appropriate exceptions for non-XML errors. For example, 
XMLReader.parse()(|org.xml.sax.XMLReader|) would throw an IOException for 
errors accessing entities or the document. 


*org.xml.sax.ErrorHandler.error(SAXParseException)*

public void error(org.xml.sax.SAXParseException exception)
  throws |org.xml.sax.SAXException|
         
Receive notification of a recoverable error. 

This corresponds to the definition of "error" in section 1.2 of the W3C XML 1.0 
Recommendation. For example, a validating parser would use this callback to 
report the violation of a validity constraint. The default behaviour is to take 
no action. 

The SAX parser must continue to provide normal parsing events after invoking 
this method: it should still be possible for the application to process the 
document through to the end. If the application cannot do so, then the parser 
should report a fatal error even if the XML recommendation does not require it 
to do so. 

Filters may use this method to report other, non-XML errors as well. 

    exception - The error information encapsulated in a SAX parse exception. 

*org.xml.sax.ErrorHandler.fatalError(SAXParseException)*

public void fatalError(org.xml.sax.SAXParseException exception)
  throws |org.xml.sax.SAXException|
         
Receive notification of a non-recoverable error. 

There is an apparent contradiction between the documentation for this method 
and the documentation for (|org.xml.sax.ContentHandler|) . Until this ambiguity 
is resolved in a future major release, clients should make no assumptions about 
whether endDocument() will or will not be invoked when the parser has reported 
a fatalError() or thrown an exception. 

This corresponds to the definition of "fatal error" in section 1.2 of the W3C 
XML 1.0 Recommendation. For example, a parser would use this callback to report 
the violation of a well-formedness constraint. 

The application must assume that the document is unusable after the parser has 
invoked this method, and should continue (if at all) only for the sake of 
collecting additional error messages: in fact, SAX parsers are free to stop 
reporting any other events once this method has been invoked. 

    exception - The error information encapsulated in a SAX parse exception. 

*org.xml.sax.ErrorHandler.warning(SAXParseException)*

public void warning(org.xml.sax.SAXParseException exception)
  throws |org.xml.sax.SAXException|
         
Receive notification of a warning. 

SAX parsers will use this method to report conditions that are not errors or 
fatal errors as defined by the XML recommendation. The default behaviour is to 
take no action. 

The SAX parser must continue to provide normal parsing events after invoking 
this method: it should still be possible for the application to process the 
document through to the end. 

Filters may use this method to report other, non-XML warnings as well. 

    exception - The warning information encapsulated in a SAX parse exception. 


