*java.util.concurrent.ThreadPoolExecutor.AbortPolicy* *ThreadPoolExecutor.AbortPolicy* 

public static class ThreadPoolExecutor.AbortPolicy
  extends    |java.lang.Object|
  implements |java.util.concurrent.RejectedExecutionHandler|

|java.util.concurrent.ThreadPoolExecutor.AbortPolicy_Description|
|java.util.concurrent.ThreadPoolExecutor.AbortPolicy_Fields|
|java.util.concurrent.ThreadPoolExecutor.AbortPolicy_Constructors|
|java.util.concurrent.ThreadPoolExecutor.AbortPolicy_Methods|

================================================================================

*java.util.concurrent.ThreadPoolExecutor.AbortPolicy_Constructors*
|java.util.concurrent.ThreadPoolExecutor.AbortPolicy()|Creates an AbortPolicy.

*java.util.concurrent.ThreadPoolExecutor.AbortPolicy_Methods*
|java.util.concurrent.ThreadPoolExecutor.AbortPolicy.rejectedExecution(Runnable,ThreadPoolExecutor)|

*java.util.concurrent.ThreadPoolExecutor.AbortPolicy_Description*

A handler for rejected tasks that throws a RejectedExecutionException. 


*java.util.concurrent.ThreadPoolExecutor.AbortPolicy()*

public ThreadPoolExecutor.AbortPolicy()

Creates an AbortPolicy. 


*java.util.concurrent.ThreadPoolExecutor.AbortPolicy.rejectedExecution(Runnable,ThreadPoolExecutor)*

public void rejectedExecution(
  java.lang.Runnable r,
  java.util.concurrent.ThreadPoolExecutor e)

Always throws RejectedExecutionException. 

    r - the runnable task requested to be executed 
    e - the executor attempting to execute this task 


