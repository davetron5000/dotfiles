*java.lang.CharSequence* *CharSequence* A CharSequence is a readable sequence of

public interface interface CharSequence


|java.lang.CharSequence_Description|
|java.lang.CharSequence_Fields|
|java.lang.CharSequence_Constructors|
|java.lang.CharSequence_Methods|

================================================================================

*java.lang.CharSequence_Methods*
|java.lang.CharSequence.charAt(int)|Returns the char value at the specified ind
|java.lang.CharSequence.length()|Returns the length of this character sequence.
|java.lang.CharSequence.subSequence(int,int)|Returns a new CharSequence that is
|java.lang.CharSequence.toString()|Returns a string containing the characters i

*java.lang.CharSequence_Description*

A CharSequence is a readable sequence of char values. This interface provides 
uniform, read-only access to many different kinds of char sequences. A char 
value represents a character in the Basic Multilingual Plane (BMP) or a 
surrogate. Refer to Unicode Character Representation for details. 

This interface does not refine the general contracts of the 
equals(|java.lang.Object|) and hashCode(|java.lang.Object|) methods. The result 
of comparing two objects that implement CharSequence is therefore, in general, 
undefined. Each object may be implemented by a different class, and there is no 
guarantee that each class will be capable of testing its instances for equality 
with those of the other. It is therefore inappropriate to use arbitrary 
CharSequence instances as elements in a set or as keys in a map. 


*java.lang.CharSequence.charAt(int)*

public char charAt(int index)

Returns the char value at the specified index. An index ranges from zero to 
length() - 1. The first char value of the sequence is at index zero, the next 
at index one, and so on, as for array indexing. 

If the char value specified by the index is a surrogate, the surrogate value is 
returned. 

    index - the index of the char value to be returned 

    Returns: the specified char value 
*java.lang.CharSequence.length()*

public int length()

Returns the length of this character sequence. The length is the number of 
16-bit chars in the sequence. 


    Returns: the number of chars in this sequence 
*java.lang.CharSequence.subSequence(int,int)*

public |java.lang.CharSequence| subSequence(
  int start,
  int end)

Returns a new CharSequence that is a subsequence of this sequence. The 
subsequence starts with the char value at the specified index and ends with the 
char value at index end - 1. The length (in chars) of the returned sequence is 
end - start, so if start == end then an empty sequence is returned. 

    start - the start index, inclusive 
    end - the end index, exclusive 

    Returns: the specified subsequence 
*java.lang.CharSequence.toString()*

public |java.lang.String| toString()

Returns a string containing the characters in this sequence in the same order 
as this sequence. The length of the string will be the length of this sequence. 


    Returns: a string consisting of exactly this sequence of characters 

