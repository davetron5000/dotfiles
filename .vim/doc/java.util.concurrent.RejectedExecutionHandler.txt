*java.util.concurrent.RejectedExecutionHandler* *RejectedExecutionHandler* A han

public interface interface RejectedExecutionHandler


|java.util.concurrent.RejectedExecutionHandler_Description|
|java.util.concurrent.RejectedExecutionHandler_Fields|
|java.util.concurrent.RejectedExecutionHandler_Constructors|
|java.util.concurrent.RejectedExecutionHandler_Methods|

================================================================================

*java.util.concurrent.RejectedExecutionHandler_Methods*
|java.util.concurrent.RejectedExecutionHandler.rejectedExecution(Runnable,ThreadPoolExecutor)|

*java.util.concurrent.RejectedExecutionHandler_Description*

A handler for tasks that cannot be executed by a 
(|java.util.concurrent.ThreadPoolExecutor|) . 


*java.util.concurrent.RejectedExecutionHandler.rejectedExecution(Runnable,ThreadPoolExecutor)*

public void rejectedExecution(
  java.lang.Runnable r,
  java.util.concurrent.ThreadPoolExecutor executor)

Method that may be invoked by a (|java.util.concurrent.ThreadPoolExecutor|) 
when execute cannot accept a task. This may occur when no more threads or queue 
slots are available because their bounds would be exceeded, or upon shutdown of 
the Executor. 

In the absence other alternatives, the method may throw an unchecked 
(|java.util.concurrent.RejectedExecutionException|) , which will be propagated 
to the caller of execute. 

    r - the runnable task requested to be executed 
    executor - the executor attempting to execute this task 


