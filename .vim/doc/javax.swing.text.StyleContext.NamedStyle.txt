*javax.swing.text.StyleContext.NamedStyle* *StyleContext.NamedStyle* A collectio

public class StyleContext.NamedStyle
  extends    |java.lang.Object|
  implements |javax.swing.text.Style|
             |java.io.Serializable|

|javax.swing.text.StyleContext.NamedStyle_Description|
|javax.swing.text.StyleContext.NamedStyle_Fields|
|javax.swing.text.StyleContext.NamedStyle_Constructors|
|javax.swing.text.StyleContext.NamedStyle_Methods|

================================================================================

*javax.swing.text.StyleContext.NamedStyle_Fields*
|javax.swing.event.ChangeEvent_javax.swing.text.StyleContext.NamedStyle.changeEvent|
|javax.swing.event.EventListenerList_javax.swing.text.StyleContext.NamedStyle.listenerList|

*javax.swing.text.StyleContext.NamedStyle_Constructors*
|javax.swing.text.StyleContext.NamedStyle()|Creates a new named style, with a n
|javax.swing.text.StyleContext.NamedStyle(String,Style)|Creates a new named sty
|javax.swing.text.StyleContext.NamedStyle(Style)|Creates a new named style.

*javax.swing.text.StyleContext.NamedStyle_Methods*
|javax.swing.text.StyleContext.NamedStyle.addAttribute(Object,Object)|Adds an a
|javax.swing.text.StyleContext.NamedStyle.addAttributes(AttributeSet)|Adds a se
|javax.swing.text.StyleContext.NamedStyle.addChangeListener(ChangeListener)|Add
|javax.swing.text.StyleContext.NamedStyle.containsAttribute(Object,Object)|Chec
|javax.swing.text.StyleContext.NamedStyle.containsAttributes(AttributeSet)|Chec
|javax.swing.text.StyleContext.NamedStyle.copyAttributes()|Copies a set of attr
|javax.swing.text.StyleContext.NamedStyle.fireStateChanged()|Notifies all liste
|javax.swing.text.StyleContext.NamedStyle.getAttribute(Object)|Gets the value o
|javax.swing.text.StyleContext.NamedStyle.getAttributeCount()|Gets the number o
|javax.swing.text.StyleContext.NamedStyle.getAttributeNames()|Gets the names of
|javax.swing.text.StyleContext.NamedStyle.getChangeListeners()|Returns an array
|javax.swing.text.StyleContext.NamedStyle.getListeners(Class)|Return an array o
|javax.swing.text.StyleContext.NamedStyle.getName()|Fetches the name of the sty
|javax.swing.text.StyleContext.NamedStyle.getResolveParent()|Gets attributes fr
|javax.swing.text.StyleContext.NamedStyle.isDefined(Object)|Checks whether a gi
|javax.swing.text.StyleContext.NamedStyle.isEqual(AttributeSet)|Checks whether 
|javax.swing.text.StyleContext.NamedStyle.removeAttribute(Object)|Removes an at
|javax.swing.text.StyleContext.NamedStyle.removeAttributes(AttributeSet)|Remove
|javax.swing.text.StyleContext.NamedStyle.removeAttributes(Enumeration)|Removes
|javax.swing.text.StyleContext.NamedStyle.removeChangeListener(ChangeListener)|
|javax.swing.text.StyleContext.NamedStyle.setName(String)|Changes the name of t
|javax.swing.text.StyleContext.NamedStyle.setResolveParent(AttributeSet)|Sets t
|javax.swing.text.StyleContext.NamedStyle.toString()|Converts the style to a st

*javax.swing.text.StyleContext.NamedStyle_Description*

A collection of attributes, typically used to represent character and paragraph 
styles. This is an implementation of MutableAttributeSet that can be observed 
if desired. These styles will take advantage of immutability while the sets are 
small enough, and may be substantially more efficient than something like 
SimpleAttributeSet. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.event.ChangeEvent_javax.swing.text.StyleContext.NamedStyle.changeEvent*

A collection of attributes, typically used to represent character and paragraph 
styles. This is an implementation of MutableAttributeSet that can be observed 
if desired. These styles will take advantage of immutability while the sets are 
small enough, and may be substantially more efficient than something like 
SimpleAttributeSet. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.event.EventListenerList_javax.swing.text.StyleContext.NamedStyle.listenerList*

A collection of attributes, typically used to represent character and paragraph 
styles. This is an implementation of MutableAttributeSet that can be observed 
if desired. These styles will take advantage of immutability while the sets are 
small enough, and may be substantially more efficient than something like 
SimpleAttributeSet. 

Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 



*javax.swing.text.StyleContext.NamedStyle()*

public StyleContext.NamedStyle()

Creates a new named style, with a null name and parent. 


*javax.swing.text.StyleContext.NamedStyle(String,Style)*

public StyleContext.NamedStyle(
  java.lang.String name,
  javax.swing.text.Style parent)

Creates a new named style. 

    name - the style name, null for unnamed 
    parent - the parent style, null if none 

*javax.swing.text.StyleContext.NamedStyle(Style)*

public StyleContext.NamedStyle(javax.swing.text.Style parent)

Creates a new named style. 

    parent - the parent style, null if none 

*javax.swing.text.StyleContext.NamedStyle.addAttribute(Object,Object)*

public void addAttribute(
  java.lang.Object name,
  java.lang.Object value)

Adds an attribute. 

    name - the non-null attribute name 
    value - the attribute value 

*javax.swing.text.StyleContext.NamedStyle.addAttributes(AttributeSet)*

public void addAttributes(javax.swing.text.AttributeSet attr)

Adds a set of attributes to the element. 

    attr - the attributes to add 

*javax.swing.text.StyleContext.NamedStyle.addChangeListener(ChangeListener)*

public void addChangeListener(javax.swing.event.ChangeListener l)

Adds a change listener. 

    l - the change listener 

*javax.swing.text.StyleContext.NamedStyle.containsAttribute(Object,Object)*

public boolean containsAttribute(
  java.lang.Object name,
  java.lang.Object value)

Checks whether a given attribute name/value is defined. 

    name - the non-null attribute name 
    value - the attribute value 

    Returns: true if the name/value is defined 
*javax.swing.text.StyleContext.NamedStyle.containsAttributes(AttributeSet)*

public boolean containsAttributes(javax.swing.text.AttributeSet attrs)

Checks whether the element contains all the attributes. 

    attrs - the attributes to check 

    Returns: true if the element contains all the attributes 
*javax.swing.text.StyleContext.NamedStyle.copyAttributes()*

public |javax.swing.text.AttributeSet| copyAttributes()

Copies a set of attributes. 


    Returns: 
*javax.swing.text.StyleContext.NamedStyle.fireStateChanged()*

protected void fireStateChanged()

Notifies all listeners that have registered interest for notification on this 
event type. The event instance is lazily created using the parameters passed 
into the fire method. 


*javax.swing.text.StyleContext.NamedStyle.getAttribute(Object)*

public |java.lang.Object| getAttribute(java.lang.Object attrName)

Gets the value of an attribute. 

    attrName - the non-null attribute name 

    Returns: the attribute value 
*javax.swing.text.StyleContext.NamedStyle.getAttributeCount()*

public int getAttributeCount()

Gets the number of attributes that are defined. 


    Returns: the number of attributes >= 0 
*javax.swing.text.StyleContext.NamedStyle.getAttributeNames()*

public |java.util.Enumeration| getAttributeNames()

Gets the names of all attributes. 


    Returns: the attribute names as an enumeration 
*javax.swing.text.StyleContext.NamedStyle.getChangeListeners()*

public |javax.swing.event.ChangeListener| getChangeListeners()

Returns an array of all the ChangeListeners added to this NamedStyle with 
addChangeListener(). 


    Returns: all of the ChangeListeners added or an empty array if no listeners have been 
             added 
*javax.swing.text.StyleContext.NamedStyle.getListeners(Class)*

public |java.util.EventListener| getListeners(java.lang.Class listenerType)

Return an array of all the listeners of the given type that were added to this 
model. 


    Returns: all of the objects receiving listenerType notifications from this model 
*javax.swing.text.StyleContext.NamedStyle.getName()*

public |java.lang.String| getName()

Fetches the name of the style. A style is not required to be named, so null is 
returned if there is no name associated with the style. 


    Returns: 
*javax.swing.text.StyleContext.NamedStyle.getResolveParent()*

public |javax.swing.text.AttributeSet| getResolveParent()

Gets attributes from the parent. If not overriden, the resolving parent 
defaults to the parent element. 


    Returns: the attributes from the parent 
*javax.swing.text.StyleContext.NamedStyle.isDefined(Object)*

public boolean isDefined(java.lang.Object attrName)

Checks whether a given attribute is defined. 

    attrName - the non-null attribute name 

    Returns: true if the attribute is defined 
*javax.swing.text.StyleContext.NamedStyle.isEqual(AttributeSet)*

public boolean isEqual(javax.swing.text.AttributeSet attr)

Checks whether two attribute sets are equal. 

    attr - the attribute set to check against 

    Returns: true if the same 
*javax.swing.text.StyleContext.NamedStyle.removeAttribute(Object)*

public void removeAttribute(java.lang.Object name)

Removes an attribute from the set. 

    name - the non-null attribute name 

*javax.swing.text.StyleContext.NamedStyle.removeAttributes(AttributeSet)*

public void removeAttributes(javax.swing.text.AttributeSet attrs)

Removes a set of attributes for the element. 

    attrs - the attributes 

*javax.swing.text.StyleContext.NamedStyle.removeAttributes(Enumeration)*

public void removeAttributes(java.util.Enumeration names)

Removes a set of attributes for the element. 

    names - the attribute names 

*javax.swing.text.StyleContext.NamedStyle.removeChangeListener(ChangeListener)*

public void removeChangeListener(javax.swing.event.ChangeListener l)

Removes a change listener. 

    l - the change listener 

*javax.swing.text.StyleContext.NamedStyle.setName(String)*

public void setName(java.lang.String name)

Changes the name of the style. Does nothing with a null name. 

    name - the new name 

*javax.swing.text.StyleContext.NamedStyle.setResolveParent(AttributeSet)*

public void setResolveParent(javax.swing.text.AttributeSet parent)

Sets the resolving parent. 

    parent - the parent, null if none 

*javax.swing.text.StyleContext.NamedStyle.toString()*

public |java.lang.String| toString()

Converts the style to a string. 


    Returns: 

