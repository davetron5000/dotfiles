*org.omg.CORBA.portable.Delegate* *Delegate* Specifies a portable API for ORB-ve

public abstract class Delegate
  extends    |java.lang.Object|

|org.omg.CORBA.portable.Delegate_Description|
|org.omg.CORBA.portable.Delegate_Fields|
|org.omg.CORBA.portable.Delegate_Constructors|
|org.omg.CORBA.portable.Delegate_Methods|

================================================================================

*org.omg.CORBA.portable.Delegate_Constructors*
|org.omg.CORBA.portable.Delegate()|

*org.omg.CORBA.portable.Delegate_Methods*
|org.omg.CORBA.portable.Delegate.create_request(Object,Context,String,NVList,NamedValue)|
|org.omg.CORBA.portable.Delegate.create_request(Object,Context,String,NVList,NamedValue,ExceptionList,ContextList)|
|org.omg.CORBA.portable.Delegate.duplicate(Object)|Returns a duplicate of the o
|org.omg.CORBA.portable.Delegate.equals(Object,Object)|Provides the implementat
|org.omg.CORBA.portable.Delegate.get_domain_managers(Object)|Retrieves the Doma
|org.omg.CORBA.portable.Delegate.get_interface_def(Object)|Return an InterfaceD
|org.omg.CORBA.portable.Delegate.get_policy(Object,int)|Returns the Policy obje
|org.omg.CORBA.portable.Delegate.hash(Object,int)|Returns an ORB-internal ident
|org.omg.CORBA.portable.Delegate.hashCode(Object)|Provides the implementation t
|org.omg.CORBA.portable.Delegate.invoke(Object,OutputStream)|invoke is called b
|org.omg.CORBA.portable.Delegate.is_a(Object,String)|Checks if the object refer
|org.omg.CORBA.portable.Delegate.is_equivalent(Object,Object)|Determines if the
|org.omg.CORBA.portable.Delegate.is_local(Object)|Returns true if this object i
|org.omg.CORBA.portable.Delegate.non_existent(Object)|Determines whether the se
|org.omg.CORBA.portable.Delegate.orb(Object)|Provides a reference to the orb as
|org.omg.CORBA.portable.Delegate.release(Object)|Releases resources associated 
|org.omg.CORBA.portable.Delegate.releaseReply(Object,InputStream)|releaseReply 
|org.omg.CORBA.portable.Delegate.request(Object,String)|Creates a Request insta
|org.omg.CORBA.portable.Delegate.request(Object,String,boolean)|request is call
|org.omg.CORBA.portable.Delegate.servant_postinvoke(Object,ServantObject)|serva
|org.omg.CORBA.portable.Delegate.servant_preinvoke(Object,String,Class)|Returns
|org.omg.CORBA.portable.Delegate.set_policy_override(Object,Policy[],SetOverrideType)|
|org.omg.CORBA.portable.Delegate.toString(Object)|Provides the implementation t

*org.omg.CORBA.portable.Delegate_Description*

Specifies a portable API for ORB-vendor-specific implementation of the 
org.omg.CORBA.Object methods. 

Each stub (proxy) contains a delegate object, to which all org.omg.CORBA.Object 
methods are forwarded. This allows a stub generated by one vendor's ORB to work 
with the delegate from another vendor's ORB. 


*org.omg.CORBA.portable.Delegate()*

public Delegate()




*org.omg.CORBA.portable.Delegate.create_request(Object,Context,String,NVList,NamedValue)*

public abstract |org.omg.CORBA.Request| create_request(
  org.omg.CORBA.Object obj,
  org.omg.CORBA.Context ctx,
  java.lang.String operation,
  org.omg.CORBA.NVList arg_list,
  org.omg.CORBA.NamedValue result)

Creates a Request instance for use in the Dynamic Invocation Interface. 

    obj - The object reference which delegated to this delegate. 
    ctx - The context to be used. 
    operation - The name of the operation to be invoked. 
    arg_list - The arguments to the operation in the form of an NVList. 
    result - A container for the result as a NamedValue. 

    Returns: The created Request object. 
*org.omg.CORBA.portable.Delegate.create_request(Object,Context,String,NVList,NamedValue,ExceptionList,ContextList)*

public abstract |org.omg.CORBA.Request| create_request(
  org.omg.CORBA.Object obj,
  org.omg.CORBA.Context ctx,
  java.lang.String operation,
  org.omg.CORBA.NVList arg_list,
  org.omg.CORBA.NamedValue result,
  org.omg.CORBA.ExceptionList exclist,
  org.omg.CORBA.ContextList ctxlist)

Creates a Request instance for use in the Dynamic Invocation Interface. 

    obj - The object reference which delegated to this delegate. 
    ctx - The context to be used. 
    operation - The name of the operation to be invoked. 
    arg_list - The arguments to the operation in the form of an NVList. 
    result - A container for the result as a NamedValue. 
    exclist - A list of possible exceptions the operation can throw. 
    ctxlist - A list of context strings that need to be resolved and sent with the Request. 

    Returns: The created Request object. 
*org.omg.CORBA.portable.Delegate.duplicate(Object)*

public abstract |org.omg.CORBA.Object| duplicate(org.omg.CORBA.Object obj)

Returns a duplicate of the object reference provided. 

    obj - The object reference whose duplicate needs to be returned 

    Returns: the duplicate object reference 
*org.omg.CORBA.portable.Delegate.equals(Object,Object)*

public boolean equals(
  org.omg.CORBA.Object self,
  java.lang.Object obj)

Provides the implementation to override the equals(java.lang.Object obj) method 
of the delegating CORBA object. 

    self - the object reference that delegated to this delegate 
    obj - the Object with which to compare 

    Returns: true if obj equals self; false otherwise 
*org.omg.CORBA.portable.Delegate.get_domain_managers(Object)*

public |org.omg.CORBA.DomainManager| get_domain_managers(org.omg.CORBA.Object self)

Retrieves the DomainManagers of this object. This allows administration 
services (and applications) to retrieve the domain managers, and hence the 
security and other policies applicable to individual objects that are members 
of the domain. 

    self - The object reference which delegated to this delegate. 

    Returns: The list of immediately enclosing domain managers of this object. At least one 
             domain manager is always returned in the list since by default 
             each object is associated with at least one domain manager at 
             creation. 
*org.omg.CORBA.portable.Delegate.get_interface_def(Object)*

public abstract |org.omg.CORBA.Object| get_interface_def(org.omg.CORBA.Object self)

Return an InterfaceDef for the object reference provided. 

    self - The object reference whose InterfaceDef needs to be returned 

    Returns: the InterfaceDef 
*org.omg.CORBA.portable.Delegate.get_policy(Object,int)*

public |org.omg.CORBA.Policy| get_policy(
  org.omg.CORBA.Object self,
  int policy_type)

Returns the Policy object of the specified type which applies to this object. 

    self - The object reference which delegated to this delegate. 
    policy_type - The type of policy to be obtained. 

    Returns: A Policy object of the type specified by the policy_type parameter. 
*org.omg.CORBA.portable.Delegate.hash(Object,int)*

public abstract int hash(
  org.omg.CORBA.Object obj,
  int max)

Returns an ORB-internal identifier (hashcode) for this object reference. 

    obj - The object reference which delegated to this delegate. 
    max - specifies an upper bound on the hash value returned by the ORB. 

    Returns: ORB-internal hash identifier for object reference 
*org.omg.CORBA.portable.Delegate.hashCode(Object)*

public int hashCode(org.omg.CORBA.Object self)

Provides the implementation to override the hashCode() method of the delegating 
CORBA object. 

    self - the object reference that delegated to this delegate 

    Returns: an int that represents the hashcode for the object reference that delegated to 
             this Delegate object 
*org.omg.CORBA.portable.Delegate.invoke(Object,OutputStream)*

public |org.omg.CORBA.portable.InputStream| invoke(
  org.omg.CORBA.Object self,
  org.omg.CORBA.portable.OutputStream output)
  throws |org.omg.CORBA.portable.ApplicationException|
         |org.omg.CORBA.portable.RemarshalException|
         
invoke is called by a stub to invoke an operation. The stub provides an 
OutputStream that was previously returned by a request() call. invoke returns 
an InputStream which contains the marshaled reply. If an exception occurs, 
invoke may throw an ApplicationException object which contains an InputStream 
from which the user exception state may be unmarshaled. 

    self - The object reference which delegated to this delegate. 
    output - the OutputStream which contains marshaled arguments 

    Returns: input the InputStream from which reply parameters can be unmarshaled. 
*org.omg.CORBA.portable.Delegate.is_a(Object,String)*

public abstract boolean is_a(
  org.omg.CORBA.Object obj,
  java.lang.String repository_id)

Checks if the object reference is an instance of the given interface. 

    obj - The object reference to be checked. 
    repository_id - The repository identifier of the interface to check against. 

    Returns: true if the object reference supports the interface 
*org.omg.CORBA.portable.Delegate.is_equivalent(Object,Object)*

public abstract boolean is_equivalent(
  org.omg.CORBA.Object obj,
  org.omg.CORBA.Object other)

Determines if the two object references are equivalent. 

    obj - The object reference which delegated to this delegate. 
    other - The object reference to check equivalence against. 

    Returns: true if the objects are CORBA-equivalent. 
*org.omg.CORBA.portable.Delegate.is_local(Object)*

public boolean is_local(org.omg.CORBA.Object self)

Returns true if this object is implemented by a local servant. 

    self - The object reference which delegated to this delegate. 

    Returns: true only if the servant incarnating this object is located in this Java VM. 
             Return false if the servant is not local or the ORB does not 
             support local stubs for this particular servant. The default 
             behavior of is_local() is to return false. 
*org.omg.CORBA.portable.Delegate.non_existent(Object)*

public abstract boolean non_existent(org.omg.CORBA.Object obj)

Determines whether the server object for the object reference has been 
destroyed. 

    obj - The object reference which delegated to this delegate. 

    Returns: true if the ORB knows authoritatively that the server object does not exist, 
             false otherwise 
*org.omg.CORBA.portable.Delegate.orb(Object)*

public |org.omg.CORBA.ORB| orb(org.omg.CORBA.Object obj)

Provides a reference to the orb associated with its parameter. 

    obj - the object reference which delegated to this delegate. 

    Returns: the associated orb. 
*org.omg.CORBA.portable.Delegate.release(Object)*

public abstract void release(org.omg.CORBA.Object obj)

Releases resources associated with the object reference provided. 

    obj - The object reference whose resources need to be released 

*org.omg.CORBA.portable.Delegate.releaseReply(Object,InputStream)*

public void releaseReply(
  org.omg.CORBA.Object self,
  org.omg.CORBA.portable.InputStream input)

releaseReply may optionally be called by a stub to release a reply stream back 
to the ORB when the unmarshaling has completed. The stub passes the InputStream 
returned by invoke() or ApplicationException.getInputStream(). A null value may 
also be passed to releaseReply, in which case the method is a noop. 

    self - The object reference which delegated to this delegate. 
    input - the InputStream returned from invoke(). 

*org.omg.CORBA.portable.Delegate.request(Object,String)*

public abstract |org.omg.CORBA.Request| request(
  org.omg.CORBA.Object obj,
  java.lang.String operation)

Creates a Request instance for use in the Dynamic Invocation Interface. 

    obj - The object reference which delegated to this delegate. 
    operation - The name of the operation to be invoked using the Request instance. 

    Returns: the created Request instance 
*org.omg.CORBA.portable.Delegate.request(Object,String,boolean)*

public |org.omg.CORBA.portable.OutputStream| request(
  org.omg.CORBA.Object self,
  java.lang.String operation,
  boolean responseExpected)

request is called by a stub to obtain an OutputStream for marshaling arguments. 
The stub must supply the operation name, and indicate if a response is expected 
(i.e is this a oneway call). 

    self - The object reference which delegated to this delegate. 
    operation - a string containing the operation name. The operation name corresponds to the 
       operation name as it would be encoded in a GIOP request. 
    responseExpected - false if the operation is a one way operation, and true otherwise. 

    Returns: OutputStream the OutputStream into which request arguments can be marshaled. 
*org.omg.CORBA.portable.Delegate.servant_postinvoke(Object,ServantObject)*

public void servant_postinvoke(
  org.omg.CORBA.Object self,
  org.omg.CORBA.portable.ServantObject servant)

servant_postinvoke() is invoked by the local stub after the operation has been 
invoked on the local servant. This method must be called if servant_preinvoke() 
returned a non-null value, even if an exception was thrown by the servant's 
method. For this reason, the call to servant_postinvoke() should be placed in a 
Java finally clause. 

    self - The object reference which delegated to this delegate. 
    servant - the instance of the ServantObject returned from the servant_preinvoke() method. 

*org.omg.CORBA.portable.Delegate.servant_preinvoke(Object,String,Class)*

public |org.omg.CORBA.portable.ServantObject| servant_preinvoke(
  org.omg.CORBA.Object self,
  java.lang.String operation,
  java.lang.Class expectedType)

Returns a Java reference to the servant which should be used for this request. 
servant_preinvoke() is invoked by a local stub. If a ServantObject object is 
returned, then its servant field has been set to an object of the expected type 
(Note: the object may or may not be the actual servant instance). The local 
stub may cast the servant field to the expected type, and then invoke the 
operation directly. The ServantRequest object is valid for only one invocation, 
and cannot be used for more than one invocation. 

    self - The object reference which delegated to this delegate. 
    operation - a string containing the operation name. The operation name corresponds to the 
       operation name as it would be encoded in a GIOP request. 
    expectedType - a Class object representing the expected type of the servant. The expected type 
       is the Class object associated with the operations class of the stub's 
       interface (e.g. A stub for an interface Foo, would pass the Class object 
       for the FooOperations interface). 

    Returns: a ServantObject object. The method may return a null value if it does not wish 
             to support this optimization (e.g. due to security, transactions, 
             etc). The method must return null if the servant is not of the 
             expected type. 
*org.omg.CORBA.portable.Delegate.set_policy_override(Object,Policy[],SetOverrideType)*

public |org.omg.CORBA.Object| set_policy_override(
  org.omg.CORBA.Object self,
  org.omg.CORBA.Policy[] policies,
  org.omg.CORBA.SetOverrideType set_add)

Associates the policies passed in with a newly created object reference that it 
returns. Only certain policies that pertain to the invocation of an operation 
at the client end can be overridden using this operation. Attempts to override 
any other policy will result in the raising of the CORBA::NO_PERMISSION 
exception. 

    self - The object reference which delegated to this delegate. 
    policies - A sequence of references to Policy objects. 
    set_add - Indicates whether these policies should be added onto any otheroverrides that 
       already exist (ADD_OVERRIDE) in the object reference, or they should be 
       added to a clean override free object reference (SET_OVERRIDE). 

    Returns: A new object reference with the new policies associated with it. 
*org.omg.CORBA.portable.Delegate.toString(Object)*

public |java.lang.String| toString(org.omg.CORBA.Object self)

Provides the implementation to override the toString() method of the delegating 
CORBA object. 

    self - the object reference that delegated to this delegate 

    Returns: a String object that represents the object reference that delegated to this 
             Delegate object 

