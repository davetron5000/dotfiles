*javax.print.attribute.Attribute* *Attribute* Interface Attribute is the base interface implemented by any and every 
 printing attribute class to indicate that the class represent

public interface interface Attribute

  implements |java.io.Serializable|

|javax.print.attribute.Attribute_Description|
|javax.print.attribute.Attribute_Fields|
|javax.print.attribute.Attribute_Constructors|
|javax.print.attribute.Attribute_Methods|

====================================================================================================================================================================================

*javax.print.attribute.Attribute_Methods*
|javax.print.attribute.Attribute.getCategory()|Get the printing attribute class which is to be used as the "category"   for this printing attribute value when it is added to an at
|javax.print.attribute.Attribute.getName()|Get the name of the category of which this attribute value is an   instance.

*javax.print.attribute.Attribute_Description*

Interface Attribute is the base interface implemented by any and every printing attribute class to indicate that the class represents a printing attribute. All printing attributes 
are serializable. 



*javax.print.attribute.Attribute.getCategory()*

public |java.lang.Class|<? extends javax.print.attribute.Attribute> getCategory()

Get the printing attribute class which is to be used as the "category" for this printing attribute value when it is added to an attribute set. 



    Returns: Printing attribute class (category), an instance of class {@link java.lang.Class java.lang.Class}. 

*javax.print.attribute.Attribute.getName()*

public |java.lang.String| getName()

Get the name of the category of which this attribute value is an instance. 

Note: This method is intended to provide a default, nonlocalized string for the attribute's category. If two attribute objects return the same category from the getCategory() 
method, they should return the same name from the getName() method. 



    Returns: Attribute category name. 


