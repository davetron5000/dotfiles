*javax.accessibility.AccessibleKeyBinding* *AccessibleKeyBinding* The AccessibleKeyBinding interface should be supported by any object
 that has a keyboard bindings such as a keybo

public interface interface AccessibleKeyBinding


|javax.accessibility.AccessibleKeyBinding_Description|
|javax.accessibility.AccessibleKeyBinding_Fields|
|javax.accessibility.AccessibleKeyBinding_Constructors|
|javax.accessibility.AccessibleKeyBinding_Methods|

====================================================================================================================================================================================

*javax.accessibility.AccessibleKeyBinding_Methods*
|javax.accessibility.AccessibleKeyBinding.getAccessibleKeyBinding(int)|Returns a key binding for this object.
|javax.accessibility.AccessibleKeyBinding.getAccessibleKeyBindingCount()|Returns the number of key bindings for this object

*javax.accessibility.AccessibleKeyBinding_Description*

The AccessibleKeyBinding interface should be supported by any object that has a keyboard bindings such as a keyboard mnemonic and/or keyboard shortcut which can be used to select 
the object. This interface provides the standard mechanism for an assistive technology to determine the key bindings which exist for this object. Any object that has such key 
bindings should support this interface. Applications can determine if an object supports the AccessibleKeyBinding interface by first obtaining its AccessibleContext (see @link 
Accessible} and then calling the (|javax.accessibility.AccessibleContext|) method. If the return value is not null, the object supports this interface. 



*javax.accessibility.AccessibleKeyBinding.getAccessibleKeyBinding(int)*

public |java.lang.Object| getAccessibleKeyBinding(int i)

Returns a key binding for this object. The value returned is an java.lang.Object which must be cast to appropriate type depending on the underlying implementation of the key. For 
example, if the Object returned is a javax.swing.KeyStroke, the user of this method should do the following: 

Component c = AccessibleContext ac = c.getAccessibleContext(); AccessibleKeyBinding akb = ac.getAccessibleKeyBinding(); for (int i = 0; i } } 


    i - zero-based index of the key bindings 

    Returns: a javax.lang.Object which specifies the key binding 

*javax.accessibility.AccessibleKeyBinding.getAccessibleKeyBindingCount()*

public int getAccessibleKeyBindingCount()

Returns the number of key bindings for this object 



    Returns: the zero-based number of key bindings for this object 


