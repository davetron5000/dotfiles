*java.io.BufferedOutputStream* *BufferedOutputStream* The class implements a buffered output stream.

public class BufferedOutputStream
  extends    |java.io.FilterOutputStream|

|java.io.BufferedOutputStream_Description|
|java.io.BufferedOutputStream_Fields|
|java.io.BufferedOutputStream_Constructors|
|java.io.BufferedOutputStream_Methods|

====================================================================================================================================================================================

*java.io.BufferedOutputStream_Fields*
|byte[]_java.io.BufferedOutputStream.buf|
|int_java.io.BufferedOutputStream.count|

*java.io.BufferedOutputStream_Constructors*
|java.io.BufferedOutputStream(OutputStream)|Creates a new buffered output stream to write data to the  specified underlying output stream.
|java.io.BufferedOutputStream(OutputStream,int)|Creates a new buffered output stream to write data to the   specified underlying output stream with the specified buffer   size.

*java.io.BufferedOutputStream_Methods*
|java.io.BufferedOutputStream.flush()|Flushes this buffered output stream.
|java.io.BufferedOutputStream.write(byte[],int,int)|Writes len bytes from the specified byte array   starting at offset off to this buffered output stream.
|java.io.BufferedOutputStream.write(int)|Writes the specified byte to this buffered output stream.

*java.io.BufferedOutputStream_Description*

The class implements a buffered output stream. By setting up such an output stream, an application can write bytes to the underlying output stream without necessarily causing a 
call to the underlying system for each byte written. 



*byte[]_java.io.BufferedOutputStream.buf*

The internal buffer where data is stored. 


*int_java.io.BufferedOutputStream.count*

The number of valid bytes in the buffer. This value is always in the range 0 through buf.length; elements buf[0] through buf[count-1] contain valid byte data. 



*java.io.BufferedOutputStream(OutputStream)*

public BufferedOutputStream(java.io.OutputStream out)

Creates a new buffered output stream to write data to the specified underlying output stream. 

    out - the underlying output stream. 

*java.io.BufferedOutputStream(OutputStream,int)*

public BufferedOutputStream(
  java.io.OutputStream out,
  int size)

Creates a new buffered output stream to write data to the specified underlying output stream with the specified buffer size. 

    out - the underlying output stream. 
    size - the buffer size. 

*java.io.BufferedOutputStream.flush()*

public synchronized void flush()
  throws |java.io.IOException|
         
Flushes this buffered output stream. This forces any buffered output bytes to be written out to the underlying output stream. 



*java.io.BufferedOutputStream.write(byte[],int,int)*

public synchronized void write(
  byte[] b,
  int off,
  int len)
  throws |java.io.IOException|
         
Writes len bytes from the specified byte array starting at offset off to this buffered output stream. 

Ordinarily this method stores bytes from the given array into this stream's buffer, flushing the buffer to the underlying output stream as needed. If the requested length is at 
least as large as this stream's buffer, however, then this method will flush the buffer and write the bytes directly to the underlying output stream. Thus redundant 
BufferedOutputStreams will not copy data unnecessarily. 


    b - the data. 
    off - the start offset in the data. 
    len - the number of bytes to write. 

*java.io.BufferedOutputStream.write(int)*

public synchronized void write(int b)
  throws |java.io.IOException|
         
Writes the specified byte to this buffered output stream. 


    b - the byte to be written. 


