*java.awt.CheckboxGroup* *CheckboxGroup* The CheckboxGroup class is used to group together 
 a set of Checkbox buttons.

public class CheckboxGroup
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|java.awt.CheckboxGroup_Description|
|java.awt.CheckboxGroup_Fields|
|java.awt.CheckboxGroup_Constructors|
|java.awt.CheckboxGroup_Methods|

====================================================================================================================================================================================

*java.awt.CheckboxGroup_Constructors*
|java.awt.CheckboxGroup()|Creates a new instance of CheckboxGroup.

*java.awt.CheckboxGroup_Methods*
|java.awt.CheckboxGroup.getCurrent()|
|java.awt.CheckboxGroup.getSelectedCheckbox()|Gets the current choice from this check box group.
|java.awt.CheckboxGroup.setCurrent(Checkbox)|
|java.awt.CheckboxGroup.setSelectedCheckbox(Checkbox)|Sets the currently selected check box in this group  to be the specified check box.
|java.awt.CheckboxGroup.toString()|Returns a string representation of this check box group,  including the value of its current selection.

*java.awt.CheckboxGroup_Description*

The CheckboxGroup class is used to group together a set of Checkbox buttons. 

Exactly one check box button in a CheckboxGroup can be in the "on" state at any given time. Pushing any button sets its state to "on" and forces any other button that is in the 
"on" state into the "off" state. 

The following code example produces a new check box group, with three check boxes: 



setLayout(new GridLayout(3, 1)); CheckboxGroup cbg = new CheckboxGroup(); add(new Checkbox("one", cbg, true)); add(new Checkbox("two", cbg, false)); add(new Checkbox("three", cbg, 
false)); 

This image depicts the check box group created by this example: 





*java.awt.CheckboxGroup()*

public CheckboxGroup()

Creates a new instance of CheckboxGroup. 


*java.awt.CheckboxGroup.getCurrent()*

public |java.awt.Checkbox| getCurrent()



    Deprecated: As of JDK version 1.1,
 replaced by <code>getSelectedCheckbox()</code>.


*java.awt.CheckboxGroup.getSelectedCheckbox()*

public |java.awt.Checkbox| getSelectedCheckbox()

Gets the current choice from this check box group. The current choice is the check box in this group that is currently in the "on" state, or null if all check boxes in the group 
are off. 



    Returns: the check box that is currently in the "on" state, or null. 

*java.awt.CheckboxGroup.setCurrent(Checkbox)*

public synchronized void setCurrent(java.awt.Checkbox box)



    Deprecated: As of JDK version 1.1,
 replaced by <code>setSelectedCheckbox(Checkbox)</code>.


*java.awt.CheckboxGroup.setSelectedCheckbox(Checkbox)*

public void setSelectedCheckbox(java.awt.Checkbox box)

Sets the currently selected check box in this group to be the specified check box. This method sets the state of that check box to "on" and sets all other check boxes in the group 
to be off. 

If the check box argument is null, all check boxes in this check box group are deselected. If the check box argument belongs to a different check box group, this method does 
nothing. 


    box - the Checkbox to set as the current selection. 

*java.awt.CheckboxGroup.toString()*

public |java.lang.String| toString()

Returns a string representation of this check box group, including the value of its current selection. 



    Returns: a string representation of this check box group. 


