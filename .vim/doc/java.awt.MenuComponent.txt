*java.awt.MenuComponent* *MenuComponent* The abstract class MenuComponent is the

public abstract class MenuComponent
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|java.awt.MenuComponent_Description|
|java.awt.MenuComponent_Fields|
|java.awt.MenuComponent_Constructors|
|java.awt.MenuComponent_Methods|

================================================================================

*java.awt.MenuComponent_Constructors*
|java.awt.MenuComponent()|Creates a MenuComponent.

*java.awt.MenuComponent_Methods*
|java.awt.MenuComponent.dispatchEvent(AWTEvent)|
|java.awt.MenuComponent.getAccessibleContext()|Gets the AccessibleContext assoc
|java.awt.MenuComponent.getFont()|Gets the font used for this menu component.
|java.awt.MenuComponent.getName()|Gets the name of the menu component.
|java.awt.MenuComponent.getParent()|Returns the parent container for this menu 
|java.awt.MenuComponent.getPeer()|
|java.awt.MenuComponent.getTreeLock()|Gets this component's locking object (the
|java.awt.MenuComponent.paramString()|Returns a string representing the state o
|java.awt.MenuComponent.postEvent(Event)|Posts the specified event to the menu.
|java.awt.MenuComponent.processEvent(AWTEvent)|Processes events occurring on th
|java.awt.MenuComponent.removeNotify()|Removes the menu component's peer.
|java.awt.MenuComponent.setFont(Font)|Sets the font to be used for this menu co
|java.awt.MenuComponent.setName(String)|Sets the name of the component to the s
|java.awt.MenuComponent.toString()|Returns a representation of this menu compon

*java.awt.MenuComponent_Description*

The abstract class MenuComponent is the superclass of all menu-related 
components. In this respect, the class MenuComponent is analogous to the 
abstract superclass Component for AWT components. 

Menu components receive and process AWT events, just as components do, through 
the method processEvent. 


*java.awt.MenuComponent()*

public MenuComponent()
  throws |java.awt.HeadlessException|
         
Creates a MenuComponent. 


*java.awt.MenuComponent.dispatchEvent(AWTEvent)*

public final void dispatchEvent(java.awt.AWTEvent e)




*java.awt.MenuComponent.getAccessibleContext()*

public |javax.accessibility.AccessibleContext| getAccessibleContext()

Gets the AccessibleContext associated with this MenuComponent. 

The method implemented by this base class returns null. Classes that extend 
MenuComponent should implement this method to return the AccessibleContext 
associated with the subclass. 


    Returns: the AccessibleContext of this MenuComponent 
*java.awt.MenuComponent.getFont()*

public |java.awt.Font| getFont()

Gets the font used for this menu component. 


    Returns: the font used in this menu component, if there is one; null otherwise 
*java.awt.MenuComponent.getName()*

public |java.lang.String| getName()

Gets the name of the menu component. 


    Returns: the name of the menu component 
*java.awt.MenuComponent.getParent()*

public |java.awt.MenuContainer| getParent()

Returns the parent container for this menu component. 


    Returns: the menu component containing this menu component, or null if this menu 
             component is the outermost component, the menu bar itself 
*java.awt.MenuComponent.getPeer()*

public |java.awt.peer.MenuComponentPeer| getPeer()




*java.awt.MenuComponent.getTreeLock()*

protected final |java.lang.Object| getTreeLock()

Gets this component's locking object (the object that owns the thread 
sychronization monitor) for AWT component-tree and layout operations. 


    Returns: this component's locking object 
*java.awt.MenuComponent.paramString()*

protected |java.lang.String| paramString()

Returns a string representing the state of this MenuComponent. This method is 
intended to be used only for debugging purposes, and the content and format of 
the returned string may vary between implementations. The returned string may 
be empty but may not be null. 


    Returns: the parameter string of this menu component 
*java.awt.MenuComponent.postEvent(Event)*

public boolean postEvent(java.awt.Event evt)

Posts the specified event to the menu. This method is part of the Java1.0 event 
system and it is maintained only for backwards compatibility. Its use is 
discouraged, and it may not be supported in the future. 

    evt - the event which is to take place 

*java.awt.MenuComponent.processEvent(AWTEvent)*

protected void processEvent(java.awt.AWTEvent e)

Processes events occurring on this menu component. Note that if the event 
parameter is null the behavior is unspecified and may result in an exception. 

    e - the event 

*java.awt.MenuComponent.removeNotify()*

public void removeNotify()

Removes the menu component's peer. The peer allows us to modify the appearance 
of the menu component without changing the functionality of the menu component. 


*java.awt.MenuComponent.setFont(Font)*

public void setFont(java.awt.Font f)

Sets the font to be used for this menu component to the specified font. This 
font is also used by all subcomponents of this menu component, unless those 
subcomponents specify a different font. 

Some platforms may not support setting of all font attributes of a menu 
component; in such cases, calling setFont will have no effect on the 
unsupported font attributes of this menu component. Unless subcomponents of 
this menu component specify a different font, this font will be used by those 
subcomponents if supported by the underlying platform. 

    f - the font to be set 

*java.awt.MenuComponent.setName(String)*

public void setName(java.lang.String name)

Sets the name of the component to the specified string. 

    name - the name of the menu component 

*java.awt.MenuComponent.toString()*

public |java.lang.String| toString()

Returns a representation of this menu component as a string. 


    Returns: a string representation of this menu component 

