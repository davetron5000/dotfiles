*java.awt.dnd.DropTargetContext.TransferableProxy* *DropTargetContext.TransferableProxy* 

protected class DropTargetContext.TransferableProxy
  extends    |java.lang.Object|
  implements |java.awt.datatransfer.Transferable|

|java.awt.dnd.DropTargetContext.TransferableProxy_Description|
|java.awt.dnd.DropTargetContext.TransferableProxy_Fields|
|java.awt.dnd.DropTargetContext.TransferableProxy_Constructors|
|java.awt.dnd.DropTargetContext.TransferableProxy_Methods|

================================================================================

*java.awt.dnd.DropTargetContext.TransferableProxy_Fields*
|boolean_java.awt.dnd.DropTargetContext.TransferableProxy.isLocal|
|java.awt.datatransfer.Transferable_java.awt.dnd.DropTargetContext.TransferableProxy.transferable|

*java.awt.dnd.DropTargetContext.TransferableProxy_Methods*
|java.awt.dnd.DropTargetContext.TransferableProxy.getTransferData(DataFlavor)|R
|java.awt.dnd.DropTargetContext.TransferableProxy.getTransferDataFlavors()|Retu
|java.awt.dnd.DropTargetContext.TransferableProxy.isDataFlavorSupported(DataFlavor)|

*java.awt.dnd.DropTargetContext.TransferableProxy_Description*

TransferableProxy is a helper inner class that implements Transferable 
interface and serves as a proxy for another Transferable object which 
represents data transfer for a particular drag-n-drop operation. 

The proxy forwards all requests to the encapsulated transferable and 
automatically performs additional conversion on the data returned by the 
encapsulated transferable in case of local transfer. 


*boolean_java.awt.dnd.DropTargetContext.TransferableProxy.isLocal*

TransferableProxy is a helper inner class that implements Transferable 
interface and serves as a proxy for another Transferable object which 
represents data transfer for a particular drag-n-drop operation. 

The proxy forwards all requests to the encapsulated transferable and 
automatically performs additional conversion on the data returned by the 
encapsulated transferable in case of local transfer. 


*java.awt.datatransfer.Transferable_java.awt.dnd.DropTargetContext.TransferableProxy.transferable*

TransferableProxy is a helper inner class that implements Transferable 
interface and serves as a proxy for another Transferable object which 
represents data transfer for a particular drag-n-drop operation. 

The proxy forwards all requests to the encapsulated transferable and 
automatically performs additional conversion on the data returned by the 
encapsulated transferable in case of local transfer. 



*java.awt.dnd.DropTargetContext.TransferableProxy.getTransferData(DataFlavor)*

public |java.lang.Object| getTransferData(java.awt.datatransfer.DataFlavor df)
  throws |java.io.IOException|
         |java.awt.datatransfer.UnsupportedFlavorException|
         
Returns an object which represents the data provided by the encapsulated 
transferable for the requested data flavor. 

In case of local transfer a serialized copy of the object returned by the 
encapsulated transferable is provided when the data is requested in 
application/x-java-serialized-object data flavor. 

    df - the requested flavor for the data 

*java.awt.dnd.DropTargetContext.TransferableProxy.getTransferDataFlavors()*

public |java.awt.datatransfer.DataFlavor| getTransferDataFlavors()

Returns an array of DataFlavor objects indicating the flavors the data can be 
provided in by the encapsulated transferable. 


    Returns: an array of data flavors in which the data can be provided by the encapsulated 
             transferable 
*java.awt.dnd.DropTargetContext.TransferableProxy.isDataFlavorSupported(DataFlavor)*

public boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor flavor)

Returns whether or not the specified data flavor is supported by the 
encapsulated transferable. 

    flavor - the requested flavor for the data 

    Returns: true if the data flavor is supported, false otherwise 

