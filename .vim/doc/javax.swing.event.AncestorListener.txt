*javax.swing.event.AncestorListener* *AncestorListener* AncestorListener

 Interface to support notification when changes occur to a JComponent or one
 of its ancestors.

public interface interface AncestorListener

  implements |java.util.EventListener|

|javax.swing.event.AncestorListener_Description|
|javax.swing.event.AncestorListener_Fields|
|javax.swing.event.AncestorListener_Constructors|
|javax.swing.event.AncestorListener_Methods|

====================================================================================================================================================================================

*javax.swing.event.AncestorListener_Methods*
|javax.swing.event.AncestorListener.ancestorAdded(AncestorEvent)|Called when the source or one of its ancestors is made visible  either by setVisible(true) being called or by its 
|javax.swing.event.AncestorListener.ancestorMoved(AncestorEvent)|Called when either the source or one of its ancestors is moved.
|javax.swing.event.AncestorListener.ancestorRemoved(AncestorEvent)|Called when the source or one of its ancestors is made invisible  either by setVisible(false) being called or by

*javax.swing.event.AncestorListener_Description*

AncestorListener 

Interface to support notification when changes occur to a JComponent or one of its ancestors. These include movement and when the component becomes visible or invisible, either by 
the setVisible() method or by being added or removed from the component hierarchy. 



*javax.swing.event.AncestorListener.ancestorAdded(AncestorEvent)*

public void ancestorAdded(javax.swing.event.AncestorEvent event)

Called when the source or one of its ancestors is made visible either by setVisible(true) being called or by its being added to the component hierarchy. The method is only called 
if the source has actually become visible. For this to be true all its parents must be visible and it must be in a hierarchy rooted at a Window 



*javax.swing.event.AncestorListener.ancestorMoved(AncestorEvent)*

public void ancestorMoved(javax.swing.event.AncestorEvent event)

Called when either the source or one of its ancestors is moved. 



*javax.swing.event.AncestorListener.ancestorRemoved(AncestorEvent)*

public void ancestorRemoved(javax.swing.event.AncestorEvent event)

Called when the source or one of its ancestors is made invisible either by setVisible(false) being called or by its being remove from the component hierarchy. The method is only 
called if the source has actually become invisible. For this to be true at least one of its parents must by invisible or it is not in a hierarchy rooted at a Window 




