*java.security.spec.PSSParameterSpec* *PSSParameterSpec* This class specifies a 

public class PSSParameterSpec
  extends    |java.lang.Object|
  implements |java.security.spec.AlgorithmParameterSpec|

|java.security.spec.PSSParameterSpec_Description|
|java.security.spec.PSSParameterSpec_Fields|
|java.security.spec.PSSParameterSpec_Constructors|
|java.security.spec.PSSParameterSpec_Methods|

================================================================================

*java.security.spec.PSSParameterSpec_Fields*
|java.security.spec.PSSParameterSpec_java.security.spec.PSSParameterSpec.DEFAULT|

*java.security.spec.PSSParameterSpec_Constructors*
|java.security.spec.PSSParameterSpec(int)|Creates a new PSSParameterSpec  using
|java.security.spec.PSSParameterSpec(String,String,AlgorithmParameterSpec,int,int)|

*java.security.spec.PSSParameterSpec_Methods*
|java.security.spec.PSSParameterSpec.getDigestAlgorithm()|Returns the message d
|java.security.spec.PSSParameterSpec.getMGFAlgorithm()|Returns the mask generat
|java.security.spec.PSSParameterSpec.getMGFParameters()|Returns the parameters 
|java.security.spec.PSSParameterSpec.getSaltLength()|Returns the salt length in
|java.security.spec.PSSParameterSpec.getTrailerField()|Returns the value for th

*java.security.spec.PSSParameterSpec_Description*

This class specifies a parameter spec for RSA-PSS signature scheme, as defined 
in the 

PKCS#1 v2.1 standard. 

Its ASN.1 definition in PKCS#1 standard is described below: 

RSASSA-PSS-params ::= SEQUENCE { hashAlgorithm [0] OAEP-PSSDigestAlgorithms 
DEFAULT sha1, maskGenAlgorithm [1] PKCS1MGFAlgorithms DEFAULT mgf1SHA1, 
saltLength [2] INTEGER DEFAULT 20, trailerField [3] INTEGER DEFAULT 1 } 

where 

OAEP-PSSDigestAlgorithms ALGORITHM-IDENTIFIER ::= { { OID id-sha1 PARAMETERS 
NULL }| { OID id-sha256 PARAMETERS NULL }| { OID id-sha384 PARAMETERS NULL }| { 
OID id-sha512 PARAMETERS NULL }, ... -- Allows for future expansion -- } 

PKCS1MGFAlgorithms ALGORITHM-IDENTIFIER ::= { { OID id-mgf1 PARAMETERS 
OAEP-PSSDigestAlgorithms }, ... -- Allows for future expansion -- } 

Note: the PSSParameterSpec.DEFAULT uses the following: message digest -- 
"SHA-1" mask generation function (mgf) -- "MGF1" parameters for mgf -- 
MGF1ParameterSpec.SHA1 SaltLength -- 20 TrailerField -- 1 


*java.security.spec.PSSParameterSpec_java.security.spec.PSSParameterSpec.DEFAULT*

This class specifies a parameter spec for RSA-PSS signature scheme, as defined 
in the 

PKCS#1 v2.1 standard. 

Its ASN.1 definition in PKCS#1 standard is described below: 

RSASSA-PSS-params ::= SEQUENCE { hashAlgorithm [0] OAEP-PSSDigestAlgorithms 
DEFAULT sha1, maskGenAlgorithm [1] PKCS1MGFAlgorithms DEFAULT mgf1SHA1, 
saltLength [2] INTEGER DEFAULT 20, trailerField [3] INTEGER DEFAULT 1 } 

where 

OAEP-PSSDigestAlgorithms ALGORITHM-IDENTIFIER ::= { { OID id-sha1 PARAMETERS 
NULL }| { OID id-sha256 PARAMETERS NULL }| { OID id-sha384 PARAMETERS NULL }| { 
OID id-sha512 PARAMETERS NULL }, ... -- Allows for future expansion -- } 

PKCS1MGFAlgorithms ALGORITHM-IDENTIFIER ::= { { OID id-mgf1 PARAMETERS 
OAEP-PSSDigestAlgorithms }, ... -- Allows for future expansion -- } 

Note: the PSSParameterSpec.DEFAULT uses the following: message digest -- 
"SHA-1" mask generation function (mgf) -- "MGF1" parameters for mgf -- 
MGF1ParameterSpec.SHA1 SaltLength -- 20 TrailerField -- 1 



*java.security.spec.PSSParameterSpec(int)*

public PSSParameterSpec(int saltLen)

Creates a new PSSParameterSpec using the specified salt length and other 
default values as defined in PKCS#1. 

    saltLen - the length of salt in bits to be used in PKCS#1 PSS encoding. 

*java.security.spec.PSSParameterSpec(String,String,AlgorithmParameterSpec,int,int)*

public PSSParameterSpec(
  java.lang.String mdName,
  java.lang.String mgfName,
  java.security.spec.AlgorithmParameterSpec mgfSpec,
  int saltLen,
  int trailerField)

Creates a new PSSParameterSpec as defined in the PKCS #1 standard using the 
specified message digest, mask generation function, parameters for mask 
generation function, salt length, and trailer field values. 

    mdName - the algorithm name of the hash function. 
    mgfName - the algorithm name of the mask generation function. 
    mgfSpec - the parameters for the mask generation function. If null is specified, null 
       will be returned by getMGFParameters(). 
    saltLen - the length of salt. 
    trailerField - the value of the trailer field. 

*java.security.spec.PSSParameterSpec.getDigestAlgorithm()*

public |java.lang.String| getDigestAlgorithm()

Returns the message digest algorithm name. 


    Returns: the message digest algorithm name. 
*java.security.spec.PSSParameterSpec.getMGFAlgorithm()*

public |java.lang.String| getMGFAlgorithm()

Returns the mask generation function algorithm name. 


    Returns: the mask generation function algorithm name. 
*java.security.spec.PSSParameterSpec.getMGFParameters()*

public |java.security.spec.AlgorithmParameterSpec| getMGFParameters()

Returns the parameters for the mask generation function. 


    Returns: the parameters for the mask generation function. 
*java.security.spec.PSSParameterSpec.getSaltLength()*

public int getSaltLength()

Returns the salt length in bits. 


    Returns: the salt length. 
*java.security.spec.PSSParameterSpec.getTrailerField()*

public int getTrailerField()

Returns the value for the trailer field, i.e. bc in PKCS#1 v2.1. 


    Returns: the value for the trailer field, i.e. bc in PKCS#1 v2.1. 

