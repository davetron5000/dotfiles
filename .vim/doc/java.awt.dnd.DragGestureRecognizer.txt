*java.awt.dnd.DragGestureRecognizer* *DragGestureRecognizer* The DragGestureReco

public abstract class DragGestureRecognizer
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|java.awt.dnd.DragGestureRecognizer_Description|
|java.awt.dnd.DragGestureRecognizer_Fields|
|java.awt.dnd.DragGestureRecognizer_Constructors|
|java.awt.dnd.DragGestureRecognizer_Methods|

================================================================================

*java.awt.dnd.DragGestureRecognizer_Fields*
|java.awt.Component_java.awt.dnd.DragGestureRecognizer.component|
|java.awt.dnd.DragGestureListener_java.awt.dnd.DragGestureRecognizer.dragGestureListener|
|java.awt.dnd.DragSource_java.awt.dnd.DragGestureRecognizer.dragSource|
|java.util.ArrayList_java.awt.dnd.DragGestureRecognizer.events|
|int_java.awt.dnd.DragGestureRecognizer.sourceActions|

*java.awt.dnd.DragGestureRecognizer_Constructors*
|java.awt.dnd.DragGestureRecognizer(DragSource)|Construct a new DragGestureReco
|java.awt.dnd.DragGestureRecognizer(DragSource,Component)|Construct a new DragG
|java.awt.dnd.DragGestureRecognizer(DragSource,Component,int)|Construct a new D
|java.awt.dnd.DragGestureRecognizer(DragSource,Component,int,DragGestureListener)|

*java.awt.dnd.DragGestureRecognizer_Methods*
|java.awt.dnd.DragGestureRecognizer.addDragGestureListener(DragGestureListener)|
|java.awt.dnd.DragGestureRecognizer.appendEvent(InputEvent)|Listeners registere
|java.awt.dnd.DragGestureRecognizer.fireDragGestureRecognized(int,Point)|Notify
|java.awt.dnd.DragGestureRecognizer.getComponent()|This method returns the Comp
|java.awt.dnd.DragGestureRecognizer.getDragSource()|This method returns the Dra
|java.awt.dnd.DragGestureRecognizer.getSourceActions()|This method returns an i
|java.awt.dnd.DragGestureRecognizer.getTriggerEvent()|This method returns the f
|java.awt.dnd.DragGestureRecognizer.registerListeners()|register this DragGestu
|java.awt.dnd.DragGestureRecognizer.removeDragGestureListener(DragGestureListener)|
|java.awt.dnd.DragGestureRecognizer.resetRecognizer()|Reset the Recognizer, if 
|java.awt.dnd.DragGestureRecognizer.setComponent(Component)|set the Component t
|java.awt.dnd.DragGestureRecognizer.setSourceActions(int)|This method sets the 
|java.awt.dnd.DragGestureRecognizer.unregisterListeners()|unregister this DragG

*java.awt.dnd.DragGestureRecognizer_Description*

The DragGestureRecognizer is an abstract base class for the specification of a 
platform-dependent listener that can be associated with a particular Component 
in order to identify platform-dependent drag initiating gestures. 

The appropriate DragGestureRecognizer subclass is obtained from the DragSource 
asssociated with a particular Component, or from the Toolkit object via its 
createDragGestureRecognizer() method. 

Once the DragGestureRecognizer is associated with a particular Component it 
will register the appropriate listener interfaces on that Component in order to 
track the input events delivered to the Component. 

Once the DragGestureRecognizer identifies a sequence of events on the Component 
as a drag initiating gesture, it will notify its unicast DragGestureListener by 
invoking its gestureRecognized() method. 

When a concrete DragGestureRecognizer instance detects a drag initiating 
gesture on the Component it is associated with, it will fire a DragGestureEvent 
to the DragGestureListener registered on its unicast event source for 
DragGestureListener events. This DragGestureListener is responsible for causing 
the associated DragSource to start the Drag and Drop operation (if 
appropriate). 


*java.awt.Component_java.awt.dnd.DragGestureRecognizer.component*

The DragGestureRecognizer is an abstract base class for the specification of a 
platform-dependent listener that can be associated with a particular Component 
in order to identify platform-dependent drag initiating gestures. 

The appropriate DragGestureRecognizer subclass is obtained from the DragSource 
asssociated with a particular Component, or from the Toolkit object via its 
createDragGestureRecognizer() method. 

Once the DragGestureRecognizer is associated with a particular Component it 
will register the appropriate listener interfaces on that Component in order to 
track the input events delivered to the Component. 

Once the DragGestureRecognizer identifies a sequence of events on the Component 
as a drag initiating gesture, it will notify its unicast DragGestureListener by 
invoking its gestureRecognized() method. 

When a concrete DragGestureRecognizer instance detects a drag initiating 
gesture on the Component it is associated with, it will fire a DragGestureEvent 
to the DragGestureListener registered on its unicast event source for 
DragGestureListener events. This DragGestureListener is responsible for causing 
the associated DragSource to start the Drag and Drop operation (if 
appropriate). 


*java.awt.dnd.DragGestureListener_java.awt.dnd.DragGestureRecognizer.dragGestureListener*

The DragGestureRecognizer is an abstract base class for the specification of a 
platform-dependent listener that can be associated with a particular Component 
in order to identify platform-dependent drag initiating gestures. 

The appropriate DragGestureRecognizer subclass is obtained from the DragSource 
asssociated with a particular Component, or from the Toolkit object via its 
createDragGestureRecognizer() method. 

Once the DragGestureRecognizer is associated with a particular Component it 
will register the appropriate listener interfaces on that Component in order to 
track the input events delivered to the Component. 

Once the DragGestureRecognizer identifies a sequence of events on the Component 
as a drag initiating gesture, it will notify its unicast DragGestureListener by 
invoking its gestureRecognized() method. 

When a concrete DragGestureRecognizer instance detects a drag initiating 
gesture on the Component it is associated with, it will fire a DragGestureEvent 
to the DragGestureListener registered on its unicast event source for 
DragGestureListener events. This DragGestureListener is responsible for causing 
the associated DragSource to start the Drag and Drop operation (if 
appropriate). 


*java.awt.dnd.DragSource_java.awt.dnd.DragGestureRecognizer.dragSource*

The DragGestureRecognizer is an abstract base class for the specification of a 
platform-dependent listener that can be associated with a particular Component 
in order to identify platform-dependent drag initiating gestures. 

The appropriate DragGestureRecognizer subclass is obtained from the DragSource 
asssociated with a particular Component, or from the Toolkit object via its 
createDragGestureRecognizer() method. 

Once the DragGestureRecognizer is associated with a particular Component it 
will register the appropriate listener interfaces on that Component in order to 
track the input events delivered to the Component. 

Once the DragGestureRecognizer identifies a sequence of events on the Component 
as a drag initiating gesture, it will notify its unicast DragGestureListener by 
invoking its gestureRecognized() method. 

When a concrete DragGestureRecognizer instance detects a drag initiating 
gesture on the Component it is associated with, it will fire a DragGestureEvent 
to the DragGestureListener registered on its unicast event source for 
DragGestureListener events. This DragGestureListener is responsible for causing 
the associated DragSource to start the Drag and Drop operation (if 
appropriate). 


*java.util.ArrayList_java.awt.dnd.DragGestureRecognizer.events*

The DragGestureRecognizer is an abstract base class for the specification of a 
platform-dependent listener that can be associated with a particular Component 
in order to identify platform-dependent drag initiating gestures. 

The appropriate DragGestureRecognizer subclass is obtained from the DragSource 
asssociated with a particular Component, or from the Toolkit object via its 
createDragGestureRecognizer() method. 

Once the DragGestureRecognizer is associated with a particular Component it 
will register the appropriate listener interfaces on that Component in order to 
track the input events delivered to the Component. 

Once the DragGestureRecognizer identifies a sequence of events on the Component 
as a drag initiating gesture, it will notify its unicast DragGestureListener by 
invoking its gestureRecognized() method. 

When a concrete DragGestureRecognizer instance detects a drag initiating 
gesture on the Component it is associated with, it will fire a DragGestureEvent 
to the DragGestureListener registered on its unicast event source for 
DragGestureListener events. This DragGestureListener is responsible for causing 
the associated DragSource to start the Drag and Drop operation (if 
appropriate). 


*int_java.awt.dnd.DragGestureRecognizer.sourceActions*

The DragGestureRecognizer is an abstract base class for the specification of a 
platform-dependent listener that can be associated with a particular Component 
in order to identify platform-dependent drag initiating gestures. 

The appropriate DragGestureRecognizer subclass is obtained from the DragSource 
asssociated with a particular Component, or from the Toolkit object via its 
createDragGestureRecognizer() method. 

Once the DragGestureRecognizer is associated with a particular Component it 
will register the appropriate listener interfaces on that Component in order to 
track the input events delivered to the Component. 

Once the DragGestureRecognizer identifies a sequence of events on the Component 
as a drag initiating gesture, it will notify its unicast DragGestureListener by 
invoking its gestureRecognized() method. 

When a concrete DragGestureRecognizer instance detects a drag initiating 
gesture on the Component it is associated with, it will fire a DragGestureEvent 
to the DragGestureListener registered on its unicast event source for 
DragGestureListener events. This DragGestureListener is responsible for causing 
the associated DragSource to start the Drag and Drop operation (if 
appropriate). 



*java.awt.dnd.DragGestureRecognizer(DragSource)*

protected DragGestureRecognizer(java.awt.dnd.DragSource ds)

Construct a new DragGestureRecognizer given the DragSource to be used in this 
Drag and Drop operation. 

    ds - the DragSource this DragGestureRecognizer will use to process the Drag and Drop 
       operation 

*java.awt.dnd.DragGestureRecognizer(DragSource,Component)*

protected DragGestureRecognizer(
  java.awt.dnd.DragSource ds,
  java.awt.Component c)

Construct a new DragGestureRecognizer given the DragSource to be used in this 
Drag and Drop operation, and the Component this DragGestureRecognizer should 
"observe" for drag initiating gestures. 

    ds - the DragSource this DragGestureRecognizer will use to process the Drag and Drop 
       operation 
    c - the Component this DragGestureRecognizer should "observe" the event stream to, 
       in order to detect a drag initiating gesture. If this value is null, the 
       DragGestureRecognizer is not associated with any Component. 

*java.awt.dnd.DragGestureRecognizer(DragSource,Component,int)*

protected DragGestureRecognizer(
  java.awt.dnd.DragSource ds,
  java.awt.Component c,
  int sa)

Construct a new DragGestureRecognizer given the DragSource to be used in this 
Drag and Drop operation, the Component this DragGestureRecognizer should 
"observe" for drag initiating gestures, and the action(s) supported for this 
Drag and Drop operation. 

    ds - the DragSource this DragGestureRecognizer will use to process the Drag and Drop 
       operation 
    c - the Component this DragGestureRecognizer should "observe" the event stream to, 
       in order to detect a drag initiating gesture. If this value is null, the 
       DragGestureRecognizer is not associated with any Component. 
    sa - the set (logical OR) of the DnDConstants that this Drag and Drop operation will 
       support 

*java.awt.dnd.DragGestureRecognizer(DragSource,Component,int,DragGestureListener)*

protected DragGestureRecognizer(
  java.awt.dnd.DragSource ds,
  java.awt.Component c,
  int sa,
  java.awt.dnd.DragGestureListener dgl)

Construct a new DragGestureRecognizer given the DragSource to be used in this 
Drag and Drop operation, the Component this DragGestureRecognizer should 
"observe" for drag initiating gestures, the action(s) supported for this Drag 
and Drop operation, and the DragGestureListener to notify once a drag 
initiating gesture has been detected. 

    ds - the DragSource this DragGestureRecognizer will use to process the Drag and Drop 
       operation 
    c - the Component this DragGestureRecognizer should "observe" the event stream to, 
       in order to detect a drag initiating gesture. If this value is null, the 
       DragGestureRecognizer is not associated with any Component. 
    sa - the set (logical OR) of the DnDConstants that this Drag and Drop operation will 
       support 
    dgl - the DragGestureRecognizer to notify when a drag gesture is detected 

*java.awt.dnd.DragGestureRecognizer.addDragGestureListener(DragGestureListener)*

public synchronized void addDragGestureListener(java.awt.dnd.DragGestureListener dgl)
  throws |java.util.TooManyListenersException|
         
Register a new DragGestureListener. 

    dgl - the DragGestureListener to register with this DragGestureRecognizer. 

*java.awt.dnd.DragGestureRecognizer.appendEvent(InputEvent)*

protected synchronized void appendEvent(java.awt.event.InputEvent awtie)

Listeners registered on the Component by this Recognizer shall record all 
Events that are recognized as part of the series of Events that go to comprise 
a Drag and Drop initiating gesture via this API. 

This method is used by a DragGestureRecognizer implementation to add an 
InputEvent subclass (that it believes is one in a series of events that 
comprise a Drag and Drop operation) to the array of events that this 
DragGestureRecognizer maintains internally. 

    awtie - the InputEvent to add to this DragGestureRecognizer's internal array of events. 
       Note that null is not a valid value, and will be ignored. 

*java.awt.dnd.DragGestureRecognizer.fireDragGestureRecognized(int,Point)*

protected synchronized void fireDragGestureRecognized(
  int dragAction,
  java.awt.Point p)

Notify the DragGestureListener that a Drag and Drop initiating gesture has 
occurred. Then reset the state of the Recognizer. 

    dragAction - The action initially selected by the users gesture 
    p - The point (in Component coords) where the gesture originated 

*java.awt.dnd.DragGestureRecognizer.getComponent()*

public synchronized |java.awt.Component| getComponent()

This method returns the Component that is to be "observed" by the 
DragGestureRecognizer for drag initiating gestures. 


    Returns: The Component this DragGestureRecognizer is associated with 
*java.awt.dnd.DragGestureRecognizer.getDragSource()*

public |java.awt.dnd.DragSource| getDragSource()

This method returns the DragSource this DragGestureRecognizer will use in order 
to process the Drag and Drop operation. 


    Returns: the DragSource 
*java.awt.dnd.DragGestureRecognizer.getSourceActions()*

public synchronized int getSourceActions()

This method returns an int representing the type of action(s) this Drag and 
Drop operation will support. 


    Returns: the currently permitted source action(s) 
*java.awt.dnd.DragGestureRecognizer.getTriggerEvent()*

public |java.awt.event.InputEvent| getTriggerEvent()

This method returns the first event in the series of events that initiated the 
Drag and Drop operation. 


    Returns: the initial event that triggered the drag gesture 
*java.awt.dnd.DragGestureRecognizer.registerListeners()*

protected abstract void registerListeners()

register this DragGestureRecognizer's Listeners with the Component 

subclasses must override this method 


*java.awt.dnd.DragGestureRecognizer.removeDragGestureListener(DragGestureListener)*

public synchronized void removeDragGestureListener(java.awt.dnd.DragGestureListener dgl)

unregister the current DragGestureListener 

    dgl - the DragGestureListener to unregister from this DragGestureRecognizer 

*java.awt.dnd.DragGestureRecognizer.resetRecognizer()*

public void resetRecognizer()

Reset the Recognizer, if its currently recognizing a gesture, ignore it. 


*java.awt.dnd.DragGestureRecognizer.setComponent(Component)*

public synchronized void setComponent(java.awt.Component c)

set the Component that the DragGestureRecognizer is associated with 

registerListeners() and unregisterListeners() are called as a side effect as 
appropriate. 

    c - The Component or null 

*java.awt.dnd.DragGestureRecognizer.setSourceActions(int)*

public synchronized void setSourceActions(int actions)

This method sets the permitted source drag action(s) for this Drag and Drop 
operation. 

    actions - the permitted source drag action(s) 

*java.awt.dnd.DragGestureRecognizer.unregisterListeners()*

protected abstract void unregisterListeners()

unregister this DragGestureRecognizer's Listeners with the Component 

subclasses must override this method 



