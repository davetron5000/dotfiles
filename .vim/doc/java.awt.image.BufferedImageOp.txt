*java.awt.image.BufferedImageOp* *BufferedImageOp* This interface describes single-input/single-output
 operations performed on BufferedImage objects.

public interface interface BufferedImageOp


|java.awt.image.BufferedImageOp_Description|
|java.awt.image.BufferedImageOp_Fields|
|java.awt.image.BufferedImageOp_Constructors|
|java.awt.image.BufferedImageOp_Methods|

====================================================================================================================================================================================

*java.awt.image.BufferedImageOp_Methods*
|java.awt.image.BufferedImageOp.createCompatibleDestImage(BufferedImage,ColorModel)|Creates a zeroed destination image with the correct size and number of  bands.
|java.awt.image.BufferedImageOp.filter(BufferedImage,BufferedImage)|Performs a single-input/single-output operation on a  BufferedImage.
|java.awt.image.BufferedImageOp.getBounds2D(BufferedImage)|Returns the bounding box of the filtered destination image.
|java.awt.image.BufferedImageOp.getPoint2D(Point2D,Point2D)|Returns the location of the corresponding destination point given a  point in the source image.
|java.awt.image.BufferedImageOp.getRenderingHints()|Returns the rendering hints for this operation.

*java.awt.image.BufferedImageOp_Description*

This interface describes single-input/single-output operations performed on BufferedImage objects. It is implemented by AffineTransformOp, ConvolveOp, ColorConvertOp, RescaleOp, 
and LookupOp. These objects can be passed into a BufferedImageFilter to operate on a BufferedImage in the ImageProducer-ImageFilter-ImageConsumer paradigm. 

Classes that implement this interface must specify whether or not they allow in-place filtering-- filter operations where the source object is equal to the destination object. 

This interface cannot be used to describe more sophisticated operations such as those that take multiple sources. Note that this restriction also means that the values of the 
destination pixels prior to the operation are not used as input to the filter operation. 



*java.awt.image.BufferedImageOp.createCompatibleDestImage(BufferedImage,ColorModel)*

public |java.awt.image.BufferedImage| createCompatibleDestImage(
  java.awt.image.BufferedImage src,
  java.awt.image.ColorModel destCM)

Creates a zeroed destination image with the correct size and number of bands. An IllegalArgumentException may be thrown if the source image is incompatible with the types of 
images allowed by the class implementing this filter. 


    src - The BufferedImage to be filtered 
    destCM - ColorModel of the destination. If null, the ColorModel of the source is used. 

    Returns: The zeroed destination image. 

*java.awt.image.BufferedImageOp.filter(BufferedImage,BufferedImage)*

public |java.awt.image.BufferedImage| filter(
  java.awt.image.BufferedImage src,
  java.awt.image.BufferedImage dest)

Performs a single-input/single-output operation on a BufferedImage. If the color models for the two images do not match, a color conversion into the destination color model is 
performed. If the destination image is null, a BufferedImage with an appropriate ColorModel is created. 

An IllegalArgumentException may be thrown if the source and/or destination image is incompatible with the types of images $ allowed by the class implementing this filter. 


    src - The BufferedImage to be filtered 
    dest - The BufferedImage in which to store the results$ 

    Returns: The filtered BufferedImage. 

*java.awt.image.BufferedImageOp.getBounds2D(BufferedImage)*

public |java.awt.geom.Rectangle2D| getBounds2D(java.awt.image.BufferedImage src)

Returns the bounding box of the filtered destination image. An IllegalArgumentException may be thrown if the source image is incompatible with the types of images allowed by the 
class implementing this filter. 


    src - The BufferedImage to be filtered 

    Returns: The Rectangle2D representing the destination image's bounding box. 

*java.awt.image.BufferedImageOp.getPoint2D(Point2D,Point2D)*

public |java.awt.geom.Point2D| getPoint2D(
  java.awt.geom.Point2D srcPt,
  java.awt.geom.Point2D dstPt)

Returns the location of the corresponding destination point given a point in the source image. If dstPt is specified, it is used to hold the return value. 


    srcPt - the Point2D that represents the point in the source image 
    dstPt - The Point2D in which to store the result 

    Returns: The Point2D in the destination image that corresponds to the specified point in the source image. 

*java.awt.image.BufferedImageOp.getRenderingHints()*

public |java.awt.RenderingHints| getRenderingHints()

Returns the rendering hints for this operation. 



    Returns: The RenderingHints object for this BufferedImageOp</CODE. Returns null if no hints have been set. 


