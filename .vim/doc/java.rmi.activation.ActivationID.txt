*java.rmi.activation.ActivationID* *ActivationID* Activation makes use of specia

public class ActivationID
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|java.rmi.activation.ActivationID_Description|
|java.rmi.activation.ActivationID_Fields|
|java.rmi.activation.ActivationID_Constructors|
|java.rmi.activation.ActivationID_Methods|

================================================================================

*java.rmi.activation.ActivationID_Constructors*
|java.rmi.activation.ActivationID(Activator)|The constructor for ActivationID t

*java.rmi.activation.ActivationID_Methods*
|java.rmi.activation.ActivationID.activate(boolean)|Activate the object for thi
|java.rmi.activation.ActivationID.equals(Object)|Compares two activation ids fo
|java.rmi.activation.ActivationID.hashCode()|Returns a hashcode for the activat

*java.rmi.activation.ActivationID_Description*

Activation makes use of special identifiers to denote remote objects that can 
be activated over time. An activation identifier (an instance of the class 
ActivationID) contains several pieces of information needed for activating an 
object: 

a remote reference to the object's activator (a 
RemoteRef(|java.rmi.server.RemoteRef|) instance), and a unique identifier (a 
UID(|java.rmi.server.UID|) instance) for the object. 

An activation identifier for an object can be obtained by registering an object 
with the activation system. Registration is accomplished in a few ways: via the 
Activatable.register method via the first Activatable constructor (that takes 
three arguments and both registers and exports the object, and via the first 
Activatable.exportObject method that takes the activation descriptor, object 
and port as arguments; this method both registers and exports the object. 


*java.rmi.activation.ActivationID(Activator)*

public ActivationID(java.rmi.activation.Activator activator)

The constructor for ActivationID takes a single argument, activator, that 
specifies a remote reference to the activator responsible for activating the 
object associated with this identifier. An instance of ActivationID is globally 
unique. 

    activator - reference to the activator responsible for activating the object 

*java.rmi.activation.ActivationID.activate(boolean)*

public |java.rmi.Remote| activate(boolean force)
  throws |java.rmi.activation.ActivationException|
         |java.rmi.RemoteException|
         |java.rmi.activation.UnknownObjectException|
         
Activate the object for this id. 

    force - if true, forces the activator to contact the group when activating the object 
       (instead of returning a cached reference); if false, returning a cached 
       value is acceptable. 

    Returns: the reference to the active remote object 
*java.rmi.activation.ActivationID.equals(Object)*

public boolean equals(java.lang.Object obj)

Compares two activation ids for content equality. Returns true if both of the 
following conditions are true: 1) the unique identifiers equivalent (by 
content), and 2) the activator specified in each identifier refers to the same 
remote object. 

    obj - the Object to compare with 

    Returns: true if these Objects are equal; false otherwise. 
*java.rmi.activation.ActivationID.hashCode()*

public int hashCode()

Returns a hashcode for the activation id. Two identifiers that refer to the 
same remote object will have the same hash code. 



