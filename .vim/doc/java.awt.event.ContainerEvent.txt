*java.awt.event.ContainerEvent* *ContainerEvent* A low-level event which indicat

public class ContainerEvent
  extends    |java.awt.event.ComponentEvent|

|java.awt.event.ContainerEvent_Description|
|java.awt.event.ContainerEvent_Fields|
|java.awt.event.ContainerEvent_Constructors|
|java.awt.event.ContainerEvent_Methods|

================================================================================

*java.awt.event.ContainerEvent_Fields*
|int_java.awt.event.ContainerEvent.COMPONENT_ADDED|
|int_java.awt.event.ContainerEvent.COMPONENT_REMOVED|
|int_java.awt.event.ContainerEvent.CONTAINER_FIRST|
|int_java.awt.event.ContainerEvent.CONTAINER_LAST|

*java.awt.event.ContainerEvent_Constructors*
|java.awt.event.ContainerEvent(Component,int,Component)|Constructs a ContainerE

*java.awt.event.ContainerEvent_Methods*
|java.awt.event.ContainerEvent.getChild()|Returns the component that was affect
|java.awt.event.ContainerEvent.getContainer()|Returns the originator of the eve
|java.awt.event.ContainerEvent.paramString()|Returns a parameter string identif

*java.awt.event.ContainerEvent_Description*

A low-level event which indicates that a container's contents changed because a 
component was added or removed. 

Container events are provided for notification purposes ONLY; The AWT will 
automatically handle changes to the containers contents internally so that the 
program works properly regardless of whether the program is receiving these 
events or not. 

This low-level event is generated by a container object (such as a Panel) when 
a component is added to it or removed from it. The event is passed to every 
ContainerListener or ContainerAdapter object which registered to receive such 
events using the component's addContainerListener method. (ContainerAdapter 
objects implement the ContainerListener interface.) Each such listener object 
gets this ContainerEvent when the event occurs. 


*int_java.awt.event.ContainerEvent.COMPONENT_ADDED*

A low-level event which indicates that a container's contents changed because a 
component was added or removed. 

Container events are provided for notification purposes ONLY; The AWT will 
automatically handle changes to the containers contents internally so that the 
program works properly regardless of whether the program is receiving these 
events or not. 

This low-level event is generated by a container object (such as a Panel) when 
a component is added to it or removed from it. The event is passed to every 
ContainerListener or ContainerAdapter object which registered to receive such 
events using the component's addContainerListener method. (ContainerAdapter 
objects implement the ContainerListener interface.) Each such listener object 
gets this ContainerEvent when the event occurs. 


*int_java.awt.event.ContainerEvent.COMPONENT_REMOVED*

A low-level event which indicates that a container's contents changed because a 
component was added or removed. 

Container events are provided for notification purposes ONLY; The AWT will 
automatically handle changes to the containers contents internally so that the 
program works properly regardless of whether the program is receiving these 
events or not. 

This low-level event is generated by a container object (such as a Panel) when 
a component is added to it or removed from it. The event is passed to every 
ContainerListener or ContainerAdapter object which registered to receive such 
events using the component's addContainerListener method. (ContainerAdapter 
objects implement the ContainerListener interface.) Each such listener object 
gets this ContainerEvent when the event occurs. 


*int_java.awt.event.ContainerEvent.CONTAINER_FIRST*

A low-level event which indicates that a container's contents changed because a 
component was added or removed. 

Container events are provided for notification purposes ONLY; The AWT will 
automatically handle changes to the containers contents internally so that the 
program works properly regardless of whether the program is receiving these 
events or not. 

This low-level event is generated by a container object (such as a Panel) when 
a component is added to it or removed from it. The event is passed to every 
ContainerListener or ContainerAdapter object which registered to receive such 
events using the component's addContainerListener method. (ContainerAdapter 
objects implement the ContainerListener interface.) Each such listener object 
gets this ContainerEvent when the event occurs. 


*int_java.awt.event.ContainerEvent.CONTAINER_LAST*

A low-level event which indicates that a container's contents changed because a 
component was added or removed. 

Container events are provided for notification purposes ONLY; The AWT will 
automatically handle changes to the containers contents internally so that the 
program works properly regardless of whether the program is receiving these 
events or not. 

This low-level event is generated by a container object (such as a Panel) when 
a component is added to it or removed from it. The event is passed to every 
ContainerListener or ContainerAdapter object which registered to receive such 
events using the component's addContainerListener method. (ContainerAdapter 
objects implement the ContainerListener interface.) Each such listener object 
gets this ContainerEvent when the event occurs. 



*java.awt.event.ContainerEvent(Component,int,Component)*

public ContainerEvent(
  java.awt.Component source,
  int id,
  java.awt.Component child)

Constructs a ContainerEvent object. Note that passing in an invalid id results 
in unspecified behavior. This method throws an IllegalArgumentException if 
source is null. 

    source - the Component object (container) that originated the event 
    id - an integer indicating the type of event 
    child - the component that was added or removed 

*java.awt.event.ContainerEvent.getChild()*

public |java.awt.Component| getChild()

Returns the component that was affected by the event. 


    Returns: the Component object that was added or removed 
*java.awt.event.ContainerEvent.getContainer()*

public |java.awt.Container| getContainer()

Returns the originator of the event. 


    Returns: the Container object that originated the event, or null if the object is not a 
             Container. 
*java.awt.event.ContainerEvent.paramString()*

public |java.lang.String| paramString()

Returns a parameter string identifying this event. This method is useful for 
event-logging and for debugging. 


    Returns: a string identifying the event and its attributes 

