*java.rmi.registry.Registry* *Registry* Registry is a remote interface to a simp

public interface interface Registry

  implements |java.rmi.Remote|

|java.rmi.registry.Registry_Description|
|java.rmi.registry.Registry_Fields|
|java.rmi.registry.Registry_Constructors|
|java.rmi.registry.Registry_Methods|

================================================================================

*java.rmi.registry.Registry_Fields*
|int_java.rmi.registry.Registry.REGISTRY_PORT|

*java.rmi.registry.Registry_Methods*
|java.rmi.registry.Registry.bind(String,Remote)|Binds a remote reference to the
|java.rmi.registry.Registry.list()|Returns an array of the names bound in this 
|java.rmi.registry.Registry.lookup(String)|Returns the remote reference bound t
|java.rmi.registry.Registry.rebind(String,Remote)|Replaces the binding for the 
|java.rmi.registry.Registry.unbind(String)|Removes the binding for the specifie

*java.rmi.registry.Registry_Description*

Registry is a remote interface to a simple remote object registry that provides 
methods for storing and retrieving remote object references bound with 
arbitrary string names. The bind, unbind, and rebind methods are used to alter 
the name bindings in the registry, and the lookup and list methods are used to 
query the current name bindings. 

In its typical usage, a Registry enables RMI client bootstrapping: it provides 
a simple means for a client to obtain an initial reference to a remote object. 
Therefore, a registry's remote object implementation is typically exported with 
a well-known address, such as with a well-known ObjID(|java.rmi.server.ObjID|) 
and TCP port number (default is 1099(|java.rmi.registry.Registry|) ). 

The (|java.rmi.registry.LocateRegistry|) class provides a programmatic API for 
constructing a bootstrap reference to a Registry at a remote address (see the 
static getRegistry methods) and for creating and exporting a Registry in the 
current VM on a particular local address (see the static createRegistry 
methods). 

A Registry implementation may choose to restrict access to some or all of its 
methods (for example, methods that mutate the registry's bindings may be 
restricted to calls originating from the local host). If a Registry method 
chooses to deny access for a given invocation, its implementation may throw 
(|java.rmi.AccessException|) , which (because it extends 
(|java.rmi.RemoteException|) ) will be wrapped in a 
(|java.rmi.ServerException|) when caught by a remote client. 

The names used for bindings in a Registry are pure strings, not parsed. A 
service which stores its remote reference in a Registry may wish to use a 
package name as a prefix in the name binding to reduce the likelihood of name 
collisions in the registry. 


*int_java.rmi.registry.Registry.REGISTRY_PORT*

Registry is a remote interface to a simple remote object registry that provides 
methods for storing and retrieving remote object references bound with 
arbitrary string names. The bind, unbind, and rebind methods are used to alter 
the name bindings in the registry, and the lookup and list methods are used to 
query the current name bindings. 

In its typical usage, a Registry enables RMI client bootstrapping: it provides 
a simple means for a client to obtain an initial reference to a remote object. 
Therefore, a registry's remote object implementation is typically exported with 
a well-known address, such as with a well-known ObjID(|java.rmi.server.ObjID|) 
and TCP port number (default is 1099(|java.rmi.registry.Registry|) ). 

The (|java.rmi.registry.LocateRegistry|) class provides a programmatic API for 
constructing a bootstrap reference to a Registry at a remote address (see the 
static getRegistry methods) and for creating and exporting a Registry in the 
current VM on a particular local address (see the static createRegistry 
methods). 

A Registry implementation may choose to restrict access to some or all of its 
methods (for example, methods that mutate the registry's bindings may be 
restricted to calls originating from the local host). If a Registry method 
chooses to deny access for a given invocation, its implementation may throw 
(|java.rmi.AccessException|) , which (because it extends 
(|java.rmi.RemoteException|) ) will be wrapped in a 
(|java.rmi.ServerException|) when caught by a remote client. 

The names used for bindings in a Registry are pure strings, not parsed. A 
service which stores its remote reference in a Registry may wish to use a 
package name as a prefix in the name binding to reduce the likelihood of name 
collisions in the registry. 



*java.rmi.registry.Registry.bind(String,Remote)*

public void bind(
  java.lang.String name,
  java.rmi.Remote obj)
  throws |java.rmi.AccessException|
         |java.rmi.AlreadyBoundException|
         |java.rmi.RemoteException|
         
Binds a remote reference to the specified name in this registry. 

    name - the name to associate with the remote reference 
    obj - a reference to a remote object (usually a stub) 

*java.rmi.registry.Registry.list()*

public |java.lang.String| list()
  throws |java.rmi.AccessException|
         |java.rmi.RemoteException|
         
Returns an array of the names bound in this registry. The array will contain a 
snapshot of the names bound in this registry at the time of the given 
invocation of this method. 


    Returns: an array of the names bound in this registry 
*java.rmi.registry.Registry.lookup(String)*

public |java.rmi.Remote| lookup(java.lang.String name)
  throws |java.rmi.AccessException|
         |java.rmi.NotBoundException|
         |java.rmi.RemoteException|
         
Returns the remote reference bound to the specified name in this registry. 

    name - the name for the remote reference to look up 

    Returns: a reference to a remote object 
*java.rmi.registry.Registry.rebind(String,Remote)*

public void rebind(
  java.lang.String name,
  java.rmi.Remote obj)
  throws |java.rmi.AccessException|
         |java.rmi.RemoteException|
         
Replaces the binding for the specified name in this registry with the supplied 
remote reference. If there is an existing binding for the specified name, it is 
discarded. 

    name - the name to associate with the remote reference 
    obj - a reference to a remote object (usually a stub) 

*java.rmi.registry.Registry.unbind(String)*

public void unbind(java.lang.String name)
  throws |java.rmi.AccessException|
         |java.rmi.NotBoundException|
         |java.rmi.RemoteException|
         
Removes the binding for the specified name in this registry. 

    name - the name of the binding to remove 


