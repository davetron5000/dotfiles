*java.awt.FileDialog* *FileDialog* The FileDialog class displays a dialog window
 from which the user can select a file.

public class FileDialog
  extends    |java.awt.Dialog|

|java.awt.FileDialog_Description|
|java.awt.FileDialog_Fields|
|java.awt.FileDialog_Constructors|
|java.awt.FileDialog_Methods|

====================================================================================================================================================================================

*java.awt.FileDialog_Fields*
|int_java.awt.FileDialog.LOAD|
|int_java.awt.FileDialog.SAVE|

*java.awt.FileDialog_Constructors*
|java.awt.FileDialog(Dialog)|Creates a file dialog for loading a file.
|java.awt.FileDialog(Dialog,String)|Creates a file dialog window with the specified title for loading  a file.
|java.awt.FileDialog(Dialog,String,int)|Creates a file dialog window with the specified title for loading  or saving a file.
|java.awt.FileDialog(Frame)|Creates a file dialog for loading a file.
|java.awt.FileDialog(Frame,String)|Creates a file dialog window with the specified title for loading  a file.
|java.awt.FileDialog(Frame,String,int)|Creates a file dialog window with the specified title for loading  or saving a file.

*java.awt.FileDialog_Methods*
|java.awt.FileDialog.addNotify()|Creates the file dialog's peer.
|java.awt.FileDialog.getDirectory()|Gets the directory of this file dialog.
|java.awt.FileDialog.getFile()|Gets the selected file of this file dialog.
|java.awt.FileDialog.getFilenameFilter()|Determines this file dialog's filename filter.
|java.awt.FileDialog.getMode()|Indicates whether this file dialog box is for loading from a file  or for saving to a file.
|java.awt.FileDialog.paramString()|Returns a string representing the state of this FileDialog  window.
|java.awt.FileDialog.setDirectory(String)|Sets the directory of this file dialog window to be the  specified directory.
|java.awt.FileDialog.setFile(String)|Sets the selected file for this file dialog window to be the  specified file.
|java.awt.FileDialog.setFilenameFilter(FilenameFilter)|Sets the filename filter for this file dialog window to the  specified filter.
|java.awt.FileDialog.setMode(int)|Sets the mode of the file dialog.

*java.awt.FileDialog_Description*

The FileDialog class displays a dialog window from which the user can select a file. 

Since it is a modal dialog, when the application calls its show method to display the dialog, it blocks the rest of the application until the user has chosen a file. 



*int_java.awt.FileDialog.LOAD*

This constant value indicates that the purpose of the file dialog window is to locate a file from which to read. 


*int_java.awt.FileDialog.SAVE*

This constant value indicates that the purpose of the file dialog window is to locate a file to which to write. 



*java.awt.FileDialog(Dialog)*

public FileDialog(java.awt.Dialog parent)

Creates a file dialog for loading a file. The title of the file dialog is initially empty. This is a convenience method for FileDialog(parent, "", LOAD). 

    parent - the owner of the dialog 

*java.awt.FileDialog(Dialog,String)*

public FileDialog(
  java.awt.Dialog parent,
  java.lang.String title)

Creates a file dialog window with the specified title for loading a file. The files shown are those in the current directory. This is a convenience method for FileDialog(parent, 
title, LOAD). 

    parent - the owner of the dialog 
    title - the title of the dialog; a null value will be accepted without causing a NullPointerException to be thrown 

*java.awt.FileDialog(Dialog,String,int)*

public FileDialog(
  java.awt.Dialog parent,
  java.lang.String title,
  int mode)

Creates a file dialog window with the specified title for loading or saving a file. 

If the value of mode is LOAD, then the file dialog is finding a file to read, and the files shown are those in the current directory. If the value of mode is SAVE, the file dialog 
is finding a place to write a file. 

    parent - the owner of the dialog 
    title - the title of the dialog; a null value will be accepted without causing a NullPointerException to be thrown 
    mode - the mode of the dialog; either FileDialog.LOAD or FileDialog.SAVE 

*java.awt.FileDialog(Frame)*

public FileDialog(java.awt.Frame parent)

Creates a file dialog for loading a file. The title of the file dialog is initially empty. This is a convenience method for FileDialog(parent, "", LOAD). 

    parent - the owner of the dialog 

*java.awt.FileDialog(Frame,String)*

public FileDialog(
  java.awt.Frame parent,
  java.lang.String title)

Creates a file dialog window with the specified title for loading a file. The files shown are those in the current directory. This is a convenience method for FileDialog(parent, 
title, LOAD). 

    parent - the owner of the dialog 
    title - the title of the dialog 

*java.awt.FileDialog(Frame,String,int)*

public FileDialog(
  java.awt.Frame parent,
  java.lang.String title,
  int mode)

Creates a file dialog window with the specified title for loading or saving a file. 

If the value of mode is LOAD, then the file dialog is finding a file to read, and the files shown are those in the current directory. If the value of mode is SAVE, the file dialog 
is finding a place to write a file. 

    parent - the owner of the dialog 
    title - the title of the dialog 
    mode - the mode of the dialog; either FileDialog.LOAD or FileDialog.SAVE 

*java.awt.FileDialog.addNotify()*

public void addNotify()

Creates the file dialog's peer. The peer allows us to change the look of the file dialog without changing its functionality. 



*java.awt.FileDialog.getDirectory()*

public |java.lang.String| getDirectory()

Gets the directory of this file dialog. 



    Returns: the (potentially null or invalid) directory of this FileDialog 

*java.awt.FileDialog.getFile()*

public |java.lang.String| getFile()

Gets the selected file of this file dialog. If the user selected CANCEL, the returned file is null. 



    Returns: the currently selected file of this file dialog window, or null if none is selected 

*java.awt.FileDialog.getFilenameFilter()*

public |java.io.FilenameFilter| getFilenameFilter()

Determines this file dialog's filename filter. A filename filter allows the user to specify which files appear in the file dialog window. Filename filters do not function in Sun's 
reference implementation for Microsoft Windows. 



    Returns: this file dialog's filename filter 

*java.awt.FileDialog.getMode()*

public int getMode()

Indicates whether this file dialog box is for loading from a file or for saving to a file. 



    Returns: the mode of this file dialog window, either FileDialog.LOAD or FileDialog.SAVE 

*java.awt.FileDialog.paramString()*

protected |java.lang.String| paramString()

Returns a string representing the state of this FileDialog window. This method is intended to be used only for debugging purposes, and the content and format of the returned 
string may vary between implementations. The returned string may be empty but may not be null. 



    Returns: the parameter string of this file dialog window 

*java.awt.FileDialog.setDirectory(String)*

public void setDirectory(java.lang.String dir)

Sets the directory of this file dialog window to be the specified directory. Specifying a null or an invalid directory implies an implementation-defined default. This default will 
not be realized, however, until the user has selected a file. Until this point, getDirectory() will return the value passed into this method. 

Specifying "" as the directory is exactly equivalent to specifying null as the directory. 


    dir - the specified directory 

*java.awt.FileDialog.setFile(String)*

public void setFile(java.lang.String file)

Sets the selected file for this file dialog window to be the specified file. This file becomes the default file if it is set before the file dialog window is first shown. 

Specifying "" as the file is exactly equivalent to specifying null as the file. 


    file - the file being set 

*java.awt.FileDialog.setFilenameFilter(FilenameFilter)*

public synchronized void setFilenameFilter(java.io.FilenameFilter filter)

Sets the filename filter for this file dialog window to the specified filter. Filename filters do not function in Sun's reference implementation for Microsoft Windows. 


    filter - the specified filter 

*java.awt.FileDialog.setMode(int)*

public void setMode(int mode)

Sets the mode of the file dialog. If mode is not a legal value, an exception will be thrown and mode will not be set. 


    mode - the mode for this file dialog, either FileDialog.LOAD or FileDialog.SAVE 


