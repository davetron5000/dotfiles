*java.lang.management.RuntimeMXBean* *RuntimeMXBean* The management interface fo

public interface interface RuntimeMXBean


|java.lang.management.RuntimeMXBean_Description|
|java.lang.management.RuntimeMXBean_Fields|
|java.lang.management.RuntimeMXBean_Constructors|
|java.lang.management.RuntimeMXBean_Methods|

================================================================================

*java.lang.management.RuntimeMXBean_Methods*
|java.lang.management.RuntimeMXBean.getBootClassPath()|Returns the boot class p
|java.lang.management.RuntimeMXBean.getClassPath()|Returns the Java class path 
|java.lang.management.RuntimeMXBean.getInputArguments()|Returns the input argum
|java.lang.management.RuntimeMXBean.getLibraryPath()|Returns the Java library p
|java.lang.management.RuntimeMXBean.getManagementSpecVersion()|Returns the vers
|java.lang.management.RuntimeMXBean.getName()|Returns the name representing the
|java.lang.management.RuntimeMXBean.getSpecName()|Returns the Java virtual mach
|java.lang.management.RuntimeMXBean.getSpecVendor()|Returns the Java virtual ma
|java.lang.management.RuntimeMXBean.getSpecVersion()|Returns the Java virtual m
|java.lang.management.RuntimeMXBean.getStartTime()|Returns the start time of th
|java.lang.management.RuntimeMXBean.getSystemProperties()|Returns a map of name
|java.lang.management.RuntimeMXBean.getUptime()|Returns the uptime of the Java 
|java.lang.management.RuntimeMXBean.getVmName()|Returns the Java virtual machin
|java.lang.management.RuntimeMXBean.getVmVendor()|Returns the Java virtual mach
|java.lang.management.RuntimeMXBean.getVmVersion()|Returns the Java virtual mac
|java.lang.management.RuntimeMXBean.isBootClassPathSupported()|Tests if the Jav

*java.lang.management.RuntimeMXBean_Description*

The management interface for the runtime system of the Java virtual machine. 

A Java virtual machine has a single instance of the implementation class of 
this interface. This instance implementing this interface is an MXBean that can 
be obtained by calling the (|java.lang.management.ManagementFactory|) method or 
from the platform 
<tt>MBeanServer</tt>(|java.lang.management.ManagementFactory|) method. 

The ObjectName for uniquely identifying the MXBean for the runtime system 
within an MBeanServer is: 
<tt>java.lang:type=Runtime</tt>(|java.lang.management.ManagementFactory|) 

This interface defines several convenient methods for accessing system 
properties about the Java virtual machine. 


*java.lang.management.RuntimeMXBean.getBootClassPath()*

public |java.lang.String| getBootClassPath()

Returns the boot class path that is used by the bootstrap class loader to 
search for class files. 

Multiple paths in the boot class path are separated by the path separator 
character of the platform on which the Java virtual machine is running. 

A Java virtual machine implementation may not support the boot class path 
mechanism for the bootstrap class loader to search for class files. The 
(|java.lang.management.RuntimeMXBean|) method can be used to determine if the 
Java virtual machine supports this method. 


    Returns: the boot class path. 
*java.lang.management.RuntimeMXBean.getClassPath()*

public |java.lang.String| getClassPath()

Returns the Java class path that is used by the system class loader to search 
for class files. This method is equivalent to 
System.getProperty("java.class.path")(|java.lang.System|) . 

Multiple paths in the Java class path are separated by the path separator 
character of the platform of the Java virtual machine being monitored. 


    Returns: the Java class path. 
*java.lang.management.RuntimeMXBean.getInputArguments()*

public |java.util.List| getInputArguments()

Returns the input arguments passed to the Java virtual machine which does not 
include the arguments to the main method. This method returns an empty list if 
there is no input argument to the Java virtual machine. 

Some Java virtual machine implementations may take input arguments from 
multiple different sources: for examples, arguments passed from the application 
that launches the Java virtual machine such as the 'java' command, environment 
variables, configuration files, etc. 

Typically, not all command-line options to the 'java' command are passed to the 
Java virtual machine. Thus, the returned input arguments may not include all 
command-line options. 

MBeanServer access: The mapped type of List is String[]. 


    Returns: a list of String objects; each element is an argument passed to the Java 
             virtual machine. 
*java.lang.management.RuntimeMXBean.getLibraryPath()*

public |java.lang.String| getLibraryPath()

Returns the Java library path. This method is equivalent to 
System.getProperty("java.library.path")(|java.lang.System|) . 

Multiple paths in the Java library path are separated by the path separator 
character of the platform of the Java virtual machine being monitored. 


    Returns: the Java library path. 
*java.lang.management.RuntimeMXBean.getManagementSpecVersion()*

public |java.lang.String| getManagementSpecVersion()

Returns the version of the specification for the management interface 
implemented by the running Java virtual machine. 


    Returns: the version of the specification for the management interface implemented by 
             the running Java virtual machine. 
*java.lang.management.RuntimeMXBean.getName()*

public |java.lang.String| getName()

Returns the name representing the running Java virtual machine. The returned 
name string can be any arbitrary string and a Java virtual machine 
implementation can choose to embed platform-specific useful information in the 
returned name string. Each running virtual machine could have a different name. 


    Returns: the name representing the running Java virtual machine. 
*java.lang.management.RuntimeMXBean.getSpecName()*

public |java.lang.String| getSpecName()

Returns the Java virtual machine specification name. This method is equivalent 
to System.getProperty("java.vm.specification.name")(|java.lang.System|) . 


    Returns: the Java virtual machine specification name. 
*java.lang.management.RuntimeMXBean.getSpecVendor()*

public |java.lang.String| getSpecVendor()

Returns the Java virtual machine specification vendor. This method is 
equivalent to 
System.getProperty("java.vm.specification.vendor")(|java.lang.System|) . 


    Returns: the Java virtual machine specification vendor. 
*java.lang.management.RuntimeMXBean.getSpecVersion()*

public |java.lang.String| getSpecVersion()

Returns the Java virtual machine specification version. This method is 
equivalent to 
System.getProperty("java.vm.specification.version")(|java.lang.System|) . 


    Returns: the Java virtual machine specification version. 
*java.lang.management.RuntimeMXBean.getStartTime()*

public long getStartTime()

Returns the start time of the Java virtual machine in milliseconds. This method 
returns the approximate time when the Java virtual machine started. 


    Returns: start time of the Java virtual machine in milliseconds. 
*java.lang.management.RuntimeMXBean.getSystemProperties()*

public |java.util.Map| getSystemProperties()

Returns a map of names and values of all system properties. This method calls 
(|java.lang.System|) to get all system properties. Properties whose name or 
value is not a String are omitted. 

MBeanServer access: The mapped type of Map is 
TabularData(|javax.management.openmbean.TabularData|) with two items in each 
row as follows: 



Item Name Item Type 

key String 

value String 




    Returns: a map of names and values of all system properties. 
*java.lang.management.RuntimeMXBean.getUptime()*

public long getUptime()

Returns the uptime of the Java virtual machine in milliseconds. 


    Returns: uptime of the Java virtual machine in milliseconds. 
*java.lang.management.RuntimeMXBean.getVmName()*

public |java.lang.String| getVmName()

Returns the Java virtual machine implementation name. This method is equivalent 
to System.getProperty("java.vm.name")(|java.lang.System|) . 


    Returns: the Java virtual machine implementation name. 
*java.lang.management.RuntimeMXBean.getVmVendor()*

public |java.lang.String| getVmVendor()

Returns the Java virtual machine implementation vendor. This method is 
equivalent to System.getProperty("java.vm.vendor")(|java.lang.System|) . 


    Returns: the Java virtual machine implementation vendor. 
*java.lang.management.RuntimeMXBean.getVmVersion()*

public |java.lang.String| getVmVersion()

Returns the Java virtual machine implementation version. This method is 
equivalent to System.getProperty("java.vm.version")(|java.lang.System|) . 


    Returns: the Java virtual machine implementation version. 
*java.lang.management.RuntimeMXBean.isBootClassPathSupported()*

public boolean isBootClassPathSupported()

Tests if the Java virtual machine supports the boot class path mechanism used 
by the bootstrap class loader to search for class files. 


    Returns: true if the Java virtual machine supports the class path mechanism; false 
             otherwise. 

