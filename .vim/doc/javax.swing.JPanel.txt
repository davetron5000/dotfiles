*javax.swing.JPanel* *JPanel* JPanel is a generic lightweight container.

public class JPanel
  extends    |javax.swing.JComponent|
  implements |javax.accessibility.Accessible|

|javax.swing.JPanel_Description|
|javax.swing.JPanel_Fields|
|javax.swing.JPanel_Constructors|
|javax.swing.JPanel_Methods|

====================================================================================================================================================================================

*javax.swing.JPanel_Constructors*
|javax.swing.JPanel()|Creates a new JPanel with a double buffer  and a flow layout.
|javax.swing.JPanel(boolean)|Creates a new JPanel with FlowLayout  and the specified buffering strategy.
|javax.swing.JPanel(LayoutManager)|Create a new buffered JPanel with the specified layout manager
|javax.swing.JPanel(LayoutManager,boolean)|Creates a new JPanel with the specified layout manager and buffering  strategy.

*javax.swing.JPanel_Methods*
|javax.swing.JPanel.getAccessibleContext()|Gets the AccessibleContext associated with this JPanel.
|javax.swing.JPanel.getUI()|Returns the look and feel (Lobject that renders this component.
|javax.swing.JPanel.getUIClassID()|Returns a string that specifies the name of the Lclass  that renders this component.
|javax.swing.JPanel.paramString()|Returns a string representation of this JPanel.
|javax.swing.JPanel.setUI(PanelUI)|Sets the look and feel (Lobject that renders this component.
|javax.swing.JPanel.updateUI()|Resets the UI property with a value from the current look and feel.

*javax.swing.JPanel_Description*

JPanel is a generic lightweight container. For examples and task-oriented documentation for JPanel, see How to Use Panels, a section in The Java Tutorial. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*javax.swing.JPanel()*

public JPanel()

Creates a new JPanel with a double buffer and a flow layout. 


*javax.swing.JPanel(boolean)*

public JPanel(boolean isDoubleBuffered)

Creates a new JPanel with FlowLayout and the specified buffering strategy. If isDoubleBuffered is true, the JPanel will use a double buffer. 

    isDoubleBuffered - a boolean, true for double-buffering, which uses additional memory space to achieve fast, flicker-free updates 

*javax.swing.JPanel(LayoutManager)*

public JPanel(java.awt.LayoutManager layout)

Create a new buffered JPanel with the specified layout manager 

    layout - the LayoutManager to use 

*javax.swing.JPanel(LayoutManager,boolean)*

public JPanel(
  java.awt.LayoutManager layout,
  boolean isDoubleBuffered)

Creates a new JPanel with the specified layout manager and buffering strategy. 

    layout - the LayoutManager to use 
    isDoubleBuffered - a boolean, true for double-buffering, which uses additional memory space to achieve fast, flicker-free updates 

*javax.swing.JPanel.getAccessibleContext()*

public |javax.accessibility.AccessibleContext| getAccessibleContext()

Gets the AccessibleContext associated with this JPanel. For JPanels, the AccessibleContext takes the form of an AccessibleJPanel. A new AccessibleJPanel instance is created if 
necessary. 



    Returns: an AccessibleJPanel that serves as the AccessibleContext of this JPanel 

*javax.swing.JPanel.getUI()*

public |javax.swing.plaf.PanelUI| getUI()

Returns the look and feel (Lobject that renders this component. 



    Returns: the PanelUI object that renders this component 

*javax.swing.JPanel.getUIClassID()*

public |java.lang.String| getUIClassID()

Returns a string that specifies the name of the Lclass that renders this component. 



    Returns: 

*javax.swing.JPanel.paramString()*

protected |java.lang.String| paramString()

Returns a string representation of this JPanel. This method is intended to be used only for debugging purposes, and the content and format of the returned string may vary between 
implementations. The returned string may be empty but may not be null. 



    Returns: a string representation of this JPanel. 

*javax.swing.JPanel.setUI(PanelUI)*

public void setUI(javax.swing.plaf.PanelUI ui)

Sets the look and feel (Lobject that renders this component. 


    ui - the PanelUI Lobject 

*javax.swing.JPanel.updateUI()*

public void updateUI()

Resets the UI property with a value from the current look and feel. 




