*java.awt.event.KeyListener* *KeyListener* The listener interface for receiving 

public interface interface KeyListener

  implements |java.util.EventListener|

|java.awt.event.KeyListener_Description|
|java.awt.event.KeyListener_Fields|
|java.awt.event.KeyListener_Constructors|
|java.awt.event.KeyListener_Methods|

================================================================================

*java.awt.event.KeyListener_Methods*
|java.awt.event.KeyListener.keyPressed(KeyEvent)|Invoked when a key has been pr
|java.awt.event.KeyListener.keyReleased(KeyEvent)|Invoked when a key has been r
|java.awt.event.KeyListener.keyTyped(KeyEvent)|Invoked when a key has been type

*java.awt.event.KeyListener_Description*

The listener interface for receiving keyboard events (keystrokes). The class 
that is interested in processing a keyboard event either implements this 
interface (and all the methods it contains) or extends the abstract KeyAdapter 
class (overriding only the methods of interest). 

The listener object created from that class is then registered with a component 
using the component's addKeyListener method. A keyboard event is generated when 
a key is pressed, released, or typed. The relevant method in the listener 
object is then invoked, and the KeyEvent is passed to it. 


*java.awt.event.KeyListener.keyPressed(KeyEvent)*

public void keyPressed(java.awt.event.KeyEvent e)

Invoked when a key has been pressed. See the class description for 
(|java.awt.event.KeyEvent|) for a definition of a key pressed event. 


*java.awt.event.KeyListener.keyReleased(KeyEvent)*

public void keyReleased(java.awt.event.KeyEvent e)

Invoked when a key has been released. See the class description for 
(|java.awt.event.KeyEvent|) for a definition of a key released event. 


*java.awt.event.KeyListener.keyTyped(KeyEvent)*

public void keyTyped(java.awt.event.KeyEvent e)

Invoked when a key has been typed. See the class description for 
(|java.awt.event.KeyEvent|) for a definition of a key typed event. 



