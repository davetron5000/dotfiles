*java.beans.beancontext.BeanContextChildSupport* *BeanContextChildSupport* 
 Thi

public class BeanContextChildSupport
  extends    |java.lang.Object|
  implements |java.beans.beancontext.BeanContextChild|
             |java.beans.beancontext.BeanContextServicesListener|
             |java.io.Serializable|

|java.beans.beancontext.BeanContextChildSupport_Description|
|java.beans.beancontext.BeanContextChildSupport_Fields|
|java.beans.beancontext.BeanContextChildSupport_Constructors|
|java.beans.beancontext.BeanContextChildSupport_Methods|

================================================================================

*java.beans.beancontext.BeanContextChildSupport_Fields*
|java.beans.beancontext.BeanContext_java.beans.beancontext.BeanContextChildSupport.beanContext|
|java.beans.beancontext.BeanContextChild_java.beans.beancontext.BeanContextChildSupport.beanContextChildPeer|
|java.beans.PropertyChangeSupport_java.beans.beancontext.BeanContextChildSupport.pcSupport|
|boolean_java.beans.beancontext.BeanContextChildSupport.rejectedSetBCOnce|
|java.beans.VetoableChangeSupport_java.beans.beancontext.BeanContextChildSupport.vcSupport|

*java.beans.beancontext.BeanContextChildSupport_Constructors*
|java.beans.beancontext.BeanContextChildSupport()|construct a BeanContextChildS
|java.beans.beancontext.BeanContextChildSupport(BeanContextChild)|construct a B

*java.beans.beancontext.BeanContextChildSupport_Methods*
|java.beans.beancontext.BeanContextChildSupport.addPropertyChangeListener(String,PropertyChangeListener)|
|java.beans.beancontext.BeanContextChildSupport.addVetoableChangeListener(String,VetoableChangeListener)|
|java.beans.beancontext.BeanContextChildSupport.firePropertyChange(String,Object,Object)|
|java.beans.beancontext.BeanContextChildSupport.fireVetoableChange(String,Object,Object)|
|java.beans.beancontext.BeanContextChildSupport.getBeanContext()|Gets the nesti
|java.beans.beancontext.BeanContextChildSupport.getBeanContextChildPeer()|Gets 
|java.beans.beancontext.BeanContextChildSupport.initializeBeanContextResources()|
|java.beans.beancontext.BeanContextChildSupport.isDelegated()|Reports whether o
|java.beans.beancontext.BeanContextChildSupport.releaseBeanContextResources()|T
|java.beans.beancontext.BeanContextChildSupport.removePropertyChangeListener(String,PropertyChangeListener)|
|java.beans.beancontext.BeanContextChildSupport.removeVetoableChangeListener(String,VetoableChangeListener)|
|java.beans.beancontext.BeanContextChildSupport.serviceAvailable(BeanContextServiceAvailableEvent)|
|java.beans.beancontext.BeanContextChildSupport.serviceRevoked(BeanContextServiceRevokedEvent)|
|java.beans.beancontext.BeanContextChildSupport.setBeanContext(BeanContext)|Set
|java.beans.beancontext.BeanContextChildSupport.validatePendingSetBeanContext(BeanContext)|

*java.beans.beancontext.BeanContextChildSupport_Description*

This is a general support class to provide support for implementing the 
BeanContextChild protocol. 

This class may either be directly subclassed, or encapsulated and delegated to 
in order to implement this interface for a given component. 


*java.beans.beancontext.BeanContext_java.beans.beancontext.BeanContextChildSupport.beanContext*

This is a general support class to provide support for implementing the 
BeanContextChild protocol. 

This class may either be directly subclassed, or encapsulated and delegated to 
in order to implement this interface for a given component. 


*java.beans.beancontext.BeanContextChild_java.beans.beancontext.BeanContextChildSupport.beanContextChildPeer*

This is a general support class to provide support for implementing the 
BeanContextChild protocol. 

This class may either be directly subclassed, or encapsulated and delegated to 
in order to implement this interface for a given component. 


*java.beans.PropertyChangeSupport_java.beans.beancontext.BeanContextChildSupport.pcSupport*

This is a general support class to provide support for implementing the 
BeanContextChild protocol. 

This class may either be directly subclassed, or encapsulated and delegated to 
in order to implement this interface for a given component. 


*boolean_java.beans.beancontext.BeanContextChildSupport.rejectedSetBCOnce*

This is a general support class to provide support for implementing the 
BeanContextChild protocol. 

This class may either be directly subclassed, or encapsulated and delegated to 
in order to implement this interface for a given component. 


*java.beans.VetoableChangeSupport_java.beans.beancontext.BeanContextChildSupport.vcSupport*

This is a general support class to provide support for implementing the 
BeanContextChild protocol. 

This class may either be directly subclassed, or encapsulated and delegated to 
in order to implement this interface for a given component. 



*java.beans.beancontext.BeanContextChildSupport()*

public BeanContextChildSupport()

construct a BeanContextChildSupport where this class has been subclassed in 
order to implement the JavaBean component itself. 


*java.beans.beancontext.BeanContextChildSupport(BeanContextChild)*

public BeanContextChildSupport(java.beans.beancontext.BeanContextChild bcc)

construct a BeanContextChildSupport where the JavaBean component itself 
implements BeanContextChild, and encapsulates this, delegating that interface 
to this implementation 


*java.beans.beancontext.BeanContextChildSupport.addPropertyChangeListener(String,PropertyChangeListener)*

public void addPropertyChangeListener(
  java.lang.String name,
  java.beans.PropertyChangeListener pcl)

Add a PropertyChangeListener for a specific property. The same listener object 
may be added more than once. For each property, the listener will be invoked 
the number of times it was added for that property. If name or pcl is null, no 
exception is thrown and no action is taken. 

    name - The name of the property to listen on 
    pcl - The PropertyChangeListener to be added 

*java.beans.beancontext.BeanContextChildSupport.addVetoableChangeListener(String,VetoableChangeListener)*

public void addVetoableChangeListener(
  java.lang.String name,
  java.beans.VetoableChangeListener vcl)

Add a VetoableChangeListener for a specific property. The same listener object 
may be added more than once. For each property, the listener will be invoked 
the number of times it was added for that property. If name or vcl is null, no 
exception is thrown and no action is taken. 

    name - The name of the property to listen on 
    vcl - The VetoableChangeListener to be added 

*java.beans.beancontext.BeanContextChildSupport.firePropertyChange(String,Object,Object)*

public void firePropertyChange(
  java.lang.String name,
  java.lang.Object oldValue,
  java.lang.Object newValue)

Report a bound property update to any registered listeners. No event is fired 
if old and new are equal and non-null. 

    name - The programmatic name of the property that was changed 
    oldValue - The old value of the property 
    newValue - The new value of the property 

*java.beans.beancontext.BeanContextChildSupport.fireVetoableChange(String,Object,Object)*

public void fireVetoableChange(
  java.lang.String name,
  java.lang.Object oldValue,
  java.lang.Object newValue)
  throws |java.beans.PropertyVetoException|
         
Report a vetoable property update to any registered listeners. If anyone vetos 
the change, then fire a new event reverting everyone to the old value and then 
rethrow the PropertyVetoException. 

No event is fired if old and new are equal and non-null. 

    name - The programmatic name of the property that is about to change 
    oldValue - The old value of the property 
    newValue - - The new value of the property 

*java.beans.beancontext.BeanContextChildSupport.getBeanContext()*

public synchronized |java.beans.beancontext.BeanContext| getBeanContext()

Gets the nesting BeanContext for this BeanContextChildSupport. 


    Returns: the nesting BeanContext for this BeanContextChildSupport. 
*java.beans.beancontext.BeanContextChildSupport.getBeanContextChildPeer()*

public |java.beans.beancontext.BeanContextChild| getBeanContextChildPeer()

Gets the BeanContextChild associated with this BeanContextChildSupport. 


    Returns: the BeanContextChild peer of this class 
*java.beans.beancontext.BeanContextChildSupport.initializeBeanContextResources()*

protected void initializeBeanContextResources()

This method may be overridden by subclasses to provide their own initialization 
behaviors. When invoked any resources requried by the BeanContextChild should 
be obtained from the current BeanContext. 


*java.beans.beancontext.BeanContextChildSupport.isDelegated()*

public boolean isDelegated()

Reports whether or not this class is a delegate of another. 


    Returns: true if this class is a delegate of another 
*java.beans.beancontext.BeanContextChildSupport.releaseBeanContextResources()*

protected void releaseBeanContextResources()

This method may be overridden by subclasses to provide their own release 
behaviors. When invoked any resources held by this instance obtained from its 
current BeanContext property should be released since the object is no longer 
nested within that BeanContext. 


*java.beans.beancontext.BeanContextChildSupport.removePropertyChangeListener(String,PropertyChangeListener)*

public void removePropertyChangeListener(
  java.lang.String name,
  java.beans.PropertyChangeListener pcl)

Remove a PropertyChangeListener for a specific property. If pcl was added more 
than once to the same event source for the specified property, it will be 
notified one less time after being removed. If name is null, no exception is 
thrown and no action is taken. If pcl is null, or was never added for the 
specified property, no exception is thrown and no action is taken. 

    name - The name of the property that was listened on 
    pcl - The PropertyChangeListener to be removed 

*java.beans.beancontext.BeanContextChildSupport.removeVetoableChangeListener(String,VetoableChangeListener)*

public void removeVetoableChangeListener(
  java.lang.String name,
  java.beans.VetoableChangeListener vcl)

Removes a VetoableChangeListener. If pcl was added more than once to the same 
event source for the specified property, it will be notified one less time 
after being removed. If name is null, no exception is thrown and no action is 
taken. If vcl is null, or was never added for the specified property, no 
exception is thrown and no action is taken. 

    name - The name of the property that was listened on 
    vcl - The VetoableChangeListener to be removed 

*java.beans.beancontext.BeanContextChildSupport.serviceAvailable(BeanContextServiceAvailableEvent)*

public void serviceAvailable(java.beans.beancontext.BeanContextServiceAvailableEvent bcsae)

A new service is available from the nesting BeanContext. 

Subclasses may override this method in order to implement their own behaviors 

    bcsae - The BeanContextServiceAvailableEvent fired as a result of a service becoming 
       available 

*java.beans.beancontext.BeanContextChildSupport.serviceRevoked(BeanContextServiceRevokedEvent)*

public void serviceRevoked(java.beans.beancontext.BeanContextServiceRevokedEvent bcsre)

A service provided by the nesting BeanContext has been revoked. 

Subclasses may override this method in order to implement their own behaviors. 

    bcsre - The BeanContextServiceRevokedEvent fired as a result of a service being revoked 

*java.beans.beancontext.BeanContextChildSupport.setBeanContext(BeanContext)*

public synchronized void setBeanContext(java.beans.beancontext.BeanContext bc)
  throws |java.beans.PropertyVetoException|
         
Sets the BeanContext for this BeanContextChildSupport. 

    bc - the new value to be assigned to the BeanContext property 

*java.beans.beancontext.BeanContextChildSupport.validatePendingSetBeanContext(BeanContext)*

public boolean validatePendingSetBeanContext(java.beans.beancontext.BeanContext newValue)

Called from setBeanContext to validate (or otherwise) the pending change in the 
nesting BeanContext property value. Returning false will cause setBeanContext 
to throw PropertyVetoException. 

    newValue - the new value that has been requested for the BeanContext property 

    Returns: true if the change operation is to be vetoed 

