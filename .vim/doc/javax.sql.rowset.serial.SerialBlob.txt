*javax.sql.rowset.serial.SerialBlob* *SerialBlob* A serialized mapping in the Ja

public class SerialBlob
  extends    |java.lang.Object|
  implements |java.sql.Blob|
             |java.io.Serializable|
             |java.lang.Cloneable|

|javax.sql.rowset.serial.SerialBlob_Description|
|javax.sql.rowset.serial.SerialBlob_Fields|
|javax.sql.rowset.serial.SerialBlob_Constructors|
|javax.sql.rowset.serial.SerialBlob_Methods|

================================================================================

*javax.sql.rowset.serial.SerialBlob_Constructors*
|javax.sql.rowset.serial.SerialBlob(Blob)|Constructs a SerialBlob object that i
|javax.sql.rowset.serial.SerialBlob(byte[])|Constructs a SerialBlob object that

*javax.sql.rowset.serial.SerialBlob_Methods*
|javax.sql.rowset.serial.SerialBlob.getBinaryStream()|Returns this SerialBlob o
|javax.sql.rowset.serial.SerialBlob.getBytes(long,int)|Copies the specified num
|javax.sql.rowset.serial.SerialBlob.length()|Retrieves the number of bytes in t
|javax.sql.rowset.serial.SerialBlob.position(Blob,long)|Returns the position in
|javax.sql.rowset.serial.SerialBlob.position(byte[],long)|Returns the position 
|javax.sql.rowset.serial.SerialBlob.setBinaryStream(long)|Retrieves a stream th
|javax.sql.rowset.serial.SerialBlob.setBytes(long,byte[])|Writes the given arra
|javax.sql.rowset.serial.SerialBlob.setBytes(long,byte[],int,int)|Writes all or
|javax.sql.rowset.serial.SerialBlob.truncate(long)|Truncates the BLOB value tha

*javax.sql.rowset.serial.SerialBlob_Description*

A serialized mapping in the Java programming language of an SQL BLOB value. 

The SerialBlob class provides a constructor for creating an instance from a 
Blob object. Note that the Blob object should have brought the SQL BLOB value's 
data over to the client before a SerialBlob object is constructed from it. The 
data of an SQL BLOB value can be materialized on the client as an array of 
bytes (using the method Blob.getBytes) or as a stream of uninterpreted bytes 
(using the method Blob.getBinaryStream). 

SerialBlob methods make it possible to make a copy of a SerialBlob object as an 
array of bytes or as a stream. They also make it possible to locate a given 
pattern of bytes or a Blob object within a SerialBlob object and to update or 
truncate a Blob object. 


*javax.sql.rowset.serial.SerialBlob(Blob)*

public SerialBlob(java.sql.Blob blob)
  throws |javax.sql.rowset.serial.SerialException|
         |java.sql.SQLException|
         
Constructs a SerialBlob object that is a serialized version of the given Blob 
object. 

The new SerialBlob object is initialized with the data from the Blob object; 
therefore, the Blob object should have previously brought the SQL BLOB value's 
data over to the client from the database. Otherwise, the new SerialBlob object 
will contain no data. 

    blob - the Blob object from which this SerialBlob object is to be constructed; cannot 
       be null. 

*javax.sql.rowset.serial.SerialBlob(byte[])*

public SerialBlob(byte[] b)
  throws |javax.sql.rowset.serial.SerialException|
         |java.sql.SQLException|
         
Constructs a SerialBlob object that is a serialized version of the given byte 
array. 

The new SerialBlob object is initialized with the data from the byte array, 
thus allowing disconnected RowSet objects to establish serialized Blob objects 
without touching the data source. 

    b - the byte array containing the data for the Blob object to be serialized 

*javax.sql.rowset.serial.SerialBlob.getBinaryStream()*

public |java.io.InputStream| getBinaryStream()
  throws |javax.sql.rowset.serial.SerialException|
         
Returns this SerialBlob object as an input stream. Unlike the related method, 
setBinaryStream, a stream is produced regardless of whether the SerialBlob was 
created with a Blob object or a byte array. 


    Returns: a java.io.InputStream object that contains this SerialBlob object's array of 
             bytes 
*javax.sql.rowset.serial.SerialBlob.getBytes(long,int)*

public byte getBytes(
  long pos,
  int length)
  throws |javax.sql.rowset.serial.SerialException|
         
Copies the specified number of bytes, starting at the given position, from this 
SerialBlob object to another array of bytes. 

Note that if the given number of bytes to be copied is larger than the length 
of this SerialBlob object's array of bytes, the given number will be shortened 
to the array's length. 

    pos - the ordinal position of the first byte in this SerialBlob object to be copied; 
       numbering starts at 1; must not be less than 1 and must be less than or 
       equal to the length of this SerialBlob object 
    length - the number of bytes to be copied 

    Returns: an array of bytes that is a copy of a region of this SerialBlob object, 
             starting at the given position and containing the given number of 
             consecutive bytes 
*javax.sql.rowset.serial.SerialBlob.length()*

public long length()
  throws |javax.sql.rowset.serial.SerialException|
         
Retrieves the number of bytes in this SerialBlob object's array of bytes. 


    Returns: a long indicating the length in bytes of this SerialBlob object's array of 
             bytes 
*javax.sql.rowset.serial.SerialBlob.position(Blob,long)*

public long position(
  java.sql.Blob pattern,
  long start)
  throws |javax.sql.rowset.serial.SerialException|
         |java.sql.SQLException|
         
Returns the position in this SerialBlob object where the given Blob object 
begins, starting the search at the specified position. 

    pattern - the Blob object for which to search; 
    start - the position of the byte in this SerialBlob object from which to begin the 
       search; the first position is 1; must not be less than 1 nor greater 
       than the length of this SerialBlob object 

    Returns: the position in this SerialBlob object where the given Blob object begins, 
             starting at the specified position; -1 if the pattern is not found 
             or the given starting position is out of bounds; position 
             numbering for the return value starts at 1 
*javax.sql.rowset.serial.SerialBlob.position(byte[],long)*

public long position(
  byte[] pattern,
  long start)
  throws |javax.sql.rowset.serial.SerialException|
         |java.sql.SQLException|
         
Returns the position in this SerialBlob object where the given pattern of bytes 
begins, starting the search at the specified position. 

    pattern - the pattern of bytes for which to search 
    start - the position of the byte in this SerialBlob object from which to begin the 
       search; the first position is 1; must not be less than 1 nor greater 
       than the length of this SerialBlob object 

    Returns: the position in this SerialBlob object where the given pattern begins, starting 
             at the specified position; -1 if the pattern is not found or the 
             given starting position is out of bounds; position numbering for 
             the return value starts at 1 
*javax.sql.rowset.serial.SerialBlob.setBinaryStream(long)*

public |java.io.OutputStream| setBinaryStream(long pos)
  throws |javax.sql.rowset.serial.SerialException|
         |java.sql.SQLException|
         
Retrieves a stream that can be used to write to the BLOB value that this Blob 
object represents. The stream begins at position pos. This method forwards the 
setBinaryStream() call to the underlying Blob in the event that this SerialBlob 
object is instantiated with a Blob. If this SerialBlob is instantiated with a 
byte array, a SerialException is thrown. 

    pos - the position in the BLOB value at which to start writing 

    Returns: a java.io.OutputStream object to which data can be written 
*javax.sql.rowset.serial.SerialBlob.setBytes(long,byte[])*

public int setBytes(
  long pos,
  byte[] bytes)
  throws |javax.sql.rowset.serial.SerialException|
         |java.sql.SQLException|
         
Writes the given array of bytes to the BLOB value that this Blob object 
represents, starting at position pos, and returns the number of bytes written. 

    pos - the position in the SQL BLOB value at which to start writing. The first 
       position is 1; must not be less than 1 nor greater than the length of 
       this SerialBlob object. 
    bytes - the array of bytes to be written to the BLOB value that this Blob object 
       represents 

    Returns: the number of bytes written 
*javax.sql.rowset.serial.SerialBlob.setBytes(long,byte[],int,int)*

public int setBytes(
  long pos,
  byte[] bytes,
  int offset,
  int length)
  throws |javax.sql.rowset.serial.SerialException|
         |java.sql.SQLException|
         
Writes all or part of the given byte array to the BLOB value that this Blob 
object represents and returns the number of bytes written. Writing starts at 
position pos in the BLOB value; len bytes from the given byte array are 
written. 

    pos - the position in the BLOB object at which to start writing. The first position 
       is 1; must not be less than 1 nor greater than the length of this 
       SerialBlob object. 
    bytes - the array of bytes to be written to the BLOB value 
    offset - the offset in the byte array at which to start reading the bytes. The first 
       offset position is 0; must not be less than 0 nor greater than the 
       length of the byte array 
    length - the number of bytes to be written to the BLOB value from the array of bytes 
       bytes. 

    Returns: the number of bytes written 
*javax.sql.rowset.serial.SerialBlob.truncate(long)*

public void truncate(long length)
  throws |javax.sql.rowset.serial.SerialException|
         
Truncates the BLOB value that this Blob object represents to be len bytes in 
length. 

    length - the length, in bytes, to which the BLOB value that this Blob object represents 
       should be truncated 


