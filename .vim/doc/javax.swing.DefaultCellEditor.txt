*javax.swing.DefaultCellEditor* *DefaultCellEditor* The default editor for table and tree cells.

public class DefaultCellEditor
  extends    |javax.swing.AbstractCellEditor|
  implements |javax.swing.table.TableCellEditor|
             |javax.swing.tree.TreeCellEditor|

|javax.swing.DefaultCellEditor_Description|
|javax.swing.DefaultCellEditor_Fields|
|javax.swing.DefaultCellEditor_Constructors|
|javax.swing.DefaultCellEditor_Methods|

====================================================================================================================================================================================

*javax.swing.DefaultCellEditor_Fields*
|int_javax.swing.DefaultCellEditor.clickCountToStart|
|javax.swing.DefaultCellEditor.EditorDelegate_javax.swing.DefaultCellEditor.delegate|
|javax.swing.JComponent_javax.swing.DefaultCellEditor.editorComponent|

*javax.swing.DefaultCellEditor_Constructors*
|javax.swing.DefaultCellEditor(JCheckBox)|Constructs a DefaultCellEditor object that uses a check box.
|javax.swing.DefaultCellEditor(JComboBox)|Constructs a DefaultCellEditor object that uses a  combo box.
|javax.swing.DefaultCellEditor(JTextField)|Constructs a DefaultCellEditor that uses a text field.

*javax.swing.DefaultCellEditor_Methods*
|javax.swing.DefaultCellEditor.cancelCellEditing()|Forwards the message from the CellEditor to  the delegate.
|javax.swing.DefaultCellEditor.getCellEditorValue()|Forwards the message from the CellEditor to  the delegate.
|javax.swing.DefaultCellEditor.getClickCountToStart()|Returns the number of clicks needed to start editing.
|javax.swing.DefaultCellEditor.getComponent()|Returns a reference to the editor component.
|javax.swing.DefaultCellEditor.getTableCellEditorComponent(JTable,Object,boolean,int,int)|Implements the TableCellEditor interface.
|javax.swing.DefaultCellEditor.getTreeCellEditorComponent(JTree,Object,boolean,boolean,boolean,int)|Implements the TreeCellEditor interface.
|javax.swing.DefaultCellEditor.isCellEditable(EventObject)|Forwards the message from the CellEditor to  the delegate.
|javax.swing.DefaultCellEditor.setClickCountToStart(int)|Specifies the number of clicks needed to start editing.
|javax.swing.DefaultCellEditor.shouldSelectCell(EventObject)|Forwards the message from the CellEditor to  the delegate.
|javax.swing.DefaultCellEditor.stopCellEditing()|Forwards the message from the CellEditor to  the delegate.

*javax.swing.DefaultCellEditor_Description*

The default editor for table and tree cells. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support is appropriate for short term storage or RMI between 
applications running the same version of Swing. As of 1.4, support for long term storage of all JavaBeansTM has been added to the java.beans package. Please see 
(|java.beans.XMLEncoder|) . 



*int_javax.swing.DefaultCellEditor.clickCountToStart*

An integer specifying the number of clicks needed to start editing. Even if clickCountToStart is defined as zero, it will not initiate until a click occurs. 


*javax.swing.DefaultCellEditor.EditorDelegate_javax.swing.DefaultCellEditor.delegate*

The delegate class which handles all methods sent from the CellEditor. 


*javax.swing.JComponent_javax.swing.DefaultCellEditor.editorComponent*

The Swing component being edited. 



*javax.swing.DefaultCellEditor(JCheckBox)*

public DefaultCellEditor(javax.swing.JCheckBox checkBox)

Constructs a DefaultCellEditor object that uses a check box. 

    checkBox - a JCheckBox object 

*javax.swing.DefaultCellEditor(JComboBox)*

public DefaultCellEditor(javax.swing.JComboBox comboBox)

Constructs a DefaultCellEditor object that uses a combo box. 

    comboBox - a JComboBox object 

*javax.swing.DefaultCellEditor(JTextField)*

public DefaultCellEditor(javax.swing.JTextField textField)

Constructs a DefaultCellEditor that uses a text field. 

    textField - a JTextField object 

*javax.swing.DefaultCellEditor.cancelCellEditing()*

public void cancelCellEditing()

Forwards the message from the CellEditor to the delegate. 



*javax.swing.DefaultCellEditor.getCellEditorValue()*

public |java.lang.Object| getCellEditorValue()

Forwards the message from the CellEditor to the delegate. 



*javax.swing.DefaultCellEditor.getClickCountToStart()*

public int getClickCountToStart()

Returns the number of clicks needed to start editing. 



    Returns: the number of clicks needed to start editing 

*javax.swing.DefaultCellEditor.getComponent()*

public |java.awt.Component| getComponent()

Returns a reference to the editor component. 



    Returns: the editor Component 

*javax.swing.DefaultCellEditor.getTableCellEditorComponent(JTable,Object,boolean,int,int)*

public |java.awt.Component| getTableCellEditorComponent(
  javax.swing.JTable table,
  java.lang.Object value,
  boolean isSelected,
  int row,
  int column)

Implements the TableCellEditor interface. 



*javax.swing.DefaultCellEditor.getTreeCellEditorComponent(JTree,Object,boolean,boolean,boolean,int)*

public |java.awt.Component| getTreeCellEditorComponent(
  javax.swing.JTree tree,
  java.lang.Object value,
  boolean isSelected,
  boolean expanded,
  boolean leaf,
  int row)

Implements the TreeCellEditor interface. 



*javax.swing.DefaultCellEditor.isCellEditable(EventObject)*

public boolean isCellEditable(java.util.EventObject anEvent)

Forwards the message from the CellEditor to the delegate. 



*javax.swing.DefaultCellEditor.setClickCountToStart(int)*

public void setClickCountToStart(int count)

Specifies the number of clicks needed to start editing. 


    count - an int specifying the number of clicks needed to start editing 

*javax.swing.DefaultCellEditor.shouldSelectCell(EventObject)*

public boolean shouldSelectCell(java.util.EventObject anEvent)

Forwards the message from the CellEditor to the delegate. 



*javax.swing.DefaultCellEditor.stopCellEditing()*

public boolean stopCellEditing()

Forwards the message from the CellEditor to the delegate. 




