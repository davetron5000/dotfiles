*java.net.URLStreamHandler* *URLStreamHandler* The abstract class URLStreamHandler is the common
 superclass for all stream protocol handlers.

public abstract class URLStreamHandler
  extends    |java.lang.Object|

|java.net.URLStreamHandler_Description|
|java.net.URLStreamHandler_Fields|
|java.net.URLStreamHandler_Constructors|
|java.net.URLStreamHandler_Methods|

====================================================================================================================================================================================

*java.net.URLStreamHandler_Constructors*
|java.net.URLStreamHandler()|

*java.net.URLStreamHandler_Methods*
|java.net.URLStreamHandler.equals(URL,URL)|Provides the default equals calculation.
|java.net.URLStreamHandler.getDefaultPort()|Returns the default port for a URL parsed by this handler.
|java.net.URLStreamHandler.getHostAddress(URL)|Get the IP address of our host.
|java.net.URLStreamHandler.hashCode(URL)|Provides the default hash calculation.
|java.net.URLStreamHandler.hostsEqual(URL,URL)|Compares the host components of two URLs.
|java.net.URLStreamHandler.openConnection(URL)|Opens a connection to the object referenced by the  URL argument.
|java.net.URLStreamHandler.openConnection(URL,Proxy)|Same as openConnection(URL), except that the connection will be  made through the specified proxy; Protocol handlers that do n
|java.net.URLStreamHandler.parseURL(URL,String,int,int)|Parses the string representation of a URL into a  URL object.
|java.net.URLStreamHandler.sameFile(URL,URL)|Compare two urls to see whether they refer to the same file,  i.e., having the same protocol, host, port, and path.
|java.net.URLStreamHandler.setURL(URL,String,String,int,String,String)|Sets the fields of the URL argument to the indicated values.
|java.net.URLStreamHandler.setURL(URL,String,String,int,String,String,String,String,String)|Sets the fields of the URL argument to the indicated values.
|java.net.URLStreamHandler.toExternalForm(URL)|Converts a URL of a specific protocol to a  String.

*java.net.URLStreamHandler_Description*

The abstract class URLStreamHandler is the common superclass for all stream protocol handlers. A stream protocol handler knows how to make a connection for a particular protocol 
type, such as http, ftp, or gopher. 

In most cases, an instance of a URLStreamHandler subclass is not created directly by an application. Rather, the first time a protocol name is encountered when constructing a URL, 
the appropriate stream protocol handler is automatically loaded. 



*java.net.URLStreamHandler()*

public URLStreamHandler()




*java.net.URLStreamHandler.equals(URL,URL)*

protected boolean equals(
  java.net.URL u1,
  java.net.URL u2)

Provides the default equals calculation. May be overidden by handlers for other protocols that have different requirements for equals(). This method requires that none of its 
arguments is null. This is guaranteed by the fact that it is only called by java.net.URL class. 


    u1 - a URL object 
    u2 - a URL object 

    Returns: true if the two urls are considered equal, ie. they refer to the same fragment in the same file. 

*java.net.URLStreamHandler.getDefaultPort()*

protected int getDefaultPort()

Returns the default port for a URL parsed by this handler. This method is meant to be overidden by handlers with default port numbers. 



    Returns: the default port for a URL parsed by this handler. 

*java.net.URLStreamHandler.getHostAddress(URL)*

protected synchronized |java.net.InetAddress| getHostAddress(java.net.URL u)

Get the IP address of our host. An empty host field or a DNS failure will result in a null return. 


    u - a URL object 

    Returns: an InetAddress representing the host IP address. 

*java.net.URLStreamHandler.hashCode(URL)*

protected int hashCode(java.net.URL u)

Provides the default hash calculation. May be overidden by handlers for other protocols that have different requirements for hashCode calculation. 


    u - a URL object 

    Returns: an int suitable for hash table indexing 

*java.net.URLStreamHandler.hostsEqual(URL,URL)*

protected boolean hostsEqual(
  java.net.URL u1,
  java.net.URL u2)

Compares the host components of two URLs. 


    u1 - the URL of the first host to compare 
    u2 - the URL of the second host to compare 

    Returns: true if and only if they are equal, false otherwise. 

*java.net.URLStreamHandler.openConnection(URL)*

protected abstract |java.net.URLConnection| openConnection(java.net.URL u)
  throws |java.io.IOException|
         
Opens a connection to the object referenced by the URL argument. This method should be overridden by a subclass. 

If for the handler's protocol (such as HTTP or JAR), there exists a public, specialized URLConnection subclass belonging to one of the following packages or one of their 
subpackages: java.lang, java.io, java.util, java.net, the connection returned will be of that subclass. For example, for HTTP an HttpURLConnection will be returned, and for JAR a 
JarURLConnection will be returned. 


    u - the URL that this connects to. 

    Returns: a URLConnection object for the URL. 

*java.net.URLStreamHandler.openConnection(URL,Proxy)*

protected |java.net.URLConnection| openConnection(
  java.net.URL u,
  java.net.Proxy p)
  throws |java.io.IOException|
         
Same as openConnection(URL), except that the connection will be made through the specified proxy; Protocol handlers that do not support proxing will ignore the proxy parameter and 
make a normal connection. 

Calling this method preempts the system's default ProxySelector settings. 


    u - the URL that this connects to. 
    p - the proxy through which the connection will be made. If direct connection is desired, Proxy.NO_PROXY should be specified. 

    Returns: a URLConnection object for the URL. 

*java.net.URLStreamHandler.parseURL(URL,String,int,int)*

protected void parseURL(
  java.net.URL u,
  java.lang.String spec,
  int start,
  int limit)

Parses the string representation of a URL into a URL object. 

If there is any inherited context, then it has already been copied into the URL argument. 

The parseURL method of URLStreamHandler parses the string representation as if it were an http specification. Most URL protocol families have a similar parsing. A stream protocol 
handler for a protocol that has a different syntax must override this routine. 


    u - the URL to receive the result of parsing the spec. 
    spec - the String representing the URL that must be parsed. 
    start - the character index at which to begin parsing. This is just past the ':' (if there is one) that specifies the determination of the protocol name. 
    limit - the character position to stop parsing at. This is the end of the string or the position of the "#" character, if present. All information after the sharp sign indicates an 
       anchor. 

*java.net.URLStreamHandler.sameFile(URL,URL)*

protected boolean sameFile(
  java.net.URL u1,
  java.net.URL u2)

Compare two urls to see whether they refer to the same file, i.e., having the same protocol, host, port, and path. This method requires that none of its arguments is null. This is 
guaranteed by the fact that it is only called indirectly by java.net.URL class. 


    u1 - a URL object 
    u2 - a URL object 

    Returns: true if u1 and u2 refer to the same file 

*java.net.URLStreamHandler.setURL(URL,String,String,int,String,String)*

protected void setURL(
  java.net.URL u,
  java.lang.String protocol,
  java.lang.String host,
  int port,
  java.lang.String file,
  java.lang.String ref)

Sets the fields of the URL argument to the indicated values. Only classes derived from URLStreamHandler are supposed to be able to call the set method on a URL. 

    Deprecated: Use setURL(URL, String, String, int, String, String, String,
             String);

    u - the URL to modify. 
    protocol - the protocol name. This value is ignored since 1.2. 
    host - the remote host value for the URL. 
    port - the port on the remote machine. 
    file - the file. 
    ref - the reference. 

*java.net.URLStreamHandler.setURL(URL,String,String,int,String,String,String,String,String)*

protected void setURL(
  java.net.URL u,
  java.lang.String protocol,
  java.lang.String host,
  int port,
  java.lang.String authority,
  java.lang.String userInfo,
  java.lang.String path,
  java.lang.String query,
  java.lang.String ref)

Sets the fields of the URL argument to the indicated values. Only classes derived from URLStreamHandler are supposed to be able to call the set method on a URL. 


    u - the URL to modify. 
    protocol - the protocol name. 
    host - the remote host value for the URL. 
    port - the port on the remote machine. 
    authority - the authority part for the URL. 
    userInfo - the userInfo part of the URL. 
    path - the path component of the URL. 
    query - the query part for the URL. 
    ref - the reference. 

*java.net.URLStreamHandler.toExternalForm(URL)*

protected |java.lang.String| toExternalForm(java.net.URL u)

Converts a URL of a specific protocol to a String. 


    u - the URL. 

    Returns: a string representation of the URL argument. 


