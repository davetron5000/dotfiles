*javax.swing.event.InternalFrameListener* *InternalFrameListener* The listener i

public interface interface InternalFrameListener

  implements |java.util.EventListener|

|javax.swing.event.InternalFrameListener_Description|
|javax.swing.event.InternalFrameListener_Fields|
|javax.swing.event.InternalFrameListener_Constructors|
|javax.swing.event.InternalFrameListener_Methods|

================================================================================

*javax.swing.event.InternalFrameListener_Methods*
|javax.swing.event.InternalFrameListener.internalFrameActivated(InternalFrameEvent)|
|javax.swing.event.InternalFrameListener.internalFrameClosed(InternalFrameEvent)|
|javax.swing.event.InternalFrameListener.internalFrameClosing(InternalFrameEvent)|
|javax.swing.event.InternalFrameListener.internalFrameDeactivated(InternalFrameEvent)|
|javax.swing.event.InternalFrameListener.internalFrameDeiconified(InternalFrameEvent)|
|javax.swing.event.InternalFrameListener.internalFrameIconified(InternalFrameEvent)|
|javax.swing.event.InternalFrameListener.internalFrameOpened(InternalFrameEvent)|

*javax.swing.event.InternalFrameListener_Description*

The listener interface for receiving internal frame events. This class is 
functionally equivalent to the WindowListener class in the AWT. 

See How to Write an Internal Frame Listener in The Java Tutorial and The Java 
Class Libraries (update) for further documentation. 


*javax.swing.event.InternalFrameListener.internalFrameActivated(InternalFrameEvent)*

public void internalFrameActivated(javax.swing.event.InternalFrameEvent e)

Invoked when an internal frame is activated. 


*javax.swing.event.InternalFrameListener.internalFrameClosed(InternalFrameEvent)*

public void internalFrameClosed(javax.swing.event.InternalFrameEvent e)

Invoked when an internal frame has been closed. 


*javax.swing.event.InternalFrameListener.internalFrameClosing(InternalFrameEvent)*

public void internalFrameClosing(javax.swing.event.InternalFrameEvent e)

Invoked when an internal frame is in the process of being closed. The close 
operation can be overridden at this point. 


*javax.swing.event.InternalFrameListener.internalFrameDeactivated(InternalFrameEvent)*

public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent e)

Invoked when an internal frame is de-activated. 


*javax.swing.event.InternalFrameListener.internalFrameDeiconified(InternalFrameEvent)*

public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent e)

Invoked when an internal frame is de-iconified. 


*javax.swing.event.InternalFrameListener.internalFrameIconified(InternalFrameEvent)*

public void internalFrameIconified(javax.swing.event.InternalFrameEvent e)

Invoked when an internal frame is iconified. 


*javax.swing.event.InternalFrameListener.internalFrameOpened(InternalFrameEvent)*

public void internalFrameOpened(javax.swing.event.InternalFrameEvent e)

Invoked when a internal frame has been opened. 



