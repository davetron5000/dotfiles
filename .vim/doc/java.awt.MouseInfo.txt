*java.awt.MouseInfo* *MouseInfo* MouseInfo  provides methods for getting informa

public class MouseInfo
  extends    |java.lang.Object|

|java.awt.MouseInfo_Description|
|java.awt.MouseInfo_Fields|
|java.awt.MouseInfo_Constructors|
|java.awt.MouseInfo_Methods|

================================================================================

*java.awt.MouseInfo_Methods*
|java.awt.MouseInfo.getNumberOfButtons()|Returns the number of buttons on the m
|java.awt.MouseInfo.getPointerInfo()|Returns a PointerInfo instance that repres

*java.awt.MouseInfo_Description*

MouseInfo provides methods for getting information about the mouse, such as 
mouse pointer location and the number of mouse buttons. 


*java.awt.MouseInfo.getNumberOfButtons()*

public static int getNumberOfButtons()
  throws |java.awt.HeadlessException|
         
Returns the number of buttons on the mouse. On systems without a mouse, returns 
-1. 


    Returns: number of buttons on the mouse 
*java.awt.MouseInfo.getPointerInfo()*

public static |java.awt.PointerInfo| getPointerInfo()
  throws |java.awt.HeadlessException|
         
Returns a PointerInfo instance that represents the current location of the 
mouse pointer. The GraphicsDevice stored in this PointerInfo contains the mouse 
pointer. The coordinate system used for the mouse position depends on whether 
or not the GraphicsDevice is part of a virtual screen device. For virtual 
screen devices, the coordinates are given in the virtual coordinate system, 
otherwise they are returned in the coordinate system of the GraphicsDevice. See 
(|java.awt.GraphicsConfiguration|) for more information about the virtual 
screen devices. On systems without a mouse, returns null. 

If there is a security manager, its checkPermission method is called with an 
AWTPermission("watchMousePointer") permission before creating and returning a 
PointerInfo object. This may result in a SecurityException. 


    Returns: location of the mouse pointer 

