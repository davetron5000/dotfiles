*javax.swing.plaf.multi.MultiToolTipUI* *MultiToolTipUI* A multiplexing UI used 

public class MultiToolTipUI
  extends    |javax.swing.plaf.ToolTipUI|

|javax.swing.plaf.multi.MultiToolTipUI_Description|
|javax.swing.plaf.multi.MultiToolTipUI_Fields|
|javax.swing.plaf.multi.MultiToolTipUI_Constructors|
|javax.swing.plaf.multi.MultiToolTipUI_Methods|

================================================================================

*javax.swing.plaf.multi.MultiToolTipUI_Fields*
|java.util.Vector_javax.swing.plaf.multi.MultiToolTipUI.uis|

*javax.swing.plaf.multi.MultiToolTipUI_Constructors*
|javax.swing.plaf.multi.MultiToolTipUI()|

*javax.swing.plaf.multi.MultiToolTipUI_Methods*
|javax.swing.plaf.multi.MultiToolTipUI.contains(JComponent,int,int)|Invokes the
|javax.swing.plaf.multi.MultiToolTipUI.createUI(JComponent)|Returns a multiplex
|javax.swing.plaf.multi.MultiToolTipUI.getAccessibleChild(JComponent,int)|Invok
|javax.swing.plaf.multi.MultiToolTipUI.getAccessibleChildrenCount(JComponent)|I
|javax.swing.plaf.multi.MultiToolTipUI.getMaximumSize(JComponent)|Invokes the g
|javax.swing.plaf.multi.MultiToolTipUI.getMinimumSize(JComponent)|Invokes the g
|javax.swing.plaf.multi.MultiToolTipUI.getPreferredSize(JComponent)|Invokes the
|javax.swing.plaf.multi.MultiToolTipUI.getUIs()|Returns the list of UIs associa
|javax.swing.plaf.multi.MultiToolTipUI.installUI(JComponent)|Invokes the instal
|javax.swing.plaf.multi.MultiToolTipUI.paint(Graphics,JComponent)|Invokes the p
|javax.swing.plaf.multi.MultiToolTipUI.uninstallUI(JComponent)|Invokes the unin
|javax.swing.plaf.multi.MultiToolTipUI.update(Graphics,JComponent)|Invokes the 

*javax.swing.plaf.multi.MultiToolTipUI_Description*

A multiplexing UI used to combine ToolTipUIs. 

This file was automatically generated by AutoMulti. 


*java.util.Vector_javax.swing.plaf.multi.MultiToolTipUI.uis*

A multiplexing UI used to combine ToolTipUIs. 

This file was automatically generated by AutoMulti. 



*javax.swing.plaf.multi.MultiToolTipUI()*

public MultiToolTipUI()




*javax.swing.plaf.multi.MultiToolTipUI.contains(JComponent,int,int)*

public boolean contains(
  javax.swing.JComponent a,
  int b,
  int c)

Invokes the contains method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiToolTipUI.createUI(JComponent)*

public static |javax.swing.plaf.ComponentUI| createUI(javax.swing.JComponent a)

Returns a multiplexing UI instance if any of the auxiliary LookAndFeels 
supports this UI. Otherwise, just returns the UI object obtained from the 
default LookAndFeel. 


*javax.swing.plaf.multi.MultiToolTipUI.getAccessibleChild(JComponent,int)*

public |javax.accessibility.Accessible| getAccessibleChild(
  javax.swing.JComponent a,
  int b)

Invokes the getAccessibleChild method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiToolTipUI.getAccessibleChildrenCount(JComponent)*

public int getAccessibleChildrenCount(javax.swing.JComponent a)

Invokes the getAccessibleChildrenCount method on each UI handled by this 
object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiToolTipUI.getMaximumSize(JComponent)*

public |java.awt.Dimension| getMaximumSize(javax.swing.JComponent a)

Invokes the getMaximumSize method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiToolTipUI.getMinimumSize(JComponent)*

public |java.awt.Dimension| getMinimumSize(javax.swing.JComponent a)

Invokes the getMinimumSize method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiToolTipUI.getPreferredSize(JComponent)*

public |java.awt.Dimension| getPreferredSize(javax.swing.JComponent a)

Invokes the getPreferredSize method on each UI handled by this object. 


    Returns: the value obtained from the first UI, which is the UI obtained from the default 
             LookAndFeel 
*javax.swing.plaf.multi.MultiToolTipUI.getUIs()*

public |javax.swing.plaf.ComponentUI| getUIs()

Returns the list of UIs associated with this multiplexing UI. This allows 
processing of the UIs by an application aware of multiplexing UIs on 
components. 


*javax.swing.plaf.multi.MultiToolTipUI.installUI(JComponent)*

public void installUI(javax.swing.JComponent a)

Invokes the installUI method on each UI handled by this object. 


*javax.swing.plaf.multi.MultiToolTipUI.paint(Graphics,JComponent)*

public void paint(
  java.awt.Graphics a,
  javax.swing.JComponent b)

Invokes the paint method on each UI handled by this object. 


*javax.swing.plaf.multi.MultiToolTipUI.uninstallUI(JComponent)*

public void uninstallUI(javax.swing.JComponent a)

Invokes the uninstallUI method on each UI handled by this object. 


*javax.swing.plaf.multi.MultiToolTipUI.update(Graphics,JComponent)*

public void update(
  java.awt.Graphics a,
  javax.swing.JComponent b)

Invokes the update method on each UI handled by this object. 



