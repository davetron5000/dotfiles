*javax.swing.text.StyledEditorKit* *StyledEditorKit* This is the set of things n

public class StyledEditorKit
  extends    |javax.swing.text.DefaultEditorKit|

|javax.swing.text.StyledEditorKit_Description|
|javax.swing.text.StyledEditorKit_Fields|
|javax.swing.text.StyledEditorKit_Constructors|
|javax.swing.text.StyledEditorKit_Methods|

================================================================================

*javax.swing.text.StyledEditorKit_Constructors*
|javax.swing.text.StyledEditorKit()|Creates a new EditorKit used for styled doc

*javax.swing.text.StyledEditorKit_Methods*
|javax.swing.text.StyledEditorKit.clone()|Creates a copy of the editor kit.
|javax.swing.text.StyledEditorKit.createDefaultDocument()|Creates an uninitiali
|javax.swing.text.StyledEditorKit.createInputAttributes(Element,MutableAttributeSet)|
|javax.swing.text.StyledEditorKit.deinstall(JEditorPane)|Called when the kit is
|javax.swing.text.StyledEditorKit.getActions()|Fetches the command list for the
|javax.swing.text.StyledEditorKit.getCharacterAttributeRun()|Fetches the elemen
|javax.swing.text.StyledEditorKit.getInputAttributes()|Gets the input attribute
|javax.swing.text.StyledEditorKit.getViewFactory()|Fetches a factory that is su
|javax.swing.text.StyledEditorKit.install(JEditorPane)|Called when the kit is b

*javax.swing.text.StyledEditorKit_Description*

This is the set of things needed by a text component to be a reasonably 
functioning editor for some type of text document. This implementation provides 
a default implementation which treats text as styled text and provides a 
minimal set of actions for editing styled text. 


*javax.swing.text.StyledEditorKit()*

public StyledEditorKit()

Creates a new EditorKit used for styled documents. 


*javax.swing.text.StyledEditorKit.clone()*

public |java.lang.Object| clone()

Creates a copy of the editor kit. 


    Returns: 
*javax.swing.text.StyledEditorKit.createDefaultDocument()*

public |javax.swing.text.Document| createDefaultDocument()

Creates an uninitialized text storage model that is appropriate for this type 
of editor. 


    Returns: 
*javax.swing.text.StyledEditorKit.createInputAttributes(Element,MutableAttributeSet)*

protected void createInputAttributes(
  javax.swing.text.Element element,
  javax.swing.text.MutableAttributeSet set)

Copies the key/values in elements AttributeSet into set. This does not copy 
component, icon, or element names attributes. Subclasses may wish to refine 
what is and what isn't copied here. But be sure to first remove all the 
attributes that are in set. This is called anytime the caret moves over a 
different location. 


*javax.swing.text.StyledEditorKit.deinstall(JEditorPane)*

public void deinstall(javax.swing.JEditorPane c)

Called when the kit is being removed from the JEditorPane. This is used to 
unregister any listeners that were attached. 

    c - the JEditorPane 

*javax.swing.text.StyledEditorKit.getActions()*

public |javax.swing.Action| getActions()

Fetches the command list for the editor. This is the list of commands supported 
by the superclass augmented by the collection of commands defined locally for 
style operations. 


    Returns: the command list 
*javax.swing.text.StyledEditorKit.getCharacterAttributeRun()*

public |javax.swing.text.Element| getCharacterAttributeRun()

Fetches the element representing the current run of character attributes for 
the caret. 


    Returns: 
*javax.swing.text.StyledEditorKit.getInputAttributes()*

public |javax.swing.text.MutableAttributeSet| getInputAttributes()

Gets the input attributes for the pane. When the caret moves and there is no 
selection, the input attributes are automatically mutated to reflect the 
character attributes of the current caret location. The styled editing actions 
use the input attributes to carry out their actions. 


    Returns: the attribute set 
*javax.swing.text.StyledEditorKit.getViewFactory()*

public |javax.swing.text.ViewFactory| getViewFactory()

Fetches a factory that is suitable for producing views of any models that are 
produced by this kit. This is implemented to return View implementations for 
the following kinds of elements: 

AbstractDocument.ContentElementName AbstractDocument.ParagraphElementName 
AbstractDocument.SectionElementName StyleConstants.ComponentElementName 
StyleConstants.IconElementName 


    Returns: 
*javax.swing.text.StyledEditorKit.install(JEditorPane)*

public void install(javax.swing.JEditorPane c)

Called when the kit is being installed into a JEditorPane. 

    c - the JEditorPane 


