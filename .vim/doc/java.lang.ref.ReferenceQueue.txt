*java.lang.ref.ReferenceQueue* *ReferenceQueue* Reference queues, to which regis

public class ReferenceQueue
  extends    |java.lang.Object|

|java.lang.ref.ReferenceQueue_Description|
|java.lang.ref.ReferenceQueue_Fields|
|java.lang.ref.ReferenceQueue_Constructors|
|java.lang.ref.ReferenceQueue_Methods|

================================================================================

*java.lang.ref.ReferenceQueue_Constructors*
|java.lang.ref.ReferenceQueue()|Constructs a new reference-object queue.

*java.lang.ref.ReferenceQueue_Methods*
|java.lang.ref.ReferenceQueue.poll()|Polls this queue to see if a reference obj
|java.lang.ref.ReferenceQueue.remove()|Removes the next reference object in thi
|java.lang.ref.ReferenceQueue.remove(long)|Removes the next reference object in

*java.lang.ref.ReferenceQueue_Description*

Reference queues, to which registered reference objects are appended by the 
garbage collector after the appropriate reachability changes are detected. 


*java.lang.ref.ReferenceQueue()*

public ReferenceQueue()

Constructs a new reference-object queue. 


*java.lang.ref.ReferenceQueue.poll()*

public |java.lang.ref.Reference| poll()

Polls this queue to see if a reference object is available. If one is available 
without further delay then it is removed from the queue and returned. Otherwise 
this method immediately returns null. 


    Returns: A reference object, if one was immediately available, otherwise null 
*java.lang.ref.ReferenceQueue.remove()*

public |java.lang.ref.Reference| remove()
  throws |java.lang.InterruptedException|
         
Removes the next reference object in this queue, blocking until one becomes 
available. 


    Returns: A reference object, blocking until one becomes available 
*java.lang.ref.ReferenceQueue.remove(long)*

public |java.lang.ref.Reference| remove(long timeout)
  throws |java.lang.IllegalArgumentException|
         |java.lang.InterruptedException|
         
Removes the next reference object in this queue, blocking until either one 
becomes available or the given timeout period expires. 

This method does not offer real-time guarantees: It schedules the timeout as if 
by invoking the (|java.lang.Object|) method. 

    timeout - If positive, block for up timeout milliseconds while waiting for a reference to 
       be added to this queue. If zero, block indefinitely. 

    Returns: A reference object, if one was available within the specified timeout period, 
             otherwise null 

