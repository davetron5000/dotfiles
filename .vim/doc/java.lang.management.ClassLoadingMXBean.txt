*java.lang.management.ClassLoadingMXBean* *ClassLoadingMXBean* The management in

public interface interface ClassLoadingMXBean


|java.lang.management.ClassLoadingMXBean_Description|
|java.lang.management.ClassLoadingMXBean_Fields|
|java.lang.management.ClassLoadingMXBean_Constructors|
|java.lang.management.ClassLoadingMXBean_Methods|

================================================================================

*java.lang.management.ClassLoadingMXBean_Methods*
|java.lang.management.ClassLoadingMXBean.getLoadedClassCount()|Returns the numb
|java.lang.management.ClassLoadingMXBean.getTotalLoadedClassCount()|Returns the
|java.lang.management.ClassLoadingMXBean.getUnloadedClassCount()|Returns the to
|java.lang.management.ClassLoadingMXBean.isVerbose()|Tests if the verbose outpu
|java.lang.management.ClassLoadingMXBean.setVerbose(boolean)|Enables or disable

*java.lang.management.ClassLoadingMXBean_Description*

The management interface for the class loading system of the Java virtual 
machine. 

A Java virtual machine has a single instance of the implementation class of 
this interface. This instance implementing this interface is an MXBean that can 
be obtained by calling the (|java.lang.management.ManagementFactory|) method or 
from the platform 
<tt>MBeanServer</tt>(|java.lang.management.ManagementFactory|) method. 

The ObjectName for uniquely identifying the MXBean for the class loading system 
within an MBeanServer is: 
<tt>java.lang:type=ClassLoading</tt>(|java.lang.management.ManagementFactory|) 


*java.lang.management.ClassLoadingMXBean.getLoadedClassCount()*

public int getLoadedClassCount()

Returns the number of classes that are currently loaded in the Java virtual 
machine. 


    Returns: the number of currently loaded classes. 
*java.lang.management.ClassLoadingMXBean.getTotalLoadedClassCount()*

public long getTotalLoadedClassCount()

Returns the total number of classes that have been loaded since the Java 
virtual machine has started execution. 


    Returns: the total number of classes loaded. 
*java.lang.management.ClassLoadingMXBean.getUnloadedClassCount()*

public long getUnloadedClassCount()

Returns the total number of classes unloaded since the Java virtual machine has 
started execution. 


    Returns: the total number of unloaded classes. 
*java.lang.management.ClassLoadingMXBean.isVerbose()*

public boolean isVerbose()

Tests if the verbose output for the class loading system is enabled. 


    Returns: true if the verbose output for the class loading system is enabled; false 
             otherwise. 
*java.lang.management.ClassLoadingMXBean.setVerbose(boolean)*

public void setVerbose(boolean value)

Enables or disables the verbose output for the class loading system. The 
verbose output information and the output stream to which the verbose 
information is emitted are implementation dependent. Typically, a Java virtual 
machine implementation prints a message each time a class file is loaded. 

This method can be called by multiple threads concurrently. Each invocation of 
this method enables or disables the verbose output globally. 

    value - true to enable the verbose output; false to disable. 


