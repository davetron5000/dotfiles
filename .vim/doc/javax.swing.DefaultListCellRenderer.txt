*javax.swing.DefaultListCellRenderer* *DefaultListCellRenderer* Renders an item 

public class DefaultListCellRenderer
  extends    |javax.swing.JLabel|
  implements |javax.swing.ListCellRenderer|
             |java.io.Serializable|

|javax.swing.DefaultListCellRenderer_Description|
|javax.swing.DefaultListCellRenderer_Fields|
|javax.swing.DefaultListCellRenderer_Constructors|
|javax.swing.DefaultListCellRenderer_Methods|

================================================================================

*javax.swing.DefaultListCellRenderer_Fields*
|javax.swing.border.Border_javax.swing.DefaultListCellRenderer.noFocusBorder|

*javax.swing.DefaultListCellRenderer_Constructors*
|javax.swing.DefaultListCellRenderer()|Constructs a default renderer object for

*javax.swing.DefaultListCellRenderer_Methods*
|javax.swing.DefaultListCellRenderer.firePropertyChange(String,boolean,boolean)|
|javax.swing.DefaultListCellRenderer.firePropertyChange(String,byte,byte)|Overr
|javax.swing.DefaultListCellRenderer.firePropertyChange(String,char,char)|Overr
|javax.swing.DefaultListCellRenderer.firePropertyChange(String,double,double)|O
|javax.swing.DefaultListCellRenderer.firePropertyChange(String,float,float)|Ove
|javax.swing.DefaultListCellRenderer.firePropertyChange(String,int,int)|Overrid
|javax.swing.DefaultListCellRenderer.firePropertyChange(String,long,long)|Overr
|javax.swing.DefaultListCellRenderer.firePropertyChange(String,Object,Object)|O
|javax.swing.DefaultListCellRenderer.firePropertyChange(String,short,short)|Ove
|javax.swing.DefaultListCellRenderer.getListCellRendererComponent(JList,Object,int,boolean,boolean)|
|javax.swing.DefaultListCellRenderer.invalidate()|Overridden for performance re
|javax.swing.DefaultListCellRenderer.isOpaque()|Overridden for performance reas
|javax.swing.DefaultListCellRenderer.repaint()|Overridden for performance reaso
|javax.swing.DefaultListCellRenderer.repaint(long,int,int,int,int)|Overridden f
|javax.swing.DefaultListCellRenderer.repaint(Rectangle)|Overridden for performa
|javax.swing.DefaultListCellRenderer.revalidate()|Overridden for performance re
|javax.swing.DefaultListCellRenderer.validate()|Overridden for performance reas

*javax.swing.DefaultListCellRenderer_Description*

Renders an item in a list. 

Implementation Note: This class overrides invalidate, validate, revalidate, 
repaint, isOpaque, and firePropertyChange solely to improve performance. If not 
overridden, these frequently called methods would execute code paths that are 
unnecessary for the default list cell renderer. If you write your own renderer, 
take care to weigh the benefits and drawbacks of overriding these methods. 



Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 


*javax.swing.border.Border_javax.swing.DefaultListCellRenderer.noFocusBorder*

Renders an item in a list. 

Implementation Note: This class overrides invalidate, validate, revalidate, 
repaint, isOpaque, and firePropertyChange solely to improve performance. If not 
overridden, these frequently called methods would execute code paths that are 
unnecessary for the default list cell renderer. If you write your own renderer, 
take care to weigh the benefits and drawbacks of overriding these methods. 



Warning: Serialized objects of this class will not be compatible with future 
Swing releases. The current serialization support is appropriate for short term 
storage or RMI between applications running the same version of Swing. As of 
1.4, support for long term storage of all JavaBeansTM has been added to the 
java.beans package. Please see (|java.beans.XMLEncoder|) . 



*javax.swing.DefaultListCellRenderer()*

public DefaultListCellRenderer()

Constructs a default renderer object for an item in a list. 


*javax.swing.DefaultListCellRenderer.firePropertyChange(String,boolean,boolean)*

public void firePropertyChange(
  java.lang.String propertyName,
  boolean oldValue,
  boolean newValue)

Overridden for performance reasons. See the Implementation Note for more 
information. 


*javax.swing.DefaultListCellRenderer.firePropertyChange(String,byte,byte)*

public void firePropertyChange(
  java.lang.String propertyName,
  byte oldValue,
  byte newValue)

Overridden for performance reasons. See the Implementation Note for more 
information. 


*javax.swing.DefaultListCellRenderer.firePropertyChange(String,char,char)*

public void firePropertyChange(
  java.lang.String propertyName,
  char oldValue,
  char newValue)

Overridden for performance reasons. See the Implementation Note for more 
information. 


*javax.swing.DefaultListCellRenderer.firePropertyChange(String,double,double)*

public void firePropertyChange(
  java.lang.String propertyName,
  double oldValue,
  double newValue)

Overridden for performance reasons. See the Implementation Note for more 
information. 


*javax.swing.DefaultListCellRenderer.firePropertyChange(String,float,float)*

public void firePropertyChange(
  java.lang.String propertyName,
  float oldValue,
  float newValue)

Overridden for performance reasons. See the Implementation Note for more 
information. 


*javax.swing.DefaultListCellRenderer.firePropertyChange(String,int,int)*

public void firePropertyChange(
  java.lang.String propertyName,
  int oldValue,
  int newValue)

Overridden for performance reasons. See the Implementation Note for more 
information. 


*javax.swing.DefaultListCellRenderer.firePropertyChange(String,long,long)*

public void firePropertyChange(
  java.lang.String propertyName,
  long oldValue,
  long newValue)

Overridden for performance reasons. See the Implementation Note for more 
information. 


*javax.swing.DefaultListCellRenderer.firePropertyChange(String,Object,Object)*

protected void firePropertyChange(
  java.lang.String propertyName,
  java.lang.Object oldValue,
  java.lang.Object newValue)

Overridden for performance reasons. See the Implementation Note for more 
information. 


*javax.swing.DefaultListCellRenderer.firePropertyChange(String,short,short)*

public void firePropertyChange(
  java.lang.String propertyName,
  short oldValue,
  short newValue)

Overridden for performance reasons. See the Implementation Note for more 
information. 


*javax.swing.DefaultListCellRenderer.getListCellRendererComponent(JList,Object,int,boolean,boolean)*

public |java.awt.Component| getListCellRendererComponent(
  javax.swing.JList list,
  java.lang.Object value,
  int index,
  boolean isSelected,
  boolean cellHasFocus)




*javax.swing.DefaultListCellRenderer.invalidate()*

public void invalidate()

Overridden for performance reasons. See the Implementation Note for more 
information. 


*javax.swing.DefaultListCellRenderer.isOpaque()*

public boolean isOpaque()

Overridden for performance reasons. See the Implementation Note for more 
information. 


    Returns: true if the background is completely opaque and differs from the JList's 
             background; false otherwise 
*javax.swing.DefaultListCellRenderer.repaint()*

public void repaint()

Overridden for performance reasons. See the Implementation Note for more 
information. 


*javax.swing.DefaultListCellRenderer.repaint(long,int,int,int,int)*

public void repaint(
  long tm,
  int x,
  int y,
  int width,
  int height)

Overridden for performance reasons. See the Implementation Note for more 
information. 


*javax.swing.DefaultListCellRenderer.repaint(Rectangle)*

public void repaint(java.awt.Rectangle r)

Overridden for performance reasons. See the Implementation Note for more 
information. 


*javax.swing.DefaultListCellRenderer.revalidate()*

public void revalidate()

Overridden for performance reasons. See the Implementation Note for more 
information. 


*javax.swing.DefaultListCellRenderer.validate()*

public void validate()

Overridden for performance reasons. See the Implementation Note for more 
information. 



